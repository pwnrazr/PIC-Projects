

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun Dec 31 15:35:00 2017

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	intentry,global,class=CODE,delta=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.45
    32                           ; Generated 16/11/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0088                     	;# 
   465  0089                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  001E                     _ADRESH	set	30
   486  001F                     _ADCON0bits	set	31
   487  0008                     _PORTD	set	8
   488  0007                     _PORTC	set	7
   489  0006                     _PORTB	set	6
   490  0005                     _PORTA	set	5
   491  0034                     _RB4	set	52
   492  0035                     _RB5	set	53
   493  00FA                     _GO_nDONE	set	250
   494  00FB                     _CHS0	set	251
   495  00FC                     _CHS1	set	252
   496  00FD                     _CHS2	set	253
   497  00F8                     _ADON	set	248
   498  009E                     _ADRESL	set	158
   499  0088                     _TRISD	set	136
   500  0087                     _TRISC	set	135
   501  0086                     _TRISB	set	134
   502  0085                     _TRISA	set	133
   503  04F8                     _PCFG0	set	1272
   504  04F9                     _PCFG1	set	1273
   505  04FA                     _PCFG2	set	1274
   506  04FB                     _PCFG3	set	1275
   507  04FF                     _ADFM	set	1279
   508                           
   509                           	psect	strings
   510  028F                     __pstrings:	
   511  028F                     stringtab:	
   512  028F                     __stringtab:	
   513  028F                     stringcode:	
   514                           ;	String table - string pointers are 1 byte each
   515                           
   516  028F                     stringdir:	
   517  028F  3002               	movlw	high stringdir
   518  0290  008A               	movwf	10
   519  0291  0804               	movf	4,w
   520  0292  0A84               	incf	4,f
   521  0293  0782               	addwf	2,f
   522  0294                     __stringbase:	
   523  0294  3400               	retlw	0
   524  0295                     __end_of__stringtab:	
   525  0295                     STR_1:	
   526  0295  3461               	retlw	97	;'a'
   527  0296  3464               	retlw	100	;'d'
   528  0297  3463               	retlw	99	;'c'
   529  0298  3430               	retlw	48	;'0'
   530  0299  343A               	retlw	58	;':'
   531  029A  3400               	retlw	0
   532  029B                     STR_2:	
   533  029B  3461               	retlw	97	;'a'
   534  029C  3464               	retlw	100	;'d'
   535  029D  3463               	retlw	99	;'c'
   536  029E  3431               	retlw	49	;'1'
   537  029F  343A               	retlw	58	;':'
   538  02A0  3400               	retlw	0
   539                           
   540                           ; #config settings
   541  0000                     
   542                           	psect	cinit
   543  0015                     start_initialization:	
   544  0015                     __initialization:	
   545                           
   546                           ; Clear objects allocated to BANK0
   547  0015  1283               	bcf	3,5	;RP0=0, select bank0
   548  0016  1303               	bcf	3,6	;RP1=0, select bank0
   549  0017  01B6               	clrf	__pbssBANK0& (0+127)
   550  0018  01B7               	clrf	(__pbssBANK0+1)& (0+127)
   551  0019  01B8               	clrf	(__pbssBANK0+2)& (0+127)
   552  001A  01B9               	clrf	(__pbssBANK0+3)& (0+127)
   553  001B  01BA               	clrf	(__pbssBANK0+4)& (0+127)
   554  001C  01BB               	clrf	(__pbssBANK0+5)& (0+127)
   555  001D  01BC               	clrf	(__pbssBANK0+6)& (0+127)
   556  001E  01BD               	clrf	(__pbssBANK0+7)& (0+127)
   557  001F  01BE               	clrf	(__pbssBANK0+8)& (0+127)
   558  0020  01BF               	clrf	(__pbssBANK0+9)& (0+127)
   559  0021                     end_of_initialization:	
   560                           ;End of C runtime variable initialization code
   561                           
   562  0021                     __end_of__initialization:	
   563  0021  0183               	clrf	3
   564  0022  120A  118A  28F3   	ljmp	_main	;jump to C main() function
   565                           
   566                           	psect	bssBANK0
   567  0036                     __pbssBANK0:	
   568  0036                     lcd_bcd@F1136:	
   569  0036                     	ds	10
   570                           
   571                           	psect	cstackCOMMON
   572  0070                     __pcstackCOMMON:	
   573  0070                     ?_lcd_initialize:	
   574  0070                     ?_adc_initialize:	
   575                           ; 1 bytes @ 0x0
   576                           
   577  0070                     ?_lcd_home:	
   578                           ; 1 bytes @ 0x0
   579                           
   580  0070                     ?_lcd_putstr:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_lcd_goto:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_adc_on:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_set_lcd_e:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_lcd_clear:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_set_lcd_rs:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_set_lcd_data:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_isr:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ??_isr:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_main:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ?_lcd_2ndline:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_lcd_putchar:	
   614                           ; 1 bytes @ 0x0
   615                           
   616                           
   617                           ; 1 bytes @ 0x0
   618  0070                     	ds	4
   619  0074                     ??_adc_initialize:	
   620  0074                     ??_adc_on:	
   621                           ; 1 bytes @ 0x4
   622                           
   623  0074                     ??_set_lcd_e:	
   624                           ; 1 bytes @ 0x4
   625                           
   626  0074                     ??_set_lcd_rs:	
   627                           ; 1 bytes @ 0x4
   628                           
   629  0074                     ??_set_lcd_data:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0074                     ?_ui_adc_read:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ?___lwdiv:	
   636                           ; 2 bytes @ 0x4
   637                           
   638  0074                     ?___lwmod:	
   639                           ; 2 bytes @ 0x4
   640                           
   641  0074                     set_lcd_e@b_output:	
   642                           ; 2 bytes @ 0x4
   643                           
   644  0074                     set_lcd_rs@b_output:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     set_lcd_data@uc_data:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ___lwdiv@divisor:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ___lwmod@divisor:	
   654                           ; 2 bytes @ 0x4
   655                           
   656                           
   657                           ; 2 bytes @ 0x4
   658  0074                     	ds	1
   659  0075                     ?_send_lcd_data:	
   660  0075                     send_lcd_data@uc_data:	
   661                           ; 1 bytes @ 0x5
   662                           
   663                           
   664                           ; 1 bytes @ 0x5
   665  0075                     	ds	1
   666  0076                     ??_ui_adc_read:	
   667  0076                     ??_send_lcd_data:	
   668                           ; 1 bytes @ 0x6
   669                           
   670  0076                     ___lwdiv@dividend:	
   671                           ; 1 bytes @ 0x6
   672                           
   673  0076                     ___lwmod@dividend:	
   674                           ; 2 bytes @ 0x6
   675                           
   676                           
   677                           ; 2 bytes @ 0x6
   678  0076                     	ds	2
   679  0078                     ??___lwdiv:	
   680  0078                     ??___lwmod:	
   681                           ; 1 bytes @ 0x8
   682                           
   683  0078                     send_lcd_data@b_rs:	
   684                           ; 1 bytes @ 0x8
   685                           
   686  0078                     ui_adc_read@pot:	
   687                           ; 1 bytes @ 0x8
   688                           
   689                           
   690                           ; 2 bytes @ 0x8
   691  0078                     	ds	1
   692  0079                     ??_lcd_home:	
   693  0079                     ??_lcd_goto:	
   694                           ; 1 bytes @ 0x9
   695                           
   696  0079                     ??_lcd_clear:	
   697                           ; 1 bytes @ 0x9
   698                           
   699  0079                     ??_lcd_2ndline:	
   700                           ; 1 bytes @ 0x9
   701                           
   702  0079                     ??_lcd_putchar:	
   703                           ; 1 bytes @ 0x9
   704                           
   705  0079                     ___lwmod@counter:	
   706                           ; 1 bytes @ 0x9
   707                           
   708                           
   709                           ; 1 bytes @ 0x9
   710  0079                     	ds	1
   711  007A                     ??_main:	
   712                           
   713                           	psect	cstackBANK0
   714  0020                     __pcstackBANK0:	
   715                           ; 1 bytes @ 0xA
   716                           
   717  0020                     ??_lcd_initialize:	
   718  0020                     lcd_goto@uc_position:	
   719                           ; 1 bytes @ 0x0
   720                           
   721  0020                     lcd_putchar@c_data:	
   722                           ; 1 bytes @ 0x0
   723                           
   724  0020                     ___lwdiv@quotient:	
   725                           ; 1 bytes @ 0x0
   726                           
   727                           
   728                           ; 2 bytes @ 0x0
   729  0020                     	ds	1
   730  0021                     ??_lcd_putstr:	
   731                           
   732                           ; 1 bytes @ 0x1
   733  0021                     	ds	1
   734  0022                     lcd_putstr@csz_string:	
   735  0022                     ___lwdiv@counter:	
   736                           ; 1 bytes @ 0x2
   737                           
   738                           
   739                           ; 1 bytes @ 0x2
   740  0022                     	ds	1
   741  0023                     ?_lcd_bcd:	
   742  0023                     lcd_bcd@ui_number:	
   743                           ; 1 bytes @ 0x3
   744                           
   745                           
   746                           ; 2 bytes @ 0x3
   747  0023                     	ds	2
   748  0025                     ??_lcd_bcd:	
   749                           
   750                           ; 1 bytes @ 0x5
   751  0025                     	ds	4
   752  0029                     lcd_bcd@ui_decimal:	
   753                           
   754                           ; 10 bytes @ 0x9
   755  0029                     	ds	10
   756  0033                     lcd_bcd@uc_digit:	
   757                           
   758                           ; 1 bytes @ 0x13
   759  0033                     	ds	1
   760  0034                     main@adc_value:	
   761                           
   762                           ; 2 bytes @ 0x14
   763  0034                     	ds	2
   764                           
   765                           	psect	maintext
   766  00F3                     __pmaintext:	
   767 ;;
   768 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   769 ;;
   770 ;; *************** function _main *****************
   771 ;; Defined at:
   772 ;;		line 29 in file "main.c"
   773 ;; Parameters:    Size  Location     Type
   774 ;;		None
   775 ;; Auto vars:     Size  Location     Type
   776 ;;  adc_value       2   20[BANK0 ] unsigned int 
   777 ;; Return value:  Size  Location     Type
   778 ;;                  1    wreg      void 
   779 ;; Registers used:
   780 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   781 ;; Tracked objects:
   782 ;;		On entry : B00/0
   783 ;;		On exit  : 0/0
   784 ;;		Unchanged: 0/0
   785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   786 ;;      Params:         0       0       0       0       0
   787 ;;      Locals:         0       2       0       0       0
   788 ;;      Temps:          0       0       0       0       0
   789 ;;      Totals:         0       2       0       0       0
   790 ;;Total ram usage:        2 bytes
   791 ;; Hardware stack levels required when called:    5
   792 ;; This function calls:
   793 ;;		_adc_initialize
   794 ;;		_adc_on
   795 ;;		_lcd_bcd
   796 ;;		_lcd_goto
   797 ;;		_lcd_home
   798 ;;		_lcd_initialize
   799 ;;		_lcd_putstr
   800 ;;		_ui_adc_read
   801 ;; This function is called by:
   802 ;;		Startup code after reset
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function _main
   808  00F3                     _main:	
   809                           
   810                           ;main.c: 31: PORTA = 0;
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   814  00F3  1283               	bcf	3,5	;RP0=0, select bank0
   815  00F4  1303               	bcf	3,6	;RP1=0, select bank0
   816  00F5  0185               	clrf	5	;volatile
   817                           
   818                           ;main.c: 32: PORTB = 0;
   819  00F6  0186               	clrf	6	;volatile
   820                           
   821                           ;main.c: 33: PORTC = 0;
   822  00F7  0187               	clrf	7	;volatile
   823                           
   824                           ;main.c: 34: PORTD = 0;
   825  00F8  0188               	clrf	8	;volatile
   826                           
   827                           ;main.c: 36: TRISA = 0b11111111;
   828  00F9  30FF               	movlw	255
   829  00FA  1683               	bsf	3,5	;RP0=1, select bank1
   830  00FB  1303               	bcf	3,6	;RP1=0, select bank1
   831  00FC  0085               	movwf	5	;volatile
   832                           
   833                           ;main.c: 37: TRISB = 0b00000011;
   834  00FD  3003               	movlw	3
   835  00FE  0086               	movwf	6	;volatile
   836                           
   837                           ;main.c: 38: TRISC = 0b00000000;
   838  00FF  0187               	clrf	7	;volatile
   839                           
   840                           ;main.c: 39: TRISD = 0b00000000;
   841  0100  0188               	clrf	8	;volatile
   842                           
   843                           ;main.c: 43: lcd_initialize();
   844  0101  120A  118A  21C3  120A  118A  	fcall	_lcd_initialize
   845                           
   846                           ;main.c: 45: adc_initialize();
   847  0106  120A  118A  22A1  120A  118A  	fcall	_adc_initialize
   848                           
   849                           ;main.c: 47: lcd_home();
   850  010B  120A  118A  22F3  120A  118A  	fcall	_lcd_home
   851                           
   852                           ;main.c: 48: lcd_putstr("adc0:");
   853  0110  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   854  0111  120A  118A  2187  120A  118A  	fcall	_lcd_putstr
   855                           
   856                           ;main.c: 49: lcd_goto(0x40);
   857  0116  3040               	movlw	64
   858  0117  120A  118A  22B0  120A  118A  	fcall	_lcd_goto
   859                           
   860                           ;main.c: 50: lcd_putstr("adc1:");
   861  011C  3007               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   862  011D  120A  118A  2187  120A  118A  	fcall	_lcd_putstr
   863                           
   864                           ;main.c: 52: unsigned int adc_value = 0;
   865  0122  1283               	bcf	3,5	;RP0=0, select bank0
   866  0123  1303               	bcf	3,6	;RP1=0, select bank0
   867  0124  01B4               	clrf	main@adc_value
   868  0125  01B5               	clrf	main@adc_value+1
   869  0126                     l982:	
   870                           ;main.c: 54: while (1)
   871                           
   872                           
   873                           ;main.c: 55: {
   874                           ;main.c: 56: adc_on();
   875  0126  120A  118A  2309  120A  118A  	fcall	_adc_on
   876                           
   877                           ;main.c: 57: adc_value = ui_adc_read();
   878  012B  120A  118A  2262  120A  118A  	fcall	_ui_adc_read
   879  0130  0875               	movf	?_ui_adc_read+1,w
   880  0131  1283               	bcf	3,5	;RP0=0, select bank0
   881  0132  1303               	bcf	3,6	;RP1=0, select bank0
   882  0133  00B5               	movwf	main@adc_value+1
   883  0134  0874               	movf	?_ui_adc_read,w
   884  0135  00B4               	movwf	main@adc_value
   885                           
   886                           ;main.c: 58: lcd_goto(0x05);
   887  0136  3005               	movlw	5
   888  0137  120A  118A  22B0  120A  118A  	fcall	_lcd_goto
   889                           
   890                           ;main.c: 59: lcd_bcd(4,adc_value);
   891  013C  1283               	bcf	3,5	;RP0=0, select bank0
   892  013D  1303               	bcf	3,6	;RP1=0, select bank0
   893  013E  0835               	movf	main@adc_value+1,w
   894  013F  00A4               	movwf	lcd_bcd@ui_number+1
   895  0140  0834               	movf	main@adc_value,w
   896  0141  00A3               	movwf	lcd_bcd@ui_number
   897  0142  3004               	movlw	4
   898  0143  120A  118A  2025  120A  118A  	fcall	_lcd_bcd
   899  0148  2926               	goto	l982
   900  0149                     __end_of_main:	
   901                           
   902                           	psect	text1
   903  0262                     __ptext1:	
   904 ;; *************** function _ui_adc_read *****************
   905 ;; Defined at:
   906 ;;		line 107 in file "adc.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;  pot             2    8[COMMON] unsigned int 
   911 ;; Return value:  Size  Location     Type
   912 ;;                  2    4[COMMON] unsigned int 
   913 ;; Registers used:
   914 ;;		wreg, status,2, btemp+1
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   920 ;;      Params:         2       0       0       0       0
   921 ;;      Locals:         2       0       0       0       0
   922 ;;      Temps:          2       0       0       0       0
   923 ;;      Totals:         6       0       0       0       0
   924 ;;Total ram usage:        6 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; Hardware stack levels required when called:    1
   927 ;; This function calls:
   928 ;;		Nothing
   929 ;; This function is called by:
   930 ;;		_main
   931 ;; This function uses a non-reentrant model
   932 ;;
   933                           
   934                           
   935                           ;psect for function _ui_adc_read
   936  0262                     _ui_adc_read:	
   937                           
   938                           ;adc.c: 109: unsigned int pot = 0;
   939                           
   940                           ;incstack = 0
   941                           ; Regs used in _ui_adc_read: [wreg+status,2+btemp+1]
   942  0262  01F8               	clrf	ui_adc_read@pot
   943  0263  01F9               	clrf	ui_adc_read@pot+1
   944                           
   945                           ;adc.c: 111: CHS2 = 0;
   946  0264  1283               	bcf	3,5	;RP0=0, select bank0
   947  0265  1303               	bcf	3,6	;RP1=0, select bank0
   948  0266  129F               	bcf	31,5	;volatile
   949                           
   950                           ;adc.c: 112: CHS1 = 0;
   951  0267  121F               	bcf	31,4	;volatile
   952                           
   953                           ;adc.c: 113: CHS0 = 0;
   954  0268  119F               	bcf	31,3	;volatile
   955                           
   956                           ;adc.c: 117: _delay((unsigned long)((100)*(20000000/4000000.0)));
   957  0269  30A6               	movlw	166
   958  026A  00F6               	movwf	??_ui_adc_read
   959  026B                     u517:	
   960  026B  0BF6               	decfsz	??_ui_adc_read,f
   961  026C  2A6B               	goto	u517
   962  026D  0000               	nop
   963                           
   964                           ;adc.c: 120: GO_nDONE = 1;
   965  026E  1283               	bcf	3,5	;RP0=0, select bank0
   966  026F  1303               	bcf	3,6	;RP1=0, select bank0
   967  0270  151F               	bsf	31,2	;volatile
   968  0271                     l91:	
   969                           ;adc.c: 121: while (GO_nDONE == 1);
   970                           
   971  0271  191F               	btfsc	31,2	;volatile
   972  0272  2A71               	goto	l91
   973                           
   974                           ;adc.c: 125: pot = (unsigned int)ADRESH * 256;
   975  0273  081E               	movf	30,w	;volatile
   976  0274  00F6               	movwf	??_ui_adc_read
   977  0275  01F7               	clrf	??_ui_adc_read+1
   978  0276  0876               	movf	??_ui_adc_read,w
   979  0277  00F7               	movwf	??_ui_adc_read+1
   980  0278  01F6               	clrf	??_ui_adc_read
   981  0279  0876               	movf	??_ui_adc_read,w
   982  027A  00F8               	movwf	ui_adc_read@pot
   983  027B  0877               	movf	??_ui_adc_read+1,w
   984  027C  00F9               	movwf	ui_adc_read@pot+1
   985                           
   986                           ;adc.c: 126: pot = pot + ADRESL;
   987  027D  1683               	bsf	3,5	;RP0=1, select bank1
   988  027E  1303               	bcf	3,6	;RP1=0, select bank1
   989  027F  081E               	movf	30,w	;volatile
   990  0280  0778               	addwf	ui_adc_read@pot,w
   991  0281  00F6               	movwf	??_ui_adc_read
   992  0282  0879               	movf	ui_adc_read@pot+1,w
   993  0283  1803               	skipnc
   994  0284  0A79               	incf	ui_adc_read@pot+1,w
   995  0285  00F7               	movwf	??_ui_adc_read+1
   996  0286  0876               	movf	??_ui_adc_read,w
   997  0287  00F8               	movwf	ui_adc_read@pot
   998  0288  0877               	movf	??_ui_adc_read+1,w
   999  0289  00F9               	movwf	ui_adc_read@pot+1
  1000                           
  1001                           ;adc.c: 127: return pot;
  1002  028A  0879               	movf	ui_adc_read@pot+1,w
  1003  028B  00F5               	movwf	?_ui_adc_read+1
  1004  028C  0878               	movf	ui_adc_read@pot,w
  1005  028D  00F4               	movwf	?_ui_adc_read
  1006  028E  0008               	return
  1007  028F                     __end_of_ui_adc_read:	
  1008                           
  1009                           	psect	text2
  1010  0187                     __ptext2:	
  1011 ;; *************** function _lcd_putstr *****************
  1012 ;; Defined at:
  1013 ;;		line 241 in file "lcd.c"
  1014 ;; Parameters:    Size  Location     Type
  1015 ;;  csz_string      1    wreg     PTR const unsigned char 
  1016 ;;		 -> STR_2(6), STR_1(6), 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  csz_string      1    2[BANK0 ] PTR const unsigned char 
  1019 ;;		 -> STR_2(6), STR_1(6), 
  1020 ;; Return value:  Size  Location     Type
  1021 ;;                  1    wreg      void 
  1022 ;; Registers used:
  1023 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1024 ;; Tracked objects:
  1025 ;;		On entry : 0/0
  1026 ;;		On exit  : 0/0
  1027 ;;		Unchanged: 0/0
  1028 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1029 ;;      Params:         0       0       0       0       0
  1030 ;;      Locals:         0       1       0       0       0
  1031 ;;      Temps:          0       1       0       0       0
  1032 ;;      Totals:         0       2       0       0       0
  1033 ;;Total ram usage:        2 bytes
  1034 ;; Hardware stack levels used:    1
  1035 ;; Hardware stack levels required when called:    4
  1036 ;; This function calls:
  1037 ;;		_lcd_2ndline
  1038 ;;		_lcd_putchar
  1039 ;; This function is called by:
  1040 ;;		_main
  1041 ;; This function uses a non-reentrant model
  1042 ;;
  1043                           
  1044                           
  1045                           ;psect for function _lcd_putstr
  1046  0187                     _lcd_putstr:	
  1047                           
  1048                           ;incstack = 0
  1049                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1050                           ;lcd_putstr@csz_string stored from wreg
  1051  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1052  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1053  0189  00A2               	movwf	lcd_putstr@csz_string
  1054  018A                     l904:	
  1055                           ;lcd.c: 244: while (*csz_string != '\0') {
  1056                           
  1057  018A  0822               	movf	lcd_putstr@csz_string,w
  1058  018B  0084               	movwf	4
  1059  018C  120A  118A  228F  120A  118A  	fcall	stringdir
  1060  0191  3A00               	xorlw	0
  1061  0192  1903               	btfsc	3,2
  1062  0193  0008               	return
  1063                           
  1064                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1065  0194  0822               	movf	lcd_putstr@csz_string,w
  1066  0195  0084               	movwf	4
  1067  0196  120A  118A  228F  120A  118A  	fcall	stringdir
  1068  019B  3A0A               	xorlw	10
  1069  019C  1903               	skipnz
  1070  019D  29A8               	goto	l898
  1071  019E  0822               	movf	lcd_putstr@csz_string,w
  1072  019F  0084               	movwf	4
  1073  01A0  120A  118A  228F  120A  118A  	fcall	stringdir
  1074  01A5  3A0D               	xorlw	13
  1075  01A6  1D03               	skipz
  1076  01A7  29AE               	goto	l900
  1077  01A8                     l898:	
  1078                           
  1079                           ;lcd.c: 248: lcd_2ndline();
  1080  01A8  120A  118A  22EA  120A  118A  	fcall	_lcd_2ndline
  1081                           
  1082                           ;lcd.c: 249: }
  1083  01AD  29BC               	goto	l902
  1084  01AE                     l900:	
  1085                           
  1086                           ;lcd.c: 252: else {
  1087                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1088  01AE  1283               	bcf	3,5	;RP0=0, select bank0
  1089  01AF  1303               	bcf	3,6	;RP1=0, select bank0
  1090  01B0  0822               	movf	lcd_putstr@csz_string,w
  1091  01B1  0084               	movwf	4
  1092  01B2  120A  118A  228F  120A  118A  	fcall	stringdir
  1093  01B7  120A  118A  22BD  120A  118A  	fcall	_lcd_putchar
  1094  01BC                     l902:	
  1095                           
  1096                           ;lcd.c: 254: }
  1097                           ;lcd.c: 257: csz_string++;
  1098  01BC  3001               	movlw	1
  1099  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1100  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1101  01BF  00A1               	movwf	??_lcd_putstr
  1102  01C0  0821               	movf	??_lcd_putstr,w
  1103  01C1  07A2               	addwf	lcd_putstr@csz_string,f
  1104  01C2  298A               	goto	l904
  1105  01C3                     __end_of_lcd_putstr:	
  1106                           
  1107                           	psect	text3
  1108  02EA                     __ptext3:	
  1109 ;; *************** function _lcd_2ndline *****************
  1110 ;; Defined at:
  1111 ;;		line 178 in file "lcd.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 0/0
  1122 ;;		On exit  : 0/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0
  1127 ;;      Temps:          1       0       0       0       0
  1128 ;;      Totals:         1       0       0       0       0
  1129 ;;Total ram usage:        1 bytes
  1130 ;; Hardware stack levels used:    1
  1131 ;; Hardware stack levels required when called:    3
  1132 ;; This function calls:
  1133 ;;		_send_lcd_data
  1134 ;; This function is called by:
  1135 ;;		_lcd_putstr
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _lcd_2ndline
  1141  02EA                     _lcd_2ndline:	
  1142                           
  1143                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1147  02EA  30C0               	movlw	192
  1148  02EB  00F9               	movwf	??_lcd_2ndline
  1149  02EC  0879               	movf	??_lcd_2ndline,w
  1150  02ED  00F5               	movwf	send_lcd_data@uc_data
  1151  02EE  3000               	movlw	0
  1152  02EF  120A  118A  21FB   	fcall	_send_lcd_data
  1153  02F2  0008               	return
  1154  02F3                     __end_of_lcd_2ndline:	
  1155                           
  1156                           	psect	text4
  1157  01C3                     __ptext4:	
  1158 ;; *************** function _lcd_initialize *****************
  1159 ;; Defined at:
  1160 ;;		line 100 in file "lcd.c"
  1161 ;; Parameters:    Size  Location     Type
  1162 ;;		None
  1163 ;; Auto vars:     Size  Location     Type
  1164 ;;		None
  1165 ;; Return value:  Size  Location     Type
  1166 ;;                  1    wreg      void 
  1167 ;; Registers used:
  1168 ;;		wreg, status,2, status,0, pclath, cstack
  1169 ;; Tracked objects:
  1170 ;;		On entry : 0/0
  1171 ;;		On exit  : 0/0
  1172 ;;		Unchanged: 0/0
  1173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1174 ;;      Params:         0       0       0       0       0
  1175 ;;      Locals:         0       0       0       0       0
  1176 ;;      Temps:          0       2       0       0       0
  1177 ;;      Totals:         0       2       0       0       0
  1178 ;;Total ram usage:        2 bytes
  1179 ;; Hardware stack levels used:    1
  1180 ;; Hardware stack levels required when called:    4
  1181 ;; This function calls:
  1182 ;;		_lcd_clear
  1183 ;;		_send_lcd_data
  1184 ;;		_set_lcd_e
  1185 ;; This function is called by:
  1186 ;;		_main
  1187 ;; This function uses a non-reentrant model
  1188 ;;
  1189                           
  1190                           
  1191                           ;psect for function _lcd_initialize
  1192  01C3                     _lcd_initialize:	
  1193                           
  1194                           ;lcd.c: 104: set_lcd_e(1);
  1195                           
  1196                           ;incstack = 0
  1197                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1198  01C3  3001               	movlw	1
  1199  01C4  120A  118A  22D4  120A  118A  	fcall	_set_lcd_e
  1200                           
  1201                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1202  01C9  3062               	movlw	98
  1203  01CA  1283               	bcf	3,5	;RP0=0, select bank0
  1204  01CB  1303               	bcf	3,6	;RP1=0, select bank0
  1205  01CC  00A1               	movwf	??_lcd_initialize+1
  1206  01CD  3065               	movlw	101
  1207  01CE  00A0               	movwf	??_lcd_initialize
  1208  01CF                     u527:	
  1209  01CF  0BA0               	decfsz	??_lcd_initialize,f
  1210  01D0  29CF               	goto	u527
  1211  01D1  0BA1               	decfsz	??_lcd_initialize+1,f
  1212  01D2  29CF               	goto	u527
  1213                           
  1214                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1215  01D3  3038               	movlw	56
  1216  01D4  1283               	bcf	3,5	;RP0=0, select bank0
  1217  01D5  1303               	bcf	3,6	;RP1=0, select bank0
  1218  01D6  00A0               	movwf	??_lcd_initialize
  1219  01D7  0820               	movf	??_lcd_initialize,w
  1220  01D8  00F5               	movwf	send_lcd_data@uc_data
  1221  01D9  3000               	movlw	0
  1222  01DA  120A  118A  21FB  120A  118A  	fcall	_send_lcd_data
  1223                           
  1224                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1225  01DF  3006               	movlw	6
  1226  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1227  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1228  01E2  00A0               	movwf	??_lcd_initialize
  1229  01E3  0820               	movf	??_lcd_initialize,w
  1230  01E4  00F5               	movwf	send_lcd_data@uc_data
  1231  01E5  3000               	movlw	0
  1232  01E6  120A  118A  21FB  120A  118A  	fcall	_send_lcd_data
  1233                           
  1234                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1235  01EB  300C               	movlw	12
  1236  01EC  1283               	bcf	3,5	;RP0=0, select bank0
  1237  01ED  1303               	bcf	3,6	;RP1=0, select bank0
  1238  01EE  00A0               	movwf	??_lcd_initialize
  1239  01EF  0820               	movf	??_lcd_initialize,w
  1240  01F0  00F5               	movwf	send_lcd_data@uc_data
  1241  01F1  3000               	movlw	0
  1242  01F2  120A  118A  21FB  120A  118A  	fcall	_send_lcd_data
  1243                           
  1244                           ;lcd.c: 118: lcd_clear();
  1245  01F7  120A  118A  22FC   	fcall	_lcd_clear
  1246  01FA  0008               	return
  1247  01FB                     __end_of_lcd_initialize:	
  1248                           
  1249                           	psect	text5
  1250  02FC                     __ptext5:	
  1251 ;; *************** function _lcd_clear *****************
  1252 ;; Defined at:
  1253 ;;		line 136 in file "lcd.c"
  1254 ;; Parameters:    Size  Location     Type
  1255 ;;		None
  1256 ;; Auto vars:     Size  Location     Type
  1257 ;;		None
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  1    wreg      void 
  1260 ;; Registers used:
  1261 ;;		wreg, status,2, status,0, pclath, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1267 ;;      Params:         0       0       0       0       0
  1268 ;;      Locals:         0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0
  1270 ;;      Totals:         0       0       0       0       0
  1271 ;;Total ram usage:        0 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    3
  1274 ;; This function calls:
  1275 ;;		_send_lcd_data
  1276 ;; This function is called by:
  1277 ;;		_lcd_initialize
  1278 ;; This function uses a non-reentrant model
  1279 ;;
  1280                           
  1281                           
  1282                           ;psect for function _lcd_clear
  1283  02FC                     _lcd_clear:	
  1284                           
  1285                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1286                           
  1287                           ;incstack = 0
  1288                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1289  02FC  01F5               	clrf	send_lcd_data@uc_data
  1290  02FD  0AF5               	incf	send_lcd_data@uc_data,f
  1291  02FE  3000               	movlw	0
  1292  02FF  120A  118A  21FB   	fcall	_send_lcd_data
  1293  0302  0008               	return
  1294  0303                     __end_of_lcd_clear:	
  1295                           
  1296                           	psect	text6
  1297  02F3                     __ptext6:	
  1298 ;; *************** function _lcd_home *****************
  1299 ;; Defined at:
  1300 ;;		line 157 in file "lcd.c"
  1301 ;; Parameters:    Size  Location     Type
  1302 ;;		None
  1303 ;; Auto vars:     Size  Location     Type
  1304 ;;		None
  1305 ;; Return value:  Size  Location     Type
  1306 ;;                  1    wreg      void 
  1307 ;; Registers used:
  1308 ;;		wreg, status,2, status,0, pclath, cstack
  1309 ;; Tracked objects:
  1310 ;;		On entry : 0/0
  1311 ;;		On exit  : 0/0
  1312 ;;		Unchanged: 0/0
  1313 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1314 ;;      Params:         0       0       0       0       0
  1315 ;;      Locals:         0       0       0       0       0
  1316 ;;      Temps:          1       0       0       0       0
  1317 ;;      Totals:         1       0       0       0       0
  1318 ;;Total ram usage:        1 bytes
  1319 ;; Hardware stack levels used:    1
  1320 ;; Hardware stack levels required when called:    3
  1321 ;; This function calls:
  1322 ;;		_send_lcd_data
  1323 ;; This function is called by:
  1324 ;;		_main
  1325 ;; This function uses a non-reentrant model
  1326 ;;
  1327                           
  1328                           
  1329                           ;psect for function _lcd_home
  1330  02F3                     _lcd_home:	
  1331                           
  1332                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1333                           
  1334                           ;incstack = 0
  1335                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1336  02F3  3002               	movlw	2
  1337  02F4  00F9               	movwf	??_lcd_home
  1338  02F5  0879               	movf	??_lcd_home,w
  1339  02F6  00F5               	movwf	send_lcd_data@uc_data
  1340  02F7  3000               	movlw	0
  1341  02F8  120A  118A  21FB   	fcall	_send_lcd_data
  1342  02FB  0008               	return
  1343  02FC                     __end_of_lcd_home:	
  1344                           
  1345                           	psect	text7
  1346  02B0                     __ptext7:	
  1347 ;; *************** function _lcd_goto *****************
  1348 ;; Defined at:
  1349 ;;		line 199 in file "lcd.c"
  1350 ;; Parameters:    Size  Location     Type
  1351 ;;  uc_position     1    wreg     unsigned char 
  1352 ;; Auto vars:     Size  Location     Type
  1353 ;;  uc_position     1    0[BANK0 ] unsigned char 
  1354 ;; Return value:  Size  Location     Type
  1355 ;;                  1    wreg      void 
  1356 ;; Registers used:
  1357 ;;		wreg, status,2, status,0, pclath, cstack
  1358 ;; Tracked objects:
  1359 ;;		On entry : 0/0
  1360 ;;		On exit  : 0/0
  1361 ;;		Unchanged: 0/0
  1362 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1363 ;;      Params:         0       0       0       0       0
  1364 ;;      Locals:         0       1       0       0       0
  1365 ;;      Temps:          1       0       0       0       0
  1366 ;;      Totals:         1       1       0       0       0
  1367 ;;Total ram usage:        2 bytes
  1368 ;; Hardware stack levels used:    1
  1369 ;; Hardware stack levels required when called:    3
  1370 ;; This function calls:
  1371 ;;		_send_lcd_data
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;; This function uses a non-reentrant model
  1375 ;;
  1376                           
  1377                           
  1378                           ;psect for function _lcd_goto
  1379  02B0                     _lcd_goto:	
  1380                           
  1381                           ;incstack = 0
  1382                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1383                           ;lcd_goto@uc_position stored from wreg
  1384  02B0  1283               	bcf	3,5	;RP0=0, select bank0
  1385  02B1  1303               	bcf	3,6	;RP1=0, select bank0
  1386  02B2  00A0               	movwf	lcd_goto@uc_position
  1387                           
  1388                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1389  02B3  0820               	movf	lcd_goto@uc_position,w
  1390  02B4  3880               	iorlw	128
  1391  02B5  00F9               	movwf	??_lcd_goto
  1392  02B6  0879               	movf	??_lcd_goto,w
  1393  02B7  00F5               	movwf	send_lcd_data@uc_data
  1394  02B8  3000               	movlw	0
  1395  02B9  120A  118A  21FB   	fcall	_send_lcd_data
  1396  02BC  0008               	return
  1397  02BD                     __end_of_lcd_goto:	
  1398                           
  1399                           	psect	text8
  1400  0025                     __ptext8:	
  1401 ;; *************** function _lcd_bcd *****************
  1402 ;; Defined at:
  1403 ;;		line 274 in file "lcd.c"
  1404 ;; Parameters:    Size  Location     Type
  1405 ;;  uc_digit        1    wreg     unsigned char 
  1406 ;;  ui_number       2    3[BANK0 ] unsigned int 
  1407 ;; Auto vars:     Size  Location     Type
  1408 ;;  uc_digit        1   19[BANK0 ] unsigned char 
  1409 ;;  ui_decimal     10    9[BANK0 ] unsigned int [5]
  1410 ;; Return value:  Size  Location     Type
  1411 ;;                  1    wreg      void 
  1412 ;; Registers used:
  1413 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1414 ;; Tracked objects:
  1415 ;;		On entry : 0/0
  1416 ;;		On exit  : 0/0
  1417 ;;		Unchanged: 0/0
  1418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1419 ;;      Params:         0       2       0       0       0
  1420 ;;      Locals:         0      11       0       0       0
  1421 ;;      Temps:          0       4       0       0       0
  1422 ;;      Totals:         0      17       0       0       0
  1423 ;;Total ram usage:       17 bytes
  1424 ;; Hardware stack levels used:    1
  1425 ;; Hardware stack levels required when called:    4
  1426 ;; This function calls:
  1427 ;;		___lwdiv
  1428 ;;		___lwmod
  1429 ;;		_lcd_putchar
  1430 ;; This function is called by:
  1431 ;;		_main
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           
  1436                           ;psect for function _lcd_bcd
  1437  0025                     _lcd_bcd:	
  1438                           
  1439                           ;incstack = 0
  1440                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1441                           ;lcd_bcd@uc_digit stored from wreg
  1442  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1443  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1444  0027  00B3               	movwf	lcd_bcd@uc_digit
  1445                           
  1446                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1447  0028  3029               	movlw	lcd_bcd@ui_decimal& (0+255)
  1448  0029  0084               	movwf	4
  1449  002A  3036               	movlw	low lcd_bcd@F1136
  1450  002B  00A5               	movwf	??_lcd_bcd
  1451  002C  0804               	movf	4,w
  1452  002D  00A6               	movwf	??_lcd_bcd+1
  1453  002E  300A               	movlw	10
  1454  002F  00A7               	movwf	??_lcd_bcd+2
  1455  0030                     u470:	
  1456  0030  0825               	movf	??_lcd_bcd,w
  1457  0031  0084               	movwf	4
  1458  0032  1383               	bcf	3,7	;select IRP bank0
  1459  0033  0800               	movf	0,w
  1460  0034  00A8               	movwf	??_lcd_bcd+3
  1461  0035  0AA5               	incf	??_lcd_bcd,f
  1462  0036  0826               	movf	??_lcd_bcd+1,w
  1463  0037  0084               	movwf	4
  1464  0038  0828               	movf	??_lcd_bcd+3,w
  1465  0039  0080               	movwf	0
  1466  003A  0AA6               	incf	??_lcd_bcd+1,f
  1467  003B  0BA7               	decfsz	??_lcd_bcd+2,f
  1468  003C  2830               	goto	u470
  1469                           
  1470                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1471  003D  3010               	movlw	16
  1472  003E  00F4               	movwf	___lwdiv@divisor
  1473  003F  3027               	movlw	39
  1474  0040  00F5               	movwf	___lwdiv@divisor+1
  1475  0041  0824               	movf	lcd_bcd@ui_number+1,w
  1476  0042  00F7               	movwf	___lwdiv@dividend+1
  1477  0043  0823               	movf	lcd_bcd@ui_number,w
  1478  0044  00F6               	movwf	___lwdiv@dividend
  1479  0045  120A  118A  2149  120A  118A  	fcall	___lwdiv
  1480  004A  0875               	movf	?___lwdiv+1,w
  1481  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1482  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1483  004D  00B2               	movwf	lcd_bcd@ui_decimal+9
  1484  004E  0874               	movf	?___lwdiv,w
  1485  004F  00B1               	movwf	lcd_bcd@ui_decimal+8
  1486                           
  1487                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1488  0050  3010               	movlw	16
  1489  0051  00F4               	movwf	___lwmod@divisor
  1490  0052  3027               	movlw	39
  1491  0053  00F5               	movwf	___lwmod@divisor+1
  1492  0054  0824               	movf	lcd_bcd@ui_number+1,w
  1493  0055  00F7               	movwf	___lwmod@dividend+1
  1494  0056  0823               	movf	lcd_bcd@ui_number,w
  1495  0057  00F6               	movwf	___lwmod@dividend
  1496  0058  120A  118A  2230  120A  118A  	fcall	___lwmod
  1497  005D  0875               	movf	?___lwmod+1,w
  1498  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1499  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1500  0060  00B0               	movwf	lcd_bcd@ui_decimal+7
  1501  0061  0874               	movf	?___lwmod,w
  1502  0062  00AF               	movwf	lcd_bcd@ui_decimal+6
  1503                           
  1504                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1505  0063  30E8               	movlw	232
  1506  0064  00F4               	movwf	___lwmod@divisor
  1507  0065  3003               	movlw	3
  1508  0066  00F5               	movwf	___lwmod@divisor+1
  1509  0067  0830               	movf	lcd_bcd@ui_decimal+7,w
  1510  0068  00F7               	movwf	___lwmod@dividend+1
  1511  0069  082F               	movf	lcd_bcd@ui_decimal+6,w
  1512  006A  00F6               	movwf	___lwmod@dividend
  1513  006B  120A  118A  2230  120A  118A  	fcall	___lwmod
  1514  0070  0875               	movf	?___lwmod+1,w
  1515  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1516  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1517  0073  00AE               	movwf	lcd_bcd@ui_decimal+5
  1518  0074  0874               	movf	?___lwmod,w
  1519  0075  00AD               	movwf	lcd_bcd@ui_decimal+4
  1520                           
  1521                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1522  0076  30E8               	movlw	232
  1523  0077  00F4               	movwf	___lwdiv@divisor
  1524  0078  3003               	movlw	3
  1525  0079  00F5               	movwf	___lwdiv@divisor+1
  1526  007A  0830               	movf	lcd_bcd@ui_decimal+7,w
  1527  007B  00F7               	movwf	___lwdiv@dividend+1
  1528  007C  082F               	movf	lcd_bcd@ui_decimal+6,w
  1529  007D  00F6               	movwf	___lwdiv@dividend
  1530  007E  120A  118A  2149  120A  118A  	fcall	___lwdiv
  1531  0083  0875               	movf	?___lwdiv+1,w
  1532  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1533  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1534  0086  00B0               	movwf	lcd_bcd@ui_decimal+7
  1535  0087  0874               	movf	?___lwdiv,w
  1536  0088  00AF               	movwf	lcd_bcd@ui_decimal+6
  1537                           
  1538                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1539  0089  3064               	movlw	100
  1540  008A  00F4               	movwf	___lwmod@divisor
  1541  008B  3000               	movlw	0
  1542  008C  00F5               	movwf	___lwmod@divisor+1
  1543  008D  082E               	movf	lcd_bcd@ui_decimal+5,w
  1544  008E  00F7               	movwf	___lwmod@dividend+1
  1545  008F  082D               	movf	lcd_bcd@ui_decimal+4,w
  1546  0090  00F6               	movwf	___lwmod@dividend
  1547  0091  120A  118A  2230  120A  118A  	fcall	___lwmod
  1548  0096  0875               	movf	?___lwmod+1,w
  1549  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0099  00AC               	movwf	lcd_bcd@ui_decimal+3
  1552  009A  0874               	movf	?___lwmod,w
  1553  009B  00AB               	movwf	lcd_bcd@ui_decimal+2
  1554                           
  1555                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1556  009C  3064               	movlw	100
  1557  009D  00F4               	movwf	___lwdiv@divisor
  1558  009E  3000               	movlw	0
  1559  009F  00F5               	movwf	___lwdiv@divisor+1
  1560  00A0  082E               	movf	lcd_bcd@ui_decimal+5,w
  1561  00A1  00F7               	movwf	___lwdiv@dividend+1
  1562  00A2  082D               	movf	lcd_bcd@ui_decimal+4,w
  1563  00A3  00F6               	movwf	___lwdiv@dividend
  1564  00A4  120A  118A  2149  120A  118A  	fcall	___lwdiv
  1565  00A9  0875               	movf	?___lwdiv+1,w
  1566  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1567  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1568  00AC  00AE               	movwf	lcd_bcd@ui_decimal+5
  1569  00AD  0874               	movf	?___lwdiv,w
  1570  00AE  00AD               	movwf	lcd_bcd@ui_decimal+4
  1571                           
  1572                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1573  00AF  300A               	movlw	10
  1574  00B0  00F4               	movwf	___lwmod@divisor
  1575  00B1  3000               	movlw	0
  1576  00B2  00F5               	movwf	___lwmod@divisor+1
  1577  00B3  082C               	movf	lcd_bcd@ui_decimal+3,w
  1578  00B4  00F7               	movwf	___lwmod@dividend+1
  1579  00B5  082B               	movf	lcd_bcd@ui_decimal+2,w
  1580  00B6  00F6               	movwf	___lwmod@dividend
  1581  00B7  120A  118A  2230  120A  118A  	fcall	___lwmod
  1582  00BC  0875               	movf	?___lwmod+1,w
  1583  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1584  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1585  00BF  00AA               	movwf	lcd_bcd@ui_decimal+1
  1586  00C0  0874               	movf	?___lwmod,w
  1587  00C1  00A9               	movwf	lcd_bcd@ui_decimal
  1588                           
  1589                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1590  00C2  300A               	movlw	10
  1591  00C3  00F4               	movwf	___lwdiv@divisor
  1592  00C4  3000               	movlw	0
  1593  00C5  00F5               	movwf	___lwdiv@divisor+1
  1594  00C6  082C               	movf	lcd_bcd@ui_decimal+3,w
  1595  00C7  00F7               	movwf	___lwdiv@dividend+1
  1596  00C8  082B               	movf	lcd_bcd@ui_decimal+2,w
  1597  00C9  00F6               	movwf	___lwdiv@dividend
  1598  00CA  120A  118A  2149  120A  118A  	fcall	___lwdiv
  1599  00CF  0875               	movf	?___lwdiv+1,w
  1600  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1601  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1602  00D2  00AC               	movwf	lcd_bcd@ui_decimal+3
  1603  00D3  0874               	movf	?___lwdiv,w
  1604  00D4  00AB               	movwf	lcd_bcd@ui_decimal+2
  1605                           
  1606                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1607  00D5  3006               	movlw	6
  1608  00D6  0233               	subwf	lcd_bcd@uc_digit,w
  1609  00D7  1C03               	skipc
  1610  00D8  28DD               	goto	l952
  1611  00D9  3005               	movlw	5
  1612  00DA  00A5               	movwf	??_lcd_bcd
  1613  00DB  0825               	movf	??_lcd_bcd,w
  1614  00DC  00B3               	movwf	lcd_bcd@uc_digit
  1615  00DD                     l952:	
  1616                           
  1617                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1618  00DD  0833               	movf	lcd_bcd@uc_digit,w
  1619  00DE  1903               	btfsc	3,2
  1620  00DF  0008               	return
  1621                           
  1622                           ;lcd.c: 289: {
  1623                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1624  00E0  0833               	movf	lcd_bcd@uc_digit,w
  1625  00E1  00A5               	movwf	??_lcd_bcd
  1626  00E2  0725               	addwf	??_lcd_bcd,w
  1627  00E3  3EFE               	addlw	254
  1628  00E4  3E29               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  1629  00E5  0084               	movwf	4
  1630  00E6  1383               	bcf	3,7	;select IRP bank0
  1631  00E7  0800               	movf	0,w
  1632  00E8  3E30               	addlw	48
  1633  00E9  120A  118A  22BD  120A  118A  	fcall	_lcd_putchar
  1634  00EE  3001               	movlw	1
  1635  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1636  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1637  00F1  02B3               	subwf	lcd_bcd@uc_digit,f
  1638  00F2  28DD               	goto	l952
  1639  00F3                     __end_of_lcd_bcd:	
  1640                           
  1641                           	psect	text9
  1642  02BD                     __ptext9:	
  1643 ;; *************** function _lcd_putchar *****************
  1644 ;; Defined at:
  1645 ;;		line 220 in file "lcd.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  c_data          1    wreg     unsigned char 
  1648 ;; Auto vars:     Size  Location     Type
  1649 ;;  c_data          1    0[BANK0 ] unsigned char 
  1650 ;; Return value:  Size  Location     Type
  1651 ;;                  1    wreg      void 
  1652 ;; Registers used:
  1653 ;;		wreg, status,2, status,0, pclath, cstack
  1654 ;; Tracked objects:
  1655 ;;		On entry : 0/0
  1656 ;;		On exit  : 0/0
  1657 ;;		Unchanged: 0/0
  1658 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1659 ;;      Params:         0       0       0       0       0
  1660 ;;      Locals:         0       1       0       0       0
  1661 ;;      Temps:          1       0       0       0       0
  1662 ;;      Totals:         1       1       0       0       0
  1663 ;;Total ram usage:        2 bytes
  1664 ;; Hardware stack levels used:    1
  1665 ;; Hardware stack levels required when called:    3
  1666 ;; This function calls:
  1667 ;;		_send_lcd_data
  1668 ;; This function is called by:
  1669 ;;		_lcd_putstr
  1670 ;;		_lcd_bcd
  1671 ;; This function uses a non-reentrant model
  1672 ;;
  1673                           
  1674                           
  1675                           ;psect for function _lcd_putchar
  1676  02BD                     _lcd_putchar:	
  1677                           
  1678                           ;incstack = 0
  1679                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  1680                           ;lcd_putchar@c_data stored from wreg
  1681  02BD  1283               	bcf	3,5	;RP0=0, select bank0
  1682  02BE  1303               	bcf	3,6	;RP1=0, select bank0
  1683  02BF  00A0               	movwf	lcd_putchar@c_data
  1684                           
  1685                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  1686  02C0  0820               	movf	lcd_putchar@c_data,w
  1687  02C1  00F9               	movwf	??_lcd_putchar
  1688  02C2  0879               	movf	??_lcd_putchar,w
  1689  02C3  00F5               	movwf	send_lcd_data@uc_data
  1690  02C4  3001               	movlw	1
  1691  02C5  120A  118A  21FB   	fcall	_send_lcd_data
  1692  02C8  0008               	return
  1693  02C9                     __end_of_lcd_putchar:	
  1694                           
  1695                           	psect	text10
  1696  01FB                     __ptext10:	
  1697 ;; *************** function _send_lcd_data *****************
  1698 ;; Defined at:
  1699 ;;		line 308 in file "lcd.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  b_rs            1    wreg     unsigned char 
  1702 ;;  uc_data         1    5[COMMON] unsigned char 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  b_rs            1    8[COMMON] unsigned char 
  1705 ;; Return value:  Size  Location     Type
  1706 ;;                  1    wreg      void 
  1707 ;; Registers used:
  1708 ;;		wreg, status,2, status,0, pclath, cstack
  1709 ;; Tracked objects:
  1710 ;;		On entry : 0/0
  1711 ;;		On exit  : 0/0
  1712 ;;		Unchanged: 0/0
  1713 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1714 ;;      Params:         1       0       0       0       0
  1715 ;;      Locals:         1       0       0       0       0
  1716 ;;      Temps:          2       0       0       0       0
  1717 ;;      Totals:         4       0       0       0       0
  1718 ;;Total ram usage:        4 bytes
  1719 ;; Hardware stack levels used:    1
  1720 ;; Hardware stack levels required when called:    2
  1721 ;; This function calls:
  1722 ;;		_set_lcd_data
  1723 ;;		_set_lcd_e
  1724 ;;		_set_lcd_rs
  1725 ;; This function is called by:
  1726 ;;		_lcd_initialize
  1727 ;;		_lcd_clear
  1728 ;;		_lcd_home
  1729 ;;		_lcd_2ndline
  1730 ;;		_lcd_goto
  1731 ;;		_lcd_putchar
  1732 ;; This function uses a non-reentrant model
  1733 ;;
  1734                           
  1735                           
  1736                           ;psect for function _send_lcd_data
  1737  01FB                     _send_lcd_data:	
  1738                           
  1739                           ;incstack = 0
  1740                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1741                           ;send_lcd_data@b_rs stored from wreg
  1742  01FB  00F8               	movwf	send_lcd_data@b_rs
  1743                           
  1744                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1745  01FC  0878               	movf	send_lcd_data@b_rs,w
  1746  01FD  120A  118A  22C9  120A  118A  	fcall	_set_lcd_rs
  1747                           
  1748                           ;lcd.c: 312: set_lcd_data(uc_data);
  1749  0202  0875               	movf	send_lcd_data@uc_data,w
  1750  0203  120A  118A  2303  120A  118A  	fcall	_set_lcd_data
  1751                           
  1752                           ;lcd.c: 315: set_lcd_e(1);
  1753  0208  3001               	movlw	1
  1754  0209  120A  118A  22D4  120A  118A  	fcall	_set_lcd_e
  1755                           
  1756                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1757  020E  3007               	movlw	7
  1758  020F  00F7               	movwf	??_send_lcd_data+1
  1759  0210  307D               	movlw	125
  1760  0211  00F6               	movwf	??_send_lcd_data
  1761  0212                     u537:	
  1762  0212  0BF6               	decfsz	??_send_lcd_data,f
  1763  0213  2A12               	goto	u537
  1764  0214  0BF7               	decfsz	??_send_lcd_data+1,f
  1765  0215  2A12               	goto	u537
  1766                           
  1767                           ;lcd.c: 317: set_lcd_e(0);
  1768  0216  3000               	movlw	0
  1769  0217  120A  118A  22D4  120A  118A  	fcall	_set_lcd_e
  1770                           
  1771                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1772  021C  300D               	movlw	13
  1773  021D  00F7               	movwf	??_send_lcd_data+1
  1774  021E  30FB               	movlw	251
  1775  021F  00F6               	movwf	??_send_lcd_data
  1776  0220                     u547:	
  1777  0220  0BF6               	decfsz	??_send_lcd_data,f
  1778  0221  2A20               	goto	u547
  1779  0222  0BF7               	decfsz	??_send_lcd_data+1,f
  1780  0223  2A20               	goto	u547
  1781  0224  2A25               	nop2
  1782                           
  1783                           ;lcd.c: 321: set_lcd_rs(0);
  1784  0225  3000               	movlw	0
  1785  0226  120A  118A  22C9  120A  118A  	fcall	_set_lcd_rs
  1786                           
  1787                           ;lcd.c: 322: set_lcd_data(0);
  1788  022B  3000               	movlw	0
  1789  022C  120A  118A  2303   	fcall	_set_lcd_data
  1790  022F  0008               	return
  1791  0230                     __end_of_send_lcd_data:	
  1792                           
  1793                           	psect	text11
  1794  02C9                     __ptext11:	
  1795 ;; *************** function _set_lcd_rs *****************
  1796 ;; Defined at:
  1797 ;;		line 360 in file "lcd.c"
  1798 ;; Parameters:    Size  Location     Type
  1799 ;;  b_output        1    wreg     unsigned char 
  1800 ;; Auto vars:     Size  Location     Type
  1801 ;;  b_output        1    4[COMMON] unsigned char 
  1802 ;; Return value:  Size  Location     Type
  1803 ;;                  1    wreg      void 
  1804 ;; Registers used:
  1805 ;;		wreg
  1806 ;; Tracked objects:
  1807 ;;		On entry : 0/0
  1808 ;;		On exit  : 0/0
  1809 ;;		Unchanged: 0/0
  1810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1811 ;;      Params:         0       0       0       0       0
  1812 ;;      Locals:         1       0       0       0       0
  1813 ;;      Temps:          0       0       0       0       0
  1814 ;;      Totals:         1       0       0       0       0
  1815 ;;Total ram usage:        1 bytes
  1816 ;; Hardware stack levels used:    1
  1817 ;; Hardware stack levels required when called:    1
  1818 ;; This function calls:
  1819 ;;		Nothing
  1820 ;; This function is called by:
  1821 ;;		_send_lcd_data
  1822 ;; This function uses a non-reentrant model
  1823 ;;
  1824                           
  1825                           
  1826                           ;psect for function _set_lcd_rs
  1827  02C9                     _set_lcd_rs:	
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _set_lcd_rs: [wreg]
  1831                           ;set_lcd_rs@b_output stored from wreg
  1832  02C9  00F4               	movwf	set_lcd_rs@b_output
  1833                           
  1834                           ;lcd.c: 362: RB4 = b_output;
  1835  02CA  1C74               	btfss	set_lcd_rs@b_output,0
  1836  02CB  2AD0               	goto	u280
  1837  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1838  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1839  02CE  1606               	bsf	6,4	;volatile
  1840  02CF  0008               	return
  1841  02D0                     u280:	
  1842  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1843  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1844  02D2  1206               	bcf	6,4	;volatile
  1845  02D3  0008               	return
  1846  02D4                     __end_of_set_lcd_rs:	
  1847                           
  1848                           	psect	text12
  1849  02D4                     __ptext12:	
  1850 ;; *************** function _set_lcd_e *****************
  1851 ;; Defined at:
  1852 ;;		line 340 in file "lcd.c"
  1853 ;; Parameters:    Size  Location     Type
  1854 ;;  b_output        1    wreg     unsigned char 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  b_output        1    4[COMMON] unsigned char 
  1857 ;; Return value:  Size  Location     Type
  1858 ;;                  1    wreg      void 
  1859 ;; Registers used:
  1860 ;;		wreg
  1861 ;; Tracked objects:
  1862 ;;		On entry : 0/0
  1863 ;;		On exit  : 0/0
  1864 ;;		Unchanged: 0/0
  1865 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1866 ;;      Params:         0       0       0       0       0
  1867 ;;      Locals:         1       0       0       0       0
  1868 ;;      Temps:          0       0       0       0       0
  1869 ;;      Totals:         1       0       0       0       0
  1870 ;;Total ram usage:        1 bytes
  1871 ;; Hardware stack levels used:    1
  1872 ;; Hardware stack levels required when called:    1
  1873 ;; This function calls:
  1874 ;;		Nothing
  1875 ;; This function is called by:
  1876 ;;		_lcd_initialize
  1877 ;;		_send_lcd_data
  1878 ;; This function uses a non-reentrant model
  1879 ;;
  1880                           
  1881                           
  1882                           ;psect for function _set_lcd_e
  1883  02D4                     _set_lcd_e:	
  1884                           
  1885                           ;incstack = 0
  1886                           ; Regs used in _set_lcd_e: [wreg]
  1887                           ;set_lcd_e@b_output stored from wreg
  1888  02D4  00F4               	movwf	set_lcd_e@b_output
  1889                           
  1890                           ;lcd.c: 342: RB5 = b_output;
  1891  02D5  1C74               	btfss	set_lcd_e@b_output,0
  1892  02D6  2ADB               	goto	u260
  1893  02D7  1283               	bcf	3,5	;RP0=0, select bank0
  1894  02D8  1303               	bcf	3,6	;RP1=0, select bank0
  1895  02D9  1686               	bsf	6,5	;volatile
  1896  02DA  0008               	return
  1897  02DB                     u260:	
  1898  02DB  1283               	bcf	3,5	;RP0=0, select bank0
  1899  02DC  1303               	bcf	3,6	;RP1=0, select bank0
  1900  02DD  1286               	bcf	6,5	;volatile
  1901  02DE  0008               	return
  1902  02DF                     __end_of_set_lcd_e:	
  1903                           
  1904                           	psect	text13
  1905  0303                     __ptext13:	
  1906 ;; *************** function _set_lcd_data *****************
  1907 ;; Defined at:
  1908 ;;		line 380 in file "lcd.c"
  1909 ;; Parameters:    Size  Location     Type
  1910 ;;  uc_data         1    wreg     unsigned char 
  1911 ;; Auto vars:     Size  Location     Type
  1912 ;;  uc_data         1    4[COMMON] unsigned char 
  1913 ;; Return value:  Size  Location     Type
  1914 ;;                  1    wreg      void 
  1915 ;; Registers used:
  1916 ;;		wreg
  1917 ;; Tracked objects:
  1918 ;;		On entry : 0/0
  1919 ;;		On exit  : 0/0
  1920 ;;		Unchanged: 0/0
  1921 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1922 ;;      Params:         0       0       0       0       0
  1923 ;;      Locals:         1       0       0       0       0
  1924 ;;      Temps:          0       0       0       0       0
  1925 ;;      Totals:         1       0       0       0       0
  1926 ;;Total ram usage:        1 bytes
  1927 ;; Hardware stack levels used:    1
  1928 ;; Hardware stack levels required when called:    1
  1929 ;; This function calls:
  1930 ;;		Nothing
  1931 ;; This function is called by:
  1932 ;;		_send_lcd_data
  1933 ;; This function uses a non-reentrant model
  1934 ;;
  1935                           
  1936                           
  1937                           ;psect for function _set_lcd_data
  1938  0303                     _set_lcd_data:	
  1939                           
  1940                           ;incstack = 0
  1941                           ; Regs used in _set_lcd_data: [wreg]
  1942                           ;set_lcd_data@uc_data stored from wreg
  1943  0303  00F4               	movwf	set_lcd_data@uc_data
  1944                           
  1945                           ;lcd.c: 382: PORTD = uc_data;
  1946  0304  0874               	movf	set_lcd_data@uc_data,w
  1947  0305  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0306  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0307  0088               	movwf	8	;volatile
  1950  0308  0008               	return
  1951  0309                     __end_of_set_lcd_data:	
  1952                           
  1953                           	psect	text14
  1954  0230                     __ptext14:	
  1955 ;; *************** function ___lwmod *****************
  1956 ;; Defined at:
  1957 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1958 ;; Parameters:    Size  Location     Type
  1959 ;;  divisor         2    4[COMMON] unsigned int 
  1960 ;;  dividend        2    6[COMMON] unsigned int 
  1961 ;; Auto vars:     Size  Location     Type
  1962 ;;  counter         1    9[COMMON] unsigned char 
  1963 ;; Return value:  Size  Location     Type
  1964 ;;                  2    4[COMMON] unsigned int 
  1965 ;; Registers used:
  1966 ;;		wreg, status,2, status,0
  1967 ;; Tracked objects:
  1968 ;;		On entry : 0/0
  1969 ;;		On exit  : 0/0
  1970 ;;		Unchanged: 0/0
  1971 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1972 ;;      Params:         4       0       0       0       0
  1973 ;;      Locals:         1       0       0       0       0
  1974 ;;      Temps:          1       0       0       0       0
  1975 ;;      Totals:         6       0       0       0       0
  1976 ;;Total ram usage:        6 bytes
  1977 ;; Hardware stack levels used:    1
  1978 ;; Hardware stack levels required when called:    1
  1979 ;; This function calls:
  1980 ;;		Nothing
  1981 ;; This function is called by:
  1982 ;;		_lcd_bcd
  1983 ;; This function uses a non-reentrant model
  1984 ;;
  1985                           
  1986                           
  1987                           ;psect for function ___lwmod
  1988  0230                     ___lwmod:	
  1989                           
  1990                           ;incstack = 0
  1991                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1992  0230  0874               	movf	___lwmod@divisor,w
  1993  0231  0475               	iorwf	___lwmod@divisor+1,w
  1994  0232  1903               	btfsc	3,2
  1995  0233  2A5D               	goto	l872
  1996  0234  01F9               	clrf	___lwmod@counter
  1997  0235  0AF9               	incf	___lwmod@counter,f
  1998  0236                     l862:	
  1999  0236  1BF5               	btfsc	___lwmod@divisor+1,7
  2000  0237  2A44               	goto	l864
  2001  0238  3001               	movlw	1
  2002  0239                     u385:	
  2003  0239  1003               	clrc
  2004  023A  0DF4               	rlf	___lwmod@divisor,f
  2005  023B  0DF5               	rlf	___lwmod@divisor+1,f
  2006  023C  3EFF               	addlw	-1
  2007  023D  1D03               	skipz
  2008  023E  2A39               	goto	u385
  2009  023F  3001               	movlw	1
  2010  0240  00F8               	movwf	??___lwmod
  2011  0241  0878               	movf	??___lwmod,w
  2012  0242  07F9               	addwf	___lwmod@counter,f
  2013  0243  2A36               	goto	l862
  2014  0244                     l864:	
  2015  0244  0875               	movf	___lwmod@divisor+1,w
  2016  0245  0277               	subwf	___lwmod@dividend+1,w
  2017  0246  1D03               	skipz
  2018  0247  2A4A               	goto	u405
  2019  0248  0874               	movf	___lwmod@divisor,w
  2020  0249  0276               	subwf	___lwmod@dividend,w
  2021  024A                     u405:	
  2022  024A  1C03               	skipc
  2023  024B  2A52               	goto	l868
  2024  024C  0874               	movf	___lwmod@divisor,w
  2025  024D  02F6               	subwf	___lwmod@dividend,f
  2026  024E  0875               	movf	___lwmod@divisor+1,w
  2027  024F  1C03               	skipc
  2028  0250  03F7               	decf	___lwmod@dividend+1,f
  2029  0251  02F7               	subwf	___lwmod@dividend+1,f
  2030  0252                     l868:	
  2031  0252  3001               	movlw	1
  2032  0253                     u415:	
  2033  0253  1003               	clrc
  2034  0254  0CF5               	rrf	___lwmod@divisor+1,f
  2035  0255  0CF4               	rrf	___lwmod@divisor,f
  2036  0256  3EFF               	addlw	-1
  2037  0257  1D03               	skipz
  2038  0258  2A53               	goto	u415
  2039  0259  3001               	movlw	1
  2040  025A  02F9               	subwf	___lwmod@counter,f
  2041  025B  1D03               	btfss	3,2
  2042  025C  2A44               	goto	l864
  2043  025D                     l872:	
  2044  025D  0877               	movf	___lwmod@dividend+1,w
  2045  025E  00F5               	movwf	?___lwmod+1
  2046  025F  0876               	movf	___lwmod@dividend,w
  2047  0260  00F4               	movwf	?___lwmod
  2048  0261  0008               	return
  2049  0262                     __end_of___lwmod:	
  2050                           
  2051                           	psect	text15
  2052  0149                     __ptext15:	
  2053 ;; *************** function ___lwdiv *****************
  2054 ;; Defined at:
  2055 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2056 ;; Parameters:    Size  Location     Type
  2057 ;;  divisor         2    4[COMMON] unsigned int 
  2058 ;;  dividend        2    6[COMMON] unsigned int 
  2059 ;; Auto vars:     Size  Location     Type
  2060 ;;  quotient        2    0[BANK0 ] unsigned int 
  2061 ;;  counter         1    2[BANK0 ] unsigned char 
  2062 ;; Return value:  Size  Location     Type
  2063 ;;                  2    4[COMMON] unsigned int 
  2064 ;; Registers used:
  2065 ;;		wreg, status,2, status,0
  2066 ;; Tracked objects:
  2067 ;;		On entry : 0/0
  2068 ;;		On exit  : 0/0
  2069 ;;		Unchanged: 0/0
  2070 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2071 ;;      Params:         4       0       0       0       0
  2072 ;;      Locals:         0       3       0       0       0
  2073 ;;      Temps:          1       0       0       0       0
  2074 ;;      Totals:         5       3       0       0       0
  2075 ;;Total ram usage:        8 bytes
  2076 ;; Hardware stack levels used:    1
  2077 ;; Hardware stack levels required when called:    1
  2078 ;; This function calls:
  2079 ;;		Nothing
  2080 ;; This function is called by:
  2081 ;;		_lcd_bcd
  2082 ;; This function uses a non-reentrant model
  2083 ;;
  2084                           
  2085                           
  2086                           ;psect for function ___lwdiv
  2087  0149                     ___lwdiv:	
  2088                           
  2089                           ;incstack = 0
  2090                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2091  0149  1283               	bcf	3,5	;RP0=0, select bank0
  2092  014A  1303               	bcf	3,6	;RP1=0, select bank0
  2093  014B  01A0               	clrf	___lwdiv@quotient
  2094  014C  01A1               	clrf	___lwdiv@quotient+1
  2095  014D  0874               	movf	___lwdiv@divisor,w
  2096  014E  0475               	iorwf	___lwdiv@divisor+1,w
  2097  014F  1903               	btfsc	3,2
  2098  0150  2982               	goto	l850
  2099  0151  01A2               	clrf	___lwdiv@counter
  2100  0152  0AA2               	incf	___lwdiv@counter,f
  2101  0153                     l838:	
  2102  0153  1BF5               	btfsc	___lwdiv@divisor+1,7
  2103  0154  2961               	goto	l840
  2104  0155  3001               	movlw	1
  2105  0156                     u315:	
  2106  0156  1003               	clrc
  2107  0157  0DF4               	rlf	___lwdiv@divisor,f
  2108  0158  0DF5               	rlf	___lwdiv@divisor+1,f
  2109  0159  3EFF               	addlw	-1
  2110  015A  1D03               	skipz
  2111  015B  2956               	goto	u315
  2112  015C  3001               	movlw	1
  2113  015D  00F8               	movwf	??___lwdiv
  2114  015E  0878               	movf	??___lwdiv,w
  2115  015F  07A2               	addwf	___lwdiv@counter,f
  2116  0160  2953               	goto	l838
  2117  0161                     l840:	
  2118  0161  3001               	movlw	1
  2119  0162                     u335:	
  2120  0162  1003               	clrc
  2121  0163  0DA0               	rlf	___lwdiv@quotient,f
  2122  0164  0DA1               	rlf	___lwdiv@quotient+1,f
  2123  0165  3EFF               	addlw	-1
  2124  0166  1D03               	skipz
  2125  0167  2962               	goto	u335
  2126  0168  0875               	movf	___lwdiv@divisor+1,w
  2127  0169  0277               	subwf	___lwdiv@dividend+1,w
  2128  016A  1D03               	skipz
  2129  016B  296E               	goto	u345
  2130  016C  0874               	movf	___lwdiv@divisor,w
  2131  016D  0276               	subwf	___lwdiv@dividend,w
  2132  016E                     u345:	
  2133  016E  1C03               	skipc
  2134  016F  2977               	goto	l846
  2135  0170  0874               	movf	___lwdiv@divisor,w
  2136  0171  02F6               	subwf	___lwdiv@dividend,f
  2137  0172  0875               	movf	___lwdiv@divisor+1,w
  2138  0173  1C03               	skipc
  2139  0174  03F7               	decf	___lwdiv@dividend+1,f
  2140  0175  02F7               	subwf	___lwdiv@dividend+1,f
  2141  0176  1420               	bsf	___lwdiv@quotient,0
  2142  0177                     l846:	
  2143  0177  3001               	movlw	1
  2144  0178                     u355:	
  2145  0178  1003               	clrc
  2146  0179  0CF5               	rrf	___lwdiv@divisor+1,f
  2147  017A  0CF4               	rrf	___lwdiv@divisor,f
  2148  017B  3EFF               	addlw	-1
  2149  017C  1D03               	skipz
  2150  017D  2978               	goto	u355
  2151  017E  3001               	movlw	1
  2152  017F  02A2               	subwf	___lwdiv@counter,f
  2153  0180  1D03               	btfss	3,2
  2154  0181  2961               	goto	l840
  2155  0182                     l850:	
  2156  0182  0821               	movf	___lwdiv@quotient+1,w
  2157  0183  00F5               	movwf	?___lwdiv+1
  2158  0184  0820               	movf	___lwdiv@quotient,w
  2159  0185  00F4               	movwf	?___lwdiv
  2160  0186  0008               	return
  2161  0187                     __end_of___lwdiv:	
  2162                           
  2163                           	psect	text16
  2164  0309                     __ptext16:	
  2165 ;; *************** function _adc_on *****************
  2166 ;; Defined at:
  2167 ;;		line 64 in file "adc.c"
  2168 ;; Parameters:    Size  Location     Type
  2169 ;;		None
  2170 ;; Auto vars:     Size  Location     Type
  2171 ;;		None
  2172 ;; Return value:  Size  Location     Type
  2173 ;;                  1    wreg      void 
  2174 ;; Registers used:
  2175 ;;		None
  2176 ;; Tracked objects:
  2177 ;;		On entry : 0/0
  2178 ;;		On exit  : 0/0
  2179 ;;		Unchanged: 0/0
  2180 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2181 ;;      Params:         0       0       0       0       0
  2182 ;;      Locals:         0       0       0       0       0
  2183 ;;      Temps:          0       0       0       0       0
  2184 ;;      Totals:         0       0       0       0       0
  2185 ;;Total ram usage:        0 bytes
  2186 ;; Hardware stack levels used:    1
  2187 ;; Hardware stack levels required when called:    1
  2188 ;; This function calls:
  2189 ;;		Nothing
  2190 ;; This function is called by:
  2191 ;;		_main
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _adc_on
  2197  0309                     _adc_on:	
  2198                           
  2199                           ;adc.c: 67: ADON = 1;
  2200                           
  2201                           ;incstack = 0
  2202                           ; Regs used in _adc_on: []
  2203  0309  1283               	bcf	3,5	;RP0=0, select bank0
  2204  030A  1303               	bcf	3,6	;RP1=0, select bank0
  2205  030B  141F               	bsf	31,0	;volatile
  2206  030C  0008               	return
  2207  030D                     __end_of_adc_on:	
  2208                           
  2209                           	psect	text17
  2210  02A1                     __ptext17:	
  2211 ;; *************** function _adc_initialize *****************
  2212 ;; Defined at:
  2213 ;;		line 28 in file "adc.c"
  2214 ;; Parameters:    Size  Location     Type
  2215 ;;		None
  2216 ;; Auto vars:     Size  Location     Type
  2217 ;;		None
  2218 ;; Return value:  Size  Location     Type
  2219 ;;                  1    wreg      void 
  2220 ;; Registers used:
  2221 ;;		None
  2222 ;; Tracked objects:
  2223 ;;		On entry : 0/0
  2224 ;;		On exit  : 0/0
  2225 ;;		Unchanged: 0/0
  2226 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2227 ;;      Params:         0       0       0       0       0
  2228 ;;      Locals:         0       0       0       0       0
  2229 ;;      Temps:          0       0       0       0       0
  2230 ;;      Totals:         0       0       0       0       0
  2231 ;;Total ram usage:        0 bytes
  2232 ;; Hardware stack levels used:    1
  2233 ;; Hardware stack levels required when called:    1
  2234 ;; This function calls:
  2235 ;;		Nothing
  2236 ;; This function is called by:
  2237 ;;		_main
  2238 ;; This function uses a non-reentrant model
  2239 ;;
  2240                           
  2241                           
  2242                           ;psect for function _adc_initialize
  2243  02A1                     _adc_initialize:	
  2244                           
  2245                           ;adc.c: 31: ADCON0bits.ADCS1 = 0;
  2246                           
  2247                           ;incstack = 0
  2248                           ; Regs used in _adc_initialize: []
  2249  02A1  1283               	bcf	3,5	;RP0=0, select bank0
  2250  02A2  1303               	bcf	3,6	;RP1=0, select bank0
  2251  02A3  139F               	bcf	31,7	;volatile
  2252                           
  2253                           ;adc.c: 32: ADCON0bits.ADCS0 = 0;
  2254  02A4  131F               	bcf	31,6	;volatile
  2255                           
  2256                           ;adc.c: 39: ADFM = 1;
  2257  02A5  1683               	bsf	3,5	;RP0=1, select bank1
  2258  02A6  1303               	bcf	3,6	;RP1=0, select bank1
  2259  02A7  179F               	bsf	31,7	;volatile
  2260                           
  2261                           ;adc.c: 41: PCFG3 = 0;
  2262  02A8  119F               	bcf	31,3	;volatile
  2263                           
  2264                           ;adc.c: 42: PCFG2 = 0;
  2265  02A9  111F               	bcf	31,2	;volatile
  2266                           
  2267                           ;adc.c: 43: PCFG1 = 0;
  2268  02AA  109F               	bcf	31,1	;volatile
  2269                           
  2270                           ;adc.c: 44: PCFG0 = 0;
  2271  02AB  101F               	bcf	31,0	;volatile
  2272                           
  2273                           ;adc.c: 47: ADON = 0;
  2274  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  2275  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  2276  02AE  101F               	bcf	31,0	;volatile
  2277  02AF  0008               	return
  2278  02B0                     __end_of_adc_initialize:	
  2279                           
  2280                           	psect	text18
  2281  02DF                     __ptext18:	
  2282 ;; *************** function _isr *****************
  2283 ;; Defined at:
  2284 ;;		line 23 in file "interrupts.c"
  2285 ;; Parameters:    Size  Location     Type
  2286 ;;		None
  2287 ;; Auto vars:     Size  Location     Type
  2288 ;;		None
  2289 ;; Return value:  Size  Location     Type
  2290 ;;                  1    wreg      void 
  2291 ;; Registers used:
  2292 ;;		None
  2293 ;; Tracked objects:
  2294 ;;		On entry : 0/0
  2295 ;;		On exit  : 0/0
  2296 ;;		Unchanged: 0/0
  2297 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2298 ;;      Params:         0       0       0       0       0
  2299 ;;      Locals:         0       0       0       0       0
  2300 ;;      Temps:          4       0       0       0       0
  2301 ;;      Totals:         4       0       0       0       0
  2302 ;;Total ram usage:        4 bytes
  2303 ;; Hardware stack levels used:    1
  2304 ;; This function calls:
  2305 ;;		Nothing
  2306 ;; This function is called by:
  2307 ;;		Interrupt level 1
  2308 ;; This function uses a non-reentrant model
  2309 ;;
  2310                           
  2311                           
  2312                           ;psect for function _isr
  2313  02DF                     _isr:	
  2314  02DF  0873               	movf	??_isr+3,w
  2315  02E0  00FF               	movwf	127
  2316  02E1  0872               	movf	??_isr+2,w
  2317  02E2  008A               	movwf	10
  2318  02E3  0871               	movf	??_isr+1,w
  2319  02E4  0084               	movwf	4
  2320  02E5  0E70               	swapf	??_isr^(0+-128),w
  2321  02E6  0083               	movwf	3
  2322  02E7  0EFE               	swapf	126,f
  2323  02E8  0E7E               	swapf	126,w
  2324  02E9  0009               	retfie
  2325  02EA                     __end_of_isr:	
  2326  007E                     btemp	set	126	;btemp
  2327  007E                     wtemp0	set	126
  2328                           
  2329                           	psect	intentry
  2330  0004                     __pintentry:	
  2331                           ;incstack = 0
  2332                           ; Regs used in _isr: []
  2333                           
  2334  0004                     interrupt_function:	
  2335  007E                     saved_w	set	btemp
  2336  0004  00FE               	movwf	btemp
  2337  0005  0E03               	swapf	3,w
  2338  0006  00F0               	movwf	??_isr
  2339  0007  0804               	movf	4,w
  2340  0008  00F1               	movwf	??_isr+1
  2341  0009  080A               	movf	10,w
  2342  000A  00F2               	movwf	??_isr+2
  2343  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2344  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2345  000D  087F               	movf	btemp+1,w
  2346  000E  00F3               	movwf	??_isr+3
  2347  000F  120A  118A  2ADF   	ljmp	_isr


Data Sizes:
    Strings     12
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     22      32
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 6
		 -> STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_lcd_home
    _main->_ui_adc_read
    _lcd_putstr->_lcd_2ndline
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwmod
    _lcd_bcd->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_putstr->_lcd_putchar
    _lcd_bcd->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    5727
                                             20 BANK0      2     2      0
                     _adc_initialize
                             _adc_on
                            _lcd_bcd
                           _lcd_goto
                           _lcd_home
                     _lcd_initialize
                         _lcd_putstr
                        _ui_adc_read
 ---------------------------------------------------------------------------------
 (1) _ui_adc_read                                          6     4      2      47
                                              4 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    1233
                                              1 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2243
                                              3 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (4) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     583
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_initialize
   _adc_on
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _ui_adc_read

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     16      20       5       40.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2A      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun Dec 31 15:35:00 2017

         ui_adc_read@pot 0078                        pc 0002             ?_lcd_putchar 0070  
            __CFG_CP$OFF 0000                       l91 0271                       fsr 0004  
                    l900 01AE                      l902 01BC                      l840 0161  
                    l904 018A                      l850 0182                      l846 0177  
                    l838 0153                      l862 0236                      l864 0244  
                    l872 025D                      l952 00DD                      l868 0252  
                    l982 0126                      l898 01A8                      _RB4 0034  
                    _RB5 0035                      u315 0156                      u260 02DB  
                    u405 024A                      u335 0162                      u415 0253  
                    u280 02D0                      u345 016E             __CFG_CPD$OFF 0000  
                    u355 0178                      u517 026B                      u470 0030  
                    u527 01CF                      u385 0239                      u537 0212  
                    u547 0220                      _isr 02DF                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000        set_lcd_e@b_output 0074  
           __CFG_LVP$OFF 0000                     _ADFM 04FF                     ?_isr 0070  
                   _ADON 00F8                     _CHS0 00FB                     _CHS1 00FC  
                   _CHS2 00FD                     STR_1 0295                     STR_2 029B  
           __CFG_WRT$OFF 0000                     _main 00F3                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0012                    ??_isr 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000                    _PCFG0 04F8  
                  _PCFG1 04F9                    _PCFG2 04FA                    _PCFG3 04FB  
        __end_of___lwdiv 0187          __end_of___lwmod 0262                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088     send_lcd_data@uc_data 0075            __CFG_PWRTE$ON 0000  
        __end_of_lcd_bcd 00F3                    pclath 000A                    status 0003  
                  wtemp0 007E            main@adc_value 0034          __initialization 0015  
      send_lcd_data@b_rs 0078             __end_of_main 0149     __size_of_lcd_2ndline 0009  
  __end_of_send_lcd_data 0230                   ??_main 007A             ?_ui_adc_read 0074  
                 _ADRESH 001E                   _ADRESL 009E         __end_of_lcd_home 02FC  
       __end_of_lcd_goto 02BD                   _adc_on 0309  __size_of_adc_initialize 000F  
              ??___lwdiv 0078                ??___lwmod 0078                ??_lcd_bcd 0025  
   __size_of_lcd_putchar 000C                   saved_w 007E         ??_lcd_initialize 0020  
__end_of__initialization 0021           __pcstackCOMMON 0070       __size_of_lcd_clear 0007  
             __pbssBANK0 0036               __pmaintext 00F3                  ?_adc_on 0070  
             __pintentry 0004       __size_of_set_lcd_e 000B               _lcd_putstr 0187  
              ?_lcd_home 0070                ?_lcd_goto 0070               __stringtab 028F  
   __size_of_ui_adc_read 002D            ?_set_lcd_data 0070        __end_of_lcd_clear 0303  
         _adc_initialize 02A1          __size_of_adc_on 0004                  ___lwdiv 0149  
                ___lwmod 0230                  __ptext1 0262                  __ptext2 0187  
                __ptext3 02EA                  __ptext4 01C3                  __ptext5 02FC  
                __ptext6 02F3                  __ptext7 02B0                  __ptext8 0025  
                __ptext9 02BD                  _lcd_bcd 0025             __size_of_isr 000B  
             ??_lcd_home 0079               ??_lcd_goto 0079     end_of_initialization 0021  
      lcd_bcd@ui_decimal 0029           ??_set_lcd_data 0074        __end_of_set_lcd_e 02DF  
 __end_of_adc_initialize 02B0               _set_lcd_rs 02C9            ??_lcd_2ndline 0079  
            ?_lcd_putstr 0070   __size_of_send_lcd_data 0035          ?_adc_initialize 0070  
          ??_lcd_putchar 0079           __end_of_adc_on 030D        lcd_putchar@c_data 0020  
    __end_of_lcd_2ndline 02F3      start_initialization 0015       set_lcd_rs@b_output 0074  
            __end_of_isr 02EA     lcd_putstr@csz_string 0022      lcd_goto@uc_position 0020  
            ?_set_lcd_rs 0070                 ??_adc_on 0074      __size_of_lcd_putstr 003C  
          _send_lcd_data 01FB     __end_of_set_lcd_data 0309      __end_of_lcd_putchar 02C9  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_home 0009  
      __size_of_lcd_goto 000D  __size_of_lcd_initialize 0038         ___lwdiv@dividend 0076  
            _lcd_2ndline 02EA                 ?___lwdiv 0074                 ?___lwmod 0074  
              _lcd_clear 02FC           ?_send_lcd_data 0075                __pstrings 028F  
               ?_lcd_bcd 0023            ??_ui_adc_read 0076      __size_of_set_lcd_rs 000B  
       ___lwdiv@quotient 0020      set_lcd_data@uc_data 0074        interrupt_function 0004  
              _set_lcd_e 02D4                 _GO_nDONE 00FA         lcd_bcd@ui_number 0023  
            _lcd_putchar 02BD               ?_lcd_clear 0070               _ADCON0bits 001F  
            __stringbase 0294             ??_lcd_putstr 0021         ??_adc_initialize 0074  
    __end_of_ui_adc_read 028F               ?_set_lcd_e 0070    __size_of_set_lcd_data 0006  
        ??_send_lcd_data 0076         __size_of___lwdiv 003E       __end_of_lcd_putstr 01C3  
       __size_of___lwmod 0032       __end_of__stringtab 0295         __size_of_lcd_bcd 00CE  
        ___lwdiv@divisor 0074          ___lwdiv@counter 0022                 __ptext10 01FB  
               __ptext11 02C9                 __ptext12 02D4                 __ptext13 0303  
               __ptext14 0230                 __ptext15 0149                 __ptext16 0309  
               __ptext17 02A1                 __ptext18 02DF                 _lcd_home 02F3  
               _lcd_goto 02B0            __size_of_main 0056          lcd_bcd@uc_digit 0033  
           _set_lcd_data 0303           _lcd_initialize 01C3             ??_set_lcd_rs 0074  
            ??_lcd_clear 0079              _ui_adc_read 0262       __end_of_set_lcd_rs 02D4  
               intlevel1 0000         ___lwmod@dividend 0076   __end_of_lcd_initialize 01FB  
              stringcode 028F              ??_set_lcd_e 0074             ?_lcd_2ndline 0070  
           lcd_bcd@F1136 0036          ___lwmod@divisor 0074          ___lwmod@counter 0079  
               stringdir 028F                 stringtab 028F          ?_lcd_initialize 0070  
