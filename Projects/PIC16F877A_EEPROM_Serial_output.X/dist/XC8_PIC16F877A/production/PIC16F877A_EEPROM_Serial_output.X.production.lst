

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 09 13:29:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2,group=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  010E                     	;# 
   426  010F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  0081                     	;# 
   465  0085                     	;# 
   466  0086                     	;# 
   467  0087                     	;# 
   468  0088                     	;# 
   469  0089                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0091                     	;# 
   474  0092                     	;# 
   475  0093                     	;# 
   476  0094                     	;# 
   477  0098                     	;# 
   478  0099                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  009F                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0000                     	;# 
   490  0001                     	;# 
   491  0002                     	;# 
   492  0003                     	;# 
   493  0004                     	;# 
   494  0005                     	;# 
   495  0006                     	;# 
   496  0007                     	;# 
   497  0008                     	;# 
   498  0009                     	;# 
   499  000A                     	;# 
   500  000B                     	;# 
   501  000C                     	;# 
   502  000D                     	;# 
   503  000E                     	;# 
   504  000E                     	;# 
   505  000F                     	;# 
   506  0010                     	;# 
   507  0011                     	;# 
   508  0012                     	;# 
   509  0013                     	;# 
   510  0014                     	;# 
   511  0015                     	;# 
   512  0015                     	;# 
   513  0016                     	;# 
   514  0017                     	;# 
   515  0018                     	;# 
   516  0019                     	;# 
   517  001A                     	;# 
   518  001B                     	;# 
   519  001B                     	;# 
   520  001C                     	;# 
   521  001D                     	;# 
   522  001E                     	;# 
   523  001F                     	;# 
   524  0081                     	;# 
   525  0085                     	;# 
   526  0086                     	;# 
   527  0087                     	;# 
   528  0088                     	;# 
   529  0089                     	;# 
   530  008C                     	;# 
   531  008D                     	;# 
   532  008E                     	;# 
   533  0091                     	;# 
   534  0092                     	;# 
   535  0093                     	;# 
   536  0094                     	;# 
   537  0098                     	;# 
   538  0099                     	;# 
   539  009C                     	;# 
   540  009D                     	;# 
   541  009E                     	;# 
   542  009F                     	;# 
   543  010C                     	;# 
   544  010D                     	;# 
   545  010E                     	;# 
   546  010F                     	;# 
   547  018C                     	;# 
   548  018D                     	;# 
   549  0000                     	;# 
   550  0001                     	;# 
   551  0002                     	;# 
   552  0003                     	;# 
   553  0004                     	;# 
   554  0005                     	;# 
   555  0006                     	;# 
   556  0007                     	;# 
   557  0008                     	;# 
   558  0009                     	;# 
   559  000A                     	;# 
   560  000B                     	;# 
   561  000C                     	;# 
   562  000D                     	;# 
   563  000E                     	;# 
   564  000E                     	;# 
   565  000F                     	;# 
   566  0010                     	;# 
   567  0011                     	;# 
   568  0012                     	;# 
   569  0013                     	;# 
   570  0014                     	;# 
   571  0015                     	;# 
   572  0015                     	;# 
   573  0016                     	;# 
   574  0017                     	;# 
   575  0018                     	;# 
   576  0019                     	;# 
   577  001A                     	;# 
   578  001B                     	;# 
   579  001B                     	;# 
   580  001C                     	;# 
   581  001D                     	;# 
   582  001E                     	;# 
   583  001F                     	;# 
   584  0081                     	;# 
   585  0085                     	;# 
   586  0086                     	;# 
   587  0087                     	;# 
   588  0088                     	;# 
   589  0089                     	;# 
   590  008C                     	;# 
   591  008D                     	;# 
   592  008E                     	;# 
   593  0091                     	;# 
   594  0092                     	;# 
   595  0093                     	;# 
   596  0094                     	;# 
   597  0098                     	;# 
   598  0099                     	;# 
   599  009C                     	;# 
   600  009D                     	;# 
   601  009E                     	;# 
   602  009F                     	;# 
   603  010C                     	;# 
   604  010D                     	;# 
   605  010E                     	;# 
   606  010F                     	;# 
   607  018C                     	;# 
   608  018D                     	;# 
   609  0000                     	;# 
   610  0001                     	;# 
   611  0002                     	;# 
   612  0003                     	;# 
   613  0004                     	;# 
   614  0005                     	;# 
   615  0006                     	;# 
   616  0007                     	;# 
   617  0008                     	;# 
   618  0009                     	;# 
   619  000A                     	;# 
   620  000B                     	;# 
   621  000C                     	;# 
   622  000D                     	;# 
   623  000E                     	;# 
   624  000E                     	;# 
   625  000F                     	;# 
   626  0010                     	;# 
   627  0011                     	;# 
   628  0012                     	;# 
   629  0013                     	;# 
   630  0014                     	;# 
   631  0015                     	;# 
   632  0015                     	;# 
   633  0016                     	;# 
   634  0017                     	;# 
   635  0018                     	;# 
   636  0019                     	;# 
   637  001A                     	;# 
   638  001B                     	;# 
   639  001B                     	;# 
   640  001C                     	;# 
   641  001D                     	;# 
   642  001E                     	;# 
   643  001F                     	;# 
   644  0081                     	;# 
   645  0085                     	;# 
   646  0086                     	;# 
   647  0087                     	;# 
   648  0088                     	;# 
   649  0089                     	;# 
   650  008C                     	;# 
   651  008D                     	;# 
   652  008E                     	;# 
   653  0091                     	;# 
   654  0092                     	;# 
   655  0093                     	;# 
   656  0094                     	;# 
   657  0098                     	;# 
   658  0099                     	;# 
   659  009C                     	;# 
   660  009D                     	;# 
   661  009E                     	;# 
   662  009F                     	;# 
   663  010C                     	;# 
   664  010D                     	;# 
   665  010E                     	;# 
   666  010F                     	;# 
   667  018C                     	;# 
   668  018D                     	;# 
   669  001A                     _RCREG	set	26
   670  0019                     _TXREG	set	25
   671  0013                     _SSPBUF	set	19
   672  0014                     _SSPCON	set	20
   673  001E                     _ADRESH	set	30
   674  0008                     _PORTD	set	8
   675  0007                     _PORTC	set	7
   676  0006                     _PORTB	set	6
   677  0005                     _PORTA	set	5
   678  0065                     _RCIF	set	101
   679  00C1                     _OERR	set	193
   680  0064                     _TXIF	set	100
   681  00C4                     _CREN	set	196
   682  00C7                     _SPEN	set	199
   683  0034                     _RB4	set	52
   684  0035                     _RB5	set	53
   685  00FA                     _GO_nDONE	set	250
   686  00FB                     _CHS0	set	251
   687  00FC                     _CHS1	set	252
   688  00FD                     _CHS2	set	253
   689  00F8                     _ADON	set	248
   690  00FE                     _ADCS0	set	254
   691  00FF                     _ADCS1	set	255
   692  0099                     _SPBRG	set	153
   693  0094                     _SSPSTAT	set	148
   694  0093                     _SSPADD	set	147
   695  0091                     _SSPCON2	set	145
   696  009E                     _ADRESL	set	158
   697  0088                     _TRISD	set	136
   698  0087                     _TRISC	set	135
   699  0086                     _TRISB	set	134
   700  0085                     _TRISA	set	133
   701  04C5                     _TXEN	set	1221
   702  043E                     _TRISC6	set	1086
   703  043F                     _TRISC7	set	1087
   704  04C4                     _SYNC	set	1220
   705  0465                     _RCIE	set	1125
   706  04C2                     _BRGH	set	1218
   707  048C                     _ACKEN	set	1164
   708  048D                     _ACKDT	set	1165
   709  048B                     _RCEN	set	1163
   710  048A                     _PEN	set	1162
   711  0489                     _RSEN	set	1161
   712  0488                     _SEN	set	1160
   713  043C                     _TRISC4	set	1084
   714  043B                     _TRISC3	set	1083
   715  04F8                     _PCFG0	set	1272
   716  04F9                     _PCFG1	set	1273
   717  04FA                     _PCFG2	set	1274
   718  04FB                     _PCFG3	set	1275
   719  04FF                     _ADFM	set	1279
   720                           
   721                           	psect	strings
   722  048D                     __pstrings:	
   723  048D                     stringtab:	
   724  048D                     __stringtab:	
   725  048D                     stringcode:	
   726                           ;	String table - string pointers are 1 byte each
   727                           
   728  048D                     stringdir:	
   729  048D  3004               	movlw	high stringdir
   730  048E  008A               	movwf	10
   731  048F  0804               	movf	4,w
   732  0490  0A84               	incf	4,f
   733  0491  0782               	addwf	2,f
   734  0492                     __stringbase:	
   735  0492  3400               	retlw	0
   736  0493                     __end_of__stringtab:	
   737  0493                     STR_1:	
   738  0493  3453               	retlw	83	;'S'
   739  0494  3468               	retlw	104	;'h'
   740  0495  346F               	retlw	111	;'o'
   741  0496  3475               	retlw	117	;'u'
   742  0497  346C               	retlw	108	;'l'
   743  0498  3464               	retlw	100	;'d'
   744  0499  3420               	retlw	32	;' '
   745  049A  3462               	retlw	98	;'b'
   746  049B  3465               	retlw	101	;'e'
   747  049C  3420               	retlw	32	;' '
   748  049D  3465               	retlw	101	;'e'
   749  049E  346D               	retlw	109	;'m'
   750  049F  3470               	retlw	112	;'p'
   751  04A0  3474               	retlw	116	;'t'
   752  04A1  3479               	retlw	121	;'y'
   753  04A2  3400               	retlw	0
   754                           
   755                           ; #config settings
   756  0000                     
   757                           	psect	cinit
   758  0015                     start_initialization:	
   759  0015                     __initialization:	
   760                           
   761                           ; Clear objects allocated to BANK0
   762  0015  1283               	bcf	3,5	;RP0=0, select bank0
   763  0016  1303               	bcf	3,6	;RP1=0, select bank0
   764  0017  01C2               	clrf	__pbssBANK0& (0+127)
   765  0018  01C3               	clrf	(__pbssBANK0+1)& (0+127)
   766  0019  01C4               	clrf	(__pbssBANK0+2)& (0+127)
   767  001A  01C5               	clrf	(__pbssBANK0+3)& (0+127)
   768  001B  01C6               	clrf	(__pbssBANK0+4)& (0+127)
   769  001C  01C7               	clrf	(__pbssBANK0+5)& (0+127)
   770  001D  01C8               	clrf	(__pbssBANK0+6)& (0+127)
   771  001E  01C9               	clrf	(__pbssBANK0+7)& (0+127)
   772  001F  01CA               	clrf	(__pbssBANK0+8)& (0+127)
   773  0020  01CB               	clrf	(__pbssBANK0+9)& (0+127)
   774  0021                     end_of_initialization:	
   775                           ;End of C runtime variable initialization code
   776                           
   777  0021                     __end_of__initialization:	
   778  0021  0183               	clrf	3
   779  0022  120A  118A  299F   	ljmp	_main	;jump to C main() function
   780                           
   781                           	psect	bssBANK0
   782  0042                     __pbssBANK0:	
   783  0042                     lcd_bcd@F1134:	
   784  0042                     	ds	10
   785                           
   786                           	psect	cstackCOMMON
   787  0070                     __pcstackCOMMON:	
   788  0070                     ?_InitApp:	
   789  0070                     ?_lcd_initialize:	
   790                           ; 1 bytes @ 0x0
   791                           
   792  0070                     ?_adc_initialize:	
   793                           ; 1 bytes @ 0x0
   794                           
   795  0070                     ?_uart_send:	
   796                           ; 1 bytes @ 0x0
   797                           
   798  0070                     ?_set_lcd_e:	
   799                           ; 1 bytes @ 0x0
   800                           
   801  0070                     ?_lcd_clear:	
   802                           ; 1 bytes @ 0x0
   803                           
   804  0070                     ?_set_lcd_rs:	
   805                           ; 1 bytes @ 0x0
   806                           
   807  0070                     ?_set_lcd_data:	
   808                           ; 1 bytes @ 0x0
   809                           
   810  0070                     ?_I2C_Master_Start:	
   811                           ; 1 bytes @ 0x0
   812                           
   813  0070                     ?_I2C_Master_Stop:	
   814                           ; 1 bytes @ 0x0
   815                           
   816  0070                     ?_isr:	
   817                           ; 1 bytes @ 0x0
   818                           
   819  0070                     ??_isr:	
   820                           ; 1 bytes @ 0x0
   821                           
   822  0070                     ?_romputstr:	
   823                           ; 1 bytes @ 0x0
   824                           
   825  0070                     ?_main:	
   826                           ; 1 bytes @ 0x0
   827                           
   828  0070                     ?_I2C_Master_Wait:	
   829                           ; 1 bytes @ 0x0
   830                           
   831                           
   832                           ; 1 bytes @ 0x0
   833  0070                     	ds	4
   834  0074                     ??_InitApp:	
   835  0074                     ??_adc_initialize:	
   836                           ; 1 bytes @ 0x4
   837                           
   838  0074                     ??_uart_send:	
   839                           ; 1 bytes @ 0x4
   840                           
   841  0074                     ??_set_lcd_e:	
   842                           ; 1 bytes @ 0x4
   843                           
   844  0074                     ??_set_lcd_rs:	
   845                           ; 1 bytes @ 0x4
   846                           
   847  0074                     ??_set_lcd_data:	
   848                           ; 1 bytes @ 0x4
   849                           
   850  0074                     ??_I2C_Master_Start:	
   851                           ; 1 bytes @ 0x4
   852                           
   853  0074                     ?_I2C_Master_Write:	
   854                           ; 1 bytes @ 0x4
   855                           
   856  0074                     ??_I2C_Master_Stop:	
   857                           ; 1 bytes @ 0x4
   858                           
   859  0074                     ??_I2C_Master_Wait:	
   860                           ; 1 bytes @ 0x4
   861                           
   862  0074                     ??___aldiv:	
   863                           ; 1 bytes @ 0x4
   864                           
   865  0074                     ??___lldiv:	
   866                           ; 1 bytes @ 0x4
   867                           
   868  0074                     ?_I2C_Master_Read:	
   869                           ; 1 bytes @ 0x4
   870                           
   871  0074                     set_lcd_e@b_output:	
   872                           ; 2 bytes @ 0x4
   873                           
   874  0074                     set_lcd_rs@b_output:	
   875                           ; 1 bytes @ 0x4
   876                           
   877  0074                     set_lcd_data@uc_data:	
   878                           ; 1 bytes @ 0x4
   879                           
   880  0074                     uart_send@uc_data:	
   881                           ; 1 bytes @ 0x4
   882                           
   883  0074                     I2C_Master_Write@d:	
   884                           ; 1 bytes @ 0x4
   885                           
   886  0074                     I2C_Master_Read@a:	
   887                           ; 2 bytes @ 0x4
   888                           
   889                           
   890                           ; 2 bytes @ 0x4
   891  0074                     	ds	1
   892  0075                     ?_send_lcd_data:	
   893  0075                     send_lcd_data@uc_data:	
   894                           ; 1 bytes @ 0x5
   895                           
   896  0075                     uart_init@x:	
   897                           ; 1 bytes @ 0x5
   898                           
   899  0075                     ___lldiv@quotient:	
   900                           ; 2 bytes @ 0x5
   901                           
   902                           
   903                           ; 4 bytes @ 0x5
   904  0075                     	ds	1
   905  0076                     ?_romWrite:	
   906  0076                     ??_send_lcd_data:	
   907                           ; 1 bytes @ 0x6
   908                           
   909  0076                     ??_I2C_Master_Write:	
   910                           ; 1 bytes @ 0x6
   911                           
   912  0076                     ??_I2C_Master_Read:	
   913                           ; 1 bytes @ 0x6
   914                           
   915  0076                     romWrite@addr:	
   916                           ; 1 bytes @ 0x6
   917                           
   918                           
   919                           ; 2 bytes @ 0x6
   920  0076                     	ds	2
   921  0078                     send_lcd_data@b_rs:	
   922  0078                     romWrite@data:	
   923                           ; 1 bytes @ 0x8
   924                           
   925  0078                     I2C_Master_Read@temp:	
   926                           ; 1 bytes @ 0x8
   927                           
   928                           
   929                           ; 2 bytes @ 0x8
   930  0078                     	ds	1
   931  0079                     ??_lcd_clear:	
   932  0079                     ??_romputstr:	
   933                           ; 1 bytes @ 0x9
   934                           
   935  0079                     ___lldiv@counter:	
   936                           ; 1 bytes @ 0x9
   937                           
   938                           
   939                           ; 1 bytes @ 0x9
   940  0079                     	ds	1
   941                           
   942                           	psect	cstackBANK0
   943  0020                     __pcstackBANK0:	
   944  0020                     ??_romWrite:	
   945  0020                     ??_lcd_initialize:	
   946                           ; 1 bytes @ 0x0
   947                           
   948  0020                     ?_romRead:	
   949                           ; 1 bytes @ 0x0
   950                           
   951  0020                     ?___aldiv:	
   952                           ; 2 bytes @ 0x0
   953                           
   954  0020                     ?___lldiv:	
   955                           ; 4 bytes @ 0x0
   956                           
   957  0020                     romRead@addr:	
   958                           ; 4 bytes @ 0x0
   959                           
   960  0020                     ___aldiv@divisor:	
   961                           ; 2 bytes @ 0x0
   962                           
   963  0020                     ___lldiv@divisor:	
   964                           ; 4 bytes @ 0x0
   965                           
   966                           
   967                           ; 4 bytes @ 0x0
   968  0020                     	ds	2
   969  0022                     ??_romRead:	
   970  0022                     romWrite@opcode:	
   971                           ; 1 bytes @ 0x2
   972                           
   973                           
   974                           ; 1 bytes @ 0x2
   975  0022                     	ds	1
   976  0023                     romWrite@addrLSB:	
   977                           
   978                           ; 1 bytes @ 0x3
   979  0023                     	ds	1
   980  0024                     romputstr@send:	
   981  0024                     romRead@temp:	
   982                           ; 1 bytes @ 0x4
   983                           
   984  0024                     ___aldiv@dividend:	
   985                           ; 1 bytes @ 0x4
   986                           
   987  0024                     ___lldiv@dividend:	
   988                           ; 4 bytes @ 0x4
   989                           
   990                           
   991                           ; 4 bytes @ 0x4
   992  0024                     	ds	1
   993  0025                     romRead@opcode:	
   994  0025                     romputstr@i:	
   995                           ; 1 bytes @ 0x5
   996                           
   997                           
   998                           ; 2 bytes @ 0x5
   999  0025                     	ds	1
  1000  0026                     romRead@opcodeRead:	
  1001                           
  1002                           ; 1 bytes @ 0x6
  1003  0026                     	ds	1
  1004  0027                     romRead@addrLSB:	
  1005                           
  1006                           ; 1 bytes @ 0x7
  1007  0027                     	ds	1
  1008  0028                     ?_I2C_Master_Init:	
  1009  0028                     ___aldiv@counter:	
  1010                           ; 1 bytes @ 0x8
  1011                           
  1012  0028                     I2C_Master_Init@c:	
  1013                           ; 1 bytes @ 0x8
  1014                           
  1015                           
  1016                           ; 4 bytes @ 0x8
  1017  0028                     	ds	1
  1018  0029                     ___aldiv@sign:	
  1019                           
  1020                           ; 1 bytes @ 0x9
  1021  0029                     	ds	1
  1022  002A                     ___aldiv@quotient:	
  1023                           
  1024                           ; 4 bytes @ 0xA
  1025  002A                     	ds	2
  1026  002C                     ??_I2C_Master_Init:	
  1027                           
  1028                           ; 1 bytes @ 0xC
  1029  002C                     	ds	2
  1030  002E                     ?_uart_init:	
  1031  002E                     uart_init@baudrate:	
  1032                           ; 1 bytes @ 0xE
  1033                           
  1034                           
  1035                           ; 4 bytes @ 0xE
  1036  002E                     	ds	4
  1037  0032                     ??_uart_init:	
  1038                           
  1039                           ; 1 bytes @ 0x12
  1040  0032                     	ds	12
  1041  003E                     ??_main:	
  1042                           
  1043                           ; 1 bytes @ 0x1E
  1044  003E                     	ds	1
  1045  003F                     main@data:	
  1046                           
  1047                           ; 1 bytes @ 0x1F
  1048  003F                     	ds	1
  1049  0040                     main@i:	
  1050                           
  1051                           ; 2 bytes @ 0x20
  1052  0040                     	ds	2
  1053                           
  1054                           	psect	maintext
  1055  019F                     __pmaintext:	
  1056 ;;
  1057 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
  1058 ;;
  1059 ;; *************** function _main *****************
  1060 ;; Defined at:
  1061 ;;		line 44 in file "main.c"
  1062 ;; Parameters:    Size  Location     Type
  1063 ;;		None
  1064 ;; Auto vars:     Size  Location     Type
  1065 ;;  i               2   32[BANK0 ] int 
  1066 ;;  data            1   31[BANK0 ] unsigned char 
  1067 ;; Return value:  Size  Location     Type
  1068 ;;                  1    wreg      void 
  1069 ;; Registers used:
  1070 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1071 ;; Tracked objects:
  1072 ;;		On entry : B00/0
  1073 ;;		On exit  : 0/0
  1074 ;;		Unchanged: 0/0
  1075 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1076 ;;      Params:         0       0       0       0       0
  1077 ;;      Locals:         0       3       0       0       0
  1078 ;;      Temps:          0       1       0       0       0
  1079 ;;      Totals:         0       4       0       0       0
  1080 ;;Total ram usage:        4 bytes
  1081 ;; Hardware stack levels required when called:    5
  1082 ;; This function calls:
  1083 ;;		_I2C_Master_Init
  1084 ;;		_InitApp
  1085 ;;		_adc_initialize
  1086 ;;		_lcd_initialize
  1087 ;;		_romRead
  1088 ;;		_romputstr
  1089 ;;		_uart_init
  1090 ;;		_uart_send
  1091 ;; This function is called by:
  1092 ;;		Startup code after reset
  1093 ;; This function uses a non-reentrant model
  1094 ;;
  1095                           
  1096                           
  1097                           ;psect for function _main
  1098  019F                     _main:	
  1099                           
  1100                           ;main.c: 47: InitApp();
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1104  019F  120A  118A  2507  120A  118A  	fcall	_InitApp
  1105                           
  1106                           ;main.c: 49: PORTA = 0;
  1107  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1108  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1109  01A6  0185               	clrf	5	;volatile
  1110                           
  1111                           ;main.c: 50: PORTB = 0;
  1112  01A7  0186               	clrf	6	;volatile
  1113                           
  1114                           ;main.c: 51: PORTC = 0;
  1115  01A8  0187               	clrf	7	;volatile
  1116                           
  1117                           ;main.c: 52: PORTD = 0;
  1118  01A9  0188               	clrf	8	;volatile
  1119                           
  1120                           ;main.c: 54: TRISA = 0b11111111;
  1121  01AA  30FF               	movlw	255
  1122  01AB  1683               	bsf	3,5	;RP0=1, select bank1
  1123  01AC  1303               	bcf	3,6	;RP1=0, select bank1
  1124  01AD  0085               	movwf	5	;volatile
  1125                           
  1126                           ;main.c: 55: TRISB = 0b00000011;
  1127  01AE  3003               	movlw	3
  1128  01AF  0086               	movwf	6	;volatile
  1129                           
  1130                           ;main.c: 56: TRISC = 0b00000000;
  1131  01B0  0187               	clrf	7	;volatile
  1132                           
  1133                           ;main.c: 57: TRISD = 0b00000000;
  1134  01B1  0188               	clrf	8	;volatile
  1135                           
  1136                           ;main.c: 59: lcd_initialize();
  1137  01B2  120A  118A  23BC  120A  118A  	fcall	_lcd_initialize
  1138                           
  1139                           ;main.c: 60: adc_initialize();
  1140  01B7  120A  118A  24A3  120A  118A  	fcall	_adc_initialize
  1141                           
  1142                           ;main.c: 61: I2C_Master_Init(100000);
  1143  01BC  3000               	movlw	0
  1144  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1145  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1146  01BF  00AB               	movwf	I2C_Master_Init@c+3
  1147  01C0  3001               	movlw	1
  1148  01C1  00AA               	movwf	I2C_Master_Init@c+2
  1149  01C2  3086               	movlw	134
  1150  01C3  00A9               	movwf	I2C_Master_Init@c+1
  1151  01C4  30A0               	movlw	160
  1152  01C5  00A8               	movwf	I2C_Master_Init@c
  1153  01C6  120A  118A  23F4  120A  118A  	fcall	_I2C_Master_Init
  1154                           
  1155                           ;main.c: 62: uart_init(9600);
  1156  01CB  3000               	movlw	0
  1157  01CC  1283               	bcf	3,5	;RP0=0, select bank0
  1158  01CD  1303               	bcf	3,6	;RP1=0, select bank0
  1159  01CE  00B1               	movwf	uart_init@baudrate+3
  1160  01CF  3000               	movlw	0
  1161  01D0  00B0               	movwf	uart_init@baudrate+2
  1162  01D1  3025               	movlw	37
  1163  01D2  00AF               	movwf	uart_init@baudrate+1
  1164  01D3  3080               	movlw	128
  1165  01D4  00AE               	movwf	uart_init@baudrate
  1166  01D5  120A  118A  2025  120A  118A  	fcall	_uart_init
  1167                           
  1168                           ;main.c: 64: char data;
  1169                           ;main.c: 66: romputstr("Should be empty");
  1170  01DA  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1171  01DB  120A  118A  2360  120A  118A  	fcall	_romputstr
  1172                           
  1173                           ;main.c: 69: for(int i = 0; i<512; i++)
  1174  01E0  1283               	bcf	3,5	;RP0=0, select bank0
  1175  01E1  1303               	bcf	3,6	;RP1=0, select bank0
  1176  01E2  01C0               	clrf	main@i
  1177  01E3  01C1               	clrf	main@i+1
  1178  01E4  0841               	movf	main@i+1,w
  1179  01E5  3A80               	xorlw	128
  1180  01E6  00FF               	movwf	127
  1181  01E7  3082               	movlw	130
  1182  01E8  027F               	subwf	127,w
  1183  01E9  1D03               	skipz
  1184  01EA  29ED               	goto	u1055
  1185  01EB  3000               	movlw	0
  1186  01EC  0240               	subwf	main@i,w
  1187  01ED                     u1055:	
  1188  01ED  1803               	btfsc	3,0
  1189  01EE  2A20               	goto	l55
  1190  01EF                     l1423:	
  1191                           
  1192                           ;main.c: 70: {
  1193                           ;main.c: 71: data = romRead(i);
  1194  01EF  1283               	bcf	3,5	;RP0=0, select bank0
  1195  01F0  1303               	bcf	3,6	;RP1=0, select bank0
  1196  01F1  0841               	movf	main@i+1,w
  1197  01F2  00A1               	movwf	romRead@addr+1
  1198  01F3  0840               	movf	main@i,w
  1199  01F4  00A0               	movwf	romRead@addr
  1200  01F5  120A  118A  2221  120A  118A  	fcall	_romRead
  1201  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1202  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1203  01FC  0820               	movf	?_romRead,w
  1204  01FD  00BE               	movwf	??_main
  1205  01FE  083E               	movf	??_main,w
  1206  01FF  00BF               	movwf	main@data
  1207                           
  1208                           ;main.c: 72: if(data == '\0')
  1209  0200  083F               	movf	main@data,w
  1210  0201  1D03               	btfss	3,2
  1211  0202  2A07               	goto	l1429
  1212                           
  1213                           ;main.c: 73: {
  1214                           ;main.c: 74: i=512;
  1215  0203  3000               	movlw	0
  1216  0204  00C0               	movwf	main@i
  1217  0205  3002               	movlw	2
  1218  0206  00C1               	movwf	main@i+1
  1219  0207                     l1429:	
  1220                           
  1221                           ;main.c: 75: }
  1222                           ;main.c: 76: uart_send(data);
  1223  0207  083F               	movf	main@data,w
  1224  0208  120A  118A  24DC  120A  118A  	fcall	_uart_send
  1225  020D  3001               	movlw	1
  1226  020E  1283               	bcf	3,5	;RP0=0, select bank0
  1227  020F  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0210  07C0               	addwf	main@i,f
  1229  0211  1803               	skipnc
  1230  0212  0AC1               	incf	main@i+1,f
  1231  0213  3000               	movlw	0
  1232  0214  07C1               	addwf	main@i+1,f
  1233  0215  0841               	movf	main@i+1,w
  1234  0216  3A80               	xorlw	128
  1235  0217  00FF               	movwf	127
  1236  0218  3082               	movlw	130
  1237  0219  027F               	subwf	127,w
  1238  021A  1D03               	skipz
  1239  021B  2A1E               	goto	u1075
  1240  021C  3000               	movlw	0
  1241  021D  0240               	subwf	main@i,w
  1242  021E                     u1075:	
  1243  021E  1C03               	skipc
  1244  021F  29EF               	goto	l1423
  1245  0220                     l55:	
  1246                           ;main.c: 79: {
  1247                           
  1248                           ;main.c: 77: }
  1249                           ;main.c: 78: while(1)
  1250                           
  1251  0220  2A20               	goto	l55
  1252  0221                     __end_of_main:	
  1253                           
  1254                           	psect	text1
  1255  04DC                     __ptext1:	
  1256 ;; *************** function _uart_send *****************
  1257 ;; Defined at:
  1258 ;;		line 69 in file "uart.c"
  1259 ;; Parameters:    Size  Location     Type
  1260 ;;  uc_data         1    wreg     unsigned char 
  1261 ;; Auto vars:     Size  Location     Type
  1262 ;;  uc_data         1    4[COMMON] unsigned char 
  1263 ;; Return value:  Size  Location     Type
  1264 ;;                  1    wreg      void 
  1265 ;; Registers used:
  1266 ;;		wreg
  1267 ;; Tracked objects:
  1268 ;;		On entry : 0/0
  1269 ;;		On exit  : 0/0
  1270 ;;		Unchanged: 0/0
  1271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1272 ;;      Params:         0       0       0       0       0
  1273 ;;      Locals:         1       0       0       0       0
  1274 ;;      Temps:          0       0       0       0       0
  1275 ;;      Totals:         1       0       0       0       0
  1276 ;;Total ram usage:        1 bytes
  1277 ;; Hardware stack levels used:    1
  1278 ;; Hardware stack levels required when called:    1
  1279 ;; This function calls:
  1280 ;;		Nothing
  1281 ;; This function is called by:
  1282 ;;		_main
  1283 ;;		_uart_putstr
  1284 ;; This function uses a non-reentrant model
  1285 ;;
  1286                           
  1287                           
  1288                           ;psect for function _uart_send
  1289  04DC                     _uart_send:	
  1290                           
  1291                           ;incstack = 0
  1292                           ; Regs used in _uart_send: [wreg]
  1293                           ;uart_send@uc_data stored from wreg
  1294  04DC  00F4               	movwf	uart_send@uc_data
  1295  04DD                     l279:	
  1296                           ;uart.c: 72: while (!TXIF);
  1297                           
  1298  04DD  1283               	bcf	3,5	;RP0=0, select bank0
  1299  04DE  1303               	bcf	3,6	;RP1=0, select bank0
  1300  04DF  1E0C               	btfss	12,4	;volatile
  1301  04E0  2CDD               	goto	l279
  1302                           
  1303                           ;uart.c: 75: TXREG = uc_data;
  1304  04E1  0874               	movf	uart_send@uc_data,w
  1305  04E2  0099               	movwf	25	;volatile
  1306  04E3  0008               	return
  1307  04E4                     __end_of_uart_send:	
  1308                           
  1309                           	psect	text2
  1310  0025                     __ptext2:	
  1311 ;; *************** function _uart_init *****************
  1312 ;; Defined at:
  1313 ;;		line 28 in file "uart.c"
  1314 ;; Parameters:    Size  Location     Type
  1315 ;;  baudrate        4   14[BANK0 ] const long 
  1316 ;; Auto vars:     Size  Location     Type
  1317 ;;  x               2    5[COMMON] unsigned int 
  1318 ;; Return value:  Size  Location     Type
  1319 ;;                  1    wreg      unsigned char 
  1320 ;; Registers used:
  1321 ;;		wreg, status,2, status,0, pclath, cstack
  1322 ;; Tracked objects:
  1323 ;;		On entry : 0/0
  1324 ;;		On exit  : 0/0
  1325 ;;		Unchanged: 0/0
  1326 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1327 ;;      Params:         0       4       0       0       0
  1328 ;;      Locals:         2       0       0       0       0
  1329 ;;      Temps:          0      12       0       0       0
  1330 ;;      Totals:         2      16       0       0       0
  1331 ;;Total ram usage:       18 bytes
  1332 ;; Hardware stack levels used:    1
  1333 ;; Hardware stack levels required when called:    2
  1334 ;; This function calls:
  1335 ;;		___aldiv
  1336 ;; This function is called by:
  1337 ;;		_main
  1338 ;; This function uses a non-reentrant model
  1339 ;;
  1340                           
  1341                           
  1342                           ;psect for function _uart_init
  1343  0025                     _uart_init:	
  1344                           
  1345                           ;uart.c: 30: unsigned int x;
  1346                           ;uart.c: 31: x = (20000000 - baudrate*64)/(baudrate*64);
  1347                           
  1348                           ;incstack = 0
  1349                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  1350  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1351  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1352  0027  082E               	movf	uart_init@baudrate,w
  1353  0028  00B2               	movwf	??_uart_init
  1354  0029  082F               	movf	uart_init@baudrate+1,w
  1355  002A  00B3               	movwf	??_uart_init+1
  1356  002B  0830               	movf	uart_init@baudrate+2,w
  1357  002C  00B4               	movwf	??_uart_init+2
  1358  002D  0831               	movf	uart_init@baudrate+3,w
  1359  002E  00B5               	movwf	??_uart_init+3
  1360  002F  3006               	movlw	6
  1361  0030                     u935:	
  1362  0030  1003               	clrc
  1363  0031  0DB2               	rlf	??_uart_init,f
  1364  0032  0DB3               	rlf	??_uart_init+1,f
  1365  0033  0DB4               	rlf	??_uart_init+2,f
  1366  0034  0DB5               	rlf	??_uart_init+3,f
  1367  0035  3EFF               	addlw	-1
  1368  0036  1D03               	skipz
  1369  0037  2830               	goto	u935
  1370  0038  0835               	movf	??_uart_init+3,w
  1371  0039  00A3               	movwf	___aldiv@divisor+3
  1372  003A  0834               	movf	??_uart_init+2,w
  1373  003B  00A2               	movwf	___aldiv@divisor+2
  1374  003C  0833               	movf	??_uart_init+1,w
  1375  003D  00A1               	movwf	___aldiv@divisor+1
  1376  003E  0832               	movf	??_uart_init,w
  1377  003F  00A0               	movwf	___aldiv@divisor
  1378  0040  3000               	movlw	0
  1379  0041  00B6               	movwf	??_uart_init+4
  1380  0042  302D               	movlw	45
  1381  0043  00B7               	movwf	??_uart_init+5
  1382  0044  3031               	movlw	49
  1383  0045  00B8               	movwf	??_uart_init+6
  1384  0046  3001               	movlw	1
  1385  0047  00B9               	movwf	??_uart_init+7
  1386  0048  082E               	movf	uart_init@baudrate,w
  1387  0049  00BA               	movwf	??_uart_init+8
  1388  004A  082F               	movf	uart_init@baudrate+1,w
  1389  004B  00BB               	movwf	??_uart_init+9
  1390  004C  0830               	movf	uart_init@baudrate+2,w
  1391  004D  00BC               	movwf	??_uart_init+10
  1392  004E  0831               	movf	uart_init@baudrate+3,w
  1393  004F  00BD               	movwf	??_uart_init+11
  1394  0050  3006               	movlw	6
  1395  0051                     u945:	
  1396  0051  1003               	clrc
  1397  0052  0DBA               	rlf	??_uart_init+8,f
  1398  0053  0DBB               	rlf	??_uart_init+9,f
  1399  0054  0DBC               	rlf	??_uart_init+10,f
  1400  0055  0DBD               	rlf	??_uart_init+11,f
  1401  0056  3EFF               	addlw	-1
  1402  0057  1D03               	skipz
  1403  0058  2851               	goto	u945
  1404  0059  09BA               	comf	??_uart_init+8,f
  1405  005A  09BB               	comf	??_uart_init+9,f
  1406  005B  09BC               	comf	??_uart_init+10,f
  1407  005C  09BD               	comf	??_uart_init+11,f
  1408  005D  0ABA               	incf	??_uart_init+8,f
  1409  005E  1903               	skipnz
  1410  005F  0ABB               	incf	??_uart_init+9,f
  1411  0060  1903               	skipnz
  1412  0061  0ABC               	incf	??_uart_init+10,f
  1413  0062  1903               	skipnz
  1414  0063  0ABD               	incf	??_uart_init+11,f
  1415  0064  083A               	movf	??_uart_init+8,w
  1416  0065  07B6               	addwf	??_uart_init+4,f
  1417  0066  083B               	movf	??_uart_init+9,w
  1418  0067  1803               	skipnc
  1419  0068  0F3B               	incfsz	??_uart_init+9,w
  1420  0069  286B               	goto	u950
  1421  006A  286C               	goto	u951
  1422  006B                     u950:	
  1423  006B  07B7               	addwf	??_uart_init+5,f
  1424  006C                     u951:	
  1425  006C  083C               	movf	??_uart_init+10,w
  1426  006D  1803               	skipnc
  1427  006E  0F3C               	incfsz	??_uart_init+10,w
  1428  006F  2871               	goto	u952
  1429  0070  2872               	goto	u953
  1430  0071                     u952:	
  1431  0071  07B8               	addwf	??_uart_init+6,f
  1432  0072                     u953:	
  1433  0072  083D               	movf	??_uart_init+11,w
  1434  0073  1803               	skipnc
  1435  0074  0A3D               	incf	??_uart_init+11,w
  1436  0075  07B9               	addwf	??_uart_init+7,f
  1437  0076  0839               	movf	??_uart_init+7,w
  1438  0077  00A7               	movwf	___aldiv@dividend+3
  1439  0078  0838               	movf	??_uart_init+6,w
  1440  0079  00A6               	movwf	___aldiv@dividend+2
  1441  007A  0837               	movf	??_uart_init+5,w
  1442  007B  00A5               	movwf	___aldiv@dividend+1
  1443  007C  0836               	movf	??_uart_init+4,w
  1444  007D  00A4               	movwf	___aldiv@dividend
  1445  007E  120A  118A  2110  120A  118A  	fcall	___aldiv
  1446  0083  1283               	bcf	3,5	;RP0=0, select bank0
  1447  0084  1303               	bcf	3,6	;RP1=0, select bank0
  1448  0085  0821               	movf	?___aldiv+1,w
  1449  0086  00F6               	movwf	uart_init@x+1
  1450  0087  0820               	movf	?___aldiv,w
  1451  0088  00F5               	movwf	uart_init@x
  1452                           
  1453                           ;uart.c: 32: if(x>255)
  1454  0089  3001               	movlw	1
  1455  008A  0276               	subwf	uart_init@x+1,w
  1456  008B  3000               	movlw	0
  1457  008C  1903               	skipnz
  1458  008D  0275               	subwf	uart_init@x,w
  1459  008E  1C03               	skipc
  1460  008F  28F5               	goto	l1335
  1461                           
  1462                           ;uart.c: 33: {
  1463                           ;uart.c: 34: x = (20000000 - baudrate*16)/(baudrate*16);
  1464  0090  082E               	movf	uart_init@baudrate,w
  1465  0091  00B2               	movwf	??_uart_init
  1466  0092  082F               	movf	uart_init@baudrate+1,w
  1467  0093  00B3               	movwf	??_uart_init+1
  1468  0094  0830               	movf	uart_init@baudrate+2,w
  1469  0095  00B4               	movwf	??_uart_init+2
  1470  0096  0831               	movf	uart_init@baudrate+3,w
  1471  0097  00B5               	movwf	??_uart_init+3
  1472  0098  3004               	movlw	4
  1473  0099                     u975:	
  1474  0099  1003               	clrc
  1475  009A  0DB2               	rlf	??_uart_init,f
  1476  009B  0DB3               	rlf	??_uart_init+1,f
  1477  009C  0DB4               	rlf	??_uart_init+2,f
  1478  009D  0DB5               	rlf	??_uart_init+3,f
  1479  009E  3EFF               	addlw	-1
  1480  009F  1D03               	skipz
  1481  00A0  2899               	goto	u975
  1482  00A1  0835               	movf	??_uart_init+3,w
  1483  00A2  00A3               	movwf	___aldiv@divisor+3
  1484  00A3  0834               	movf	??_uart_init+2,w
  1485  00A4  00A2               	movwf	___aldiv@divisor+2
  1486  00A5  0833               	movf	??_uart_init+1,w
  1487  00A6  00A1               	movwf	___aldiv@divisor+1
  1488  00A7  0832               	movf	??_uart_init,w
  1489  00A8  00A0               	movwf	___aldiv@divisor
  1490  00A9  3000               	movlw	0
  1491  00AA  00B6               	movwf	??_uart_init+4
  1492  00AB  302D               	movlw	45
  1493  00AC  00B7               	movwf	??_uart_init+5
  1494  00AD  3031               	movlw	49
  1495  00AE  00B8               	movwf	??_uart_init+6
  1496  00AF  3001               	movlw	1
  1497  00B0  00B9               	movwf	??_uart_init+7
  1498  00B1  082E               	movf	uart_init@baudrate,w
  1499  00B2  00BA               	movwf	??_uart_init+8
  1500  00B3  082F               	movf	uart_init@baudrate+1,w
  1501  00B4  00BB               	movwf	??_uart_init+9
  1502  00B5  0830               	movf	uart_init@baudrate+2,w
  1503  00B6  00BC               	movwf	??_uart_init+10
  1504  00B7  0831               	movf	uart_init@baudrate+3,w
  1505  00B8  00BD               	movwf	??_uart_init+11
  1506  00B9  3004               	movlw	4
  1507  00BA                     u985:	
  1508  00BA  1003               	clrc
  1509  00BB  0DBA               	rlf	??_uart_init+8,f
  1510  00BC  0DBB               	rlf	??_uart_init+9,f
  1511  00BD  0DBC               	rlf	??_uart_init+10,f
  1512  00BE  0DBD               	rlf	??_uart_init+11,f
  1513  00BF  3EFF               	addlw	-1
  1514  00C0  1D03               	skipz
  1515  00C1  28BA               	goto	u985
  1516  00C2  09BA               	comf	??_uart_init+8,f
  1517  00C3  09BB               	comf	??_uart_init+9,f
  1518  00C4  09BC               	comf	??_uart_init+10,f
  1519  00C5  09BD               	comf	??_uart_init+11,f
  1520  00C6  0ABA               	incf	??_uart_init+8,f
  1521  00C7  1903               	skipnz
  1522  00C8  0ABB               	incf	??_uart_init+9,f
  1523  00C9  1903               	skipnz
  1524  00CA  0ABC               	incf	??_uart_init+10,f
  1525  00CB  1903               	skipnz
  1526  00CC  0ABD               	incf	??_uart_init+11,f
  1527  00CD  083A               	movf	??_uart_init+8,w
  1528  00CE  07B6               	addwf	??_uart_init+4,f
  1529  00CF  083B               	movf	??_uart_init+9,w
  1530  00D0  1803               	skipnc
  1531  00D1  0F3B               	incfsz	??_uart_init+9,w
  1532  00D2  28D4               	goto	u990
  1533  00D3  28D5               	goto	u991
  1534  00D4                     u990:	
  1535  00D4  07B7               	addwf	??_uart_init+5,f
  1536  00D5                     u991:	
  1537  00D5  083C               	movf	??_uart_init+10,w
  1538  00D6  1803               	skipnc
  1539  00D7  0F3C               	incfsz	??_uart_init+10,w
  1540  00D8  28DA               	goto	u992
  1541  00D9  28DB               	goto	u993
  1542  00DA                     u992:	
  1543  00DA  07B8               	addwf	??_uart_init+6,f
  1544  00DB                     u993:	
  1545  00DB  083D               	movf	??_uart_init+11,w
  1546  00DC  1803               	skipnc
  1547  00DD  0A3D               	incf	??_uart_init+11,w
  1548  00DE  07B9               	addwf	??_uart_init+7,f
  1549  00DF  0839               	movf	??_uart_init+7,w
  1550  00E0  00A7               	movwf	___aldiv@dividend+3
  1551  00E1  0838               	movf	??_uart_init+6,w
  1552  00E2  00A6               	movwf	___aldiv@dividend+2
  1553  00E3  0837               	movf	??_uart_init+5,w
  1554  00E4  00A5               	movwf	___aldiv@dividend+1
  1555  00E5  0836               	movf	??_uart_init+4,w
  1556  00E6  00A4               	movwf	___aldiv@dividend
  1557  00E7  120A  118A  2110  120A  118A  	fcall	___aldiv
  1558  00EC  1283               	bcf	3,5	;RP0=0, select bank0
  1559  00ED  1303               	bcf	3,6	;RP1=0, select bank0
  1560  00EE  0821               	movf	?___aldiv+1,w
  1561  00EF  00F6               	movwf	uart_init@x+1
  1562  00F0  0820               	movf	?___aldiv,w
  1563  00F1  00F5               	movwf	uart_init@x
  1564                           
  1565                           ;uart.c: 35: BRGH = 1;
  1566  00F2  1683               	bsf	3,5	;RP0=1, select bank1
  1567  00F3  1303               	bcf	3,6	;RP1=0, select bank1
  1568  00F4  1518               	bsf	24,2	;volatile
  1569  00F5                     l1335:	
  1570                           
  1571                           ;uart.c: 36: }
  1572                           ;uart.c: 37: if(x<256)
  1573  00F5  3001               	movlw	1
  1574  00F6  0276               	subwf	uart_init@x+1,w
  1575  00F7  3000               	movlw	0
  1576  00F8  1903               	skipnz
  1577  00F9  0275               	subwf	uart_init@x,w
  1578  00FA  1803               	skipnc
  1579  00FB  0008               	return
  1580                           
  1581                           ;uart.c: 38: {
  1582                           ;uart.c: 39: RCIE = 1;
  1583  00FC  1683               	bsf	3,5	;RP0=1, select bank1
  1584  00FD  1303               	bcf	3,6	;RP1=0, select bank1
  1585  00FE  168C               	bsf	12,5	;volatile
  1586                           
  1587                           ;uart.c: 41: SPBRG = x;
  1588  00FF  0875               	movf	uart_init@x,w
  1589  0100  0099               	movwf	25	;volatile
  1590                           
  1591                           ;uart.c: 42: SYNC = 0;
  1592  0101  1218               	bcf	24,4	;volatile
  1593                           
  1594                           ;uart.c: 43: SPEN = 1;
  1595  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1596  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1597  0104  1798               	bsf	24,7	;volatile
  1598                           
  1599                           ;uart.c: 44: TRISC7 = 1;
  1600  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1601  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1602  0107  1787               	bsf	7,7	;volatile
  1603                           
  1604                           ;uart.c: 45: TRISC6 = 1;
  1605  0108  1707               	bsf	7,6	;volatile
  1606                           
  1607                           ;uart.c: 46: CREN = 1;
  1608  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1609  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1610  010B  1618               	bsf	24,4	;volatile
  1611                           
  1612                           ;uart.c: 47: TXEN = 1;
  1613  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1614  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1615  010E  1698               	bsf	24,5	;volatile
  1616                           
  1617                           ;uart.c: 48: return 1;
  1618                           ;	Return value of _uart_init is never used
  1619  010F  0008               	return
  1620  0110                     __end_of_uart_init:	
  1621                           ;uart.c: 49: }
  1622                           ;uart.c: 50: return 0;
  1623                           ;	Return value of _uart_init is never used
  1624                           
  1625                           
  1626                           	psect	text3
  1627  0110                     __ptext3:	
  1628 ;; *************** function ___aldiv *****************
  1629 ;; Defined at:
  1630 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1631 ;; Parameters:    Size  Location     Type
  1632 ;;  divisor         4    0[BANK0 ] long 
  1633 ;;  dividend        4    4[BANK0 ] long 
  1634 ;; Auto vars:     Size  Location     Type
  1635 ;;  quotient        4   10[BANK0 ] long 
  1636 ;;  sign            1    9[BANK0 ] unsigned char 
  1637 ;;  counter         1    8[BANK0 ] unsigned char 
  1638 ;; Return value:  Size  Location     Type
  1639 ;;                  4    0[BANK0 ] long 
  1640 ;; Registers used:
  1641 ;;		wreg, status,2, status,0
  1642 ;; Tracked objects:
  1643 ;;		On entry : 0/0
  1644 ;;		On exit  : 0/0
  1645 ;;		Unchanged: 0/0
  1646 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1647 ;;      Params:         0       8       0       0       0
  1648 ;;      Locals:         0       6       0       0       0
  1649 ;;      Temps:          1       0       0       0       0
  1650 ;;      Totals:         1      14       0       0       0
  1651 ;;Total ram usage:       15 bytes
  1652 ;; Hardware stack levels used:    1
  1653 ;; Hardware stack levels required when called:    1
  1654 ;; This function calls:
  1655 ;;		Nothing
  1656 ;; This function is called by:
  1657 ;;		_uart_init
  1658 ;; This function uses a non-reentrant model
  1659 ;;
  1660                           
  1661                           
  1662                           ;psect for function ___aldiv
  1663  0110                     ___aldiv:	
  1664                           
  1665                           ;incstack = 0
  1666                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1667  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1668  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1669  0112  01A9               	clrf	___aldiv@sign
  1670  0113  1FA3               	btfss	___aldiv@divisor+3,7
  1671  0114  2922               	goto	l434
  1672  0115  09A0               	comf	___aldiv@divisor,f
  1673  0116  09A1               	comf	___aldiv@divisor+1,f
  1674  0117  09A2               	comf	___aldiv@divisor+2,f
  1675  0118  09A3               	comf	___aldiv@divisor+3,f
  1676  0119  0AA0               	incf	___aldiv@divisor,f
  1677  011A  1903               	skipnz
  1678  011B  0AA1               	incf	___aldiv@divisor+1,f
  1679  011C  1903               	skipnz
  1680  011D  0AA2               	incf	___aldiv@divisor+2,f
  1681  011E  1903               	skipnz
  1682  011F  0AA3               	incf	___aldiv@divisor+3,f
  1683  0120  01A9               	clrf	___aldiv@sign
  1684  0121  0AA9               	incf	___aldiv@sign,f
  1685  0122                     l434:	
  1686  0122  1FA7               	btfss	___aldiv@dividend+3,7
  1687  0123  2933               	goto	l1225
  1688  0124  09A4               	comf	___aldiv@dividend,f
  1689  0125  09A5               	comf	___aldiv@dividend+1,f
  1690  0126  09A6               	comf	___aldiv@dividend+2,f
  1691  0127  09A7               	comf	___aldiv@dividend+3,f
  1692  0128  0AA4               	incf	___aldiv@dividend,f
  1693  0129  1903               	skipnz
  1694  012A  0AA5               	incf	___aldiv@dividend+1,f
  1695  012B  1903               	skipnz
  1696  012C  0AA6               	incf	___aldiv@dividend+2,f
  1697  012D  1903               	skipnz
  1698  012E  0AA7               	incf	___aldiv@dividend+3,f
  1699  012F  3001               	movlw	1
  1700  0130  00F4               	movwf	??___aldiv
  1701  0131  0874               	movf	??___aldiv,w
  1702  0132  06A9               	xorwf	___aldiv@sign,f
  1703  0133                     l1225:	
  1704  0133  3000               	movlw	0
  1705  0134  00AD               	movwf	___aldiv@quotient+3
  1706  0135  3000               	movlw	0
  1707  0136  00AC               	movwf	___aldiv@quotient+2
  1708  0137  3000               	movlw	0
  1709  0138  00AB               	movwf	___aldiv@quotient+1
  1710  0139  3000               	movlw	0
  1711  013A  00AA               	movwf	___aldiv@quotient
  1712  013B  0823               	movf	___aldiv@divisor+3,w
  1713  013C  0422               	iorwf	___aldiv@divisor+2,w
  1714  013D  0421               	iorwf	___aldiv@divisor+1,w
  1715  013E  0420               	iorwf	___aldiv@divisor,w
  1716  013F  1903               	skipnz
  1717  0140  2988               	goto	l1247
  1718  0141  01A8               	clrf	___aldiv@counter
  1719  0142  0AA8               	incf	___aldiv@counter,f
  1720  0143                     l1233:	
  1721  0143  1BA3               	btfsc	___aldiv@divisor+3,7
  1722  0144  2953               	goto	l1235
  1723  0145  3001               	movlw	1
  1724  0146  00F4               	movwf	??___aldiv
  1725  0147                     u745:	
  1726  0147  1003               	clrc
  1727  0148  0DA0               	rlf	___aldiv@divisor,f
  1728  0149  0DA1               	rlf	___aldiv@divisor+1,f
  1729  014A  0DA2               	rlf	___aldiv@divisor+2,f
  1730  014B  0DA3               	rlf	___aldiv@divisor+3,f
  1731  014C  0BF4               	decfsz	??___aldiv,f
  1732  014D  2947               	goto	u745
  1733  014E  3001               	movlw	1
  1734  014F  00F4               	movwf	??___aldiv
  1735  0150  0874               	movf	??___aldiv,w
  1736  0151  07A8               	addwf	___aldiv@counter,f
  1737  0152  2943               	goto	l1233
  1738  0153                     l1235:	
  1739  0153  3001               	movlw	1
  1740  0154  00F4               	movwf	??___aldiv
  1741  0155                     u765:	
  1742  0155  1003               	clrc
  1743  0156  0DAA               	rlf	___aldiv@quotient,f
  1744  0157  0DAB               	rlf	___aldiv@quotient+1,f
  1745  0158  0DAC               	rlf	___aldiv@quotient+2,f
  1746  0159  0DAD               	rlf	___aldiv@quotient+3,f
  1747  015A  0BF4               	decfsz	??___aldiv,f
  1748  015B  2955               	goto	u765
  1749  015C  0823               	movf	___aldiv@divisor+3,w
  1750  015D  0227               	subwf	___aldiv@dividend+3,w
  1751  015E  1D03               	skipz
  1752  015F  296A               	goto	u775
  1753  0160  0822               	movf	___aldiv@divisor+2,w
  1754  0161  0226               	subwf	___aldiv@dividend+2,w
  1755  0162  1D03               	skipz
  1756  0163  296A               	goto	u775
  1757  0164  0821               	movf	___aldiv@divisor+1,w
  1758  0165  0225               	subwf	___aldiv@dividend+1,w
  1759  0166  1D03               	skipz
  1760  0167  296A               	goto	u775
  1761  0168  0820               	movf	___aldiv@divisor,w
  1762  0169  0224               	subwf	___aldiv@dividend,w
  1763  016A                     u775:	
  1764  016A  1C03               	skipc
  1765  016B  297B               	goto	l1243
  1766  016C  0820               	movf	___aldiv@divisor,w
  1767  016D  02A4               	subwf	___aldiv@dividend,f
  1768  016E  0821               	movf	___aldiv@divisor+1,w
  1769  016F  1C03               	skipc
  1770  0170  0F21               	incfsz	___aldiv@divisor+1,w
  1771  0171  02A5               	subwf	___aldiv@dividend+1,f
  1772  0172  0822               	movf	___aldiv@divisor+2,w
  1773  0173  1C03               	skipc
  1774  0174  0F22               	incfsz	___aldiv@divisor+2,w
  1775  0175  02A6               	subwf	___aldiv@dividend+2,f
  1776  0176  0823               	movf	___aldiv@divisor+3,w
  1777  0177  1C03               	skipc
  1778  0178  0F23               	incfsz	___aldiv@divisor+3,w
  1779  0179  02A7               	subwf	___aldiv@dividend+3,f
  1780  017A  142A               	bsf	___aldiv@quotient,0
  1781  017B                     l1243:	
  1782  017B  3001               	movlw	1
  1783  017C                     u785:	
  1784  017C  1003               	clrc
  1785  017D  0CA3               	rrf	___aldiv@divisor+3,f
  1786  017E  0CA2               	rrf	___aldiv@divisor+2,f
  1787  017F  0CA1               	rrf	___aldiv@divisor+1,f
  1788  0180  0CA0               	rrf	___aldiv@divisor,f
  1789  0181  3EFF               	addlw	-1
  1790  0182  1D03               	skipz
  1791  0183  297C               	goto	u785
  1792  0184  3001               	movlw	1
  1793  0185  02A8               	subwf	___aldiv@counter,f
  1794  0186  1D03               	btfss	3,2
  1795  0187  2953               	goto	l1235
  1796  0188                     l1247:	
  1797  0188  0829               	movf	___aldiv@sign,w
  1798  0189  1903               	btfsc	3,2
  1799  018A  2996               	goto	l1251
  1800  018B  09AA               	comf	___aldiv@quotient,f
  1801  018C  09AB               	comf	___aldiv@quotient+1,f
  1802  018D  09AC               	comf	___aldiv@quotient+2,f
  1803  018E  09AD               	comf	___aldiv@quotient+3,f
  1804  018F  0AAA               	incf	___aldiv@quotient,f
  1805  0190  1903               	skipnz
  1806  0191  0AAB               	incf	___aldiv@quotient+1,f
  1807  0192  1903               	skipnz
  1808  0193  0AAC               	incf	___aldiv@quotient+2,f
  1809  0194  1903               	skipnz
  1810  0195  0AAD               	incf	___aldiv@quotient+3,f
  1811  0196                     l1251:	
  1812  0196  082D               	movf	___aldiv@quotient+3,w
  1813  0197  00A3               	movwf	?___aldiv+3
  1814  0198  082C               	movf	___aldiv@quotient+2,w
  1815  0199  00A2               	movwf	?___aldiv+2
  1816  019A  082B               	movf	___aldiv@quotient+1,w
  1817  019B  00A1               	movwf	?___aldiv+1
  1818  019C  082A               	movf	___aldiv@quotient,w
  1819  019D  00A0               	movwf	?___aldiv
  1820  019E  0008               	return
  1821  019F                     __end_of___aldiv:	
  1822                           
  1823                           	psect	text4
  1824  0360                     __ptext4:	
  1825 ;; *************** function _romputstr *****************
  1826 ;; Defined at:
  1827 ;;		line 24 in file "main.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  send            1    wreg     PTR unsigned char 
  1830 ;;		 -> STR_1(16), 
  1831 ;; Auto vars:     Size  Location     Type
  1832 ;;  send            1    4[BANK0 ] PTR unsigned char 
  1833 ;;		 -> STR_1(16), 
  1834 ;;  i               2    5[BANK0 ] int 
  1835 ;; Return value:  Size  Location     Type
  1836 ;;                  1    wreg      void 
  1837 ;; Registers used:
  1838 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  1839 ;; Tracked objects:
  1840 ;;		On entry : 0/0
  1841 ;;		On exit  : 0/0
  1842 ;;		Unchanged: 0/0
  1843 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1844 ;;      Params:         0       0       0       0       0
  1845 ;;      Locals:         0       3       0       0       0
  1846 ;;      Temps:          1       0       0       0       0
  1847 ;;      Totals:         1       3       0       0       0
  1848 ;;Total ram usage:        4 bytes
  1849 ;; Hardware stack levels used:    1
  1850 ;; Hardware stack levels required when called:    4
  1851 ;; This function calls:
  1852 ;;		_romWrite
  1853 ;; This function is called by:
  1854 ;;		_main
  1855 ;; This function uses a non-reentrant model
  1856 ;;
  1857                           
  1858                           
  1859                           ;psect for function _romputstr
  1860  0360                     _romputstr:	
  1861                           
  1862                           ;incstack = 0
  1863                           ; Regs used in _romputstr: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1864                           ;romputstr@send stored from wreg
  1865  0360  1283               	bcf	3,5	;RP0=0, select bank0
  1866  0361  1303               	bcf	3,6	;RP1=0, select bank0
  1867  0362  00A4               	movwf	romputstr@send
  1868                           
  1869                           ;main.c: 26: int i =0;
  1870  0363  01A5               	clrf	romputstr@i
  1871  0364  01A6               	clrf	romputstr@i+1
  1872  0365                     l1287:	
  1873                           ;main.c: 27: while(*send)
  1874                           
  1875  0365  0824               	movf	romputstr@send,w
  1876  0366  0084               	movwf	4
  1877  0367  120A  118A  248D  120A  118A  	fcall	stringdir
  1878  036C  3A00               	xorlw	0
  1879  036D  1903               	btfsc	3,2
  1880  036E  2B8F               	goto	l1289
  1881                           
  1882                           ;main.c: 28: {
  1883                           ;main.c: 29: romWrite(i, *send);
  1884  036F  0826               	movf	romputstr@i+1,w
  1885  0370  00F7               	movwf	romWrite@addr+1
  1886  0371  0825               	movf	romputstr@i,w
  1887  0372  00F6               	movwf	romWrite@addr
  1888  0373  0824               	movf	romputstr@send,w
  1889  0374  0084               	movwf	4
  1890  0375  120A  118A  248D  120A  118A  	fcall	stringdir
  1891  037A  00F9               	movwf	??_romputstr
  1892  037B  0879               	movf	??_romputstr,w
  1893  037C  00F8               	movwf	romWrite@data
  1894  037D  120A  118A  229F  120A  118A  	fcall	_romWrite
  1895                           
  1896                           ;main.c: 30: *send++;
  1897  0382  3001               	movlw	1
  1898  0383  00F9               	movwf	??_romputstr
  1899  0384  0879               	movf	??_romputstr,w
  1900  0385  1283               	bcf	3,5	;RP0=0, select bank0
  1901  0386  1303               	bcf	3,6	;RP1=0, select bank0
  1902  0387  07A4               	addwf	romputstr@send,f
  1903                           
  1904                           ;main.c: 31: i++;
  1905  0388  3001               	movlw	1
  1906  0389  07A5               	addwf	romputstr@i,f
  1907  038A  1803               	skipnc
  1908  038B  0AA6               	incf	romputstr@i+1,f
  1909  038C  3000               	movlw	0
  1910  038D  07A6               	addwf	romputstr@i+1,f
  1911  038E  2B65               	goto	l1287
  1912  038F                     l1289:	
  1913                           
  1914                           ;main.c: 32: }
  1915                           ;main.c: 34: if(i < 512)
  1916  038F  0826               	movf	romputstr@i+1,w
  1917  0390  3A80               	xorlw	128
  1918  0391  00FF               	movwf	127
  1919  0392  3082               	movlw	130
  1920  0393  027F               	subwf	127,w
  1921  0394  1D03               	skipz
  1922  0395  2B98               	goto	u895
  1923  0396  3000               	movlw	0
  1924  0397  0225               	subwf	romputstr@i,w
  1925  0398                     u895:	
  1926  0398  1803               	skipnc
  1927  0399  0008               	return
  1928  039A  1283               	bcf	3,5	;RP0=0, select bank0
  1929  039B  1303               	bcf	3,6	;RP1=0, select bank0
  1930  039C                     L1:	
  1931  039C  0826               	movf	romputstr@i+1,w
  1932  039D  3A80               	xorlw	128
  1933  039E  00FF               	movwf	127
  1934  039F  3082               	movlw	130
  1935  03A0  027F               	subwf	127,w
  1936  03A1  1D03               	skipz
  1937  03A2  2BA5               	goto	u905
  1938  03A3  3000               	movlw	0
  1939  03A4  0225               	subwf	romputstr@i,w
  1940  03A5                     u905:	
  1941  03A5  1803               	btfsc	3,0
  1942  03A6  0008               	return
  1943                           
  1944                           ;main.c: 37: {
  1945                           ;main.c: 38: romWrite(i, '\0');
  1946  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1947  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1948  03A9  0826               	movf	romputstr@i+1,w
  1949  03AA  00F7               	movwf	romWrite@addr+1
  1950  03AB  0825               	movf	romputstr@i,w
  1951  03AC  00F6               	movwf	romWrite@addr
  1952  03AD  01F8               	clrf	romWrite@data
  1953  03AE  120A  118A  229F  120A  118A  	fcall	_romWrite
  1954  03B3  3001               	movlw	1
  1955  03B4  1283               	bcf	3,5	;RP0=0, select bank0
  1956  03B5  1303               	bcf	3,6	;RP1=0, select bank0
  1957  03B6  07A5               	addwf	romputstr@i,f
  1958  03B7  1803               	skipnc
  1959  03B8  0AA6               	incf	romputstr@i+1,f
  1960  03B9  3000               	movlw	0
  1961  03BA  07A6               	addwf	romputstr@i+1,f
  1962  03BB  2B9C               	goto	L1
  1963  03BC                     __end_of_romputstr:	
  1964                           
  1965                           	psect	text5
  1966  029F                     __ptext5:	
  1967 ;; *************** function _romWrite *****************
  1968 ;; Defined at:
  1969 ;;		line 6 in file "M24C04.c"
  1970 ;; Parameters:    Size  Location     Type
  1971 ;;  addr            2    6[COMMON] unsigned short 
  1972 ;;  data            1    8[COMMON] unsigned char 
  1973 ;; Auto vars:     Size  Location     Type
  1974 ;;  addrLSB         1    3[BANK0 ] unsigned char 
  1975 ;;  opcode          1    2[BANK0 ] unsigned char 
  1976 ;; Return value:  Size  Location     Type
  1977 ;;                  1    wreg      void 
  1978 ;; Registers used:
  1979 ;;		wreg, status,2, status,0, pclath, cstack
  1980 ;; Tracked objects:
  1981 ;;		On entry : 0/0
  1982 ;;		On exit  : 0/0
  1983 ;;		Unchanged: 0/0
  1984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1985 ;;      Params:         3       0       0       0       0
  1986 ;;      Locals:         0       2       0       0       0
  1987 ;;      Temps:          0       2       0       0       0
  1988 ;;      Totals:         3       4       0       0       0
  1989 ;;Total ram usage:        7 bytes
  1990 ;; Hardware stack levels used:    1
  1991 ;; Hardware stack levels required when called:    3
  1992 ;; This function calls:
  1993 ;;		_I2C_Master_Start
  1994 ;;		_I2C_Master_Stop
  1995 ;;		_I2C_Master_Write
  1996 ;; This function is called by:
  1997 ;;		_romputstr
  1998 ;; This function uses a non-reentrant model
  1999 ;;
  2000                           
  2001                           
  2002                           ;psect for function _romWrite
  2003  029F                     _romWrite:	
  2004                           
  2005                           ;M24C04.c: 8: unsigned char addrLSB = 0;
  2006                           
  2007                           ;incstack = 0
  2008                           ; Regs used in _romWrite: [wreg+status,2+status,0+pclath+cstack]
  2009  029F  1283               	bcf	3,5	;RP0=0, select bank0
  2010  02A0  1303               	bcf	3,6	;RP1=0, select bank0
  2011  02A1  01A3               	clrf	romWrite@addrLSB
  2012                           
  2013                           ;M24C04.c: 9: unsigned char opcode;
  2014                           ;M24C04.c: 11: if(addr >= 256 && addr <= 511)
  2015  02A2  3001               	movlw	1
  2016  02A3  0277               	subwf	romWrite@addr+1,w
  2017  02A4  3000               	movlw	0
  2018  02A5  1903               	skipnz
  2019  02A6  0276               	subwf	romWrite@addr,w
  2020  02A7  1C03               	skipc
  2021  02A8  2AB2               	goto	l1181
  2022  02A9  3002               	movlw	2
  2023  02AA  0277               	subwf	romWrite@addr+1,w
  2024  02AB  3000               	movlw	0
  2025  02AC  1903               	skipnz
  2026  02AD  0276               	subwf	romWrite@addr,w
  2027  02AE  1803               	skipnc
  2028  02AF  2AB2               	goto	l1181
  2029                           
  2030                           ;M24C04.c: 12: {
  2031                           ;M24C04.c: 13: opcode = 0b10100010;
  2032  02B0  30A2               	movlw	162
  2033  02B1  2ABA               	goto	L2
  2034  02B2                     l1181:	
  2035                           ;M24C04.c: 15: }
  2036                           
  2037                           ;M24C04.c: 14: addrLSB = (addr - 256);
  2038                           
  2039                           
  2040                           ;M24C04.c: 16: else if(addr <= 255 && addr >= 0)
  2041  02B2  3001               	movlw	1
  2042  02B3  0277               	subwf	romWrite@addr+1,w
  2043  02B4  3000               	movlw	0
  2044  02B5  1903               	skipnz
  2045  02B6  0276               	subwf	romWrite@addr,w
  2046  02B7  1803               	skipnc
  2047  02B8  2AC1               	goto	l1185
  2048                           
  2049                           ;M24C04.c: 17: {
  2050                           ;M24C04.c: 18: opcode = 0b10100000;
  2051  02B9  30A0               	movlw	160
  2052  02BA                     L2:	
  2053  02BA  00A0               	movwf	??_romWrite
  2054  02BB  0820               	movf	??_romWrite,w
  2055  02BC  00A2               	movwf	romWrite@opcode
  2056                           
  2057                           ;M24C04.c: 19: addrLSB = addr;
  2058  02BD  0876               	movf	romWrite@addr,w
  2059  02BE  00A0               	movwf	??_romWrite
  2060  02BF  0820               	movf	??_romWrite,w
  2061  02C0  00A3               	movwf	romWrite@addrLSB
  2062  02C1                     l1185:	
  2063                           
  2064                           ;M24C04.c: 20: }
  2065                           ;M24C04.c: 22: I2C_Master_Start();
  2066  02C1  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Start
  2067                           
  2068                           ;M24C04.c: 23: I2C_Master_Write(opcode);
  2069  02C6  1283               	bcf	3,5	;RP0=0, select bank0
  2070  02C7  1303               	bcf	3,6	;RP1=0, select bank0
  2071  02C8  0822               	movf	romWrite@opcode,w
  2072  02C9  00A0               	movwf	??_romWrite
  2073  02CA  01A1               	clrf	??_romWrite+1
  2074  02CB  0820               	movf	??_romWrite,w
  2075  02CC  00F4               	movwf	I2C_Master_Write@d
  2076  02CD  0821               	movf	??_romWrite+1,w
  2077  02CE  00F5               	movwf	I2C_Master_Write@d+1
  2078  02CF  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Write
  2079                           
  2080                           ;M24C04.c: 24: I2C_Master_Write(addrLSB);
  2081  02D4  1283               	bcf	3,5	;RP0=0, select bank0
  2082  02D5  1303               	bcf	3,6	;RP1=0, select bank0
  2083  02D6  0823               	movf	romWrite@addrLSB,w
  2084  02D7  00A0               	movwf	??_romWrite
  2085  02D8  01A1               	clrf	??_romWrite+1
  2086  02D9  0820               	movf	??_romWrite,w
  2087  02DA  00F4               	movwf	I2C_Master_Write@d
  2088  02DB  0821               	movf	??_romWrite+1,w
  2089  02DC  00F5               	movwf	I2C_Master_Write@d+1
  2090  02DD  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Write
  2091                           
  2092                           ;M24C04.c: 25: I2C_Master_Write(data);
  2093  02E2  0878               	movf	romWrite@data,w
  2094  02E3  1283               	bcf	3,5	;RP0=0, select bank0
  2095  02E4  1303               	bcf	3,6	;RP1=0, select bank0
  2096  02E5  00A0               	movwf	??_romWrite
  2097  02E6  01A1               	clrf	??_romWrite+1
  2098  02E7  0820               	movf	??_romWrite,w
  2099  02E8  00F4               	movwf	I2C_Master_Write@d
  2100  02E9  0821               	movf	??_romWrite+1,w
  2101  02EA  00F5               	movwf	I2C_Master_Write@d+1
  2102  02EB  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Write
  2103                           
  2104                           ;M24C04.c: 26: I2C_Master_Stop();
  2105  02F0  120A  118A  24EC  120A  118A  	fcall	_I2C_Master_Stop
  2106                           
  2107                           ;M24C04.c: 27: _delay((unsigned long)((3)*(20000000/4000.0)));
  2108  02F5  3014               	movlw	20
  2109  02F6  1283               	bcf	3,5	;RP0=0, select bank0
  2110  02F7  1303               	bcf	3,6	;RP1=0, select bank0
  2111  02F8  00A1               	movwf	??_romWrite+1
  2112  02F9  3079               	movlw	121
  2113  02FA  00A0               	movwf	??_romWrite
  2114  02FB                     u1297:	
  2115  02FB  0BA0               	decfsz	??_romWrite,f
  2116  02FC  2AFB               	goto	u1297
  2117  02FD  0BA1               	decfsz	??_romWrite+1,f
  2118  02FE  2AFB               	goto	u1297
  2119  02FF  0008               	return
  2120  0300                     __end_of_romWrite:	
  2121                           
  2122                           	psect	text6
  2123  0221                     __ptext6:	
  2124 ;; *************** function _romRead *****************
  2125 ;; Defined at:
  2126 ;;		line 30 in file "M24C04.c"
  2127 ;; Parameters:    Size  Location     Type
  2128 ;;  addr            2    0[BANK0 ] unsigned short 
  2129 ;; Auto vars:     Size  Location     Type
  2130 ;;  addrLSB         1    7[BANK0 ] unsigned char 
  2131 ;;  opcodeRead      1    6[BANK0 ] unsigned char 
  2132 ;;  opcode          1    5[BANK0 ] unsigned char 
  2133 ;;  temp            1    4[BANK0 ] unsigned char 
  2134 ;; Return value:  Size  Location     Type
  2135 ;;                  2    0[BANK0 ] unsigned short 
  2136 ;; Registers used:
  2137 ;;		wreg, status,2, status,0, pclath, cstack
  2138 ;; Tracked objects:
  2139 ;;		On entry : 0/0
  2140 ;;		On exit  : 0/0
  2141 ;;		Unchanged: 0/0
  2142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2143 ;;      Params:         0       2       0       0       0
  2144 ;;      Locals:         0       4       0       0       0
  2145 ;;      Temps:          0       2       0       0       0
  2146 ;;      Totals:         0       8       0       0       0
  2147 ;;Total ram usage:        8 bytes
  2148 ;; Hardware stack levels used:    1
  2149 ;; Hardware stack levels required when called:    3
  2150 ;; This function calls:
  2151 ;;		_I2C_Master_Read
  2152 ;;		_I2C_Master_Start
  2153 ;;		_I2C_Master_Stop
  2154 ;;		_I2C_Master_Write
  2155 ;; This function is called by:
  2156 ;;		_main
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           
  2161                           ;psect for function _romRead
  2162  0221                     _romRead:	
  2163                           
  2164                           ;M24C04.c: 32: unsigned char addrLSB = 0;
  2165                           
  2166                           ;incstack = 0
  2167                           ; Regs used in _romRead: [wreg+status,2+status,0+pclath+cstack]
  2168  0221  1283               	bcf	3,5	;RP0=0, select bank0
  2169  0222  1303               	bcf	3,6	;RP1=0, select bank0
  2170  0223  01A7               	clrf	romRead@addrLSB
  2171                           
  2172                           ;M24C04.c: 33: unsigned char opcode;
  2173                           ;M24C04.c: 34: unsigned char opcodeRead;
  2174                           ;M24C04.c: 35: unsigned char temp;
  2175                           ;M24C04.c: 37: if(addr >= 256 && addr <= 511)
  2176  0224  3001               	movlw	1
  2177  0225  0221               	subwf	romRead@addr+1,w
  2178  0226  3000               	movlw	0
  2179  0227  1903               	skipnz
  2180  0228  0220               	subwf	romRead@addr,w
  2181  0229  1C03               	skipc
  2182  022A  2A38               	goto	l1363
  2183  022B  3002               	movlw	2
  2184  022C  0221               	subwf	romRead@addr+1,w
  2185  022D  3000               	movlw	0
  2186  022E  1903               	skipnz
  2187  022F  0220               	subwf	romRead@addr,w
  2188  0230  1803               	skipnc
  2189  0231  2A38               	goto	l1363
  2190                           
  2191                           ;M24C04.c: 38: {
  2192                           ;M24C04.c: 39: opcode = 0b10100010;
  2193  0232  30A2               	movlw	162
  2194  0233  00A2               	movwf	??_romRead
  2195  0234  0822               	movf	??_romRead,w
  2196  0235  00A5               	movwf	romRead@opcode
  2197                           
  2198                           ;M24C04.c: 40: opcodeRead = 0b10100011;
  2199  0236  30A3               	movlw	163
  2200  0237  2A44               	goto	L3
  2201  0238                     l1363:	
  2202                           ;M24C04.c: 42: }
  2203                           
  2204                           ;M24C04.c: 41: addrLSB = (addr - 256);
  2205                           
  2206                           
  2207                           ;M24C04.c: 43: else if(addr <= 255 && addr >= 0)
  2208  0238  3001               	movlw	1
  2209  0239  0221               	subwf	romRead@addr+1,w
  2210  023A  3000               	movlw	0
  2211  023B  1903               	skipnz
  2212  023C  0220               	subwf	romRead@addr,w
  2213  023D  1803               	skipnc
  2214  023E  2A4B               	goto	l1367
  2215                           
  2216                           ;M24C04.c: 44: {
  2217                           ;M24C04.c: 45: opcode = 0b10100000;
  2218  023F  30A0               	movlw	160
  2219  0240  00A2               	movwf	??_romRead
  2220  0241  0822               	movf	??_romRead,w
  2221  0242  00A5               	movwf	romRead@opcode
  2222                           
  2223                           ;M24C04.c: 46: opcodeRead = 0b10100001;
  2224  0243  30A1               	movlw	161
  2225  0244                     L3:	
  2226  0244  00A2               	movwf	??_romRead
  2227  0245  0822               	movf	??_romRead,w
  2228  0246  00A6               	movwf	romRead@opcodeRead
  2229                           
  2230                           ;M24C04.c: 47: addrLSB = addr;
  2231  0247  0820               	movf	romRead@addr,w
  2232  0248  00A2               	movwf	??_romRead
  2233  0249  0822               	movf	??_romRead,w
  2234  024A  00A7               	movwf	romRead@addrLSB
  2235  024B                     l1367:	
  2236                           
  2237                           ;M24C04.c: 48: }
  2238                           ;M24C04.c: 50: I2C_Master_Start();
  2239  024B  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Start
  2240                           
  2241                           ;M24C04.c: 51: I2C_Master_Write(opcode);
  2242  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2243  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2244  0252  0825               	movf	romRead@opcode,w
  2245  0253  00A2               	movwf	??_romRead
  2246  0254  01A3               	clrf	??_romRead+1
  2247  0255  0822               	movf	??_romRead,w
  2248  0256  00F4               	movwf	I2C_Master_Write@d
  2249  0257  0823               	movf	??_romRead+1,w
  2250  0258  00F5               	movwf	I2C_Master_Write@d+1
  2251  0259  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Write
  2252                           
  2253                           ;M24C04.c: 52: I2C_Master_Write(addrLSB);
  2254  025E  1283               	bcf	3,5	;RP0=0, select bank0
  2255  025F  1303               	bcf	3,6	;RP1=0, select bank0
  2256  0260  0827               	movf	romRead@addrLSB,w
  2257  0261  00A2               	movwf	??_romRead
  2258  0262  01A3               	clrf	??_romRead+1
  2259  0263  0822               	movf	??_romRead,w
  2260  0264  00F4               	movwf	I2C_Master_Write@d
  2261  0265  0823               	movf	??_romRead+1,w
  2262  0266  00F5               	movwf	I2C_Master_Write@d+1
  2263  0267  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Write
  2264                           
  2265                           ;M24C04.c: 53: I2C_Master_Stop();
  2266  026C  120A  118A  24EC  120A  118A  	fcall	_I2C_Master_Stop
  2267                           
  2268                           ;M24C04.c: 55: I2C_Master_Start();
  2269  0271  120A  118A  24F3  120A  118A  	fcall	_I2C_Master_Start
  2270                           
  2271                           ;M24C04.c: 56: I2C_Master_Write(opcodeRead);
  2272  0276  1283               	bcf	3,5	;RP0=0, select bank0
  2273  0277  1303               	bcf	3,6	;RP1=0, select bank0
  2274  0278  0826               	movf	romRead@opcodeRead,w
  2275  0279  00A2               	movwf	??_romRead
  2276  027A  01A3               	clrf	??_romRead+1
  2277  027B  0822               	movf	??_romRead,w
  2278  027C  00F4               	movwf	I2C_Master_Write@d
  2279  027D  0823               	movf	??_romRead+1,w
  2280  027E  00F5               	movwf	I2C_Master_Write@d+1
  2281  027F  120A  118A  24E4  120A  118A  	fcall	_I2C_Master_Write
  2282                           
  2283                           ;M24C04.c: 57: temp = I2C_Master_Read(0);
  2284  0284  3000               	movlw	0
  2285  0285  00F4               	movwf	I2C_Master_Read@a
  2286  0286  00F5               	movwf	I2C_Master_Read@a+1
  2287  0287  120A  118A  2461  120A  118A  	fcall	_I2C_Master_Read
  2288  028C  0874               	movf	?_I2C_Master_Read,w
  2289  028D  1283               	bcf	3,5	;RP0=0, select bank0
  2290  028E  1303               	bcf	3,6	;RP1=0, select bank0
  2291  028F  00A2               	movwf	??_romRead
  2292  0290  0822               	movf	??_romRead,w
  2293  0291  00A4               	movwf	romRead@temp
  2294                           
  2295                           ;M24C04.c: 58: I2C_Master_Stop();
  2296  0292  120A  118A  24EC   	fcall	_I2C_Master_Stop
  2297                           
  2298                           ;M24C04.c: 59: return temp;
  2299  0295  1283               	bcf	3,5	;RP0=0, select bank0
  2300  0296  1303               	bcf	3,6	;RP1=0, select bank0
  2301  0297  0824               	movf	romRead@temp,w
  2302  0298  00A2               	movwf	??_romRead
  2303  0299  01A3               	clrf	??_romRead+1
  2304  029A  0822               	movf	??_romRead,w
  2305  029B  00A0               	movwf	?_romRead
  2306  029C  0823               	movf	??_romRead+1,w
  2307  029D  00A1               	movwf	?_romRead+1
  2308  029E  0008               	return
  2309  029F                     __end_of_romRead:	
  2310                           
  2311                           	psect	text7
  2312  04E4                     __ptext7:	
  2313 ;; *************** function _I2C_Master_Write *****************
  2314 ;; Defined at:
  2315 ;;		line 38 in file "i2c.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;  d               2    4[COMMON] unsigned int 
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		wreg, status,2, status,0, pclath, cstack
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         2       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0
  2331 ;;      Temps:          0       0       0       0       0
  2332 ;;      Totals:         2       0       0       0       0
  2333 ;;Total ram usage:        2 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; Hardware stack levels required when called:    2
  2336 ;; This function calls:
  2337 ;;		_I2C_Master_Wait
  2338 ;; This function is called by:
  2339 ;;		_romWrite
  2340 ;;		_romRead
  2341 ;; This function uses a non-reentrant model
  2342 ;;
  2343                           
  2344                           
  2345                           ;psect for function _I2C_Master_Write
  2346  04E4                     _I2C_Master_Write:	
  2347                           
  2348                           ;i2c.c: 40: I2C_Master_Wait();
  2349                           
  2350                           ;incstack = 0
  2351                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2352  04E4  120A  118A  24D3   	fcall	_I2C_Master_Wait
  2353                           
  2354                           ;i2c.c: 41: SSPBUF = d;
  2355  04E7  0874               	movf	I2C_Master_Write@d,w
  2356  04E8  1283               	bcf	3,5	;RP0=0, select bank0
  2357  04E9  1303               	bcf	3,6	;RP1=0, select bank0
  2358  04EA  0093               	movwf	19	;volatile
  2359  04EB  0008               	return
  2360  04EC                     __end_of_I2C_Master_Write:	
  2361                           
  2362                           	psect	text8
  2363  04EC                     __ptext8:	
  2364 ;; *************** function _I2C_Master_Stop *****************
  2365 ;; Defined at:
  2366 ;;		line 32 in file "i2c.c"
  2367 ;; Parameters:    Size  Location     Type
  2368 ;;		None
  2369 ;; Auto vars:     Size  Location     Type
  2370 ;;		None
  2371 ;; Return value:  Size  Location     Type
  2372 ;;                  1    wreg      void 
  2373 ;; Registers used:
  2374 ;;		wreg, status,2, status,0, pclath, cstack
  2375 ;; Tracked objects:
  2376 ;;		On entry : 0/0
  2377 ;;		On exit  : 0/0
  2378 ;;		Unchanged: 0/0
  2379 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2380 ;;      Params:         0       0       0       0       0
  2381 ;;      Locals:         0       0       0       0       0
  2382 ;;      Temps:          0       0       0       0       0
  2383 ;;      Totals:         0       0       0       0       0
  2384 ;;Total ram usage:        0 bytes
  2385 ;; Hardware stack levels used:    1
  2386 ;; Hardware stack levels required when called:    2
  2387 ;; This function calls:
  2388 ;;		_I2C_Master_Wait
  2389 ;; This function is called by:
  2390 ;;		_romWrite
  2391 ;;		_romRead
  2392 ;; This function uses a non-reentrant model
  2393 ;;
  2394                           
  2395                           
  2396                           ;psect for function _I2C_Master_Stop
  2397  04EC                     _I2C_Master_Stop:	
  2398                           
  2399                           ;i2c.c: 34: I2C_Master_Wait();
  2400                           
  2401                           ;incstack = 0
  2402                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2403  04EC  120A  118A  24D3   	fcall	_I2C_Master_Wait
  2404                           
  2405                           ;i2c.c: 35: PEN = 1;
  2406  04EF  1683               	bsf	3,5	;RP0=1, select bank1
  2407  04F0  1303               	bcf	3,6	;RP1=0, select bank1
  2408  04F1  1511               	bsf	17,2	;volatile
  2409  04F2  0008               	return
  2410  04F3                     __end_of_I2C_Master_Stop:	
  2411                           
  2412                           	psect	text9
  2413  04F3                     __ptext9:	
  2414 ;; *************** function _I2C_Master_Start *****************
  2415 ;; Defined at:
  2416 ;;		line 20 in file "i2c.c"
  2417 ;; Parameters:    Size  Location     Type
  2418 ;;		None
  2419 ;; Auto vars:     Size  Location     Type
  2420 ;;		None
  2421 ;; Return value:  Size  Location     Type
  2422 ;;                  1    wreg      void 
  2423 ;; Registers used:
  2424 ;;		wreg, status,2, status,0, pclath, cstack
  2425 ;; Tracked objects:
  2426 ;;		On entry : 0/0
  2427 ;;		On exit  : 0/0
  2428 ;;		Unchanged: 0/0
  2429 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2430 ;;      Params:         0       0       0       0       0
  2431 ;;      Locals:         0       0       0       0       0
  2432 ;;      Temps:          0       0       0       0       0
  2433 ;;      Totals:         0       0       0       0       0
  2434 ;;Total ram usage:        0 bytes
  2435 ;; Hardware stack levels used:    1
  2436 ;; Hardware stack levels required when called:    2
  2437 ;; This function calls:
  2438 ;;		_I2C_Master_Wait
  2439 ;; This function is called by:
  2440 ;;		_romWrite
  2441 ;;		_romRead
  2442 ;; This function uses a non-reentrant model
  2443 ;;
  2444                           
  2445                           
  2446                           ;psect for function _I2C_Master_Start
  2447  04F3                     _I2C_Master_Start:	
  2448                           
  2449                           ;i2c.c: 22: I2C_Master_Wait();
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2453  04F3  120A  118A  24D3   	fcall	_I2C_Master_Wait
  2454                           
  2455                           ;i2c.c: 23: SEN = 1;
  2456  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  2457  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  2458  04F8  1411               	bsf	17,0	;volatile
  2459  04F9  0008               	return
  2460  04FA                     __end_of_I2C_Master_Start:	
  2461                           
  2462                           	psect	text10
  2463  0461                     __ptext10:	
  2464 ;; *************** function _I2C_Master_Read *****************
  2465 ;; Defined at:
  2466 ;;		line 44 in file "i2c.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  a               2    4[COMMON] unsigned short 
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;  temp            2    8[COMMON] unsigned short 
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  2    4[COMMON] unsigned short 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2, status,0, pclath, cstack
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         2       0       0       0       0
  2481 ;;      Locals:         2       0       0       0       0
  2482 ;;      Temps:          2       0       0       0       0
  2483 ;;      Totals:         6       0       0       0       0
  2484 ;;Total ram usage:        6 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    2
  2487 ;; This function calls:
  2488 ;;		_I2C_Master_Wait
  2489 ;; This function is called by:
  2490 ;;		_romRead
  2491 ;; This function uses a non-reentrant model
  2492 ;;
  2493                           
  2494                           
  2495                           ;psect for function _I2C_Master_Read
  2496  0461                     _I2C_Master_Read:	
  2497                           
  2498                           ;i2c.c: 46: unsigned short temp;
  2499                           ;i2c.c: 47: I2C_Master_Wait();
  2500                           
  2501                           ;incstack = 0
  2502                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2503  0461  120A  118A  24D3  120A  118A  	fcall	_I2C_Master_Wait
  2504                           
  2505                           ;i2c.c: 48: RCEN = 1;
  2506  0466  1683               	bsf	3,5	;RP0=1, select bank1
  2507  0467  1303               	bcf	3,6	;RP1=0, select bank1
  2508  0468  1591               	bsf	17,3	;volatile
  2509                           
  2510                           ;i2c.c: 49: I2C_Master_Wait();
  2511  0469  120A  118A  24D3  120A  118A  	fcall	_I2C_Master_Wait
  2512                           
  2513                           ;i2c.c: 50: temp = SSPBUF;
  2514  046E  1283               	bcf	3,5	;RP0=0, select bank0
  2515  046F  1303               	bcf	3,6	;RP1=0, select bank0
  2516  0470  0813               	movf	19,w	;volatile
  2517  0471  00F6               	movwf	??_I2C_Master_Read
  2518  0472  01F7               	clrf	??_I2C_Master_Read+1
  2519  0473  0876               	movf	??_I2C_Master_Read,w
  2520  0474  00F8               	movwf	I2C_Master_Read@temp
  2521  0475  0877               	movf	??_I2C_Master_Read+1,w
  2522  0476  00F9               	movwf	I2C_Master_Read@temp+1
  2523                           
  2524                           ;i2c.c: 51: I2C_Master_Wait();
  2525  0477  120A  118A  24D3  120A  118A  	fcall	_I2C_Master_Wait
  2526                           
  2527                           ;i2c.c: 52: ACKDT = (a)?0:1;
  2528  047C  0874               	movf	I2C_Master_Read@a,w
  2529  047D  0475               	iorwf	I2C_Master_Read@a+1,w
  2530  047E  1D03               	btfss	3,2
  2531  047F  2C84               	goto	u690
  2532  0480  1683               	bsf	3,5	;RP0=1, select bank1
  2533  0481  1303               	bcf	3,6	;RP1=0, select bank1
  2534  0482  1691               	bsf	17,5	;volatile
  2535  0483  2C87               	goto	l1209
  2536  0484                     u690:	
  2537  0484  1683               	bsf	3,5	;RP0=1, select bank1
  2538  0485  1303               	bcf	3,6	;RP1=0, select bank1
  2539  0486  1291               	bcf	17,5	;volatile
  2540  0487                     l1209:	
  2541                           
  2542                           ;i2c.c: 53: ACKEN = 1;
  2543  0487  1611               	bsf	17,4	;volatile
  2544                           
  2545                           ;i2c.c: 54: return temp;
  2546  0488  0879               	movf	I2C_Master_Read@temp+1,w
  2547  0489  00F5               	movwf	?_I2C_Master_Read+1
  2548  048A  0878               	movf	I2C_Master_Read@temp,w
  2549  048B  00F4               	movwf	?_I2C_Master_Read
  2550  048C  0008               	return
  2551  048D                     __end_of_I2C_Master_Read:	
  2552                           
  2553                           	psect	text11
  2554  04D3                     __ptext11:	
  2555 ;; *************** function _I2C_Master_Wait *****************
  2556 ;; Defined at:
  2557 ;;		line 15 in file "i2c.c"
  2558 ;; Parameters:    Size  Location     Type
  2559 ;;		None
  2560 ;; Auto vars:     Size  Location     Type
  2561 ;;		None
  2562 ;; Return value:  Size  Location     Type
  2563 ;;                  1    wreg      void 
  2564 ;; Registers used:
  2565 ;;		wreg, status,2
  2566 ;; Tracked objects:
  2567 ;;		On entry : 0/0
  2568 ;;		On exit  : 0/0
  2569 ;;		Unchanged: 0/0
  2570 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2571 ;;      Params:         0       0       0       0       0
  2572 ;;      Locals:         0       0       0       0       0
  2573 ;;      Temps:          0       0       0       0       0
  2574 ;;      Totals:         0       0       0       0       0
  2575 ;;Total ram usage:        0 bytes
  2576 ;; Hardware stack levels used:    1
  2577 ;; Hardware stack levels required when called:    1
  2578 ;; This function calls:
  2579 ;;		Nothing
  2580 ;; This function is called by:
  2581 ;;		_I2C_Master_Start
  2582 ;;		_I2C_Master_Stop
  2583 ;;		_I2C_Master_Write
  2584 ;;		_I2C_Master_Read
  2585 ;;		_I2C_Master_RepeatedStart
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           
  2590                           ;psect for function _I2C_Master_Wait
  2591  04D3                     _I2C_Master_Wait:	
  2592  04D3                     l225:	
  2593                           ;i2c.c: 17: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2594                           
  2595                           ;incstack = 0
  2596                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2597                           
  2598  04D3  1683               	bsf	3,5	;RP0=1, select bank1
  2599  04D4  1303               	bcf	3,6	;RP1=0, select bank1
  2600  04D5  1914               	btfsc	20,2	;volatile
  2601  04D6  2CD3               	goto	l225
  2602  04D7  0811               	movf	17,w	;volatile
  2603  04D8  391F               	andlw	31
  2604  04D9  1903               	btfsc	3,2
  2605  04DA  0008               	return
  2606  04DB  2CD3               	goto	l225
  2607  04DC                     __end_of_I2C_Master_Wait:	
  2608                           
  2609                           	psect	text12
  2610  03BC                     __ptext12:	
  2611 ;; *************** function _lcd_initialize *****************
  2612 ;; Defined at:
  2613 ;;		line 100 in file "lcd.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;		None
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, status,2, status,0, pclath, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2627 ;;      Params:         0       0       0       0       0
  2628 ;;      Locals:         0       0       0       0       0
  2629 ;;      Temps:          0       2       0       0       0
  2630 ;;      Totals:         0       2       0       0       0
  2631 ;;Total ram usage:        2 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    4
  2634 ;; This function calls:
  2635 ;;		_lcd_clear
  2636 ;;		_send_lcd_data
  2637 ;;		_set_lcd_e
  2638 ;; This function is called by:
  2639 ;;		_main
  2640 ;; This function uses a non-reentrant model
  2641 ;;
  2642                           
  2643                           
  2644                           ;psect for function _lcd_initialize
  2645  03BC                     _lcd_initialize:	
  2646                           
  2647                           ;lcd.c: 104: set_lcd_e(1);
  2648                           
  2649                           ;incstack = 0
  2650                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  2651  03BC  3001               	movlw	1
  2652  03BD  120A  118A  24BD  120A  118A  	fcall	_set_lcd_e
  2653                           
  2654                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  2655  03C2  3062               	movlw	98
  2656  03C3  1283               	bcf	3,5	;RP0=0, select bank0
  2657  03C4  1303               	bcf	3,6	;RP1=0, select bank0
  2658  03C5  00A1               	movwf	??_lcd_initialize+1
  2659  03C6  3065               	movlw	101
  2660  03C7  00A0               	movwf	??_lcd_initialize
  2661  03C8                     u1307:	
  2662  03C8  0BA0               	decfsz	??_lcd_initialize,f
  2663  03C9  2BC8               	goto	u1307
  2664  03CA  0BA1               	decfsz	??_lcd_initialize+1,f
  2665  03CB  2BC8               	goto	u1307
  2666                           
  2667                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  2668  03CC  3038               	movlw	56
  2669  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2670  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2671  03CF  00A0               	movwf	??_lcd_initialize
  2672  03D0  0820               	movf	??_lcd_initialize,w
  2673  03D1  00F5               	movwf	send_lcd_data@uc_data
  2674  03D2  3000               	movlw	0
  2675  03D3  120A  118A  242C  120A  118A  	fcall	_send_lcd_data
  2676                           
  2677                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  2678  03D8  3006               	movlw	6
  2679  03D9  1283               	bcf	3,5	;RP0=0, select bank0
  2680  03DA  1303               	bcf	3,6	;RP1=0, select bank0
  2681  03DB  00A0               	movwf	??_lcd_initialize
  2682  03DC  0820               	movf	??_lcd_initialize,w
  2683  03DD  00F5               	movwf	send_lcd_data@uc_data
  2684  03DE  3000               	movlw	0
  2685  03DF  120A  118A  242C  120A  118A  	fcall	_send_lcd_data
  2686                           
  2687                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  2688  03E4  300C               	movlw	12
  2689  03E5  1283               	bcf	3,5	;RP0=0, select bank0
  2690  03E6  1303               	bcf	3,6	;RP1=0, select bank0
  2691  03E7  00A0               	movwf	??_lcd_initialize
  2692  03E8  0820               	movf	??_lcd_initialize,w
  2693  03E9  00F5               	movwf	send_lcd_data@uc_data
  2694  03EA  3000               	movlw	0
  2695  03EB  120A  118A  242C  120A  118A  	fcall	_send_lcd_data
  2696                           
  2697                           ;lcd.c: 118: lcd_clear();
  2698  03F0  120A  118A  24FA   	fcall	_lcd_clear
  2699  03F3  0008               	return
  2700  03F4                     __end_of_lcd_initialize:	
  2701                           
  2702                           	psect	text13
  2703  04FA                     __ptext13:	
  2704 ;; *************** function _lcd_clear *****************
  2705 ;; Defined at:
  2706 ;;		line 136 in file "lcd.c"
  2707 ;; Parameters:    Size  Location     Type
  2708 ;;		None
  2709 ;; Auto vars:     Size  Location     Type
  2710 ;;		None
  2711 ;; Return value:  Size  Location     Type
  2712 ;;                  1    wreg      void 
  2713 ;; Registers used:
  2714 ;;		wreg, status,2, status,0, pclath, cstack
  2715 ;; Tracked objects:
  2716 ;;		On entry : 0/0
  2717 ;;		On exit  : 0/0
  2718 ;;		Unchanged: 0/0
  2719 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2720 ;;      Params:         0       0       0       0       0
  2721 ;;      Locals:         0       0       0       0       0
  2722 ;;      Temps:          0       0       0       0       0
  2723 ;;      Totals:         0       0       0       0       0
  2724 ;;Total ram usage:        0 bytes
  2725 ;; Hardware stack levels used:    1
  2726 ;; Hardware stack levels required when called:    3
  2727 ;; This function calls:
  2728 ;;		_send_lcd_data
  2729 ;; This function is called by:
  2730 ;;		_lcd_initialize
  2731 ;; This function uses a non-reentrant model
  2732 ;;
  2733                           
  2734                           
  2735                           ;psect for function _lcd_clear
  2736  04FA                     _lcd_clear:	
  2737                           
  2738                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  2739                           
  2740                           ;incstack = 0
  2741                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2742  04FA  01F5               	clrf	send_lcd_data@uc_data
  2743  04FB  0AF5               	incf	send_lcd_data@uc_data,f
  2744  04FC  3000               	movlw	0
  2745  04FD  120A  118A  242C   	fcall	_send_lcd_data
  2746  0500  0008               	return
  2747  0501                     __end_of_lcd_clear:	
  2748                           
  2749                           	psect	text14
  2750  042C                     __ptext14:	
  2751 ;; *************** function _send_lcd_data *****************
  2752 ;; Defined at:
  2753 ;;		line 308 in file "lcd.c"
  2754 ;; Parameters:    Size  Location     Type
  2755 ;;  b_rs            1    wreg     unsigned char 
  2756 ;;  uc_data         1    5[COMMON] unsigned char 
  2757 ;; Auto vars:     Size  Location     Type
  2758 ;;  b_rs            1    8[COMMON] unsigned char 
  2759 ;; Return value:  Size  Location     Type
  2760 ;;                  1    wreg      void 
  2761 ;; Registers used:
  2762 ;;		wreg, status,2, status,0, pclath, cstack
  2763 ;; Tracked objects:
  2764 ;;		On entry : 0/0
  2765 ;;		On exit  : 0/0
  2766 ;;		Unchanged: 0/0
  2767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2768 ;;      Params:         1       0       0       0       0
  2769 ;;      Locals:         1       0       0       0       0
  2770 ;;      Temps:          2       0       0       0       0
  2771 ;;      Totals:         4       0       0       0       0
  2772 ;;Total ram usage:        4 bytes
  2773 ;; Hardware stack levels used:    1
  2774 ;; Hardware stack levels required when called:    2
  2775 ;; This function calls:
  2776 ;;		_set_lcd_data
  2777 ;;		_set_lcd_e
  2778 ;;		_set_lcd_rs
  2779 ;; This function is called by:
  2780 ;;		_lcd_initialize
  2781 ;;		_lcd_clear
  2782 ;;		_lcd_home
  2783 ;;		_lcd_2ndline
  2784 ;;		_lcd_goto
  2785 ;;		_lcd_putchar
  2786 ;; This function uses a non-reentrant model
  2787 ;;
  2788                           
  2789                           
  2790                           ;psect for function _send_lcd_data
  2791  042C                     _send_lcd_data:	
  2792                           
  2793                           ;incstack = 0
  2794                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2795                           ;send_lcd_data@b_rs stored from wreg
  2796  042C  00F8               	movwf	send_lcd_data@b_rs
  2797                           
  2798                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2799  042D  0878               	movf	send_lcd_data@b_rs,w
  2800  042E  120A  118A  24B2  120A  118A  	fcall	_set_lcd_rs
  2801                           
  2802                           ;lcd.c: 312: set_lcd_data(uc_data);
  2803  0433  0875               	movf	send_lcd_data@uc_data,w
  2804  0434  120A  118A  2501  120A  118A  	fcall	_set_lcd_data
  2805                           
  2806                           ;lcd.c: 315: set_lcd_e(1);
  2807  0439  3001               	movlw	1
  2808  043A  120A  118A  24BD  120A  118A  	fcall	_set_lcd_e
  2809                           
  2810                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2811  043F  3007               	movlw	7
  2812  0440  00F7               	movwf	??_send_lcd_data+1
  2813  0441  307D               	movlw	125
  2814  0442  00F6               	movwf	??_send_lcd_data
  2815  0443                     u1317:	
  2816  0443  0BF6               	decfsz	??_send_lcd_data,f
  2817  0444  2C43               	goto	u1317
  2818  0445  0BF7               	decfsz	??_send_lcd_data+1,f
  2819  0446  2C43               	goto	u1317
  2820                           
  2821                           ;lcd.c: 317: set_lcd_e(0);
  2822  0447  3000               	movlw	0
  2823  0448  120A  118A  24BD  120A  118A  	fcall	_set_lcd_e
  2824                           
  2825                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2826  044D  300D               	movlw	13
  2827  044E  00F7               	movwf	??_send_lcd_data+1
  2828  044F  30FB               	movlw	251
  2829  0450  00F6               	movwf	??_send_lcd_data
  2830  0451                     u1327:	
  2831  0451  0BF6               	decfsz	??_send_lcd_data,f
  2832  0452  2C51               	goto	u1327
  2833  0453  0BF7               	decfsz	??_send_lcd_data+1,f
  2834  0454  2C51               	goto	u1327
  2835  0455  2C56               	nop2
  2836                           
  2837                           ;lcd.c: 321: set_lcd_rs(0);
  2838  0456  3000               	movlw	0
  2839  0457  120A  118A  24B2  120A  118A  	fcall	_set_lcd_rs
  2840                           
  2841                           ;lcd.c: 322: set_lcd_data(0);
  2842  045C  3000               	movlw	0
  2843  045D  120A  118A  2501   	fcall	_set_lcd_data
  2844  0460  0008               	return
  2845  0461                     __end_of_send_lcd_data:	
  2846                           
  2847                           	psect	text15
  2848  04B2                     __ptext15:	
  2849 ;; *************** function _set_lcd_rs *****************
  2850 ;; Defined at:
  2851 ;;		line 360 in file "lcd.c"
  2852 ;; Parameters:    Size  Location     Type
  2853 ;;  b_output        1    wreg     unsigned char 
  2854 ;; Auto vars:     Size  Location     Type
  2855 ;;  b_output        1    4[COMMON] unsigned char 
  2856 ;; Return value:  Size  Location     Type
  2857 ;;                  1    wreg      void 
  2858 ;; Registers used:
  2859 ;;		wreg
  2860 ;; Tracked objects:
  2861 ;;		On entry : 0/0
  2862 ;;		On exit  : 0/0
  2863 ;;		Unchanged: 0/0
  2864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2865 ;;      Params:         0       0       0       0       0
  2866 ;;      Locals:         1       0       0       0       0
  2867 ;;      Temps:          0       0       0       0       0
  2868 ;;      Totals:         1       0       0       0       0
  2869 ;;Total ram usage:        1 bytes
  2870 ;; Hardware stack levels used:    1
  2871 ;; Hardware stack levels required when called:    1
  2872 ;; This function calls:
  2873 ;;		Nothing
  2874 ;; This function is called by:
  2875 ;;		_send_lcd_data
  2876 ;; This function uses a non-reentrant model
  2877 ;;
  2878                           
  2879                           
  2880                           ;psect for function _set_lcd_rs
  2881  04B2                     _set_lcd_rs:	
  2882                           
  2883                           ;incstack = 0
  2884                           ; Regs used in _set_lcd_rs: [wreg]
  2885                           ;set_lcd_rs@b_output stored from wreg
  2886  04B2  00F4               	movwf	set_lcd_rs@b_output
  2887                           
  2888                           ;lcd.c: 362: RB4 = b_output;
  2889  04B3  1C74               	btfss	set_lcd_rs@b_output,0
  2890  04B4  2CB9               	goto	u620
  2891  04B5  1283               	bcf	3,5	;RP0=0, select bank0
  2892  04B6  1303               	bcf	3,6	;RP1=0, select bank0
  2893  04B7  1606               	bsf	6,4	;volatile
  2894  04B8  0008               	return
  2895  04B9                     u620:	
  2896  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2897  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2898  04BB  1206               	bcf	6,4	;volatile
  2899  04BC  0008               	return
  2900  04BD                     __end_of_set_lcd_rs:	
  2901                           
  2902                           	psect	text16
  2903  04BD                     __ptext16:	
  2904 ;; *************** function _set_lcd_e *****************
  2905 ;; Defined at:
  2906 ;;		line 340 in file "lcd.c"
  2907 ;; Parameters:    Size  Location     Type
  2908 ;;  b_output        1    wreg     unsigned char 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  b_output        1    4[COMMON] unsigned char 
  2911 ;; Return value:  Size  Location     Type
  2912 ;;                  1    wreg      void 
  2913 ;; Registers used:
  2914 ;;		wreg
  2915 ;; Tracked objects:
  2916 ;;		On entry : 0/0
  2917 ;;		On exit  : 0/0
  2918 ;;		Unchanged: 0/0
  2919 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2920 ;;      Params:         0       0       0       0       0
  2921 ;;      Locals:         1       0       0       0       0
  2922 ;;      Temps:          0       0       0       0       0
  2923 ;;      Totals:         1       0       0       0       0
  2924 ;;Total ram usage:        1 bytes
  2925 ;; Hardware stack levels used:    1
  2926 ;; Hardware stack levels required when called:    1
  2927 ;; This function calls:
  2928 ;;		Nothing
  2929 ;; This function is called by:
  2930 ;;		_lcd_initialize
  2931 ;;		_send_lcd_data
  2932 ;; This function uses a non-reentrant model
  2933 ;;
  2934                           
  2935                           
  2936                           ;psect for function _set_lcd_e
  2937  04BD                     _set_lcd_e:	
  2938                           
  2939                           ;incstack = 0
  2940                           ; Regs used in _set_lcd_e: [wreg]
  2941                           ;set_lcd_e@b_output stored from wreg
  2942  04BD  00F4               	movwf	set_lcd_e@b_output
  2943                           
  2944                           ;lcd.c: 342: RB5 = b_output;
  2945  04BE  1C74               	btfss	set_lcd_e@b_output,0
  2946  04BF  2CC4               	goto	u600
  2947  04C0  1283               	bcf	3,5	;RP0=0, select bank0
  2948  04C1  1303               	bcf	3,6	;RP1=0, select bank0
  2949  04C2  1686               	bsf	6,5	;volatile
  2950  04C3  0008               	return
  2951  04C4                     u600:	
  2952  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2953  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2954  04C6  1286               	bcf	6,5	;volatile
  2955  04C7  0008               	return
  2956  04C8                     __end_of_set_lcd_e:	
  2957                           
  2958                           	psect	text17
  2959  0501                     __ptext17:	
  2960 ;; *************** function _set_lcd_data *****************
  2961 ;; Defined at:
  2962 ;;		line 380 in file "lcd.c"
  2963 ;; Parameters:    Size  Location     Type
  2964 ;;  uc_data         1    wreg     unsigned char 
  2965 ;; Auto vars:     Size  Location     Type
  2966 ;;  uc_data         1    4[COMMON] unsigned char 
  2967 ;; Return value:  Size  Location     Type
  2968 ;;                  1    wreg      void 
  2969 ;; Registers used:
  2970 ;;		wreg
  2971 ;; Tracked objects:
  2972 ;;		On entry : 0/0
  2973 ;;		On exit  : 0/0
  2974 ;;		Unchanged: 0/0
  2975 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2976 ;;      Params:         0       0       0       0       0
  2977 ;;      Locals:         1       0       0       0       0
  2978 ;;      Temps:          0       0       0       0       0
  2979 ;;      Totals:         1       0       0       0       0
  2980 ;;Total ram usage:        1 bytes
  2981 ;; Hardware stack levels used:    1
  2982 ;; Hardware stack levels required when called:    1
  2983 ;; This function calls:
  2984 ;;		Nothing
  2985 ;; This function is called by:
  2986 ;;		_send_lcd_data
  2987 ;; This function uses a non-reentrant model
  2988 ;;
  2989                           
  2990                           
  2991                           ;psect for function _set_lcd_data
  2992  0501                     _set_lcd_data:	
  2993                           
  2994                           ;incstack = 0
  2995                           ; Regs used in _set_lcd_data: [wreg]
  2996                           ;set_lcd_data@uc_data stored from wreg
  2997  0501  00F4               	movwf	set_lcd_data@uc_data
  2998                           
  2999                           ;lcd.c: 382: PORTD = uc_data;
  3000  0502  0874               	movf	set_lcd_data@uc_data,w
  3001  0503  1283               	bcf	3,5	;RP0=0, select bank0
  3002  0504  1303               	bcf	3,6	;RP1=0, select bank0
  3003  0505  0088               	movwf	8	;volatile
  3004  0506  0008               	return
  3005  0507                     __end_of_set_lcd_data:	
  3006                           
  3007                           	psect	text18
  3008  04A3                     __ptext18:	
  3009 ;; *************** function _adc_initialize *****************
  3010 ;; Defined at:
  3011 ;;		line 28 in file "adc.c"
  3012 ;; Parameters:    Size  Location     Type
  3013 ;;		None
  3014 ;; Auto vars:     Size  Location     Type
  3015 ;;		None
  3016 ;; Return value:  Size  Location     Type
  3017 ;;                  1    wreg      void 
  3018 ;; Registers used:
  3019 ;;		None
  3020 ;; Tracked objects:
  3021 ;;		On entry : 0/0
  3022 ;;		On exit  : 0/0
  3023 ;;		Unchanged: 0/0
  3024 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3025 ;;      Params:         0       0       0       0       0
  3026 ;;      Locals:         0       0       0       0       0
  3027 ;;      Temps:          0       0       0       0       0
  3028 ;;      Totals:         0       0       0       0       0
  3029 ;;Total ram usage:        0 bytes
  3030 ;; Hardware stack levels used:    1
  3031 ;; Hardware stack levels required when called:    1
  3032 ;; This function calls:
  3033 ;;		Nothing
  3034 ;; This function is called by:
  3035 ;;		_main
  3036 ;; This function uses a non-reentrant model
  3037 ;;
  3038                           
  3039                           
  3040                           ;psect for function _adc_initialize
  3041  04A3                     _adc_initialize:	
  3042                           
  3043                           ;adc.c: 31: ADCS1 = 1;
  3044                           
  3045                           ;incstack = 0
  3046                           ; Regs used in _adc_initialize: []
  3047  04A3  1283               	bcf	3,5	;RP0=0, select bank0
  3048  04A4  1303               	bcf	3,6	;RP1=0, select bank0
  3049  04A5  179F               	bsf	31,7	;volatile
  3050                           
  3051                           ;adc.c: 32: ADCS0 = 0;
  3052  04A6  131F               	bcf	31,6	;volatile
  3053                           
  3054                           ;adc.c: 39: ADFM = 1;
  3055  04A7  1683               	bsf	3,5	;RP0=1, select bank1
  3056  04A8  1303               	bcf	3,6	;RP1=0, select bank1
  3057  04A9  179F               	bsf	31,7	;volatile
  3058                           
  3059                           ;adc.c: 41: PCFG3 = 0;
  3060  04AA  119F               	bcf	31,3	;volatile
  3061                           
  3062                           ;adc.c: 42: PCFG2 = 0;
  3063  04AB  111F               	bcf	31,2	;volatile
  3064                           
  3065                           ;adc.c: 43: PCFG1 = 0;
  3066  04AC  109F               	bcf	31,1	;volatile
  3067                           
  3068                           ;adc.c: 44: PCFG0 = 0;
  3069  04AD  101F               	bcf	31,0	;volatile
  3070                           
  3071                           ;adc.c: 47: ADON = 0;
  3072  04AE  1283               	bcf	3,5	;RP0=0, select bank0
  3073  04AF  1303               	bcf	3,6	;RP1=0, select bank0
  3074  04B0  101F               	bcf	31,0	;volatile
  3075  04B1  0008               	return
  3076  04B2                     __end_of_adc_initialize:	
  3077                           
  3078                           	psect	text19
  3079  0507                     __ptext19:	
  3080 ;; *************** function _InitApp *****************
  3081 ;; Defined at:
  3082 ;;		line 22 in file "user.c"
  3083 ;; Parameters:    Size  Location     Type
  3084 ;;		None
  3085 ;; Auto vars:     Size  Location     Type
  3086 ;;		None
  3087 ;; Return value:  Size  Location     Type
  3088 ;;                  1    wreg      void 
  3089 ;; Registers used:
  3090 ;;		None
  3091 ;; Tracked objects:
  3092 ;;		On entry : 0/0
  3093 ;;		On exit  : 0/0
  3094 ;;		Unchanged: 0/0
  3095 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3096 ;;      Params:         0       0       0       0       0
  3097 ;;      Locals:         0       0       0       0       0
  3098 ;;      Temps:          0       0       0       0       0
  3099 ;;      Totals:         0       0       0       0       0
  3100 ;;Total ram usage:        0 bytes
  3101 ;; Hardware stack levels used:    1
  3102 ;; Hardware stack levels required when called:    1
  3103 ;; This function calls:
  3104 ;;		Nothing
  3105 ;; This function is called by:
  3106 ;;		_main
  3107 ;; This function uses a non-reentrant model
  3108 ;;
  3109                           
  3110                           
  3111                           ;psect for function _InitApp
  3112  0507                     _InitApp:	
  3113                           
  3114                           ;incstack = 0
  3115                           ; Regs used in _InitApp: []
  3116  0507  0008               	return
  3117  0508                     __end_of_InitApp:	
  3118                           
  3119                           	psect	text20
  3120  03F4                     __ptext20:	
  3121 ;; *************** function _I2C_Master_Init *****************
  3122 ;; Defined at:
  3123 ;;		line 5 in file "i2c.c"
  3124 ;; Parameters:    Size  Location     Type
  3125 ;;  c               4    8[BANK0 ] const unsigned long 
  3126 ;; Auto vars:     Size  Location     Type
  3127 ;;		None
  3128 ;; Return value:  Size  Location     Type
  3129 ;;                  1    wreg      void 
  3130 ;; Registers used:
  3131 ;;		wreg, status,2, status,0, pclath, cstack
  3132 ;; Tracked objects:
  3133 ;;		On entry : 0/0
  3134 ;;		On exit  : 0/0
  3135 ;;		Unchanged: 0/0
  3136 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3137 ;;      Params:         0       4       0       0       0
  3138 ;;      Locals:         0       0       0       0       0
  3139 ;;      Temps:          0       4       0       0       0
  3140 ;;      Totals:         0       8       0       0       0
  3141 ;;Total ram usage:        8 bytes
  3142 ;; Hardware stack levels used:    1
  3143 ;; Hardware stack levels required when called:    2
  3144 ;; This function calls:
  3145 ;;		___lldiv
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           
  3152                           ;psect for function _I2C_Master_Init
  3153  03F4                     _I2C_Master_Init:	
  3154                           
  3155                           ;i2c.c: 7: SSPCON = 0b00101000;
  3156                           
  3157                           ;incstack = 0
  3158                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  3159  03F4  3028               	movlw	40
  3160  03F5  1283               	bcf	3,5	;RP0=0, select bank0
  3161  03F6  1303               	bcf	3,6	;RP1=0, select bank0
  3162  03F7  0094               	movwf	20	;volatile
  3163                           
  3164                           ;i2c.c: 8: SSPCON2 = 0;
  3165  03F8  1683               	bsf	3,5	;RP0=1, select bank1
  3166  03F9  1303               	bcf	3,6	;RP1=0, select bank1
  3167  03FA  0191               	clrf	17	;volatile
  3168                           
  3169                           ;i2c.c: 9: SSPADD = (20000000/(4*c))-1;
  3170  03FB  1283               	bcf	3,5	;RP0=0, select bank0
  3171  03FC  1303               	bcf	3,6	;RP1=0, select bank0
  3172  03FD  0828               	movf	I2C_Master_Init@c,w
  3173  03FE  00AC               	movwf	??_I2C_Master_Init
  3174  03FF  0829               	movf	I2C_Master_Init@c+1,w
  3175  0400  00AD               	movwf	??_I2C_Master_Init+1
  3176  0401  082A               	movf	I2C_Master_Init@c+2,w
  3177  0402  00AE               	movwf	??_I2C_Master_Init+2
  3178  0403  082B               	movf	I2C_Master_Init@c+3,w
  3179  0404  00AF               	movwf	??_I2C_Master_Init+3
  3180  0405  3002               	movlw	2
  3181  0406                     u925:	
  3182  0406  1003               	clrc
  3183  0407  0DAC               	rlf	??_I2C_Master_Init,f
  3184  0408  0DAD               	rlf	??_I2C_Master_Init+1,f
  3185  0409  0DAE               	rlf	??_I2C_Master_Init+2,f
  3186  040A  0DAF               	rlf	??_I2C_Master_Init+3,f
  3187  040B  3EFF               	addlw	-1
  3188  040C  1D03               	skipz
  3189  040D  2C06               	goto	u925
  3190  040E  082F               	movf	??_I2C_Master_Init+3,w
  3191  040F  00A3               	movwf	___lldiv@divisor+3
  3192  0410  082E               	movf	??_I2C_Master_Init+2,w
  3193  0411  00A2               	movwf	___lldiv@divisor+2
  3194  0412  082D               	movf	??_I2C_Master_Init+1,w
  3195  0413  00A1               	movwf	___lldiv@divisor+1
  3196  0414  082C               	movf	??_I2C_Master_Init,w
  3197  0415  00A0               	movwf	___lldiv@divisor
  3198  0416  3001               	movlw	1
  3199  0417  00A7               	movwf	___lldiv@dividend+3
  3200  0418  3031               	movlw	49
  3201  0419  00A6               	movwf	___lldiv@dividend+2
  3202  041A  302D               	movlw	45
  3203  041B  00A5               	movwf	___lldiv@dividend+1
  3204  041C  3000               	movlw	0
  3205  041D  00A4               	movwf	___lldiv@dividend
  3206  041E  120A  118A  2300   	fcall	___lldiv
  3207  0421  1283               	bcf	3,5	;RP0=0, select bank0
  3208  0422  1303               	bcf	3,6	;RP1=0, select bank0
  3209  0423  0820               	movf	?___lldiv,w
  3210  0424  3EFF               	addlw	255
  3211  0425  1683               	bsf	3,5	;RP0=1, select bank1
  3212  0426  1303               	bcf	3,6	;RP1=0, select bank1
  3213  0427  0093               	movwf	19	;volatile
  3214                           
  3215                           ;i2c.c: 10: SSPSTAT = 0;
  3216  0428  0194               	clrf	20	;volatile
  3217                           
  3218                           ;i2c.c: 11: TRISC3 = 1;
  3219  0429  1587               	bsf	7,3	;volatile
  3220                           
  3221                           ;i2c.c: 12: TRISC4 = 1;
  3222  042A  1607               	bsf	7,4	;volatile
  3223  042B  0008               	return
  3224  042C                     __end_of_I2C_Master_Init:	
  3225                           
  3226                           	psect	text21
  3227  0300                     __ptext21:	
  3228 ;; *************** function ___lldiv *****************
  3229 ;; Defined at:
  3230 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  3231 ;; Parameters:    Size  Location     Type
  3232 ;;  divisor         4    0[BANK0 ] unsigned long 
  3233 ;;  dividend        4    4[BANK0 ] unsigned long 
  3234 ;; Auto vars:     Size  Location     Type
  3235 ;;  quotient        4    5[COMMON] unsigned long 
  3236 ;;  counter         1    9[COMMON] unsigned char 
  3237 ;; Return value:  Size  Location     Type
  3238 ;;                  4    0[BANK0 ] unsigned long 
  3239 ;; Registers used:
  3240 ;;		wreg, status,2, status,0
  3241 ;; Tracked objects:
  3242 ;;		On entry : 0/0
  3243 ;;		On exit  : 0/0
  3244 ;;		Unchanged: 0/0
  3245 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3246 ;;      Params:         0       8       0       0       0
  3247 ;;      Locals:         5       0       0       0       0
  3248 ;;      Temps:          1       0       0       0       0
  3249 ;;      Totals:         6       8       0       0       0
  3250 ;;Total ram usage:       14 bytes
  3251 ;; Hardware stack levels used:    1
  3252 ;; Hardware stack levels required when called:    1
  3253 ;; This function calls:
  3254 ;;		Nothing
  3255 ;; This function is called by:
  3256 ;;		_I2C_Master_Init
  3257 ;; This function uses a non-reentrant model
  3258 ;;
  3259                           
  3260                           
  3261                           ;psect for function ___lldiv
  3262  0300                     ___lldiv:	
  3263                           
  3264                           ;incstack = 0
  3265                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  3266  0300  3000               	movlw	0
  3267  0301  00F8               	movwf	___lldiv@quotient+3
  3268  0302  3000               	movlw	0
  3269  0303  00F7               	movwf	___lldiv@quotient+2
  3270  0304  3000               	movlw	0
  3271  0305  00F6               	movwf	___lldiv@quotient+1
  3272  0306  3000               	movlw	0
  3273  0307  00F5               	movwf	___lldiv@quotient
  3274  0308  1283               	bcf	3,5	;RP0=0, select bank0
  3275  0309  1303               	bcf	3,6	;RP1=0, select bank0
  3276  030A  0823               	movf	___lldiv@divisor+3,w
  3277  030B  0422               	iorwf	___lldiv@divisor+2,w
  3278  030C  0421               	iorwf	___lldiv@divisor+1,w
  3279  030D  0420               	iorwf	___lldiv@divisor,w
  3280  030E  1903               	skipnz
  3281  030F  2B57               	goto	l1275
  3282  0310  01F9               	clrf	___lldiv@counter
  3283  0311  0AF9               	incf	___lldiv@counter,f
  3284  0312                     l1261:	
  3285  0312  1BA3               	btfsc	___lldiv@divisor+3,7
  3286  0313  2B22               	goto	l1263
  3287  0314  3001               	movlw	1
  3288  0315  00F4               	movwf	??___lldiv
  3289  0316                     u825:	
  3290  0316  1003               	clrc
  3291  0317  0DA0               	rlf	___lldiv@divisor,f
  3292  0318  0DA1               	rlf	___lldiv@divisor+1,f
  3293  0319  0DA2               	rlf	___lldiv@divisor+2,f
  3294  031A  0DA3               	rlf	___lldiv@divisor+3,f
  3295  031B  0BF4               	decfsz	??___lldiv,f
  3296  031C  2B16               	goto	u825
  3297  031D  3001               	movlw	1
  3298  031E  00F4               	movwf	??___lldiv
  3299  031F  0874               	movf	??___lldiv,w
  3300  0320  07F9               	addwf	___lldiv@counter,f
  3301  0321  2B12               	goto	l1261
  3302  0322                     l1263:	
  3303  0322  3001               	movlw	1
  3304  0323  00F4               	movwf	??___lldiv
  3305  0324                     u845:	
  3306  0324  1003               	clrc
  3307  0325  0DF5               	rlf	___lldiv@quotient,f
  3308  0326  0DF6               	rlf	___lldiv@quotient+1,f
  3309  0327  0DF7               	rlf	___lldiv@quotient+2,f
  3310  0328  0DF8               	rlf	___lldiv@quotient+3,f
  3311  0329  0BF4               	decfsz	??___lldiv,f
  3312  032A  2B24               	goto	u845
  3313  032B  0823               	movf	___lldiv@divisor+3,w
  3314  032C  0227               	subwf	___lldiv@dividend+3,w
  3315  032D  1D03               	skipz
  3316  032E  2B39               	goto	u855
  3317  032F  0822               	movf	___lldiv@divisor+2,w
  3318  0330  0226               	subwf	___lldiv@dividend+2,w
  3319  0331  1D03               	skipz
  3320  0332  2B39               	goto	u855
  3321  0333  0821               	movf	___lldiv@divisor+1,w
  3322  0334  0225               	subwf	___lldiv@dividend+1,w
  3323  0335  1D03               	skipz
  3324  0336  2B39               	goto	u855
  3325  0337  0820               	movf	___lldiv@divisor,w
  3326  0338  0224               	subwf	___lldiv@dividend,w
  3327  0339                     u855:	
  3328  0339  1C03               	skipc
  3329  033A  2B4A               	goto	l1271
  3330  033B  0820               	movf	___lldiv@divisor,w
  3331  033C  02A4               	subwf	___lldiv@dividend,f
  3332  033D  0821               	movf	___lldiv@divisor+1,w
  3333  033E  1C03               	skipc
  3334  033F  0F21               	incfsz	___lldiv@divisor+1,w
  3335  0340  02A5               	subwf	___lldiv@dividend+1,f
  3336  0341  0822               	movf	___lldiv@divisor+2,w
  3337  0342  1C03               	skipc
  3338  0343  0F22               	incfsz	___lldiv@divisor+2,w
  3339  0344  02A6               	subwf	___lldiv@dividend+2,f
  3340  0345  0823               	movf	___lldiv@divisor+3,w
  3341  0346  1C03               	skipc
  3342  0347  0F23               	incfsz	___lldiv@divisor+3,w
  3343  0348  02A7               	subwf	___lldiv@dividend+3,f
  3344  0349  1475               	bsf	___lldiv@quotient,0
  3345  034A                     l1271:	
  3346  034A  3001               	movlw	1
  3347  034B                     u865:	
  3348  034B  1003               	clrc
  3349  034C  0CA3               	rrf	___lldiv@divisor+3,f
  3350  034D  0CA2               	rrf	___lldiv@divisor+2,f
  3351  034E  0CA1               	rrf	___lldiv@divisor+1,f
  3352  034F  0CA0               	rrf	___lldiv@divisor,f
  3353  0350  3EFF               	addlw	-1
  3354  0351  1D03               	skipz
  3355  0352  2B4B               	goto	u865
  3356  0353  3001               	movlw	1
  3357  0354  02F9               	subwf	___lldiv@counter,f
  3358  0355  1D03               	btfss	3,2
  3359  0356  2B22               	goto	l1263
  3360  0357                     l1275:	
  3361  0357  0878               	movf	___lldiv@quotient+3,w
  3362  0358  00A3               	movwf	?___lldiv+3
  3363  0359  0877               	movf	___lldiv@quotient+2,w
  3364  035A  00A2               	movwf	?___lldiv+2
  3365  035B  0876               	movf	___lldiv@quotient+1,w
  3366  035C  00A1               	movwf	?___lldiv+1
  3367  035D  0875               	movf	___lldiv@quotient,w
  3368  035E  00A0               	movwf	?___lldiv
  3369  035F  0008               	return
  3370  0360                     __end_of___lldiv:	
  3371                           
  3372                           	psect	text22
  3373  04C8                     __ptext22:	
  3374 ;; *************** function _isr *****************
  3375 ;; Defined at:
  3376 ;;		line 23 in file "interrupts.c"
  3377 ;; Parameters:    Size  Location     Type
  3378 ;;		None
  3379 ;; Auto vars:     Size  Location     Type
  3380 ;;		None
  3381 ;; Return value:  Size  Location     Type
  3382 ;;                  1    wreg      void 
  3383 ;; Registers used:
  3384 ;;		None
  3385 ;; Tracked objects:
  3386 ;;		On entry : 0/0
  3387 ;;		On exit  : 0/0
  3388 ;;		Unchanged: 0/0
  3389 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3390 ;;      Params:         0       0       0       0       0
  3391 ;;      Locals:         0       0       0       0       0
  3392 ;;      Temps:          4       0       0       0       0
  3393 ;;      Totals:         4       0       0       0       0
  3394 ;;Total ram usage:        4 bytes
  3395 ;; Hardware stack levels used:    1
  3396 ;; This function calls:
  3397 ;;		Nothing
  3398 ;; This function is called by:
  3399 ;;		Interrupt level 1
  3400 ;; This function uses a non-reentrant model
  3401 ;;
  3402                           
  3403                           
  3404                           ;psect for function _isr
  3405  04C8                     _isr:	
  3406  04C8  0873               	movf	??_isr+3,w
  3407  04C9  00FF               	movwf	127
  3408  04CA  0872               	movf	??_isr+2,w
  3409  04CB  008A               	movwf	10
  3410  04CC  0871               	movf	??_isr+1,w
  3411  04CD  0084               	movwf	4
  3412  04CE  0E70               	swapf	??_isr^(0+-128),w
  3413  04CF  0083               	movwf	3
  3414  04D0  0EFE               	swapf	126,f
  3415  04D1  0E7E               	swapf	126,w
  3416  04D2  0009               	retfie
  3417  04D3                     __end_of_isr:	
  3418  007E                     btemp	set	126	;btemp
  3419  007E                     wtemp0	set	126
  3420                           
  3421                           	psect	intentry
  3422  0004                     __pintentry:	
  3423                           ;incstack = 0
  3424                           ; Regs used in _isr: []
  3425                           
  3426  0004                     interrupt_function:	
  3427  007E                     saved_w	set	btemp
  3428  0004  00FE               	movwf	btemp
  3429  0005  0E03               	swapf	3,w
  3430  0006  00F0               	movwf	??_isr
  3431  0007  0804               	movf	4,w
  3432  0008  00F1               	movwf	??_isr+1
  3433  0009  080A               	movf	10,w
  3434  000A  00F2               	movwf	??_isr+2
  3435  000B  1283               	bcf	3,5	;RP0=0, select bank0
  3436  000C  1303               	bcf	3,6	;RP1=0, select bank0
  3437  000D  087F               	movf	btemp+1,w
  3438  000E  00F3               	movwf	??_isr+3
  3439  000F  120A  118A  2CC8   	ljmp	_isr


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     34      44
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    romputstr@send	PTR unsigned char  size(1) Largest target is 16
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMMON

    _main->_romputstr
    _uart_init->___aldiv
    _romputstr->_romWrite
    _romWrite->_I2C_Master_Write
    _romRead->_I2C_Master_Read
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_init->___aldiv
    _romputstr->_romWrite
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    3905
                                             30 BANK0      4     4      0
                    _I2C_Master_Init
                            _InitApp
                     _adc_initialize
                     _lcd_initialize
                            _romRead
                          _romputstr
                          _uart_init
                          _uart_send
 ---------------------------------------------------------------------------------
 (1) _uart_send                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           18    14      4     721
                                              5 COMMON     2     2      0
                                             14 BANK0     16    12      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              4 COMMON     1     1      0
                                              0 BANK0     14     6      8
 ---------------------------------------------------------------------------------
 (1) _romputstr                                            4     4      0     918
                                              9 COMMON     1     1      0
                                              4 BANK0      3     3      0
                           _romWrite
 ---------------------------------------------------------------------------------
 (2) _romWrite                                             7     4      3     733
                                              6 COMMON     3     0      3
                                              0 BANK0      4     4      0
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (1) _romRead                                              8     6      2     697
                                              0 BANK0      8     6      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Write                                     2     0      2     340
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2      98
                                              4 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (4) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              4 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _InitApp
   _adc_initialize
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _romRead
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait
   _romputstr
     _romWrite
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _uart_init
     ___aldiv
   _uart_send

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      36       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     22      2C       5       55.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      36      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 09 13:29:31 2018

                        pc 0002                __CFG_CP$OFF 0000                         l55 0220  
                       fsr 0004                        l225 04D3                        l434 0122  
                      l279 04DD                        _RB4 0034                        _RB5 0035  
                      u600 04C4                        _PEN 048A               __CFG_CPD$OFF 0000  
                      u620 04B9                        _SEN 0488                        u825 0316  
                      u905 03A5                        u745 0147                        u690 0484  
                      u845 0324                        u925 0406                        u765 0155  
                      u950 006B                        u855 0339                        u775 016A  
                      u951 006C                        u935 0030                        u952 0071  
                      u865 034B                        u785 017C                        u953 0072  
                      u945 0051                        u990 00D4                        u895 0398  
                      u991 00D5                        u975 0099                        u992 00DA  
                      u993 00DB                        u985 00BA                        _isr 04C8  
                      fsr0 0004               __CFG_FOSC$HS 0000          set_lcd_e@b_output 0074  
             __CFG_LVP$OFF 0000                       l1209 0487                       l1233 0143  
                     l1225 0133                       l1251 0196                       l1243 017B  
                     l1235 0153                       l1261 0312                       l1181 02B2  
                     l1271 034A                       l1263 0322                       l1247 0188  
                     l1335 00F5                       l1423 01EF                       l1185 02C1  
                     l1275 0357                       l1363 0238                       l1429 0207  
                     l1367 024B                       l1287 0365                       l1289 038F  
                     _ADFM 04FF                       ?_isr 0070                       _ADON 00F8  
                     _CHS0 00FB                       _CHS1 00FC                       _CHS2 00FD  
                     STR_1 0493                       _BRGH 04C2                       _CREN 00C4  
                     u1055 01ED                       u1307 03C8                       u1075 021E  
                     u1317 0443                       u1327 0451                       u1297 02FB  
                     _RCIE 0465                       _RCEN 048B                       _RCIF 0065  
                     _OERR 00C1                       _SPEN 00C7                       _RSEN 0489  
                     _TXEN 04C5                       _TXIF 0064                       _SYNC 04C4  
             __CFG_WRT$OFF 0000                       _main 019F                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0012            __end_of_InitApp 0508  
        romRead@opcodeRead 0026                      ??_isr 0070           ?_I2C_Master_Init 0028  
         ?_I2C_Master_Read 0074           ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070  
          __end_of___aldiv 019F                      _ADCS0 00FE                      _ADCS1 00FF  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
            __CFG_WDTE$OFF 0000            __end_of___lldiv 0360                      _PCFG0 04F8  
                    _PCFG1 04F9                      _PCFG2 04FA                      _PCFG3 04FB  
                    _RCREG 001A                      _SPBRG 0099                      _PORTA 0005  
                    _PORTB 0006                      _PORTC 0007                      _PORTD 0008  
                    _TRISA 0085                      _TRISB 0086                      _TRISC 0087  
                    _TRISD 0088                      _TXREG 0019       send_lcd_data@uc_data 0075  
            __CFG_PWRTE$ON 0000                      main@i 0040                      pclath 000A  
          __end_of_romRead 029F                      status 0003                      wtemp0 007E  
          __initialization 0015          send_lcd_data@b_rs 0078               __end_of_main 0221  
    __end_of_send_lcd_data 0461                     ??_main 003E          ?_I2C_Master_Start 0070  
        ?_I2C_Master_Write 0074         ??_I2C_Master_Start 0074         ??_I2C_Master_Write 0076  
                   _ADRESH 001E                     _ADRESL 009E                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _TRISC6 043E  
                   _TRISC7 043F                     _SSPCON 0014                     _SSPBUF 0013  
                ??_InitApp 0074                  ??___aldiv 0074    __size_of_adc_initialize 000F  
                ??___lldiv 0074           __end_of_romWrite 0300                     saved_w 007E  
                ??_romRead 0022           ??_lcd_initialize 0020    __end_of__initialization 0021  
           __pcstackCOMMON 0070         __size_of_lcd_clear 0007                 __pbssBANK0 0042  
               __pmaintext 019F                 __pintentry 0004         __size_of_set_lcd_e 000B  
       __size_of_uart_init 00EB         __size_of_uart_send 0008             romRead@addrLSB 0027  
                  _SSPCON2 0091                    _SSPSTAT 0094         __size_of_romputstr 005C  
               __stringtab 048D              ?_set_lcd_data 0070                    _InitApp 0507  
        __end_of_lcd_clear 0501                  ?_romWrite 0076                    ___aldiv 0110  
           _adc_initialize 04A3                    ___lldiv 0300                    __ptext1 04DC  
                  __ptext2 0025                    __ptext3 0110                    __ptext4 0360  
                  __ptext5 029F                    __ptext6 0221                    __ptext7 04E4  
                  __ptext8 04EC                    __ptext9 04F3                romRead@addr 0020  
              romRead@temp 0024               __size_of_isr 000B           ___aldiv@dividend 0024  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002C                    _romRead 0221  
 __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007       end_of_initialization 0021  
           ??_set_lcd_data 0074          __end_of_set_lcd_e 04C8  __size_of_I2C_Master_Start 0007  
        __end_of_uart_init 0110  __size_of_I2C_Master_Write 0008          __end_of_uart_send 04E4  
          ___lldiv@divisor 0020            ___lldiv@counter 0079     __end_of_adc_initialize 04B2  
               _set_lcd_rs 04B2                 ??_romWrite 0020           ___aldiv@quotient 002A  
         I2C_Master_Init@c 0028           I2C_Master_Read@a 0074          __end_of_romputstr 03BC  
            romputstr@send 0024     __size_of_send_lcd_data 0035            ?_adc_initialize 0070  
      start_initialization 0015         set_lcd_rs@b_output 0074                __end_of_isr 04D3  
        ??_I2C_Master_Init 002C          ??_I2C_Master_Read 0076          ??_I2C_Master_Wait 0074  
        ??_I2C_Master_Stop 0074                ?_set_lcd_rs 0070              _send_lcd_data 042C  
     __end_of_set_lcd_data 0507                  ___latbits 0002              __pcstackBANK0 0020  
         uart_send@uc_data 0074                   ?_InitApp 0070           _I2C_Master_Start 04F3  
         _I2C_Master_Write 04E4    __size_of_lcd_initialize 0038                   ?___aldiv 0020  
                 ?___lldiv 0020          __size_of_romWrite 0061                  _lcd_clear 04FA  
           ?_send_lcd_data 0075                  __pstrings 048D              romRead@opcode 0025  
                 ?_romRead 0020        __size_of_set_lcd_rs 000B        set_lcd_data@uc_data 0074  
          ___aldiv@divisor 0020          interrupt_function 0004            ___aldiv@counter 0028  
                _set_lcd_e 04BD                   _GO_nDONE 00FA                  _uart_init 0025  
                _uart_send 04DC                 uart_init@x 0075                 ?_lcd_clear 0070  
              __stringbase 0492                  _romputstr 0360        I2C_Master_Read@temp 0078  
         ??_adc_initialize 0074           __size_of_InitApp 0001                 ?_set_lcd_e 0070  
               ?_uart_init 002E                 ?_uart_send 0070      __size_of_set_lcd_data 0006  
          ??_send_lcd_data 0076           __size_of___aldiv 008F                 romputstr@i 0025  
         __size_of___lldiv 0060         __end_of__stringtab 0493                 ?_romputstr 0070  
          _I2C_Master_Init 03F4            _I2C_Master_Read 0461            _I2C_Master_Wait 04D3  
          _I2C_Master_Stop 04EC                   __ptext10 0461                   __ptext11 04D3  
                 __ptext20 03F4                   __ptext12 03BC                   __ptext21 0300  
                 __ptext13 04FA                   __ptext22 04C8                   __ptext14 042C  
                 __ptext15 04B2                   __ptext16 04BD                   __ptext17 0501  
                 __ptext18 04A3                   __ptext19 0507           __size_of_romRead 007E  
            __size_of_main 0082            romWrite@addrLSB 0023               _set_lcd_data 0501  
           _lcd_initialize 03BC               ??_set_lcd_rs 0074                   _romWrite 029F  
                 main@data 003F                ??_lcd_clear 0079   __end_of_I2C_Master_Start 04FA  
 __end_of_I2C_Master_Write 04EC         __end_of_set_lcd_rs 04BD                   intlevel1 0000  
        uart_init@baudrate 002E     __end_of_lcd_initialize 03F4           ___lldiv@dividend 0024  
                stringcode 048D                ??_set_lcd_e 0074                ??_uart_init 0032  
           romWrite@opcode 0022                ??_uart_send 0074    __end_of_I2C_Master_Init 042C  
  __end_of_I2C_Master_Read 048D    __end_of_I2C_Master_Wait 04DC    __end_of_I2C_Master_Stop 04F3  
              ??_romputstr 0079               lcd_bcd@F1134 0042           ___lldiv@quotient 0075  
        I2C_Master_Write@d 0074                   stringdir 048D                   stringtab 048D  
             ___aldiv@sign 0029               romWrite@addr 0076               romWrite@data 0078  
          ?_lcd_initialize 0070  
