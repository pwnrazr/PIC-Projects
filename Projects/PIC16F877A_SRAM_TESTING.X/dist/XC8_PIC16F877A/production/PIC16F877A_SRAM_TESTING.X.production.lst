

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Apr 23 19:34:22 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  000E                     	;# 
   379  000F                     	;# 
   380  0010                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001D                     	;# 
   396  001E                     	;# 
   397  001F                     	;# 
   398  0081                     	;# 
   399  0085                     	;# 
   400  0086                     	;# 
   401  0087                     	;# 
   402  0088                     	;# 
   403  0089                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  008E                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0094                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009C                     	;# 
   414  009D                     	;# 
   415  009E                     	;# 
   416  009F                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  010F                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  0009                     _PORTE	set	9
   424  0008                     _PORTD	set	8
   425  0007                     _PORTC	set	7
   426  0006                     _PORTB	set	6
   427  0005                     _PORTA	set	5
   428  0034                     _RB4	set	52
   429  0035                     _RB5	set	53
   430  0030                     _RB0	set	48
   431  0038                     _RC0	set	56
   432  0032                     _RB2	set	50
   433  0033                     _RB3	set	51
   434  003B                     _RC3	set	59
   435  003C                     _RC4	set	60
   436  0036                     _RB6	set	54
   437  0037                     _RB7	set	55
   438  003A                     _RC2	set	58
   439  0039                     _RC1	set	57
   440  004A                     _RE2	set	74
   441  0049                     _RE1	set	73
   442  0048                     _RE0	set	72
   443  002D                     _RA5	set	45
   444  002C                     _RA4	set	44
   445  002B                     _RA3	set	43
   446  002A                     _RA2	set	42
   447  0029                     _RA1	set	41
   448  0028                     _RA0	set	40
   449  003E                     _RC6	set	62
   450  003F                     _RC7	set	63
   451  003D                     _RC5	set	61
   452  0089                     _TRISE	set	137
   453  0088                     _TRISD	set	136
   454  0087                     _TRISC	set	135
   455  0086                     _TRISB	set	134
   456  0085                     _TRISA	set	133
   457                           
   458                           	psect	strings
   459  0399                     __pstrings:	
   460  0399                     stringtab:	
   461  0399                     __stringtab:	
   462  0399                     stringcode:	
   463                           ;	String table - string pointers are 1 byte each
   464                           
   465  0399                     stringdir:	
   466  0399  3003               	movlw	high stringdir
   467  039A  008A               	movwf	10
   468  039B  0804               	movf	4,w
   469  039C  0A84               	incf	4,f
   470  039D  0782               	addwf	2,f
   471  039E                     __stringbase:	
   472  039E  3400               	retlw	0
   473  039F                     __end_of__stringtab:	
   474  039F                     STR_2:	
   475  039F  3452               	retlw	82	;'R'
   476  03A0  3465               	retlw	101	;'e'
   477  03A1  3461               	retlw	97	;'a'
   478  03A2  3464               	retlw	100	;'d'
   479  03A3  3469               	retlw	105	;'i'
   480  03A4  346E               	retlw	110	;'n'
   481  03A5  3467               	retlw	103	;'g'
   482  03A6  3400               	retlw	0
   483  03A7                     STR_1:	
   484  03A7  3457               	retlw	87	;'W'
   485  03A8  3472               	retlw	114	;'r'
   486  03A9  3469               	retlw	105	;'i'
   487  03AA  3474               	retlw	116	;'t'
   488  03AB  3469               	retlw	105	;'i'
   489  03AC  346E               	retlw	110	;'n'
   490  03AD  3467               	retlw	103	;'g'
   491  03AE  3400               	retlw	0
   492                           
   493                           ; #config settings
   494  0000                     
   495                           	psect	cinit
   496  0015                     start_initialization:	
   497  0015                     __initialization:	
   498                           
   499                           ; Clear objects allocated to BANK0
   500  0015  1283               	bcf	3,5	;RP0=0, select bank0
   501  0016  1303               	bcf	3,6	;RP1=0, select bank0
   502  0017  01C7               	clrf	__pbssBANK0& (0+127)
   503  0018  01C8               	clrf	(__pbssBANK0+1)& (0+127)
   504  0019  01C9               	clrf	(__pbssBANK0+2)& (0+127)
   505  001A  01CA               	clrf	(__pbssBANK0+3)& (0+127)
   506  001B  01CB               	clrf	(__pbssBANK0+4)& (0+127)
   507  001C  01CC               	clrf	(__pbssBANK0+5)& (0+127)
   508  001D  01CD               	clrf	(__pbssBANK0+6)& (0+127)
   509  001E  01CE               	clrf	(__pbssBANK0+7)& (0+127)
   510  001F  01CF               	clrf	(__pbssBANK0+8)& (0+127)
   511  0020  01D0               	clrf	(__pbssBANK0+9)& (0+127)
   512  0021                     end_of_initialization:	
   513                           ;End of C runtime variable initialization code
   514                           
   515  0021                     __end_of__initialization:	
   516  0021  0183               	clrf	3
   517  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   518                           
   519                           	psect	bssBANK0
   520  0047                     __pbssBANK0:	
   521  0047                     lcd_bcd@F1134:	
   522  0047                     	ds	10
   523                           
   524                           	psect	cstackCOMMON
   525  0070                     __pcstackCOMMON:	
   526  0070                     ?_InitApp:	
   527  0070                     ?_lcd_initialize:	
   528                           ; 1 bytes @ 0x0
   529                           
   530  0070                     ?_lcd_home:	
   531                           ; 1 bytes @ 0x0
   532                           
   533  0070                     ?_lcd_putstr:	
   534                           ; 1 bytes @ 0x0
   535                           
   536  0070                     ?_lcd_goto:	
   537                           ; 1 bytes @ 0x0
   538                           
   539  0070                     ?_set_lcd_e:	
   540                           ; 1 bytes @ 0x0
   541                           
   542  0070                     ?_lcd_clear:	
   543                           ; 1 bytes @ 0x0
   544                           
   545  0070                     ?_set_lcd_rs:	
   546                           ; 1 bytes @ 0x0
   547                           
   548  0070                     ?_set_lcd_data:	
   549                           ; 1 bytes @ 0x0
   550                           
   551  0070                     ?_isr:	
   552                           ; 1 bytes @ 0x0
   553                           
   554  0070                     ??_isr:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_main:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_lcd_2ndline:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_lcd_putchar:	
   564                           ; 1 bytes @ 0x0
   565                           
   566                           
   567                           ; 1 bytes @ 0x0
   568  0070                     	ds	4
   569  0074                     ??_InitApp:	
   570  0074                     ??_set_lcd_e:	
   571                           ; 1 bytes @ 0x4
   572                           
   573  0074                     ??_set_lcd_rs:	
   574                           ; 1 bytes @ 0x4
   575                           
   576  0074                     ??_set_lcd_data:	
   577                           ; 1 bytes @ 0x4
   578                           
   579  0074                     ?___lwdiv:	
   580                           ; 1 bytes @ 0x4
   581                           
   582  0074                     ?___lwmod:	
   583                           ; 2 bytes @ 0x4
   584                           
   585  0074                     set_lcd_e@b_output:	
   586                           ; 2 bytes @ 0x4
   587                           
   588  0074                     set_lcd_rs@b_output:	
   589                           ; 1 bytes @ 0x4
   590                           
   591  0074                     set_lcd_data@uc_data:	
   592                           ; 1 bytes @ 0x4
   593                           
   594  0074                     ___lwdiv@divisor:	
   595                           ; 1 bytes @ 0x4
   596                           
   597  0074                     ___lwmod@divisor:	
   598                           ; 2 bytes @ 0x4
   599                           
   600                           
   601                           ; 2 bytes @ 0x4
   602  0074                     	ds	1
   603  0075                     ?_send_lcd_data:	
   604  0075                     send_lcd_data@uc_data:	
   605                           ; 1 bytes @ 0x5
   606                           
   607                           
   608                           ; 1 bytes @ 0x5
   609  0075                     	ds	1
   610  0076                     ??_send_lcd_data:	
   611  0076                     ___lwdiv@dividend:	
   612                           ; 1 bytes @ 0x6
   613                           
   614  0076                     ___lwmod@dividend:	
   615                           ; 2 bytes @ 0x6
   616                           
   617                           
   618                           ; 2 bytes @ 0x6
   619  0076                     	ds	2
   620  0078                     ??___lwdiv:	
   621  0078                     ??___lwmod:	
   622                           ; 1 bytes @ 0x8
   623                           
   624  0078                     send_lcd_data@b_rs:	
   625                           ; 1 bytes @ 0x8
   626                           
   627                           
   628                           ; 1 bytes @ 0x8
   629  0078                     	ds	1
   630  0079                     ??_lcd_home:	
   631  0079                     ??_lcd_goto:	
   632                           ; 1 bytes @ 0x9
   633                           
   634  0079                     ??_lcd_clear:	
   635                           ; 1 bytes @ 0x9
   636                           
   637  0079                     ??_lcd_2ndline:	
   638                           ; 1 bytes @ 0x9
   639                           
   640  0079                     ??_lcd_putchar:	
   641                           ; 1 bytes @ 0x9
   642                           
   643  0079                     ___lwmod@counter:	
   644                           ; 1 bytes @ 0x9
   645                           
   646                           
   647                           ; 1 bytes @ 0x9
   648  0079                     	ds	1
   649                           
   650                           	psect	cstackBANK0
   651  0020                     __pcstackBANK0:	
   652  0020                     ??_lcd_initialize:	
   653  0020                     lcd_goto@uc_position:	
   654                           ; 1 bytes @ 0x0
   655                           
   656  0020                     lcd_putchar@c_data:	
   657                           ; 1 bytes @ 0x0
   658                           
   659  0020                     ___lwdiv@quotient:	
   660                           ; 1 bytes @ 0x0
   661                           
   662                           
   663                           ; 2 bytes @ 0x0
   664  0020                     	ds	1
   665  0021                     ??_lcd_putstr:	
   666                           
   667                           ; 1 bytes @ 0x1
   668  0021                     	ds	1
   669  0022                     lcd_putstr@csz_string:	
   670  0022                     ___lwdiv@counter:	
   671                           ; 1 bytes @ 0x2
   672                           
   673                           
   674                           ; 1 bytes @ 0x2
   675  0022                     	ds	1
   676  0023                     ?_lcd_bcd:	
   677  0023                     lcd_bcd@ui_number:	
   678                           ; 1 bytes @ 0x3
   679                           
   680                           
   681                           ; 2 bytes @ 0x3
   682  0023                     	ds	2
   683  0025                     ??_lcd_bcd:	
   684                           
   685                           ; 1 bytes @ 0x5
   686  0025                     	ds	4
   687  0029                     lcd_bcd@ui_decimal:	
   688                           
   689                           ; 10 bytes @ 0x9
   690  0029                     	ds	10
   691  0033                     lcd_bcd@uc_digit:	
   692                           
   693                           ; 1 bytes @ 0x13
   694  0033                     	ds	1
   695  0034                     ??_main:	
   696                           
   697                           ; 1 bytes @ 0x14
   698  0034                     	ds	3
   699  0037                     main@IO1:	
   700                           
   701                           ; 2 bytes @ 0x17
   702  0037                     	ds	2
   703  0039                     main@IO2:	
   704                           
   705                           ; 2 bytes @ 0x19
   706  0039                     	ds	2
   707  003B                     main@IO3:	
   708                           
   709                           ; 2 bytes @ 0x1B
   710  003B                     	ds	2
   711  003D                     main@IO4:	
   712                           
   713                           ; 2 bytes @ 0x1D
   714  003D                     	ds	2
   715  003F                     main@IO5:	
   716                           
   717                           ; 2 bytes @ 0x1F
   718  003F                     	ds	2
   719  0041                     main@IO6:	
   720                           
   721                           ; 2 bytes @ 0x21
   722  0041                     	ds	2
   723  0043                     main@IO7:	
   724                           
   725                           ; 2 bytes @ 0x23
   726  0043                     	ds	2
   727  0045                     main@IO8:	
   728                           
   729                           ; 2 bytes @ 0x25
   730  0045                     	ds	2
   731                           
   732                           	psect	maintext
   733  0025                     __pmaintext:	
   734 ;;
   735 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   736 ;;
   737 ;; *************** function _main *****************
   738 ;; Defined at:
   739 ;;		line 19 in file "main.c"
   740 ;; Parameters:    Size  Location     Type
   741 ;;		None
   742 ;; Auto vars:     Size  Location     Type
   743 ;;  IO8             2   37[BANK0 ] unsigned int 
   744 ;;  IO7             2   35[BANK0 ] unsigned int 
   745 ;;  IO6             2   33[BANK0 ] unsigned int 
   746 ;;  IO5             2   31[BANK0 ] unsigned int 
   747 ;;  IO4             2   29[BANK0 ] unsigned int 
   748 ;;  IO3             2   27[BANK0 ] unsigned int 
   749 ;;  IO2             2   25[BANK0 ] unsigned int 
   750 ;;  IO1             2   23[BANK0 ] unsigned int 
   751 ;; Return value:  Size  Location     Type
   752 ;;                  1    wreg      void 
   753 ;; Registers used:
   754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   755 ;; Tracked objects:
   756 ;;		On entry : B00/0
   757 ;;		On exit  : 0/0
   758 ;;		Unchanged: 0/0
   759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   760 ;;      Params:         0       0       0       0       0
   761 ;;      Locals:         0      16       0       0       0
   762 ;;      Temps:          0       3       0       0       0
   763 ;;      Totals:         0      19       0       0       0
   764 ;;Total ram usage:       19 bytes
   765 ;; Hardware stack levels required when called:    5
   766 ;; This function calls:
   767 ;;		_InitApp
   768 ;;		_lcd_bcd
   769 ;;		_lcd_goto
   770 ;;		_lcd_home
   771 ;;		_lcd_initialize
   772 ;;		_lcd_putstr
   773 ;; This function is called by:
   774 ;;		Startup code after reset
   775 ;; This function uses a non-reentrant model
   776 ;;
   777                           
   778                           
   779                           ;psect for function _main
   780  0025                     _main:	
   781                           
   782                           ;main.c: 22: InitApp();
   783                           
   784                           ;incstack = 0
   785                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   786  0025  120A  118A  2408  120A  118A  	fcall	_InitApp
   787                           
   788                           ;main.c: 24: PORTA = 0;
   789  002A  1283               	bcf	3,5	;RP0=0, select bank0
   790  002B  1303               	bcf	3,6	;RP1=0, select bank0
   791  002C  0185               	clrf	5	;volatile
   792                           
   793                           ;main.c: 25: PORTB = 0;
   794  002D  0186               	clrf	6	;volatile
   795                           
   796                           ;main.c: 26: PORTC = 0;
   797  002E  0187               	clrf	7	;volatile
   798                           
   799                           ;main.c: 27: PORTD = 0;
   800  002F  0188               	clrf	8	;volatile
   801                           
   802                           ;main.c: 28: PORTE = 0;
   803  0030  0189               	clrf	9	;volatile
   804                           
   805                           ;main.c: 31: TRISA = 0b00000000;
   806  0031  1683               	bsf	3,5	;RP0=1, select bank1
   807  0032  1303               	bcf	3,6	;RP1=0, select bank1
   808  0033  0185               	clrf	5	;volatile
   809                           
   810                           ;main.c: 33: TRISB = 0b11001111;
   811  0034  30CF               	movlw	207
   812  0035  0086               	movwf	6	;volatile
   813                           
   814                           ;main.c: 35: TRISC = 0b00011000;
   815  0036  3018               	movlw	24
   816  0037  0087               	movwf	7	;volatile
   817                           
   818                           ;main.c: 36: TRISD = 0b00000000;
   819  0038  0188               	clrf	8	;volatile
   820                           
   821                           ;main.c: 37: TRISE = 0b00000000;
   822  0039  0189               	clrf	9	;volatile
   823                           
   824                           ;main.c: 39: lcd_initialize();
   825  003A  120A  118A  22FA  120A  118A  	fcall	_lcd_initialize
   826                           
   827                           ;main.c: 84: unsigned int IO1 = 0,IO2 = 0,IO3 = 0,IO4 = 0,IO5 = 0,IO6 = 0,IO7 = 0,IO8 = 
      +                          0;
   828  003F  1283               	bcf	3,5	;RP0=0, select bank0
   829  0040  1303               	bcf	3,6	;RP1=0, select bank0
   830  0041  01B7               	clrf	main@IO1
   831  0042  01B8               	clrf	main@IO1+1
   832  0043  01B9               	clrf	main@IO2
   833  0044  01BA               	clrf	main@IO2+1
   834  0045  01BB               	clrf	main@IO3
   835  0046  01BC               	clrf	main@IO3+1
   836  0047  01BD               	clrf	main@IO4
   837  0048  01BE               	clrf	main@IO4+1
   838  0049  01BF               	clrf	main@IO5
   839  004A  01C0               	clrf	main@IO5+1
   840  004B  01C1               	clrf	main@IO6
   841  004C  01C2               	clrf	main@IO6+1
   842  004D  01C3               	clrf	main@IO7
   843  004E  01C4               	clrf	main@IO7+1
   844  004F  01C5               	clrf	main@IO8
   845  0050  01C6               	clrf	main@IO8+1
   846  0051                     l1100:	
   847                           ;main.c: 86: while(1)
   848                           
   849                           
   850                           ;main.c: 87: {
   851                           ;main.c: 88: lcd_home();
   852  0051  120A  118A  23F2  120A  118A  	fcall	_lcd_home
   853                           
   854                           ;main.c: 89: lcd_putstr("Writing");
   855  0056  3009               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   856  0057  120A  118A  22BE  120A  118A  	fcall	_lcd_putstr
   857                           
   858                           ;main.c: 91: RC5=0;
   859  005C  1283               	bcf	3,5	;RP0=0, select bank0
   860  005D  1303               	bcf	3,6	;RP1=0, select bank0
   861  005E  1287               	bcf	7,5	;volatile
   862                           
   863                           ;main.c: 92: RC7=1;
   864  005F  1787               	bsf	7,7	;volatile
   865                           
   866                           ;main.c: 93: RC6=0;
   867  0060  1307               	bcf	7,6	;volatile
   868                           
   869                           ;main.c: 95: RA0 = 1;
   870  0061  1405               	bsf	5,0	;volatile
   871                           
   872                           ;main.c: 96: RA1 = 0;
   873  0062  1085               	bcf	5,1	;volatile
   874                           
   875                           ;main.c: 97: RA2 = 0;
   876  0063  1105               	bcf	5,2	;volatile
   877                           
   878                           ;main.c: 98: RA3 = 0;
   879  0064  1185               	bcf	5,3	;volatile
   880                           
   881                           ;main.c: 99: RA4 = 0;
   882  0065  1205               	bcf	5,4	;volatile
   883                           
   884                           ;main.c: 100: RA5 = 0;
   885  0066  1285               	bcf	5,5	;volatile
   886                           
   887                           ;main.c: 101: RE0 = 0;
   888  0067  1009               	bcf	9,0	;volatile
   889                           
   890                           ;main.c: 102: RE1 = 0;
   891  0068  1089               	bcf	9,1	;volatile
   892                           
   893                           ;main.c: 103: RE2 = 0;
   894  0069  1109               	bcf	9,2	;volatile
   895                           
   896                           ;main.c: 104: RC1 = 1;
   897  006A  1487               	bsf	7,1	;volatile
   898                           
   899                           ;main.c: 105: RC2 = 0;
   900  006B  1107               	bcf	7,2	;volatile
   901                           
   902                           ;main.c: 109: TRISB = 0b00000000;
   903  006C  1683               	bsf	3,5	;RP0=1, select bank1
   904  006D  1303               	bcf	3,6	;RP1=0, select bank1
   905  006E  0186               	clrf	6	;volatile
   906                           
   907                           ;main.c: 110: TRISC = 0b00100000;
   908  006F  3020               	movlw	32
   909  0070  0087               	movwf	7	;volatile
   910                           
   911                           ;main.c: 113: RB7=0;
   912  0071  1283               	bcf	3,5	;RP0=0, select bank0
   913  0072  1303               	bcf	3,6	;RP1=0, select bank0
   914  0073  1386               	bcf	6,7	;volatile
   915                           
   916                           ;main.c: 114: RB6=0;
   917  0074  1306               	bcf	6,6	;volatile
   918                           
   919                           ;main.c: 115: RC4=1;
   920  0075  1607               	bsf	7,4	;volatile
   921                           
   922                           ;main.c: 116: RC3=0;
   923  0076  1187               	bcf	7,3	;volatile
   924                           
   925                           ;main.c: 117: RB3=1;
   926  0077  1586               	bsf	6,3	;volatile
   927                           
   928                           ;main.c: 118: RB2=0;
   929  0078  1106               	bcf	6,2	;volatile
   930                           
   931                           ;main.c: 119: RC0=1;
   932  0079  1407               	bsf	7,0	;volatile
   933                           
   934                           ;main.c: 120: RB0=0;
   935  007A  1006               	bcf	6,0	;volatile
   936                           
   937                           ;main.c: 123: RC5=0;
   938  007B  1287               	bcf	7,5	;volatile
   939                           
   940                           ;main.c: 124: RC7=0;
   941  007C  1387               	bcf	7,7	;volatile
   942                           
   943                           ;main.c: 125: RC6=1;
   944  007D  1707               	bsf	7,6	;volatile
   945                           
   946                           ;main.c: 127: _delay((unsigned long)((500)*(20000000/4000.0)));
   947  007E  300D               	movlw	13
   948  007F  1283               	bcf	3,5	;RP0=0, select bank0
   949  0080  1303               	bcf	3,6	;RP1=0, select bank0
   950  0081  00B6               	movwf	??_main+2
   951  0082  30AF               	movlw	175
   952  0083  00B5               	movwf	??_main+1
   953  0084  30B5               	movlw	181
   954  0085  00B4               	movwf	??_main
   955  0086                     u497:	
   956  0086  0BB4               	decfsz	??_main,f
   957  0087  2886               	goto	u497
   958  0088  0BB5               	decfsz	??_main+1,f
   959  0089  2886               	goto	u497
   960  008A  0BB6               	decfsz	??_main+2,f
   961  008B  2886               	goto	u497
   962  008C  288D               	nop2
   963                           
   964                           ;main.c: 129: RC5=1;
   965  008D  1283               	bcf	3,5	;RP0=0, select bank0
   966  008E  1303               	bcf	3,6	;RP1=0, select bank0
   967  008F  1687               	bsf	7,5	;volatile
   968                           
   969                           ;main.c: 130: RC7=1;
   970  0090  1787               	bsf	7,7	;volatile
   971                           
   972                           ;main.c: 131: RC6=0;
   973  0091  1307               	bcf	7,6	;volatile
   974                           
   975                           ;main.c: 132: _delay((unsigned long)((250)*(20000000/4000.0)));
   976  0092  3007               	movlw	7
   977  0093  1283               	bcf	3,5	;RP0=0, select bank0
   978  0094  1303               	bcf	3,6	;RP1=0, select bank0
   979  0095  00B6               	movwf	??_main+2
   980  0096  3058               	movlw	88
   981  0097  00B5               	movwf	??_main+1
   982  0098  3059               	movlw	89
   983  0099  00B4               	movwf	??_main
   984  009A                     u507:	
   985  009A  0BB4               	decfsz	??_main,f
   986  009B  289A               	goto	u507
   987  009C  0BB5               	decfsz	??_main+1,f
   988  009D  289A               	goto	u507
   989  009E  0BB6               	decfsz	??_main+2,f
   990  009F  289A               	goto	u507
   991                           
   992                           ;main.c: 133: RB7=0;
   993  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   994  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   995  00A2  1386               	bcf	6,7	;volatile
   996                           
   997                           ;main.c: 134: RB6=0;
   998  00A3  1306               	bcf	6,6	;volatile
   999                           
  1000                           ;main.c: 135: RC4=0;
  1001  00A4  1207               	bcf	7,4	;volatile
  1002                           
  1003                           ;main.c: 136: RC3=0;
  1004  00A5  1187               	bcf	7,3	;volatile
  1005                           
  1006                           ;main.c: 137: RB3=0;
  1007  00A6  1186               	bcf	6,3	;volatile
  1008                           
  1009                           ;main.c: 138: RB2=0;
  1010  00A7  1106               	bcf	6,2	;volatile
  1011                           
  1012                           ;main.c: 139: RC0=0;
  1013  00A8  1007               	bcf	7,0	;volatile
  1014                           
  1015                           ;main.c: 140: RB0=0;
  1016  00A9  1006               	bcf	6,0	;volatile
  1017                           
  1018                           ;main.c: 141: _delay((unsigned long)((2500)*(20000000/4000.0)));
  1019  00AA  3040               	movlw	64
  1020  00AB  1283               	bcf	3,5	;RP0=0, select bank0
  1021  00AC  1303               	bcf	3,6	;RP1=0, select bank0
  1022  00AD  00B6               	movwf	??_main+2
  1023  00AE  306A               	movlw	106
  1024  00AF  00B5               	movwf	??_main+1
  1025  00B0  3097               	movlw	151
  1026  00B1  00B4               	movwf	??_main
  1027  00B2                     u517:	
  1028  00B2  0BB4               	decfsz	??_main,f
  1029  00B3  28B2               	goto	u517
  1030  00B4  0BB5               	decfsz	??_main+1,f
  1031  00B5  28B2               	goto	u517
  1032  00B6  0BB6               	decfsz	??_main+2,f
  1033  00B7  28B2               	goto	u517
  1034                           
  1035                           ;main.c: 142: lcd_home();
  1036  00B8  120A  118A  23F2  120A  118A  	fcall	_lcd_home
  1037                           
  1038                           ;main.c: 143: lcd_putstr("Reading");
  1039  00BD  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1040  00BE  120A  118A  22BE  120A  118A  	fcall	_lcd_putstr
  1041                           
  1042                           ;main.c: 145: lcd_home();
  1043  00C3  120A  118A  23F2  120A  118A  	fcall	_lcd_home
  1044                           
  1045                           ;main.c: 147: TRISB = 0b11001111;
  1046  00C8  30CF               	movlw	207
  1047  00C9  1683               	bsf	3,5	;RP0=1, select bank1
  1048  00CA  1303               	bcf	3,6	;RP1=0, select bank1
  1049  00CB  0086               	movwf	6	;volatile
  1050                           
  1051                           ;main.c: 148: TRISC = 0b00011001;
  1052  00CC  3019               	movlw	25
  1053  00CD  0087               	movwf	7	;volatile
  1054                           
  1055                           ;main.c: 151: RC5=0;
  1056  00CE  1283               	bcf	3,5	;RP0=0, select bank0
  1057  00CF  1303               	bcf	3,6	;RP1=0, select bank0
  1058  00D0  1287               	bcf	7,5	;volatile
  1059                           
  1060                           ;main.c: 152: RC7=1;
  1061  00D1  1787               	bsf	7,7	;volatile
  1062                           
  1063                           ;main.c: 153: RC6=0;
  1064  00D2  1307               	bcf	7,6	;volatile
  1065                           
  1066                           ;main.c: 155: lcd_goto(0x40);
  1067  00D3  3040               	movlw	64
  1068  00D4  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1069                           
  1070                           ;main.c: 156: lcd_bcd(1,RB7);
  1071  00D9  1003               	clrc
  1072  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1073  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1074  00DC  1B86               	btfsc	6,7	;volatile
  1075  00DD  1403               	setc
  1076  00DE  3000               	movlw	0
  1077  00DF  1803               	skipnc
  1078  00E0  3001               	movlw	1
  1079  00E1  00B4               	movwf	??_main
  1080  00E2  01B5               	clrf	??_main+1
  1081  00E3  0834               	movf	??_main,w
  1082  00E4  00A3               	movwf	lcd_bcd@ui_number
  1083  00E5  0835               	movf	??_main+1,w
  1084  00E6  00A4               	movwf	lcd_bcd@ui_number+1
  1085  00E7  3001               	movlw	1
  1086  00E8  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1087                           
  1088                           ;main.c: 158: lcd_goto(0x41);
  1089  00ED  3041               	movlw	65
  1090  00EE  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1091                           
  1092                           ;main.c: 159: lcd_bcd(1,RB6);
  1093  00F3  1003               	clrc
  1094  00F4  1283               	bcf	3,5	;RP0=0, select bank0
  1095  00F5  1303               	bcf	3,6	;RP1=0, select bank0
  1096  00F6  1B06               	btfsc	6,6	;volatile
  1097  00F7  1403               	setc
  1098  00F8  3000               	movlw	0
  1099  00F9  1803               	skipnc
  1100  00FA  3001               	movlw	1
  1101  00FB  00B4               	movwf	??_main
  1102  00FC  01B5               	clrf	??_main+1
  1103  00FD  0834               	movf	??_main,w
  1104  00FE  00A3               	movwf	lcd_bcd@ui_number
  1105  00FF  0835               	movf	??_main+1,w
  1106  0100  00A4               	movwf	lcd_bcd@ui_number+1
  1107  0101  3001               	movlw	1
  1108  0102  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1109                           
  1110                           ;main.c: 161: lcd_goto(0x42);
  1111  0107  3042               	movlw	66
  1112  0108  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1113                           
  1114                           ;main.c: 162: lcd_bcd(1,RC4);
  1115  010D  1003               	clrc
  1116  010E  1283               	bcf	3,5	;RP0=0, select bank0
  1117  010F  1303               	bcf	3,6	;RP1=0, select bank0
  1118  0110  1A07               	btfsc	7,4	;volatile
  1119  0111  1403               	setc
  1120  0112  3000               	movlw	0
  1121  0113  1803               	skipnc
  1122  0114  3001               	movlw	1
  1123  0115  00B4               	movwf	??_main
  1124  0116  01B5               	clrf	??_main+1
  1125  0117  0834               	movf	??_main,w
  1126  0118  00A3               	movwf	lcd_bcd@ui_number
  1127  0119  0835               	movf	??_main+1,w
  1128  011A  00A4               	movwf	lcd_bcd@ui_number+1
  1129  011B  3001               	movlw	1
  1130  011C  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1131                           
  1132                           ;main.c: 164: lcd_goto(0x43);
  1133  0121  3043               	movlw	67
  1134  0122  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1135                           
  1136                           ;main.c: 165: lcd_bcd(1,RC3);
  1137  0127  1003               	clrc
  1138  0128  1283               	bcf	3,5	;RP0=0, select bank0
  1139  0129  1303               	bcf	3,6	;RP1=0, select bank0
  1140  012A  1987               	btfsc	7,3	;volatile
  1141  012B  1403               	setc
  1142  012C  3000               	movlw	0
  1143  012D  1803               	skipnc
  1144  012E  3001               	movlw	1
  1145  012F  00B4               	movwf	??_main
  1146  0130  01B5               	clrf	??_main+1
  1147  0131  0834               	movf	??_main,w
  1148  0132  00A3               	movwf	lcd_bcd@ui_number
  1149  0133  0835               	movf	??_main+1,w
  1150  0134  00A4               	movwf	lcd_bcd@ui_number+1
  1151  0135  3001               	movlw	1
  1152  0136  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1153                           
  1154                           ;main.c: 167: lcd_goto(0x44);
  1155  013B  3044               	movlw	68
  1156  013C  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1157                           
  1158                           ;main.c: 168: lcd_bcd(1,RB3);
  1159  0141  1003               	clrc
  1160  0142  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0143  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0144  1986               	btfsc	6,3	;volatile
  1163  0145  1403               	setc
  1164  0146  3000               	movlw	0
  1165  0147  1803               	skipnc
  1166  0148  3001               	movlw	1
  1167  0149  00B4               	movwf	??_main
  1168  014A  01B5               	clrf	??_main+1
  1169  014B  0834               	movf	??_main,w
  1170  014C  00A3               	movwf	lcd_bcd@ui_number
  1171  014D  0835               	movf	??_main+1,w
  1172  014E  00A4               	movwf	lcd_bcd@ui_number+1
  1173  014F  3001               	movlw	1
  1174  0150  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1175                           
  1176                           ;main.c: 170: lcd_goto(0x45);
  1177  0155  3045               	movlw	69
  1178  0156  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1179                           
  1180                           ;main.c: 171: lcd_bcd(1,RB2);
  1181  015B  1003               	clrc
  1182  015C  1283               	bcf	3,5	;RP0=0, select bank0
  1183  015D  1303               	bcf	3,6	;RP1=0, select bank0
  1184  015E  1906               	btfsc	6,2	;volatile
  1185  015F  1403               	setc
  1186  0160  3000               	movlw	0
  1187  0161  1803               	skipnc
  1188  0162  3001               	movlw	1
  1189  0163  00B4               	movwf	??_main
  1190  0164  01B5               	clrf	??_main+1
  1191  0165  0834               	movf	??_main,w
  1192  0166  00A3               	movwf	lcd_bcd@ui_number
  1193  0167  0835               	movf	??_main+1,w
  1194  0168  00A4               	movwf	lcd_bcd@ui_number+1
  1195  0169  3001               	movlw	1
  1196  016A  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1197                           
  1198                           ;main.c: 173: lcd_goto(0x46);
  1199  016F  3046               	movlw	70
  1200  0170  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1201                           
  1202                           ;main.c: 174: lcd_bcd(1,RC0);
  1203  0175  1003               	clrc
  1204  0176  1283               	bcf	3,5	;RP0=0, select bank0
  1205  0177  1303               	bcf	3,6	;RP1=0, select bank0
  1206  0178  1807               	btfsc	7,0	;volatile
  1207  0179  1403               	setc
  1208  017A  3000               	movlw	0
  1209  017B  1803               	skipnc
  1210  017C  3001               	movlw	1
  1211  017D  00B4               	movwf	??_main
  1212  017E  01B5               	clrf	??_main+1
  1213  017F  0834               	movf	??_main,w
  1214  0180  00A3               	movwf	lcd_bcd@ui_number
  1215  0181  0835               	movf	??_main+1,w
  1216  0182  00A4               	movwf	lcd_bcd@ui_number+1
  1217  0183  3001               	movlw	1
  1218  0184  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1219                           
  1220                           ;main.c: 176: lcd_goto(0x47);
  1221  0189  3047               	movlw	71
  1222  018A  120A  118A  23AF  120A  118A  	fcall	_lcd_goto
  1223                           
  1224                           ;main.c: 177: lcd_bcd(1,RB0);
  1225  018F  1003               	clrc
  1226  0190  1283               	bcf	3,5	;RP0=0, select bank0
  1227  0191  1303               	bcf	3,6	;RP1=0, select bank0
  1228  0192  1806               	btfsc	6,0	;volatile
  1229  0193  1403               	setc
  1230  0194  3000               	movlw	0
  1231  0195  1803               	skipnc
  1232  0196  3001               	movlw	1
  1233  0197  00B4               	movwf	??_main
  1234  0198  01B5               	clrf	??_main+1
  1235  0199  0834               	movf	??_main,w
  1236  019A  00A3               	movwf	lcd_bcd@ui_number
  1237  019B  0835               	movf	??_main+1,w
  1238  019C  00A4               	movwf	lcd_bcd@ui_number+1
  1239  019D  3001               	movlw	1
  1240  019E  120A  118A  21B2  120A  118A  	fcall	_lcd_bcd
  1241                           
  1242                           ;main.c: 179: _delay((unsigned long)((5250)*(20000000/4000.0)));
  1243  01A3  3086               	movlw	134
  1244  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  1245  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  1246  01A6  00B6               	movwf	??_main+2
  1247  01A7  302B               	movlw	43
  1248  01A8  00B5               	movwf	??_main+1
  1249  01A9  308D               	movlw	141
  1250  01AA  00B4               	movwf	??_main
  1251  01AB                     u527:	
  1252  01AB  0BB4               	decfsz	??_main,f
  1253  01AC  29AB               	goto	u527
  1254  01AD  0BB5               	decfsz	??_main+1,f
  1255  01AE  29AB               	goto	u527
  1256  01AF  0BB6               	decfsz	??_main+2,f
  1257  01B0  29AB               	goto	u527
  1258  01B1  2851               	goto	l1100
  1259  01B2                     __end_of_main:	
  1260                           
  1261                           	psect	text1
  1262  02BE                     __ptext1:	
  1263 ;; *************** function _lcd_putstr *****************
  1264 ;; Defined at:
  1265 ;;		line 241 in file "lcd.c"
  1266 ;; Parameters:    Size  Location     Type
  1267 ;;  csz_string      1    wreg     PTR const unsigned char 
  1268 ;;		 -> STR_2(8), STR_1(8), 
  1269 ;; Auto vars:     Size  Location     Type
  1270 ;;  csz_string      1    2[BANK0 ] PTR const unsigned char 
  1271 ;;		 -> STR_2(8), STR_1(8), 
  1272 ;; Return value:  Size  Location     Type
  1273 ;;                  1    wreg      void 
  1274 ;; Registers used:
  1275 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1276 ;; Tracked objects:
  1277 ;;		On entry : 0/0
  1278 ;;		On exit  : 0/0
  1279 ;;		Unchanged: 0/0
  1280 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1281 ;;      Params:         0       0       0       0       0
  1282 ;;      Locals:         0       1       0       0       0
  1283 ;;      Temps:          0       1       0       0       0
  1284 ;;      Totals:         0       2       0       0       0
  1285 ;;Total ram usage:        2 bytes
  1286 ;; Hardware stack levels used:    1
  1287 ;; Hardware stack levels required when called:    4
  1288 ;; This function calls:
  1289 ;;		_lcd_2ndline
  1290 ;;		_lcd_putchar
  1291 ;; This function is called by:
  1292 ;;		_main
  1293 ;; This function uses a non-reentrant model
  1294 ;;
  1295                           
  1296                           
  1297                           ;psect for function _lcd_putstr
  1298  02BE                     _lcd_putstr:	
  1299                           
  1300                           ;incstack = 0
  1301                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1302                           ;lcd_putstr@csz_string stored from wreg
  1303  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  1304  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  1305  02C0  00A2               	movwf	lcd_putstr@csz_string
  1306  02C1                     l1024:	
  1307                           ;lcd.c: 244: while (*csz_string != '\0') {
  1308                           
  1309  02C1  0822               	movf	lcd_putstr@csz_string,w
  1310  02C2  0084               	movwf	4
  1311  02C3  120A  118A  2399  120A  118A  	fcall	stringdir
  1312  02C8  3A00               	xorlw	0
  1313  02C9  1903               	btfsc	3,2
  1314  02CA  0008               	return
  1315                           
  1316                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1317  02CB  0822               	movf	lcd_putstr@csz_string,w
  1318  02CC  0084               	movwf	4
  1319  02CD  120A  118A  2399  120A  118A  	fcall	stringdir
  1320  02D2  3A0A               	xorlw	10
  1321  02D3  1903               	skipnz
  1322  02D4  2ADF               	goto	l1018
  1323  02D5  0822               	movf	lcd_putstr@csz_string,w
  1324  02D6  0084               	movwf	4
  1325  02D7  120A  118A  2399  120A  118A  	fcall	stringdir
  1326  02DC  3A0D               	xorlw	13
  1327  02DD  1D03               	skipz
  1328  02DE  2AE5               	goto	l1020
  1329  02DF                     l1018:	
  1330                           
  1331                           ;lcd.c: 248: lcd_2ndline();
  1332  02DF  120A  118A  23E9  120A  118A  	fcall	_lcd_2ndline
  1333                           
  1334                           ;lcd.c: 249: }
  1335  02E4  2AF3               	goto	l1022
  1336  02E5                     l1020:	
  1337                           
  1338                           ;lcd.c: 252: else {
  1339                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1340  02E5  1283               	bcf	3,5	;RP0=0, select bank0
  1341  02E6  1303               	bcf	3,6	;RP1=0, select bank0
  1342  02E7  0822               	movf	lcd_putstr@csz_string,w
  1343  02E8  0084               	movwf	4
  1344  02E9  120A  118A  2399  120A  118A  	fcall	stringdir
  1345  02EE  120A  118A  23BC  120A  118A  	fcall	_lcd_putchar
  1346  02F3                     l1022:	
  1347                           
  1348                           ;lcd.c: 254: }
  1349                           ;lcd.c: 257: csz_string++;
  1350  02F3  3001               	movlw	1
  1351  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  1352  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  1353  02F6  00A1               	movwf	??_lcd_putstr
  1354  02F7  0821               	movf	??_lcd_putstr,w
  1355  02F8  07A2               	addwf	lcd_putstr@csz_string,f
  1356  02F9  2AC1               	goto	l1024
  1357  02FA                     __end_of_lcd_putstr:	
  1358                           
  1359                           	psect	text2
  1360  03E9                     __ptext2:	
  1361 ;; *************** function _lcd_2ndline *****************
  1362 ;; Defined at:
  1363 ;;		line 178 in file "lcd.c"
  1364 ;; Parameters:    Size  Location     Type
  1365 ;;		None
  1366 ;; Auto vars:     Size  Location     Type
  1367 ;;		None
  1368 ;; Return value:  Size  Location     Type
  1369 ;;                  1    wreg      void 
  1370 ;; Registers used:
  1371 ;;		wreg, status,2, status,0, pclath, cstack
  1372 ;; Tracked objects:
  1373 ;;		On entry : 0/0
  1374 ;;		On exit  : 0/0
  1375 ;;		Unchanged: 0/0
  1376 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1377 ;;      Params:         0       0       0       0       0
  1378 ;;      Locals:         0       0       0       0       0
  1379 ;;      Temps:          1       0       0       0       0
  1380 ;;      Totals:         1       0       0       0       0
  1381 ;;Total ram usage:        1 bytes
  1382 ;; Hardware stack levels used:    1
  1383 ;; Hardware stack levels required when called:    3
  1384 ;; This function calls:
  1385 ;;		_send_lcd_data
  1386 ;; This function is called by:
  1387 ;;		_lcd_putstr
  1388 ;; This function uses a non-reentrant model
  1389 ;;
  1390                           
  1391                           
  1392                           ;psect for function _lcd_2ndline
  1393  03E9                     _lcd_2ndline:	
  1394                           
  1395                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1396                           
  1397                           ;incstack = 0
  1398                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1399  03E9  30C0               	movlw	192
  1400  03EA  00F9               	movwf	??_lcd_2ndline
  1401  03EB  0879               	movf	??_lcd_2ndline,w
  1402  03EC  00F5               	movwf	send_lcd_data@uc_data
  1403  03ED  3000               	movlw	0
  1404  03EE  120A  118A  2332   	fcall	_send_lcd_data
  1405  03F1  0008               	return
  1406  03F2                     __end_of_lcd_2ndline:	
  1407                           
  1408                           	psect	text3
  1409  02FA                     __ptext3:	
  1410 ;; *************** function _lcd_initialize *****************
  1411 ;; Defined at:
  1412 ;;		line 100 in file "lcd.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, status,2, status,0, pclath, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1426 ;;      Params:         0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0
  1428 ;;      Temps:          0       2       0       0       0
  1429 ;;      Totals:         0       2       0       0       0
  1430 ;;Total ram usage:        2 bytes
  1431 ;; Hardware stack levels used:    1
  1432 ;; Hardware stack levels required when called:    4
  1433 ;; This function calls:
  1434 ;;		_lcd_clear
  1435 ;;		_send_lcd_data
  1436 ;;		_set_lcd_e
  1437 ;; This function is called by:
  1438 ;;		_main
  1439 ;; This function uses a non-reentrant model
  1440 ;;
  1441                           
  1442                           
  1443                           ;psect for function _lcd_initialize
  1444  02FA                     _lcd_initialize:	
  1445                           
  1446                           ;lcd.c: 104: set_lcd_e(1);
  1447                           
  1448                           ;incstack = 0
  1449                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1450  02FA  3001               	movlw	1
  1451  02FB  120A  118A  23D3  120A  118A  	fcall	_set_lcd_e
  1452                           
  1453                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1454  0300  3062               	movlw	98
  1455  0301  1283               	bcf	3,5	;RP0=0, select bank0
  1456  0302  1303               	bcf	3,6	;RP1=0, select bank0
  1457  0303  00A1               	movwf	??_lcd_initialize+1
  1458  0304  3065               	movlw	101
  1459  0305  00A0               	movwf	??_lcd_initialize
  1460  0306                     u537:	
  1461  0306  0BA0               	decfsz	??_lcd_initialize,f
  1462  0307  2B06               	goto	u537
  1463  0308  0BA1               	decfsz	??_lcd_initialize+1,f
  1464  0309  2B06               	goto	u537
  1465                           
  1466                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1467  030A  3038               	movlw	56
  1468  030B  1283               	bcf	3,5	;RP0=0, select bank0
  1469  030C  1303               	bcf	3,6	;RP1=0, select bank0
  1470  030D  00A0               	movwf	??_lcd_initialize
  1471  030E  0820               	movf	??_lcd_initialize,w
  1472  030F  00F5               	movwf	send_lcd_data@uc_data
  1473  0310  3000               	movlw	0
  1474  0311  120A  118A  2332  120A  118A  	fcall	_send_lcd_data
  1475                           
  1476                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1477  0316  3006               	movlw	6
  1478  0317  1283               	bcf	3,5	;RP0=0, select bank0
  1479  0318  1303               	bcf	3,6	;RP1=0, select bank0
  1480  0319  00A0               	movwf	??_lcd_initialize
  1481  031A  0820               	movf	??_lcd_initialize,w
  1482  031B  00F5               	movwf	send_lcd_data@uc_data
  1483  031C  3000               	movlw	0
  1484  031D  120A  118A  2332  120A  118A  	fcall	_send_lcd_data
  1485                           
  1486                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1487  0322  300C               	movlw	12
  1488  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1489  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1490  0325  00A0               	movwf	??_lcd_initialize
  1491  0326  0820               	movf	??_lcd_initialize,w
  1492  0327  00F5               	movwf	send_lcd_data@uc_data
  1493  0328  3000               	movlw	0
  1494  0329  120A  118A  2332  120A  118A  	fcall	_send_lcd_data
  1495                           
  1496                           ;lcd.c: 118: lcd_clear();
  1497  032E  120A  118A  23FB   	fcall	_lcd_clear
  1498  0331  0008               	return
  1499  0332                     __end_of_lcd_initialize:	
  1500                           
  1501                           	psect	text4
  1502  03FB                     __ptext4:	
  1503 ;; *************** function _lcd_clear *****************
  1504 ;; Defined at:
  1505 ;;		line 136 in file "lcd.c"
  1506 ;; Parameters:    Size  Location     Type
  1507 ;;		None
  1508 ;; Auto vars:     Size  Location     Type
  1509 ;;		None
  1510 ;; Return value:  Size  Location     Type
  1511 ;;                  1    wreg      void 
  1512 ;; Registers used:
  1513 ;;		wreg, status,2, status,0, pclath, cstack
  1514 ;; Tracked objects:
  1515 ;;		On entry : 0/0
  1516 ;;		On exit  : 0/0
  1517 ;;		Unchanged: 0/0
  1518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1519 ;;      Params:         0       0       0       0       0
  1520 ;;      Locals:         0       0       0       0       0
  1521 ;;      Temps:          0       0       0       0       0
  1522 ;;      Totals:         0       0       0       0       0
  1523 ;;Total ram usage:        0 bytes
  1524 ;; Hardware stack levels used:    1
  1525 ;; Hardware stack levels required when called:    3
  1526 ;; This function calls:
  1527 ;;		_send_lcd_data
  1528 ;; This function is called by:
  1529 ;;		_lcd_initialize
  1530 ;; This function uses a non-reentrant model
  1531 ;;
  1532                           
  1533                           
  1534                           ;psect for function _lcd_clear
  1535  03FB                     _lcd_clear:	
  1536                           
  1537                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1541  03FB  01F5               	clrf	send_lcd_data@uc_data
  1542  03FC  0AF5               	incf	send_lcd_data@uc_data,f
  1543  03FD  3000               	movlw	0
  1544  03FE  120A  118A  2332   	fcall	_send_lcd_data
  1545  0401  0008               	return
  1546  0402                     __end_of_lcd_clear:	
  1547                           
  1548                           	psect	text5
  1549  03F2                     __ptext5:	
  1550 ;; *************** function _lcd_home *****************
  1551 ;; Defined at:
  1552 ;;		line 157 in file "lcd.c"
  1553 ;; Parameters:    Size  Location     Type
  1554 ;;		None
  1555 ;; Auto vars:     Size  Location     Type
  1556 ;;		None
  1557 ;; Return value:  Size  Location     Type
  1558 ;;                  1    wreg      void 
  1559 ;; Registers used:
  1560 ;;		wreg, status,2, status,0, pclath, cstack
  1561 ;; Tracked objects:
  1562 ;;		On entry : 0/0
  1563 ;;		On exit  : 0/0
  1564 ;;		Unchanged: 0/0
  1565 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1566 ;;      Params:         0       0       0       0       0
  1567 ;;      Locals:         0       0       0       0       0
  1568 ;;      Temps:          1       0       0       0       0
  1569 ;;      Totals:         1       0       0       0       0
  1570 ;;Total ram usage:        1 bytes
  1571 ;; Hardware stack levels used:    1
  1572 ;; Hardware stack levels required when called:    3
  1573 ;; This function calls:
  1574 ;;		_send_lcd_data
  1575 ;; This function is called by:
  1576 ;;		_main
  1577 ;; This function uses a non-reentrant model
  1578 ;;
  1579                           
  1580                           
  1581                           ;psect for function _lcd_home
  1582  03F2                     _lcd_home:	
  1583                           
  1584                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1585                           
  1586                           ;incstack = 0
  1587                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1588  03F2  3002               	movlw	2
  1589  03F3  00F9               	movwf	??_lcd_home
  1590  03F4  0879               	movf	??_lcd_home,w
  1591  03F5  00F5               	movwf	send_lcd_data@uc_data
  1592  03F6  3000               	movlw	0
  1593  03F7  120A  118A  2332   	fcall	_send_lcd_data
  1594  03FA  0008               	return
  1595  03FB                     __end_of_lcd_home:	
  1596                           
  1597                           	psect	text6
  1598  03AF                     __ptext6:	
  1599 ;; *************** function _lcd_goto *****************
  1600 ;; Defined at:
  1601 ;;		line 199 in file "lcd.c"
  1602 ;; Parameters:    Size  Location     Type
  1603 ;;  uc_position     1    wreg     unsigned char 
  1604 ;; Auto vars:     Size  Location     Type
  1605 ;;  uc_position     1    0[BANK0 ] unsigned char 
  1606 ;; Return value:  Size  Location     Type
  1607 ;;                  1    wreg      void 
  1608 ;; Registers used:
  1609 ;;		wreg, status,2, status,0, pclath, cstack
  1610 ;; Tracked objects:
  1611 ;;		On entry : 0/0
  1612 ;;		On exit  : 0/0
  1613 ;;		Unchanged: 0/0
  1614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1615 ;;      Params:         0       0       0       0       0
  1616 ;;      Locals:         0       1       0       0       0
  1617 ;;      Temps:          1       0       0       0       0
  1618 ;;      Totals:         1       1       0       0       0
  1619 ;;Total ram usage:        2 bytes
  1620 ;; Hardware stack levels used:    1
  1621 ;; Hardware stack levels required when called:    3
  1622 ;; This function calls:
  1623 ;;		_send_lcd_data
  1624 ;; This function is called by:
  1625 ;;		_main
  1626 ;; This function uses a non-reentrant model
  1627 ;;
  1628                           
  1629                           
  1630                           ;psect for function _lcd_goto
  1631  03AF                     _lcd_goto:	
  1632                           
  1633                           ;incstack = 0
  1634                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1635                           ;lcd_goto@uc_position stored from wreg
  1636  03AF  1283               	bcf	3,5	;RP0=0, select bank0
  1637  03B0  1303               	bcf	3,6	;RP1=0, select bank0
  1638  03B1  00A0               	movwf	lcd_goto@uc_position
  1639                           
  1640                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1641  03B2  0820               	movf	lcd_goto@uc_position,w
  1642  03B3  3880               	iorlw	128
  1643  03B4  00F9               	movwf	??_lcd_goto
  1644  03B5  0879               	movf	??_lcd_goto,w
  1645  03B6  00F5               	movwf	send_lcd_data@uc_data
  1646  03B7  3000               	movlw	0
  1647  03B8  120A  118A  2332   	fcall	_send_lcd_data
  1648  03BB  0008               	return
  1649  03BC                     __end_of_lcd_goto:	
  1650                           
  1651                           	psect	text7
  1652  01B2                     __ptext7:	
  1653 ;; *************** function _lcd_bcd *****************
  1654 ;; Defined at:
  1655 ;;		line 274 in file "lcd.c"
  1656 ;; Parameters:    Size  Location     Type
  1657 ;;  uc_digit        1    wreg     unsigned char 
  1658 ;;  ui_number       2    3[BANK0 ] unsigned int 
  1659 ;; Auto vars:     Size  Location     Type
  1660 ;;  uc_digit        1   19[BANK0 ] unsigned char 
  1661 ;;  ui_decimal     10    9[BANK0 ] unsigned int [5]
  1662 ;; Return value:  Size  Location     Type
  1663 ;;                  1    wreg      void 
  1664 ;; Registers used:
  1665 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1666 ;; Tracked objects:
  1667 ;;		On entry : 0/0
  1668 ;;		On exit  : 0/0
  1669 ;;		Unchanged: 0/0
  1670 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1671 ;;      Params:         0       2       0       0       0
  1672 ;;      Locals:         0      11       0       0       0
  1673 ;;      Temps:          0       4       0       0       0
  1674 ;;      Totals:         0      17       0       0       0
  1675 ;;Total ram usage:       17 bytes
  1676 ;; Hardware stack levels used:    1
  1677 ;; Hardware stack levels required when called:    4
  1678 ;; This function calls:
  1679 ;;		___lwdiv
  1680 ;;		___lwmod
  1681 ;;		_lcd_putchar
  1682 ;; This function is called by:
  1683 ;;		_main
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _lcd_bcd
  1689  01B2                     _lcd_bcd:	
  1690                           
  1691                           ;incstack = 0
  1692                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1693                           ;lcd_bcd@uc_digit stored from wreg
  1694  01B2  1283               	bcf	3,5	;RP0=0, select bank0
  1695  01B3  1303               	bcf	3,6	;RP1=0, select bank0
  1696  01B4  00B3               	movwf	lcd_bcd@uc_digit
  1697                           
  1698                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1699  01B5  3029               	movlw	lcd_bcd@ui_decimal& (0+255)
  1700  01B6  0084               	movwf	4
  1701  01B7  3047               	movlw	low lcd_bcd@F1134
  1702  01B8  00A5               	movwf	??_lcd_bcd
  1703  01B9  0804               	movf	4,w
  1704  01BA  00A6               	movwf	??_lcd_bcd+1
  1705  01BB  300A               	movlw	10
  1706  01BC  00A7               	movwf	??_lcd_bcd+2
  1707  01BD                     u450:	
  1708  01BD  0825               	movf	??_lcd_bcd,w
  1709  01BE  0084               	movwf	4
  1710  01BF  1383               	bcf	3,7	;select IRP bank0
  1711  01C0  0800               	movf	0,w
  1712  01C1  00A8               	movwf	??_lcd_bcd+3
  1713  01C2  0AA5               	incf	??_lcd_bcd,f
  1714  01C3  0826               	movf	??_lcd_bcd+1,w
  1715  01C4  0084               	movwf	4
  1716  01C5  0828               	movf	??_lcd_bcd+3,w
  1717  01C6  0080               	movwf	0
  1718  01C7  0AA6               	incf	??_lcd_bcd+1,f
  1719  01C8  0BA7               	decfsz	??_lcd_bcd+2,f
  1720  01C9  29BD               	goto	u450
  1721                           
  1722                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1723  01CA  3010               	movlw	16
  1724  01CB  00F4               	movwf	___lwdiv@divisor
  1725  01CC  3027               	movlw	39
  1726  01CD  00F5               	movwf	___lwdiv@divisor+1
  1727  01CE  0824               	movf	lcd_bcd@ui_number+1,w
  1728  01CF  00F7               	movwf	___lwdiv@dividend+1
  1729  01D0  0823               	movf	lcd_bcd@ui_number,w
  1730  01D1  00F6               	movwf	___lwdiv@dividend
  1731  01D2  120A  118A  2280  120A  118A  	fcall	___lwdiv
  1732  01D7  0875               	movf	?___lwdiv+1,w
  1733  01D8  1283               	bcf	3,5	;RP0=0, select bank0
  1734  01D9  1303               	bcf	3,6	;RP1=0, select bank0
  1735  01DA  00B2               	movwf	lcd_bcd@ui_decimal+9
  1736  01DB  0874               	movf	?___lwdiv,w
  1737  01DC  00B1               	movwf	lcd_bcd@ui_decimal+8
  1738                           
  1739                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1740  01DD  3010               	movlw	16
  1741  01DE  00F4               	movwf	___lwmod@divisor
  1742  01DF  3027               	movlw	39
  1743  01E0  00F5               	movwf	___lwmod@divisor+1
  1744  01E1  0824               	movf	lcd_bcd@ui_number+1,w
  1745  01E2  00F7               	movwf	___lwmod@dividend+1
  1746  01E3  0823               	movf	lcd_bcd@ui_number,w
  1747  01E4  00F6               	movwf	___lwmod@dividend
  1748  01E5  120A  118A  2367  120A  118A  	fcall	___lwmod
  1749  01EA  0875               	movf	?___lwmod+1,w
  1750  01EB  1283               	bcf	3,5	;RP0=0, select bank0
  1751  01EC  1303               	bcf	3,6	;RP1=0, select bank0
  1752  01ED  00B0               	movwf	lcd_bcd@ui_decimal+7
  1753  01EE  0874               	movf	?___lwmod,w
  1754  01EF  00AF               	movwf	lcd_bcd@ui_decimal+6
  1755                           
  1756                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1757  01F0  30E8               	movlw	232
  1758  01F1  00F4               	movwf	___lwmod@divisor
  1759  01F2  3003               	movlw	3
  1760  01F3  00F5               	movwf	___lwmod@divisor+1
  1761  01F4  0830               	movf	lcd_bcd@ui_decimal+7,w
  1762  01F5  00F7               	movwf	___lwmod@dividend+1
  1763  01F6  082F               	movf	lcd_bcd@ui_decimal+6,w
  1764  01F7  00F6               	movwf	___lwmod@dividend
  1765  01F8  120A  118A  2367  120A  118A  	fcall	___lwmod
  1766  01FD  0875               	movf	?___lwmod+1,w
  1767  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1768  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1769  0200  00AE               	movwf	lcd_bcd@ui_decimal+5
  1770  0201  0874               	movf	?___lwmod,w
  1771  0202  00AD               	movwf	lcd_bcd@ui_decimal+4
  1772                           
  1773                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1774  0203  30E8               	movlw	232
  1775  0204  00F4               	movwf	___lwdiv@divisor
  1776  0205  3003               	movlw	3
  1777  0206  00F5               	movwf	___lwdiv@divisor+1
  1778  0207  0830               	movf	lcd_bcd@ui_decimal+7,w
  1779  0208  00F7               	movwf	___lwdiv@dividend+1
  1780  0209  082F               	movf	lcd_bcd@ui_decimal+6,w
  1781  020A  00F6               	movwf	___lwdiv@dividend
  1782  020B  120A  118A  2280  120A  118A  	fcall	___lwdiv
  1783  0210  0875               	movf	?___lwdiv+1,w
  1784  0211  1283               	bcf	3,5	;RP0=0, select bank0
  1785  0212  1303               	bcf	3,6	;RP1=0, select bank0
  1786  0213  00B0               	movwf	lcd_bcd@ui_decimal+7
  1787  0214  0874               	movf	?___lwdiv,w
  1788  0215  00AF               	movwf	lcd_bcd@ui_decimal+6
  1789                           
  1790                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1791  0216  3064               	movlw	100
  1792  0217  00F4               	movwf	___lwmod@divisor
  1793  0218  3000               	movlw	0
  1794  0219  00F5               	movwf	___lwmod@divisor+1
  1795  021A  082E               	movf	lcd_bcd@ui_decimal+5,w
  1796  021B  00F7               	movwf	___lwmod@dividend+1
  1797  021C  082D               	movf	lcd_bcd@ui_decimal+4,w
  1798  021D  00F6               	movwf	___lwmod@dividend
  1799  021E  120A  118A  2367  120A  118A  	fcall	___lwmod
  1800  0223  0875               	movf	?___lwmod+1,w
  1801  0224  1283               	bcf	3,5	;RP0=0, select bank0
  1802  0225  1303               	bcf	3,6	;RP1=0, select bank0
  1803  0226  00AC               	movwf	lcd_bcd@ui_decimal+3
  1804  0227  0874               	movf	?___lwmod,w
  1805  0228  00AB               	movwf	lcd_bcd@ui_decimal+2
  1806                           
  1807                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1808  0229  3064               	movlw	100
  1809  022A  00F4               	movwf	___lwdiv@divisor
  1810  022B  3000               	movlw	0
  1811  022C  00F5               	movwf	___lwdiv@divisor+1
  1812  022D  082E               	movf	lcd_bcd@ui_decimal+5,w
  1813  022E  00F7               	movwf	___lwdiv@dividend+1
  1814  022F  082D               	movf	lcd_bcd@ui_decimal+4,w
  1815  0230  00F6               	movwf	___lwdiv@dividend
  1816  0231  120A  118A  2280  120A  118A  	fcall	___lwdiv
  1817  0236  0875               	movf	?___lwdiv+1,w
  1818  0237  1283               	bcf	3,5	;RP0=0, select bank0
  1819  0238  1303               	bcf	3,6	;RP1=0, select bank0
  1820  0239  00AE               	movwf	lcd_bcd@ui_decimal+5
  1821  023A  0874               	movf	?___lwdiv,w
  1822  023B  00AD               	movwf	lcd_bcd@ui_decimal+4
  1823                           
  1824                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1825  023C  300A               	movlw	10
  1826  023D  00F4               	movwf	___lwmod@divisor
  1827  023E  3000               	movlw	0
  1828  023F  00F5               	movwf	___lwmod@divisor+1
  1829  0240  082C               	movf	lcd_bcd@ui_decimal+3,w
  1830  0241  00F7               	movwf	___lwmod@dividend+1
  1831  0242  082B               	movf	lcd_bcd@ui_decimal+2,w
  1832  0243  00F6               	movwf	___lwmod@dividend
  1833  0244  120A  118A  2367  120A  118A  	fcall	___lwmod
  1834  0249  0875               	movf	?___lwmod+1,w
  1835  024A  1283               	bcf	3,5	;RP0=0, select bank0
  1836  024B  1303               	bcf	3,6	;RP1=0, select bank0
  1837  024C  00AA               	movwf	lcd_bcd@ui_decimal+1
  1838  024D  0874               	movf	?___lwmod,w
  1839  024E  00A9               	movwf	lcd_bcd@ui_decimal
  1840                           
  1841                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1842  024F  300A               	movlw	10
  1843  0250  00F4               	movwf	___lwdiv@divisor
  1844  0251  3000               	movlw	0
  1845  0252  00F5               	movwf	___lwdiv@divisor+1
  1846  0253  082C               	movf	lcd_bcd@ui_decimal+3,w
  1847  0254  00F7               	movwf	___lwdiv@dividend+1
  1848  0255  082B               	movf	lcd_bcd@ui_decimal+2,w
  1849  0256  00F6               	movwf	___lwdiv@dividend
  1850  0257  120A  118A  2280  120A  118A  	fcall	___lwdiv
  1851  025C  0875               	movf	?___lwdiv+1,w
  1852  025D  1283               	bcf	3,5	;RP0=0, select bank0
  1853  025E  1303               	bcf	3,6	;RP1=0, select bank0
  1854  025F  00AC               	movwf	lcd_bcd@ui_decimal+3
  1855  0260  0874               	movf	?___lwdiv,w
  1856  0261  00AB               	movwf	lcd_bcd@ui_decimal+2
  1857                           
  1858                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1859  0262  3006               	movlw	6
  1860  0263  0233               	subwf	lcd_bcd@uc_digit,w
  1861  0264  1C03               	skipc
  1862  0265  2A6A               	goto	l1050
  1863  0266  3005               	movlw	5
  1864  0267  00A5               	movwf	??_lcd_bcd
  1865  0268  0825               	movf	??_lcd_bcd,w
  1866  0269  00B3               	movwf	lcd_bcd@uc_digit
  1867  026A                     l1050:	
  1868                           
  1869                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1870  026A  0833               	movf	lcd_bcd@uc_digit,w
  1871  026B  1903               	btfsc	3,2
  1872  026C  0008               	return
  1873                           
  1874                           ;lcd.c: 289: {
  1875                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1876  026D  0833               	movf	lcd_bcd@uc_digit,w
  1877  026E  00A5               	movwf	??_lcd_bcd
  1878  026F  0725               	addwf	??_lcd_bcd,w
  1879  0270  3EFE               	addlw	254
  1880  0271  3E29               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  1881  0272  0084               	movwf	4
  1882  0273  1383               	bcf	3,7	;select IRP bank0
  1883  0274  0800               	movf	0,w
  1884  0275  3E30               	addlw	48
  1885  0276  120A  118A  23BC  120A  118A  	fcall	_lcd_putchar
  1886  027B  3001               	movlw	1
  1887  027C  1283               	bcf	3,5	;RP0=0, select bank0
  1888  027D  1303               	bcf	3,6	;RP1=0, select bank0
  1889  027E  02B3               	subwf	lcd_bcd@uc_digit,f
  1890  027F  2A6A               	goto	l1050
  1891  0280                     __end_of_lcd_bcd:	
  1892                           
  1893                           	psect	text8
  1894  03BC                     __ptext8:	
  1895 ;; *************** function _lcd_putchar *****************
  1896 ;; Defined at:
  1897 ;;		line 220 in file "lcd.c"
  1898 ;; Parameters:    Size  Location     Type
  1899 ;;  c_data          1    wreg     unsigned char 
  1900 ;; Auto vars:     Size  Location     Type
  1901 ;;  c_data          1    0[BANK0 ] unsigned char 
  1902 ;; Return value:  Size  Location     Type
  1903 ;;                  1    wreg      void 
  1904 ;; Registers used:
  1905 ;;		wreg, status,2, status,0, pclath, cstack
  1906 ;; Tracked objects:
  1907 ;;		On entry : 0/0
  1908 ;;		On exit  : 0/0
  1909 ;;		Unchanged: 0/0
  1910 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1911 ;;      Params:         0       0       0       0       0
  1912 ;;      Locals:         0       1       0       0       0
  1913 ;;      Temps:          1       0       0       0       0
  1914 ;;      Totals:         1       1       0       0       0
  1915 ;;Total ram usage:        2 bytes
  1916 ;; Hardware stack levels used:    1
  1917 ;; Hardware stack levels required when called:    3
  1918 ;; This function calls:
  1919 ;;		_send_lcd_data
  1920 ;; This function is called by:
  1921 ;;		_lcd_putstr
  1922 ;;		_lcd_bcd
  1923 ;; This function uses a non-reentrant model
  1924 ;;
  1925                           
  1926                           
  1927                           ;psect for function _lcd_putchar
  1928  03BC                     _lcd_putchar:	
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  1932                           ;lcd_putchar@c_data stored from wreg
  1933  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  1934  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  1935  03BE  00A0               	movwf	lcd_putchar@c_data
  1936                           
  1937                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  1938  03BF  0820               	movf	lcd_putchar@c_data,w
  1939  03C0  00F9               	movwf	??_lcd_putchar
  1940  03C1  0879               	movf	??_lcd_putchar,w
  1941  03C2  00F5               	movwf	send_lcd_data@uc_data
  1942  03C3  3001               	movlw	1
  1943  03C4  120A  118A  2332   	fcall	_send_lcd_data
  1944  03C7  0008               	return
  1945  03C8                     __end_of_lcd_putchar:	
  1946                           
  1947                           	psect	text9
  1948  0332                     __ptext9:	
  1949 ;; *************** function _send_lcd_data *****************
  1950 ;; Defined at:
  1951 ;;		line 308 in file "lcd.c"
  1952 ;; Parameters:    Size  Location     Type
  1953 ;;  b_rs            1    wreg     unsigned char 
  1954 ;;  uc_data         1    5[COMMON] unsigned char 
  1955 ;; Auto vars:     Size  Location     Type
  1956 ;;  b_rs            1    8[COMMON] unsigned char 
  1957 ;; Return value:  Size  Location     Type
  1958 ;;                  1    wreg      void 
  1959 ;; Registers used:
  1960 ;;		wreg, status,2, status,0, pclath, cstack
  1961 ;; Tracked objects:
  1962 ;;		On entry : 0/0
  1963 ;;		On exit  : 0/0
  1964 ;;		Unchanged: 0/0
  1965 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1966 ;;      Params:         1       0       0       0       0
  1967 ;;      Locals:         1       0       0       0       0
  1968 ;;      Temps:          2       0       0       0       0
  1969 ;;      Totals:         4       0       0       0       0
  1970 ;;Total ram usage:        4 bytes
  1971 ;; Hardware stack levels used:    1
  1972 ;; Hardware stack levels required when called:    2
  1973 ;; This function calls:
  1974 ;;		_set_lcd_data
  1975 ;;		_set_lcd_e
  1976 ;;		_set_lcd_rs
  1977 ;; This function is called by:
  1978 ;;		_lcd_initialize
  1979 ;;		_lcd_clear
  1980 ;;		_lcd_home
  1981 ;;		_lcd_2ndline
  1982 ;;		_lcd_goto
  1983 ;;		_lcd_putchar
  1984 ;; This function uses a non-reentrant model
  1985 ;;
  1986                           
  1987                           
  1988                           ;psect for function _send_lcd_data
  1989  0332                     _send_lcd_data:	
  1990                           
  1991                           ;incstack = 0
  1992                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1993                           ;send_lcd_data@b_rs stored from wreg
  1994  0332  00F8               	movwf	send_lcd_data@b_rs
  1995                           
  1996                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1997  0333  0878               	movf	send_lcd_data@b_rs,w
  1998  0334  120A  118A  23C8  120A  118A  	fcall	_set_lcd_rs
  1999                           
  2000                           ;lcd.c: 312: set_lcd_data(uc_data);
  2001  0339  0875               	movf	send_lcd_data@uc_data,w
  2002  033A  120A  118A  2402  120A  118A  	fcall	_set_lcd_data
  2003                           
  2004                           ;lcd.c: 315: set_lcd_e(1);
  2005  033F  3001               	movlw	1
  2006  0340  120A  118A  23D3  120A  118A  	fcall	_set_lcd_e
  2007                           
  2008                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2009  0345  3007               	movlw	7
  2010  0346  00F7               	movwf	??_send_lcd_data+1
  2011  0347  307D               	movlw	125
  2012  0348  00F6               	movwf	??_send_lcd_data
  2013  0349                     u547:	
  2014  0349  0BF6               	decfsz	??_send_lcd_data,f
  2015  034A  2B49               	goto	u547
  2016  034B  0BF7               	decfsz	??_send_lcd_data+1,f
  2017  034C  2B49               	goto	u547
  2018                           
  2019                           ;lcd.c: 317: set_lcd_e(0);
  2020  034D  3000               	movlw	0
  2021  034E  120A  118A  23D3  120A  118A  	fcall	_set_lcd_e
  2022                           
  2023                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2024  0353  300D               	movlw	13
  2025  0354  00F7               	movwf	??_send_lcd_data+1
  2026  0355  30FB               	movlw	251
  2027  0356  00F6               	movwf	??_send_lcd_data
  2028  0357                     u557:	
  2029  0357  0BF6               	decfsz	??_send_lcd_data,f
  2030  0358  2B57               	goto	u557
  2031  0359  0BF7               	decfsz	??_send_lcd_data+1,f
  2032  035A  2B57               	goto	u557
  2033  035B  2B5C               	nop2
  2034                           
  2035                           ;lcd.c: 321: set_lcd_rs(0);
  2036  035C  3000               	movlw	0
  2037  035D  120A  118A  23C8  120A  118A  	fcall	_set_lcd_rs
  2038                           
  2039                           ;lcd.c: 322: set_lcd_data(0);
  2040  0362  3000               	movlw	0
  2041  0363  120A  118A  2402   	fcall	_set_lcd_data
  2042  0366  0008               	return
  2043  0367                     __end_of_send_lcd_data:	
  2044                           
  2045                           	psect	text10
  2046  03C8                     __ptext10:	
  2047 ;; *************** function _set_lcd_rs *****************
  2048 ;; Defined at:
  2049 ;;		line 360 in file "lcd.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  b_output        1    wreg     unsigned char 
  2052 ;; Auto vars:     Size  Location     Type
  2053 ;;  b_output        1    4[COMMON] unsigned char 
  2054 ;; Return value:  Size  Location     Type
  2055 ;;                  1    wreg      void 
  2056 ;; Registers used:
  2057 ;;		wreg
  2058 ;; Tracked objects:
  2059 ;;		On entry : 0/0
  2060 ;;		On exit  : 0/0
  2061 ;;		Unchanged: 0/0
  2062 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2063 ;;      Params:         0       0       0       0       0
  2064 ;;      Locals:         1       0       0       0       0
  2065 ;;      Temps:          0       0       0       0       0
  2066 ;;      Totals:         1       0       0       0       0
  2067 ;;Total ram usage:        1 bytes
  2068 ;; Hardware stack levels used:    1
  2069 ;; Hardware stack levels required when called:    1
  2070 ;; This function calls:
  2071 ;;		Nothing
  2072 ;; This function is called by:
  2073 ;;		_send_lcd_data
  2074 ;; This function uses a non-reentrant model
  2075 ;;
  2076                           
  2077                           
  2078                           ;psect for function _set_lcd_rs
  2079  03C8                     _set_lcd_rs:	
  2080                           
  2081                           ;incstack = 0
  2082                           ; Regs used in _set_lcd_rs: [wreg]
  2083                           ;set_lcd_rs@b_output stored from wreg
  2084  03C8  00F4               	movwf	set_lcd_rs@b_output
  2085                           
  2086                           ;lcd.c: 362: RB4 = b_output;
  2087  03C9  1C74               	btfss	set_lcd_rs@b_output,0
  2088  03CA  2BCF               	goto	u270
  2089  03CB  1283               	bcf	3,5	;RP0=0, select bank0
  2090  03CC  1303               	bcf	3,6	;RP1=0, select bank0
  2091  03CD  1606               	bsf	6,4	;volatile
  2092  03CE  0008               	return
  2093  03CF                     u270:	
  2094  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  2095  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  2096  03D1  1206               	bcf	6,4	;volatile
  2097  03D2  0008               	return
  2098  03D3                     __end_of_set_lcd_rs:	
  2099                           
  2100                           	psect	text11
  2101  03D3                     __ptext11:	
  2102 ;; *************** function _set_lcd_e *****************
  2103 ;; Defined at:
  2104 ;;		line 340 in file "lcd.c"
  2105 ;; Parameters:    Size  Location     Type
  2106 ;;  b_output        1    wreg     unsigned char 
  2107 ;; Auto vars:     Size  Location     Type
  2108 ;;  b_output        1    4[COMMON] unsigned char 
  2109 ;; Return value:  Size  Location     Type
  2110 ;;                  1    wreg      void 
  2111 ;; Registers used:
  2112 ;;		wreg
  2113 ;; Tracked objects:
  2114 ;;		On entry : 0/0
  2115 ;;		On exit  : 0/0
  2116 ;;		Unchanged: 0/0
  2117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2118 ;;      Params:         0       0       0       0       0
  2119 ;;      Locals:         1       0       0       0       0
  2120 ;;      Temps:          0       0       0       0       0
  2121 ;;      Totals:         1       0       0       0       0
  2122 ;;Total ram usage:        1 bytes
  2123 ;; Hardware stack levels used:    1
  2124 ;; Hardware stack levels required when called:    1
  2125 ;; This function calls:
  2126 ;;		Nothing
  2127 ;; This function is called by:
  2128 ;;		_lcd_initialize
  2129 ;;		_send_lcd_data
  2130 ;; This function uses a non-reentrant model
  2131 ;;
  2132                           
  2133                           
  2134                           ;psect for function _set_lcd_e
  2135  03D3                     _set_lcd_e:	
  2136                           
  2137                           ;incstack = 0
  2138                           ; Regs used in _set_lcd_e: [wreg]
  2139                           ;set_lcd_e@b_output stored from wreg
  2140  03D3  00F4               	movwf	set_lcd_e@b_output
  2141                           
  2142                           ;lcd.c: 342: RB5 = b_output;
  2143  03D4  1C74               	btfss	set_lcd_e@b_output,0
  2144  03D5  2BDA               	goto	u250
  2145  03D6  1283               	bcf	3,5	;RP0=0, select bank0
  2146  03D7  1303               	bcf	3,6	;RP1=0, select bank0
  2147  03D8  1686               	bsf	6,5	;volatile
  2148  03D9  0008               	return
  2149  03DA                     u250:	
  2150  03DA  1283               	bcf	3,5	;RP0=0, select bank0
  2151  03DB  1303               	bcf	3,6	;RP1=0, select bank0
  2152  03DC  1286               	bcf	6,5	;volatile
  2153  03DD  0008               	return
  2154  03DE                     __end_of_set_lcd_e:	
  2155                           
  2156                           	psect	text12
  2157  0402                     __ptext12:	
  2158 ;; *************** function _set_lcd_data *****************
  2159 ;; Defined at:
  2160 ;;		line 380 in file "lcd.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  uc_data         1    wreg     unsigned char 
  2163 ;; Auto vars:     Size  Location     Type
  2164 ;;  uc_data         1    4[COMMON] unsigned char 
  2165 ;; Return value:  Size  Location     Type
  2166 ;;                  1    wreg      void 
  2167 ;; Registers used:
  2168 ;;		wreg
  2169 ;; Tracked objects:
  2170 ;;		On entry : 0/0
  2171 ;;		On exit  : 0/0
  2172 ;;		Unchanged: 0/0
  2173 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2174 ;;      Params:         0       0       0       0       0
  2175 ;;      Locals:         1       0       0       0       0
  2176 ;;      Temps:          0       0       0       0       0
  2177 ;;      Totals:         1       0       0       0       0
  2178 ;;Total ram usage:        1 bytes
  2179 ;; Hardware stack levels used:    1
  2180 ;; Hardware stack levels required when called:    1
  2181 ;; This function calls:
  2182 ;;		Nothing
  2183 ;; This function is called by:
  2184 ;;		_send_lcd_data
  2185 ;; This function uses a non-reentrant model
  2186 ;;
  2187                           
  2188                           
  2189                           ;psect for function _set_lcd_data
  2190  0402                     _set_lcd_data:	
  2191                           
  2192                           ;incstack = 0
  2193                           ; Regs used in _set_lcd_data: [wreg]
  2194                           ;set_lcd_data@uc_data stored from wreg
  2195  0402  00F4               	movwf	set_lcd_data@uc_data
  2196                           
  2197                           ;lcd.c: 382: PORTD = uc_data;
  2198  0403  0874               	movf	set_lcd_data@uc_data,w
  2199  0404  1283               	bcf	3,5	;RP0=0, select bank0
  2200  0405  1303               	bcf	3,6	;RP1=0, select bank0
  2201  0406  0088               	movwf	8	;volatile
  2202  0407  0008               	return
  2203  0408                     __end_of_set_lcd_data:	
  2204                           
  2205                           	psect	text13
  2206  0367                     __ptext13:	
  2207 ;; *************** function ___lwmod *****************
  2208 ;; Defined at:
  2209 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2210 ;; Parameters:    Size  Location     Type
  2211 ;;  divisor         2    4[COMMON] unsigned int 
  2212 ;;  dividend        2    6[COMMON] unsigned int 
  2213 ;; Auto vars:     Size  Location     Type
  2214 ;;  counter         1    9[COMMON] unsigned char 
  2215 ;; Return value:  Size  Location     Type
  2216 ;;                  2    4[COMMON] unsigned int 
  2217 ;; Registers used:
  2218 ;;		wreg, status,2, status,0
  2219 ;; Tracked objects:
  2220 ;;		On entry : 0/0
  2221 ;;		On exit  : 0/0
  2222 ;;		Unchanged: 0/0
  2223 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2224 ;;      Params:         4       0       0       0       0
  2225 ;;      Locals:         1       0       0       0       0
  2226 ;;      Temps:          1       0       0       0       0
  2227 ;;      Totals:         6       0       0       0       0
  2228 ;;Total ram usage:        6 bytes
  2229 ;; Hardware stack levels used:    1
  2230 ;; Hardware stack levels required when called:    1
  2231 ;; This function calls:
  2232 ;;		Nothing
  2233 ;; This function is called by:
  2234 ;;		_lcd_bcd
  2235 ;; This function uses a non-reentrant model
  2236 ;;
  2237                           
  2238                           
  2239                           ;psect for function ___lwmod
  2240  0367                     ___lwmod:	
  2241                           
  2242                           ;incstack = 0
  2243                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2244  0367  0874               	movf	___lwmod@divisor,w
  2245  0368  0475               	iorwf	___lwmod@divisor+1,w
  2246  0369  1903               	btfsc	3,2
  2247  036A  2B94               	goto	l994
  2248  036B  01F9               	clrf	___lwmod@counter
  2249  036C  0AF9               	incf	___lwmod@counter,f
  2250  036D                     l984:	
  2251  036D  1BF5               	btfsc	___lwmod@divisor+1,7
  2252  036E  2B7B               	goto	l986
  2253  036F  3001               	movlw	1
  2254  0370                     u375:	
  2255  0370  1003               	clrc
  2256  0371  0DF4               	rlf	___lwmod@divisor,f
  2257  0372  0DF5               	rlf	___lwmod@divisor+1,f
  2258  0373  3EFF               	addlw	-1
  2259  0374  1D03               	skipz
  2260  0375  2B70               	goto	u375
  2261  0376  3001               	movlw	1
  2262  0377  00F8               	movwf	??___lwmod
  2263  0378  0878               	movf	??___lwmod,w
  2264  0379  07F9               	addwf	___lwmod@counter,f
  2265  037A  2B6D               	goto	l984
  2266  037B                     l986:	
  2267  037B  0875               	movf	___lwmod@divisor+1,w
  2268  037C  0277               	subwf	___lwmod@dividend+1,w
  2269  037D  1D03               	skipz
  2270  037E  2B81               	goto	u395
  2271  037F  0874               	movf	___lwmod@divisor,w
  2272  0380  0276               	subwf	___lwmod@dividend,w
  2273  0381                     u395:	
  2274  0381  1C03               	skipc
  2275  0382  2B89               	goto	l990
  2276  0383  0874               	movf	___lwmod@divisor,w
  2277  0384  02F6               	subwf	___lwmod@dividend,f
  2278  0385  0875               	movf	___lwmod@divisor+1,w
  2279  0386  1C03               	skipc
  2280  0387  03F7               	decf	___lwmod@dividend+1,f
  2281  0388  02F7               	subwf	___lwmod@dividend+1,f
  2282  0389                     l990:	
  2283  0389  3001               	movlw	1
  2284  038A                     u405:	
  2285  038A  1003               	clrc
  2286  038B  0CF5               	rrf	___lwmod@divisor+1,f
  2287  038C  0CF4               	rrf	___lwmod@divisor,f
  2288  038D  3EFF               	addlw	-1
  2289  038E  1D03               	skipz
  2290  038F  2B8A               	goto	u405
  2291  0390  3001               	movlw	1
  2292  0391  02F9               	subwf	___lwmod@counter,f
  2293  0392  1D03               	btfss	3,2
  2294  0393  2B7B               	goto	l986
  2295  0394                     l994:	
  2296  0394  0877               	movf	___lwmod@dividend+1,w
  2297  0395  00F5               	movwf	?___lwmod+1
  2298  0396  0876               	movf	___lwmod@dividend,w
  2299  0397  00F4               	movwf	?___lwmod
  2300  0398  0008               	return
  2301  0399                     __end_of___lwmod:	
  2302                           
  2303                           	psect	text14
  2304  0280                     __ptext14:	
  2305 ;; *************** function ___lwdiv *****************
  2306 ;; Defined at:
  2307 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  divisor         2    4[COMMON] unsigned int 
  2310 ;;  dividend        2    6[COMMON] unsigned int 
  2311 ;; Auto vars:     Size  Location     Type
  2312 ;;  quotient        2    0[BANK0 ] unsigned int 
  2313 ;;  counter         1    2[BANK0 ] unsigned char 
  2314 ;; Return value:  Size  Location     Type
  2315 ;;                  2    4[COMMON] unsigned int 
  2316 ;; Registers used:
  2317 ;;		wreg, status,2, status,0
  2318 ;; Tracked objects:
  2319 ;;		On entry : 0/0
  2320 ;;		On exit  : 0/0
  2321 ;;		Unchanged: 0/0
  2322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2323 ;;      Params:         4       0       0       0       0
  2324 ;;      Locals:         0       3       0       0       0
  2325 ;;      Temps:          1       0       0       0       0
  2326 ;;      Totals:         5       3       0       0       0
  2327 ;;Total ram usage:        8 bytes
  2328 ;; Hardware stack levels used:    1
  2329 ;; Hardware stack levels required when called:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_lcd_bcd
  2334 ;; This function uses a non-reentrant model
  2335 ;;
  2336                           
  2337                           
  2338                           ;psect for function ___lwdiv
  2339  0280                     ___lwdiv:	
  2340                           
  2341                           ;incstack = 0
  2342                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2343  0280  1283               	bcf	3,5	;RP0=0, select bank0
  2344  0281  1303               	bcf	3,6	;RP1=0, select bank0
  2345  0282  01A0               	clrf	___lwdiv@quotient
  2346  0283  01A1               	clrf	___lwdiv@quotient+1
  2347  0284  0874               	movf	___lwdiv@divisor,w
  2348  0285  0475               	iorwf	___lwdiv@divisor+1,w
  2349  0286  1903               	btfsc	3,2
  2350  0287  2AB9               	goto	l972
  2351  0288  01A2               	clrf	___lwdiv@counter
  2352  0289  0AA2               	incf	___lwdiv@counter,f
  2353  028A                     l960:	
  2354  028A  1BF5               	btfsc	___lwdiv@divisor+1,7
  2355  028B  2A98               	goto	l962
  2356  028C  3001               	movlw	1
  2357  028D                     u305:	
  2358  028D  1003               	clrc
  2359  028E  0DF4               	rlf	___lwdiv@divisor,f
  2360  028F  0DF5               	rlf	___lwdiv@divisor+1,f
  2361  0290  3EFF               	addlw	-1
  2362  0291  1D03               	skipz
  2363  0292  2A8D               	goto	u305
  2364  0293  3001               	movlw	1
  2365  0294  00F8               	movwf	??___lwdiv
  2366  0295  0878               	movf	??___lwdiv,w
  2367  0296  07A2               	addwf	___lwdiv@counter,f
  2368  0297  2A8A               	goto	l960
  2369  0298                     l962:	
  2370  0298  3001               	movlw	1
  2371  0299                     u325:	
  2372  0299  1003               	clrc
  2373  029A  0DA0               	rlf	___lwdiv@quotient,f
  2374  029B  0DA1               	rlf	___lwdiv@quotient+1,f
  2375  029C  3EFF               	addlw	-1
  2376  029D  1D03               	skipz
  2377  029E  2A99               	goto	u325
  2378  029F  0875               	movf	___lwdiv@divisor+1,w
  2379  02A0  0277               	subwf	___lwdiv@dividend+1,w
  2380  02A1  1D03               	skipz
  2381  02A2  2AA5               	goto	u335
  2382  02A3  0874               	movf	___lwdiv@divisor,w
  2383  02A4  0276               	subwf	___lwdiv@dividend,w
  2384  02A5                     u335:	
  2385  02A5  1C03               	skipc
  2386  02A6  2AAE               	goto	l968
  2387  02A7  0874               	movf	___lwdiv@divisor,w
  2388  02A8  02F6               	subwf	___lwdiv@dividend,f
  2389  02A9  0875               	movf	___lwdiv@divisor+1,w
  2390  02AA  1C03               	skipc
  2391  02AB  03F7               	decf	___lwdiv@dividend+1,f
  2392  02AC  02F7               	subwf	___lwdiv@dividend+1,f
  2393  02AD  1420               	bsf	___lwdiv@quotient,0
  2394  02AE                     l968:	
  2395  02AE  3001               	movlw	1
  2396  02AF                     u345:	
  2397  02AF  1003               	clrc
  2398  02B0  0CF5               	rrf	___lwdiv@divisor+1,f
  2399  02B1  0CF4               	rrf	___lwdiv@divisor,f
  2400  02B2  3EFF               	addlw	-1
  2401  02B3  1D03               	skipz
  2402  02B4  2AAF               	goto	u345
  2403  02B5  3001               	movlw	1
  2404  02B6  02A2               	subwf	___lwdiv@counter,f
  2405  02B7  1D03               	btfss	3,2
  2406  02B8  2A98               	goto	l962
  2407  02B9                     l972:	
  2408  02B9  0821               	movf	___lwdiv@quotient+1,w
  2409  02BA  00F5               	movwf	?___lwdiv+1
  2410  02BB  0820               	movf	___lwdiv@quotient,w
  2411  02BC  00F4               	movwf	?___lwdiv
  2412  02BD  0008               	return
  2413  02BE                     __end_of___lwdiv:	
  2414                           
  2415                           	psect	text15
  2416  0408                     __ptext15:	
  2417 ;; *************** function _InitApp *****************
  2418 ;; Defined at:
  2419 ;;		line 22 in file "user.c"
  2420 ;; Parameters:    Size  Location     Type
  2421 ;;		None
  2422 ;; Auto vars:     Size  Location     Type
  2423 ;;		None
  2424 ;; Return value:  Size  Location     Type
  2425 ;;                  1    wreg      void 
  2426 ;; Registers used:
  2427 ;;		None
  2428 ;; Tracked objects:
  2429 ;;		On entry : 0/0
  2430 ;;		On exit  : 0/0
  2431 ;;		Unchanged: 0/0
  2432 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2433 ;;      Params:         0       0       0       0       0
  2434 ;;      Locals:         0       0       0       0       0
  2435 ;;      Temps:          0       0       0       0       0
  2436 ;;      Totals:         0       0       0       0       0
  2437 ;;Total ram usage:        0 bytes
  2438 ;; Hardware stack levels used:    1
  2439 ;; Hardware stack levels required when called:    1
  2440 ;; This function calls:
  2441 ;;		Nothing
  2442 ;; This function is called by:
  2443 ;;		_main
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _InitApp
  2449  0408                     _InitApp:	
  2450                           
  2451                           ;incstack = 0
  2452                           ; Regs used in _InitApp: []
  2453  0408  0008               	return
  2454  0409                     __end_of_InitApp:	
  2455                           
  2456                           	psect	text16
  2457  03DE                     __ptext16:	
  2458 ;; *************** function _isr *****************
  2459 ;; Defined at:
  2460 ;;		line 23 in file "interrupts.c"
  2461 ;; Parameters:    Size  Location     Type
  2462 ;;		None
  2463 ;; Auto vars:     Size  Location     Type
  2464 ;;		None
  2465 ;; Return value:  Size  Location     Type
  2466 ;;                  1    wreg      void 
  2467 ;; Registers used:
  2468 ;;		None
  2469 ;; Tracked objects:
  2470 ;;		On entry : 0/0
  2471 ;;		On exit  : 0/0
  2472 ;;		Unchanged: 0/0
  2473 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2474 ;;      Params:         0       0       0       0       0
  2475 ;;      Locals:         0       0       0       0       0
  2476 ;;      Temps:          4       0       0       0       0
  2477 ;;      Totals:         4       0       0       0       0
  2478 ;;Total ram usage:        4 bytes
  2479 ;; Hardware stack levels used:    1
  2480 ;; This function calls:
  2481 ;;		Nothing
  2482 ;; This function is called by:
  2483 ;;		Interrupt level 1
  2484 ;; This function uses a non-reentrant model
  2485 ;;
  2486                           
  2487                           
  2488                           ;psect for function _isr
  2489  03DE                     _isr:	
  2490  03DE  0873               	movf	??_isr+3,w
  2491  03DF  00FF               	movwf	127
  2492  03E0  0872               	movf	??_isr+2,w
  2493  03E1  008A               	movwf	10
  2494  03E2  0871               	movf	??_isr+1,w
  2495  03E3  0084               	movwf	4
  2496  03E4  0E70               	swapf	??_isr^(0+-128),w
  2497  03E5  0083               	movwf	3
  2498  03E6  0EFE               	swapf	126,f
  2499  03E7  0E7E               	swapf	126,w
  2500  03E8  0009               	retfie
  2501  03E9                     __end_of_isr:	
  2502  007E                     btemp	set	126	;btemp
  2503  007E                     wtemp0	set	126
  2504                           
  2505                           	psect	intentry
  2506  0004                     __pintentry:	
  2507                           ;incstack = 0
  2508                           ; Regs used in _isr: []
  2509                           
  2510  0004                     interrupt_function:	
  2511  007E                     saved_w	set	btemp
  2512  0004  00FE               	movwf	btemp
  2513  0005  0E03               	swapf	3,w
  2514  0006  00F0               	movwf	??_isr
  2515  0007  0804               	movf	4,w
  2516  0008  00F1               	movwf	??_isr+1
  2517  0009  080A               	movf	10,w
  2518  000A  00F2               	movwf	??_isr+2
  2519  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2520  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2521  000D  087F               	movf	btemp+1,w
  2522  000E  00F3               	movwf	??_isr+3
  2523  000F  120A  118A  2BDE   	ljmp	_isr


Data Sizes:
    Strings     16
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     39      49
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 8
		 -> STR_2(CODE[8]), STR_1(CODE[8]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_lcd_home
    _lcd_putstr->_lcd_2ndline
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwmod
    _lcd_bcd->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_putstr->_lcd_putchar
    _lcd_bcd->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0    6035
                                             20 BANK0     19    19      0
                            _InitApp
                            _lcd_bcd
                           _lcd_goto
                           _lcd_home
                     _lcd_initialize
                         _lcd_putstr
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    1233
                                              1 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2614
                                              3 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (4) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     583
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     27      31       5       61.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3B      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Apr 23 19:34:22 2018

                      pc 0002             ?_lcd_putchar 0070              __CFG_CP$OFF 0000  
                     fsr 0004                      l960 028A                      l962 0298  
                    l972 02B9                      l990 0389                      l968 02AE  
                    l984 036D                      l986 037B                      l994 0394  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RB0 0030                      _RA3 002B                      _RA4 002C  
                    _RB2 0032                      _RC0 0038                      _RA5 002D  
                    _RC1 0039                      _RB3 0033                      _RC2 003A  
                    _RB4 0034                      _RC3 003B                      _RB5 0035  
                    _RE0 0048                      _RB6 0036                      _RC4 003C  
                    _RC5 003D                      _RE1 0049                      _RB7 0037  
                    _RC6 003E                      _RE2 004A                      _RC7 003F  
                    u305 028D                      u250 03DA                      u325 0299  
                    u405 038A                      u270 03CF                      u335 02A5  
                    u345 02AF                      u450 01BD             __CFG_CPD$OFF 0000  
                    u507 009A                      u517 00B2                      u375 0370  
                    u527 01AB                      u537 0306                      u395 0381  
                    u547 0349                      u557 0357                      u497 0086  
                    _isr 03DE                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000        set_lcd_e@b_output 0074             __CFG_LVP$OFF 0000  
                   l1020 02E5                     l1100 0051                     l1022 02F3  
                   l1024 02C1                     l1050 026A                     l1018 02DF  
                   ?_isr 0070                     STR_1 03A7                     STR_2 039F  
           __CFG_WRT$OFF 0000                     _main 0025                     btemp 007E  
                   start 0012          __end_of_InitApp 0409                    ??_isr 0070  
                  ?_main 0070            __CFG_WDTE$OFF 0000          __end_of___lwdiv 02BE  
        __end_of___lwmod 0399                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _PORTE 0009  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088                    _TRISE 0089     send_lcd_data@uc_data 0075  
        __end_of_lcd_bcd 0280           __CFG_BOREN$OFF 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
      send_lcd_data@b_rs 0078             __end_of_main 01B2     __size_of_lcd_2ndline 0009  
  __end_of_send_lcd_data 0367                   ??_main 0034                ??_InitApp 0074  
         __CFG_PWRTE$OFF 0000         __end_of_lcd_home 03FB         __end_of_lcd_goto 03BC  
              ??___lwdiv 0078                ??___lwmod 0078                ??_lcd_bcd 0025  
   __size_of_lcd_putchar 000C                   saved_w 007E         ??_lcd_initialize 0020  
__end_of__initialization 0021           __pcstackCOMMON 0070       __size_of_lcd_clear 0007  
             __pbssBANK0 0047               __pmaintext 0025               __pintentry 0004  
     __size_of_set_lcd_e 000B               _lcd_putstr 02BE                ?_lcd_home 0070  
              ?_lcd_goto 0070               __stringtab 0399            ?_set_lcd_data 0070  
                _InitApp 0408        __end_of_lcd_clear 0402                  ___lwdiv 0280  
                ___lwmod 0367                  __ptext1 02BE                  __ptext2 03E9  
                __ptext3 02FA                  __ptext4 03FB                  __ptext5 03F2  
                __ptext6 03AF                  __ptext7 01B2                  __ptext8 03BC  
                __ptext9 0332                  _lcd_bcd 01B2             __size_of_isr 000B  
                main@IO1 0037                  main@IO2 0039                  main@IO3 003B  
                main@IO4 003D                  main@IO5 003F                  main@IO6 0041  
                main@IO7 0043                  main@IO8 0045               ??_lcd_home 0079  
             ??_lcd_goto 0079     end_of_initialization 0021        lcd_bcd@ui_decimal 0029  
         ??_set_lcd_data 0074        __end_of_set_lcd_e 03DE               _set_lcd_rs 03C8  
          ??_lcd_2ndline 0079              ?_lcd_putstr 0070   __size_of_send_lcd_data 0035  
          ??_lcd_putchar 0079        lcd_putchar@c_data 0020      __end_of_lcd_2ndline 03F2  
    start_initialization 0015       set_lcd_rs@b_output 0074              __end_of_isr 03E9  
   lcd_putstr@csz_string 0022      lcd_goto@uc_position 0020              ?_set_lcd_rs 0070  
    __size_of_lcd_putstr 003C            _send_lcd_data 0332     __end_of_set_lcd_data 0408  
    __end_of_lcd_putchar 03C8                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_home 0009        __size_of_lcd_goto 000D                 ?_InitApp 0070  
__size_of_lcd_initialize 0038         ___lwdiv@dividend 0076              _lcd_2ndline 03E9  
               ?___lwdiv 0074                 ?___lwmod 0074                _lcd_clear 03FB  
         ?_send_lcd_data 0075                __pstrings 0399                 ?_lcd_bcd 0023  
    __size_of_set_lcd_rs 000B         ___lwdiv@quotient 0020      set_lcd_data@uc_data 0074  
      interrupt_function 0004                _set_lcd_e 03D3         lcd_bcd@ui_number 0023  
            _lcd_putchar 03BC               ?_lcd_clear 0070              __stringbase 039E  
           ??_lcd_putstr 0021         __size_of_InitApp 0001               ?_set_lcd_e 0070  
  __size_of_set_lcd_data 0006          ??_send_lcd_data 0076         __size_of___lwdiv 003E  
     __end_of_lcd_putstr 02FA         __size_of___lwmod 0032       __end_of__stringtab 039F  
       __size_of_lcd_bcd 00CE          ___lwdiv@divisor 0074          ___lwdiv@counter 0022  
               __ptext10 03C8                 __ptext11 03D3                 __ptext12 0402  
               __ptext13 0367                 __ptext14 0280                 __ptext15 0408  
               __ptext16 03DE                 _lcd_home 03F2                 _lcd_goto 03AF  
          __size_of_main 018D          lcd_bcd@uc_digit 0033             _set_lcd_data 0402  
         _lcd_initialize 02FA             ??_set_lcd_rs 0074              ??_lcd_clear 0079  
     __end_of_set_lcd_rs 03D3                 intlevel1 0000         ___lwmod@dividend 0076  
 __end_of_lcd_initialize 0332                stringcode 0399              ??_set_lcd_e 0074  
           ?_lcd_2ndline 0070             lcd_bcd@F1134 0047          ___lwmod@divisor 0074  
        ___lwmod@counter 0079                 stringdir 0399                 stringtab 0399  
        ?_lcd_initialize 0070  
