

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 27 16:35:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	dabs	1,0x7E,2
    21  0000                     
    22                           ; Version 1.45
    23                           ; Generated 16/11/2017 GMT
    24                           ; 
    25                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    26                           ; All rights reserved.
    27                           ; 
    28                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    29                           ; 
    30                           ; Redistribution and use in source and binary forms, with or without modification, are
    31                           ; permitted provided that the following conditions are met:
    32                           ; 
    33                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    34                           ;        conditions and the following disclaimer.
    35                           ; 
    36                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    37                           ;        of conditions and the following disclaimer in the documentation and/or other
    38                           ;        materials provided with the distribution.
    39                           ; 
    40                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    41                           ;        software without specific prior written permission.
    42                           ; 
    43                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    44                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    45                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    46                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    47                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    48                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    49                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    50                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    51                           ; 
    52                           ; 
    53                           ; Code-generator required, PIC16F877A Definitions
    54                           ; 
    55                           ; SFR Addresses
    56  0000                     	;# 
    57  0001                     	;# 
    58  0002                     	;# 
    59  0003                     	;# 
    60  0004                     	;# 
    61  0005                     	;# 
    62  0006                     	;# 
    63  0007                     	;# 
    64  0008                     	;# 
    65  0009                     	;# 
    66  000A                     	;# 
    67  000B                     	;# 
    68  000C                     	;# 
    69  000D                     	;# 
    70  000E                     	;# 
    71  000E                     	;# 
    72  000F                     	;# 
    73  0010                     	;# 
    74  0011                     	;# 
    75  0012                     	;# 
    76  0013                     	;# 
    77  0014                     	;# 
    78  0015                     	;# 
    79  0015                     	;# 
    80  0016                     	;# 
    81  0017                     	;# 
    82  0018                     	;# 
    83  0019                     	;# 
    84  001A                     	;# 
    85  001B                     	;# 
    86  001B                     	;# 
    87  001C                     	;# 
    88  001D                     	;# 
    89  001E                     	;# 
    90  001F                     	;# 
    91  0081                     	;# 
    92  0085                     	;# 
    93  0086                     	;# 
    94  0087                     	;# 
    95  0088                     	;# 
    96  0089                     	;# 
    97  008C                     	;# 
    98  008D                     	;# 
    99  008E                     	;# 
   100  0091                     	;# 
   101  0092                     	;# 
   102  0093                     	;# 
   103  0094                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  010C                     	;# 
   111  010D                     	;# 
   112  010E                     	;# 
   113  010F                     	;# 
   114  018C                     	;# 
   115  018D                     	;# 
   116  0000                     	;# 
   117  0001                     	;# 
   118  0002                     	;# 
   119  0003                     	;# 
   120  0004                     	;# 
   121  0005                     	;# 
   122  0006                     	;# 
   123  0007                     	;# 
   124  0008                     	;# 
   125  0009                     	;# 
   126  000A                     	;# 
   127  000B                     	;# 
   128  000C                     	;# 
   129  000D                     	;# 
   130  000E                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0015                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  001A                     	;# 
   145  001B                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0081                     	;# 
   152  0085                     	;# 
   153  0086                     	;# 
   154  0087                     	;# 
   155  0088                     	;# 
   156  0089                     	;# 
   157  008C                     	;# 
   158  008D                     	;# 
   159  008E                     	;# 
   160  0091                     	;# 
   161  0092                     	;# 
   162  0093                     	;# 
   163  0094                     	;# 
   164  0098                     	;# 
   165  0099                     	;# 
   166  009C                     	;# 
   167  009D                     	;# 
   168  009E                     	;# 
   169  009F                     	;# 
   170  010C                     	;# 
   171  010D                     	;# 
   172  010E                     	;# 
   173  010F                     	;# 
   174  018C                     	;# 
   175  018D                     	;# 
   176  0000                     	;# 
   177  0001                     	;# 
   178  0002                     	;# 
   179  0003                     	;# 
   180  0004                     	;# 
   181  0005                     	;# 
   182  0006                     	;# 
   183  0007                     	;# 
   184  0008                     	;# 
   185  0009                     	;# 
   186  000A                     	;# 
   187  000B                     	;# 
   188  000C                     	;# 
   189  000D                     	;# 
   190  000E                     	;# 
   191  000E                     	;# 
   192  000F                     	;# 
   193  0010                     	;# 
   194  0011                     	;# 
   195  0012                     	;# 
   196  0013                     	;# 
   197  0014                     	;# 
   198  0015                     	;# 
   199  0015                     	;# 
   200  0016                     	;# 
   201  0017                     	;# 
   202  0018                     	;# 
   203  0019                     	;# 
   204  001A                     	;# 
   205  001B                     	;# 
   206  001B                     	;# 
   207  001C                     	;# 
   208  001D                     	;# 
   209  001E                     	;# 
   210  001F                     	;# 
   211  0081                     	;# 
   212  0085                     	;# 
   213  0086                     	;# 
   214  0087                     	;# 
   215  0088                     	;# 
   216  0089                     	;# 
   217  008C                     	;# 
   218  008D                     	;# 
   219  008E                     	;# 
   220  0091                     	;# 
   221  0092                     	;# 
   222  0093                     	;# 
   223  0094                     	;# 
   224  0098                     	;# 
   225  0099                     	;# 
   226  009C                     	;# 
   227  009D                     	;# 
   228  009E                     	;# 
   229  009F                     	;# 
   230  010C                     	;# 
   231  010D                     	;# 
   232  010E                     	;# 
   233  010F                     	;# 
   234  018C                     	;# 
   235  018D                     	;# 
   236  0000                     	;# 
   237  0001                     	;# 
   238  0002                     	;# 
   239  0003                     	;# 
   240  0004                     	;# 
   241  0005                     	;# 
   242  0006                     	;# 
   243  0007                     	;# 
   244  0008                     	;# 
   245  0009                     	;# 
   246  000A                     	;# 
   247  000B                     	;# 
   248  000C                     	;# 
   249  000D                     	;# 
   250  000E                     	;# 
   251  000E                     	;# 
   252  000F                     	;# 
   253  0010                     	;# 
   254  0011                     	;# 
   255  0012                     	;# 
   256  0013                     	;# 
   257  0014                     	;# 
   258  0015                     	;# 
   259  0015                     	;# 
   260  0016                     	;# 
   261  0017                     	;# 
   262  0018                     	;# 
   263  0019                     	;# 
   264  001A                     	;# 
   265  001B                     	;# 
   266  001B                     	;# 
   267  001C                     	;# 
   268  001D                     	;# 
   269  001E                     	;# 
   270  001F                     	;# 
   271  0081                     	;# 
   272  0085                     	;# 
   273  0086                     	;# 
   274  0087                     	;# 
   275  0088                     	;# 
   276  0089                     	;# 
   277  008C                     	;# 
   278  008D                     	;# 
   279  008E                     	;# 
   280  0091                     	;# 
   281  0092                     	;# 
   282  0093                     	;# 
   283  0094                     	;# 
   284  0098                     	;# 
   285  0099                     	;# 
   286  009C                     	;# 
   287  009D                     	;# 
   288  009E                     	;# 
   289  009F                     	;# 
   290  010C                     	;# 
   291  010D                     	;# 
   292  010E                     	;# 
   293  010F                     	;# 
   294  018C                     	;# 
   295  018D                     	;# 
   296  0000                     	;# 
   297  0001                     	;# 
   298  0002                     	;# 
   299  0003                     	;# 
   300  0004                     	;# 
   301  0005                     	;# 
   302  0006                     	;# 
   303  0007                     	;# 
   304  0008                     	;# 
   305  0009                     	;# 
   306  000A                     	;# 
   307  000B                     	;# 
   308  000C                     	;# 
   309  000D                     	;# 
   310  000E                     	;# 
   311  000E                     	;# 
   312  000F                     	;# 
   313  0010                     	;# 
   314  0011                     	;# 
   315  0012                     	;# 
   316  0013                     	;# 
   317  0014                     	;# 
   318  0015                     	;# 
   319  0015                     	;# 
   320  0016                     	;# 
   321  0017                     	;# 
   322  0018                     	;# 
   323  0019                     	;# 
   324  001A                     	;# 
   325  001B                     	;# 
   326  001B                     	;# 
   327  001C                     	;# 
   328  001D                     	;# 
   329  001E                     	;# 
   330  001F                     	;# 
   331  0081                     	;# 
   332  0085                     	;# 
   333  0086                     	;# 
   334  0087                     	;# 
   335  0088                     	;# 
   336  0089                     	;# 
   337  008C                     	;# 
   338  008D                     	;# 
   339  008E                     	;# 
   340  0091                     	;# 
   341  0092                     	;# 
   342  0093                     	;# 
   343  0094                     	;# 
   344  0098                     	;# 
   345  0099                     	;# 
   346  009C                     	;# 
   347  009D                     	;# 
   348  009E                     	;# 
   349  009F                     	;# 
   350  010C                     	;# 
   351  010D                     	;# 
   352  010E                     	;# 
   353  010F                     	;# 
   354  018C                     	;# 
   355  018D                     	;# 
   356  0000                     	;# 
   357  0001                     	;# 
   358  0002                     	;# 
   359  0003                     	;# 
   360  0004                     	;# 
   361  0005                     	;# 
   362  0006                     	;# 
   363  0007                     	;# 
   364  0008                     	;# 
   365  0009                     	;# 
   366  000A                     	;# 
   367  000B                     	;# 
   368  000C                     	;# 
   369  000D                     	;# 
   370  000E                     	;# 
   371  000E                     	;# 
   372  000F                     	;# 
   373  0010                     	;# 
   374  0011                     	;# 
   375  0012                     	;# 
   376  0013                     	;# 
   377  0014                     	;# 
   378  0015                     	;# 
   379  0015                     	;# 
   380  0016                     	;# 
   381  0017                     	;# 
   382  0018                     	;# 
   383  0019                     	;# 
   384  001A                     	;# 
   385  001B                     	;# 
   386  001B                     	;# 
   387  001C                     	;# 
   388  001D                     	;# 
   389  001E                     	;# 
   390  001F                     	;# 
   391  0081                     	;# 
   392  0085                     	;# 
   393  0086                     	;# 
   394  0087                     	;# 
   395  0088                     	;# 
   396  0089                     	;# 
   397  008C                     	;# 
   398  008D                     	;# 
   399  008E                     	;# 
   400  0091                     	;# 
   401  0092                     	;# 
   402  0093                     	;# 
   403  0094                     	;# 
   404  0098                     	;# 
   405  0099                     	;# 
   406  009C                     	;# 
   407  009D                     	;# 
   408  009E                     	;# 
   409  009F                     	;# 
   410  010C                     	;# 
   411  010D                     	;# 
   412  010E                     	;# 
   413  010F                     	;# 
   414  018C                     	;# 
   415  018D                     	;# 
   416  0009                     _PORTE	set	9
   417  0008                     _PORTD	set	8
   418  0007                     _PORTC	set	7
   419  0006                     _PORTB	set	6
   420  0005                     _PORTA	set	5
   421  0034                     _RB4	set	52
   422  0035                     _RB5	set	53
   423  004A                     _RE2	set	74
   424  0036                     _RB6	set	54
   425  0049                     _RE1	set	73
   426  0028                     _RA0	set	40
   427  0089                     _TRISE	set	137
   428  0088                     _TRISD	set	136
   429  0087                     _TRISC	set	135
   430  0086                     _TRISB	set	134
   431  0085                     _TRISA	set	133
   432                           
   433                           ; #config settings
   434  0000                     
   435                           	psect	cinit
   436  0015                     start_initialization:	
   437  0015                     __initialization:	
   438                           
   439                           ; Clear objects allocated to BANK1
   440  0015  1683               	bsf	3,5	;RP0=1, select bank1
   441  0016  1303               	bcf	3,6	;RP1=0, select bank1
   442  0017  01A0               	clrf	__pbssBANK1& (0+127)
   443  0018  01A1               	clrf	(__pbssBANK1+1)& (0+127)
   444  0019  01A2               	clrf	(__pbssBANK1+2)& (0+127)
   445  001A  01A3               	clrf	(__pbssBANK1+3)& (0+127)
   446  001B  01A4               	clrf	(__pbssBANK1+4)& (0+127)
   447  001C  01A5               	clrf	(__pbssBANK1+5)& (0+127)
   448  001D  01A6               	clrf	(__pbssBANK1+6)& (0+127)
   449  001E  01A7               	clrf	(__pbssBANK1+7)& (0+127)
   450  001F  01A8               	clrf	(__pbssBANK1+8)& (0+127)
   451  0020  01A9               	clrf	(__pbssBANK1+9)& (0+127)
   452  0021                     end_of_initialization:	
   453                           ;End of C runtime variable initialization code
   454                           
   455  0021                     __end_of__initialization:	
   456  0021  0183               	clrf	3
   457  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   458                           
   459                           	psect	bssBANK1
   460  00A0                     __pbssBANK1:	
   461  00A0                     lcd_bcd@F1134:	
   462  00A0                     	ds	10
   463                           
   464                           	psect	cstackCOMMON
   465  0070                     __pcstackCOMMON:	
   466  0070                     ?_InitApp:	
   467  0070                     ?_lcd_initialize:	
   468                           ; 1 bytes @ 0x0
   469                           
   470  0070                     ?_lcd_home:	
   471                           ; 1 bytes @ 0x0
   472                           
   473  0070                     ?_set_lcd_e:	
   474                           ; 1 bytes @ 0x0
   475                           
   476  0070                     ?_lcd_clear:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_set_lcd_rs:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_set_lcd_data:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_isr:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ??_isr:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_main:	
   492                           ; 1 bytes @ 0x0
   493                           
   494                           
   495                           ; 1 bytes @ 0x0
   496  0070                     	ds	4
   497  0074                     ??_InitApp:	
   498  0074                     ??_set_lcd_e:	
   499                           ; 1 bytes @ 0x4
   500                           
   501  0074                     ??_set_lcd_rs:	
   502                           ; 1 bytes @ 0x4
   503                           
   504  0074                     ??_set_lcd_data:	
   505                           ; 1 bytes @ 0x4
   506                           
   507  0074                     ?_shiftOut:	
   508                           ; 1 bytes @ 0x4
   509                           
   510  0074                     set_lcd_e@b_output:	
   511                           ; 1 bytes @ 0x4
   512                           
   513  0074                     set_lcd_rs@b_output:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     set_lcd_data@uc_data:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     shiftOut@val:	
   520                           ; 1 bytes @ 0x4
   521                           
   522                           
   523                           ; 2 bytes @ 0x4
   524  0074                     	ds	1
   525  0075                     ?_send_lcd_data:	
   526  0075                     send_lcd_data@uc_data:	
   527                           ; 1 bytes @ 0x5
   528                           
   529                           
   530                           ; 1 bytes @ 0x5
   531  0075                     	ds	1
   532  0076                     ??_send_lcd_data:	
   533  0076                     shiftOut@bitOrder:	
   534                           ; 1 bytes @ 0x6
   535                           
   536                           
   537                           ; 1 bytes @ 0x6
   538  0076                     	ds	1
   539  0077                     shiftOut@i:	
   540                           
   541                           ; 2 bytes @ 0x7
   542  0077                     	ds	1
   543  0078                     send_lcd_data@b_rs:	
   544                           
   545                           ; 1 bytes @ 0x8
   546  0078                     	ds	1
   547  0079                     ??_lcd_home:	
   548  0079                     ??_lcd_clear:	
   549                           ; 1 bytes @ 0x9
   550                           
   551                           
   552                           ; 1 bytes @ 0x9
   553  0079                     	ds	1
   554                           
   555                           	psect	cstackBANK0
   556  0020                     __pcstackBANK0:	
   557  0020                     ??_lcd_initialize:	
   558  0020                     ??_shiftOut:	
   559                           ; 1 bytes @ 0x0
   560                           
   561                           
   562                           ; 1 bytes @ 0x0
   563  0020                     	ds	5
   564  0025                     ??_main:	
   565                           
   566                           ; 1 bytes @ 0x5
   567  0025                     	ds	3
   568  0028                     main@dataArray:	
   569                           
   570                           ; 62 bytes @ 0x8
   571  0028                     	ds	62
   572  0066                     main@dataSend:	
   573                           
   574                           ; 2 bytes @ 0x46
   575  0066                     	ds	2
   576  0068                     main@j:	
   577                           
   578                           ; 2 bytes @ 0x48
   579  0068                     	ds	2
   580                           
   581                           	psect	maintext
   582  0025                     __pmaintext:	
   583 ;;
   584 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   585 ;;
   586 ;; *************** function _main *****************
   587 ;; Defined at:
   588 ;;		line 40 in file "main.c"
   589 ;; Parameters:    Size  Location     Type
   590 ;;		None
   591 ;; Auto vars:     Size  Location     Type
   592 ;;  dataArray      62    8[BANK0 ] unsigned int [31]
   593 ;;  j               2   72[BANK0 ] unsigned int 
   594 ;;  dataSend        2   70[BANK0 ] unsigned int 
   595 ;; Return value:  Size  Location     Type
   596 ;;                  1    wreg      void 
   597 ;; Registers used:
   598 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   599 ;; Tracked objects:
   600 ;;		On entry : B00/0
   601 ;;		On exit  : 0/0
   602 ;;		Unchanged: 0/0
   603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   604 ;;      Params:         0       0       0       0       0
   605 ;;      Locals:         0      66       0       0       0
   606 ;;      Temps:          0       3       0       0       0
   607 ;;      Totals:         0      69       0       0       0
   608 ;;Total ram usage:       69 bytes
   609 ;; Hardware stack levels required when called:    5
   610 ;; This function calls:
   611 ;;		_InitApp
   612 ;;		_lcd_home
   613 ;;		_lcd_initialize
   614 ;;		_shiftOut
   615 ;; This function is called by:
   616 ;;		Startup code after reset
   617 ;; This function uses a non-reentrant model
   618 ;;
   619                           
   620                           
   621                           ;psect for function _main
   622  0025                     _main:	
   623                           
   624                           ;main.c: 43: InitApp();
   625                           
   626                           ;incstack = 0
   627                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   628  0025  120A  118A  2202  120A  118A  	fcall	_InitApp
   629                           
   630                           ;main.c: 45: PORTA = 0;
   631  002A  1283               	bcf	3,5	;RP0=0, select bank0
   632  002B  1303               	bcf	3,6	;RP1=0, select bank0
   633  002C  0185               	clrf	5	;volatile
   634                           
   635                           ;main.c: 46: PORTB = 0;
   636  002D  0186               	clrf	6	;volatile
   637                           
   638                           ;main.c: 47: PORTC = 0;
   639  002E  0187               	clrf	7	;volatile
   640                           
   641                           ;main.c: 48: PORTD = 0;
   642  002F  0188               	clrf	8	;volatile
   643                           
   644                           ;main.c: 49: PORTE = 0;
   645  0030  0189               	clrf	9	;volatile
   646                           
   647                           ;main.c: 51: TRISA = 0b00000000;
   648  0031  1683               	bsf	3,5	;RP0=1, select bank1
   649  0032  1303               	bcf	3,6	;RP1=0, select bank1
   650  0033  0185               	clrf	5	;volatile
   651                           
   652                           ;main.c: 52: TRISB = 0b00000011;
   653  0034  3003               	movlw	3
   654  0035  0086               	movwf	6	;volatile
   655                           
   656                           ;main.c: 53: TRISC = 0b11111111;
   657  0036  30FF               	movlw	255
   658  0037  0087               	movwf	7	;volatile
   659                           
   660                           ;main.c: 54: TRISD = 0b00000000;
   661  0038  0188               	clrf	8	;volatile
   662                           
   663                           ;main.c: 55: TRISE = 0b0000;
   664  0039  0189               	clrf	9	;volatile
   665                           
   666                           ;main.c: 57: lcd_initialize();
   667  003A  120A  118A  215E  120A  118A  	fcall	_lcd_initialize
   668                           
   669                           ;main.c: 77: uint16_t dataArray[31];
   670                           ;main.c: 78: uint16_t dataSend;
   671                           ;main.c: 80: dataArray[0] = 0b0000000000000000;
   672  003F  1283               	bcf	3,5	;RP0=0, select bank0
   673  0040  1303               	bcf	3,6	;RP1=0, select bank0
   674  0041  01A8               	clrf	main@dataArray
   675  0042  01A9               	clrf	main@dataArray+1
   676                           
   677                           ;main.c: 81: dataArray[1] = 0b1000000000000000;
   678  0043  3000               	movlw	0
   679  0044  00AA               	movwf	main@dataArray+2
   680  0045  3080               	movlw	128
   681  0046  00AB               	movwf	main@dataArray+3
   682                           
   683                           ;main.c: 82: dataArray[2] = 0b1100000000000000;
   684  0047  3000               	movlw	0
   685  0048  00AC               	movwf	main@dataArray+4
   686  0049  30C0               	movlw	192
   687  004A  00AD               	movwf	main@dataArray+5
   688                           
   689                           ;main.c: 83: dataArray[3] = 0b1110000000000000;
   690  004B  3000               	movlw	0
   691  004C  00AE               	movwf	main@dataArray+6
   692  004D  30E0               	movlw	224
   693  004E  00AF               	movwf	main@dataArray+7
   694                           
   695                           ;main.c: 84: dataArray[4] = 0b1111000000000000;
   696  004F  3000               	movlw	0
   697  0050  00B0               	movwf	main@dataArray+8
   698  0051  30F0               	movlw	240
   699  0052  00B1               	movwf	main@dataArray+9
   700                           
   701                           ;main.c: 85: dataArray[5] = 0b0111100000000000;
   702  0053  3000               	movlw	0
   703  0054  00B2               	movwf	main@dataArray+10
   704  0055  3078               	movlw	120
   705  0056  00B3               	movwf	main@dataArray+11
   706                           
   707                           ;main.c: 86: dataArray[6] = 0b0011110000000000;
   708  0057  3000               	movlw	0
   709  0058  00B4               	movwf	main@dataArray+12
   710  0059  303C               	movlw	60
   711  005A  00B5               	movwf	main@dataArray+13
   712                           
   713                           ;main.c: 87: dataArray[7] = 0b0001111000000000;
   714  005B  3000               	movlw	0
   715  005C  00B6               	movwf	main@dataArray+14
   716  005D  301E               	movlw	30
   717  005E  00B7               	movwf	main@dataArray+15
   718                           
   719                           ;main.c: 88: dataArray[8] = 0b0000111100000000;
   720  005F  3000               	movlw	0
   721  0060  00B8               	movwf	main@dataArray+16
   722  0061  300F               	movlw	15
   723  0062  00B9               	movwf	main@dataArray+17
   724                           
   725                           ;main.c: 89: dataArray[9] = 0b0000011110000000;
   726  0063  3080               	movlw	128
   727  0064  00BA               	movwf	main@dataArray+18
   728  0065  3007               	movlw	7
   729  0066  00BB               	movwf	main@dataArray+19
   730                           
   731                           ;main.c: 90: dataArray[10] = 0b0000001111000000;
   732  0067  30C0               	movlw	192
   733  0068  00BC               	movwf	main@dataArray+20
   734  0069  3003               	movlw	3
   735  006A  00BD               	movwf	main@dataArray+21
   736                           
   737                           ;main.c: 91: dataArray[11] = 0b0000000111100000;
   738  006B  30E0               	movlw	224
   739  006C  00BE               	movwf	main@dataArray+22
   740  006D  3001               	movlw	1
   741  006E  00BF               	movwf	main@dataArray+23
   742                           
   743                           ;main.c: 92: dataArray[12] = 0b0000000011110000;
   744  006F  30F0               	movlw	240
   745  0070  00C0               	movwf	main@dataArray+24
   746  0071  3000               	movlw	0
   747  0072  00C1               	movwf	main@dataArray+25
   748                           
   749                           ;main.c: 93: dataArray[13] = 0b0000000001111000;
   750  0073  3078               	movlw	120
   751  0074  00C2               	movwf	main@dataArray+26
   752  0075  3000               	movlw	0
   753  0076  00C3               	movwf	main@dataArray+27
   754                           
   755                           ;main.c: 94: dataArray[14] = 0b0000000000111100;
   756  0077  303C               	movlw	60
   757  0078  00C4               	movwf	main@dataArray+28
   758  0079  3000               	movlw	0
   759  007A  00C5               	movwf	main@dataArray+29
   760                           
   761                           ;main.c: 95: dataArray[15] = 0b0000000000011110;
   762  007B  301E               	movlw	30
   763  007C  00C6               	movwf	main@dataArray+30
   764  007D  3000               	movlw	0
   765  007E  00C7               	movwf	main@dataArray+31
   766                           
   767                           ;main.c: 96: dataArray[16] = 0b0000000000001111;
   768  007F  300F               	movlw	15
   769  0080  00C8               	movwf	main@dataArray+32
   770  0081  3000               	movlw	0
   771  0082  00C9               	movwf	main@dataArray+33
   772                           
   773                           ;main.c: 97: dataArray[17] = 0b0000000000000111;
   774  0083  3007               	movlw	7
   775  0084  00CA               	movwf	main@dataArray+34
   776  0085  3000               	movlw	0
   777  0086  00CB               	movwf	main@dataArray+35
   778                           
   779                           ;main.c: 98: dataArray[18] = 0b0000000000000011;
   780  0087  3003               	movlw	3
   781  0088  00CC               	movwf	main@dataArray+36
   782  0089  3000               	movlw	0
   783  008A  00CD               	movwf	main@dataArray+37
   784                           
   785                           ;main.c: 99: dataArray[19] = 0b0000000000000001;
   786  008B  3001               	movlw	1
   787  008C  00CE               	movwf	main@dataArray+38
   788  008D  3000               	movlw	0
   789  008E  00CF               	movwf	main@dataArray+39
   790  008F                     l921:	
   791                           ;main.c: 101: unsigned int j;
   792                           ;main.c: 103: while(1)
   793                           
   794                           
   795                           ;main.c: 104: {
   796                           ;main.c: 105: RB6=0;
   797  008F  1306               	bcf	6,6	;volatile
   798                           
   799                           ;main.c: 107: lcd_home();
   800  0090  120A  118A  21EC  120A  118A  	fcall	_lcd_home
   801                           
   802                           ;main.c: 109: for (j = 0; j < 19; j++)
   803  0095  1283               	bcf	3,5	;RP0=0, select bank0
   804  0096  1303               	bcf	3,6	;RP1=0, select bank0
   805  0097  01E8               	clrf	main@j
   806  0098  01E9               	clrf	main@j+1
   807  0099  3000               	movlw	0
   808  009A  0269               	subwf	main@j+1,w
   809  009B  3013               	movlw	19
   810  009C  1903               	skipnz
   811  009D  0268               	subwf	main@j,w
   812  009E  1803               	btfsc	3,0
   813  009F  28D6               	goto	l945
   814  00A0                     l931:	
   815                           
   816                           ;main.c: 110: {
   817                           ;main.c: 111: dataSend = dataArray[j];
   818  00A0  0868               	movf	main@j,w
   819  00A1  00A5               	movwf	??_main
   820  00A2  0725               	addwf	??_main,w
   821  00A3  3E28               	addlw	(low (main@dataArray| 0))& (0+255)
   822  00A4  0084               	movwf	4
   823  00A5  1383               	bcf	3,7	;select IRP bank0
   824  00A6  0800               	movf	0,w
   825  00A7  00E6               	movwf	main@dataSend
   826  00A8  0A84               	incf	4,f
   827  00A9  0800               	movf	0,w
   828  00AA  00E7               	movwf	main@dataSend+1
   829                           
   830                           ;main.c: 112: RE2=0;
   831  00AB  1109               	bcf	9,2	;volatile
   832                           
   833                           ;main.c: 113: shiftOut(1, dataSend);
   834  00AC  0867               	movf	main@dataSend+1,w
   835  00AD  00F5               	movwf	shiftOut@val+1
   836  00AE  0866               	movf	main@dataSend,w
   837  00AF  00F4               	movwf	shiftOut@val
   838  00B0  3001               	movlw	1
   839  00B1  120A  118A  2113  120A  118A  	fcall	_shiftOut
   840                           
   841                           ;main.c: 114: RE2=1;
   842  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   843  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   844  00B8  1509               	bsf	9,2	;volatile
   845                           
   846                           ;main.c: 115: _delay((unsigned long)((50)*(20000000/4000.0)));
   847  00B9  3002               	movlw	2
   848  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   849  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   850  00BC  00A7               	movwf	??_main+2
   851  00BD  3045               	movlw	69
   852  00BE  00A6               	movwf	??_main+1
   853  00BF  30A9               	movlw	169
   854  00C0  00A5               	movwf	??_main
   855  00C1                     u627:	
   856  00C1  0BA5               	decfsz	??_main,f
   857  00C2  28C1               	goto	u627
   858  00C3  0BA6               	decfsz	??_main+1,f
   859  00C4  28C1               	goto	u627
   860  00C5  0BA7               	decfsz	??_main+2,f
   861  00C6  28C1               	goto	u627
   862  00C7  3001               	movlw	1
   863  00C8  1283               	bcf	3,5	;RP0=0, select bank0
   864  00C9  1303               	bcf	3,6	;RP1=0, select bank0
   865  00CA  07E8               	addwf	main@j,f
   866  00CB  1803               	skipnc
   867  00CC  0AE9               	incf	main@j+1,f
   868  00CD  3000               	movlw	0
   869  00CE  07E9               	addwf	main@j+1,f
   870  00CF  3000               	movlw	0
   871  00D0  0269               	subwf	main@j+1,w
   872  00D1  3013               	movlw	19
   873  00D2  1903               	skipnz
   874  00D3  0268               	subwf	main@j,w
   875  00D4  1C03               	skipc
   876  00D5  28A0               	goto	l931
   877  00D6                     l945:	
   878                           
   879                           ;main.c: 116: }
   880                           ;main.c: 117: for (j = 19; j > 0; j--)
   881  00D6  3013               	movlw	19
   882  00D7  00E8               	movwf	main@j
   883  00D8  3000               	movlw	0
   884  00D9  00E9               	movwf	main@j+1
   885  00DA  0868               	movf	main@j,w
   886  00DB  0469               	iorwf	main@j+1,w
   887  00DC  1903               	btfsc	3,2
   888  00DD  2911               	goto	l57
   889  00DE                     l951:	
   890                           
   891                           ;main.c: 118: {
   892                           ;main.c: 119: dataSend = dataArray[j];
   893  00DE  0868               	movf	main@j,w
   894  00DF  00A5               	movwf	??_main
   895  00E0  0725               	addwf	??_main,w
   896  00E1  3E28               	addlw	(low (main@dataArray| 0))& (0+255)
   897  00E2  0084               	movwf	4
   898  00E3  1383               	bcf	3,7	;select IRP bank0
   899  00E4  0800               	movf	0,w
   900  00E5  00E6               	movwf	main@dataSend
   901  00E6  0A84               	incf	4,f
   902  00E7  0800               	movf	0,w
   903  00E8  00E7               	movwf	main@dataSend+1
   904                           
   905                           ;main.c: 120: RE2=0;
   906  00E9  1109               	bcf	9,2	;volatile
   907                           
   908                           ;main.c: 121: shiftOut(1, dataSend);
   909  00EA  0867               	movf	main@dataSend+1,w
   910  00EB  00F5               	movwf	shiftOut@val+1
   911  00EC  0866               	movf	main@dataSend,w
   912  00ED  00F4               	movwf	shiftOut@val
   913  00EE  3001               	movlw	1
   914  00EF  120A  118A  2113  120A  118A  	fcall	_shiftOut
   915                           
   916                           ;main.c: 122: RE2=1;
   917  00F4  1283               	bcf	3,5	;RP0=0, select bank0
   918  00F5  1303               	bcf	3,6	;RP1=0, select bank0
   919  00F6  1509               	bsf	9,2	;volatile
   920                           
   921                           ;main.c: 123: _delay((unsigned long)((50)*(20000000/4000.0)));
   922  00F7  3002               	movlw	2
   923  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   924  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   925  00FA  00A7               	movwf	??_main+2
   926  00FB  3045               	movlw	69
   927  00FC  00A6               	movwf	??_main+1
   928  00FD  30A9               	movlw	169
   929  00FE  00A5               	movwf	??_main
   930  00FF                     u637:	
   931  00FF  0BA5               	decfsz	??_main,f
   932  0100  28FF               	goto	u637
   933  0101  0BA6               	decfsz	??_main+1,f
   934  0102  28FF               	goto	u637
   935  0103  0BA7               	decfsz	??_main+2,f
   936  0104  28FF               	goto	u637
   937  0105  3001               	movlw	1
   938  0106  1283               	bcf	3,5	;RP0=0, select bank0
   939  0107  1303               	bcf	3,6	;RP1=0, select bank0
   940  0108  02E8               	subwf	main@j,f
   941  0109  3000               	movlw	0
   942  010A  1C03               	skipc
   943  010B  03E9               	decf	main@j+1,f
   944  010C  02E9               	subwf	main@j+1,f
   945  010D  0868               	movf	main@j,w
   946  010E  0469               	iorwf	main@j+1,w
   947  010F  1D03               	btfss	3,2
   948  0110  28DE               	goto	l951
   949  0111                     l57:	
   950                           
   951                           ;main.c: 124: }
   952                           ;main.c: 125: RB6=1;
   953  0111  1706               	bsf	6,6	;volatile
   954  0112  288F               	goto	l921
   955  0113                     __end_of_main:	
   956                           
   957                           	psect	text1
   958  0113                     __ptext1:	
   959 ;; *************** function _shiftOut *****************
   960 ;; Defined at:
   961 ;;		line 19 in file "main.c"
   962 ;; Parameters:    Size  Location     Type
   963 ;;  bitOrder        1    wreg     unsigned char 
   964 ;;  val             2    4[COMMON] unsigned int 
   965 ;; Auto vars:     Size  Location     Type
   966 ;;  bitOrder        1    6[COMMON] unsigned char 
   967 ;;  i               2    7[COMMON] int 
   968 ;; Return value:  Size  Location     Type
   969 ;;                  1    wreg      void 
   970 ;; Registers used:
   971 ;;		wreg, status,2, status,0, btemp+1
   972 ;; Tracked objects:
   973 ;;		On entry : 0/0
   974 ;;		On exit  : 0/0
   975 ;;		Unchanged: 0/0
   976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   977 ;;      Params:         2       0       0       0       0
   978 ;;      Locals:         3       0       0       0       0
   979 ;;      Temps:          0       5       0       0       0
   980 ;;      Totals:         5       5       0       0       0
   981 ;;Total ram usage:       10 bytes
   982 ;; Hardware stack levels used:    1
   983 ;; Hardware stack levels required when called:    1
   984 ;; This function calls:
   985 ;;		Nothing
   986 ;; This function is called by:
   987 ;;		_main
   988 ;; This function uses a non-reentrant model
   989 ;;
   990                           
   991                           
   992                           ;psect for function _shiftOut
   993  0113                     _shiftOut:	
   994                           
   995                           ;incstack = 0
   996                           ; Regs used in _shiftOut: [wreg+status,2+status,0+btemp+1]
   997                           ;shiftOut@bitOrder stored from wreg
   998  0113  00F6               	movwf	shiftOut@bitOrder
   999                           
  1000                           ;main.c: 21: int i;
  1001                           ;main.c: 22: for(i = 0; i < 16; i++)
  1002  0114  01F7               	clrf	shiftOut@i
  1003  0115  01F8               	clrf	shiftOut@i+1
  1004  0116                     L2:	
  1005  0116  0878               	movf	shiftOut@i+1,w
  1006  0117  3A80               	xorlw	128
  1007  0118  00FF               	movwf	127
  1008  0119  3080               	movlw	128
  1009  011A  027F               	subwf	127,w
  1010  011B  1D03               	skipz
  1011  011C  291F               	goto	u295
  1012  011D  3010               	movlw	16
  1013  011E  0277               	subwf	shiftOut@i,w
  1014  011F                     u295:	
  1015  011F  1803               	btfsc	3,0
  1016  0120  0008               	return
  1017                           
  1018                           ;main.c: 23: {
  1019                           ;main.c: 26: if (bitOrder == 0)
  1020  0121  0876               	movf	shiftOut@bitOrder,w
  1021  0122  1D03               	btfss	3,2
  1022  0123  2933               	goto	l829
  1023                           
  1024                           ;main.c: 27: {
  1025                           ;main.c: 28: RA0 = !!(val & (1 << i));
  1026  0124  0A77               	incf	shiftOut@i,w
  1027  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1028  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1029  0127  00A0               	movwf	??_shiftOut
  1030  0128  3001               	movlw	1
  1031  0129  00A1               	movwf	??_shiftOut+1
  1032  012A  3000               	movlw	0
  1033  012B  00A2               	movwf	??_shiftOut+2
  1034  012C  2930               	goto	u314
  1035  012D                     u315:	
  1036  012D  1003               	clrc
  1037  012E  0DA1               	rlf	??_shiftOut+1,f
  1038  012F  0DA2               	rlf	??_shiftOut+2,f
  1039  0130                     u314:	
  1040  0130  0BA0               	decfsz	??_shiftOut,f
  1041  0131  292D               	goto	u315
  1042  0132  2944               	goto	L4
  1043  0133                     l829:	
  1044                           ;main.c: 29: }
  1045                           
  1046                           
  1047                           ;main.c: 30: else
  1048                           ;main.c: 31: {
  1049                           ;main.c: 32: RA0 = !!(val & (1 << (15 - i)));
  1050  0133  0377               	decf	shiftOut@i,w
  1051  0134  3AFF               	xorlw	255
  1052  0135  3E0F               	addlw	15
  1053  0136  1283               	bcf	3,5	;RP0=0, select bank0
  1054  0137  1303               	bcf	3,6	;RP1=0, select bank0
  1055  0138  00A0               	movwf	??_shiftOut
  1056  0139  0AA0               	incf	??_shiftOut,f
  1057  013A  3001               	movlw	1
  1058  013B  00A1               	movwf	??_shiftOut+1
  1059  013C  3000               	movlw	0
  1060  013D  00A2               	movwf	??_shiftOut+2
  1061  013E  2942               	goto	u344
  1062  013F                     u345:	
  1063  013F  1003               	clrc
  1064  0140  0DA1               	rlf	??_shiftOut+1,f
  1065  0141  0DA2               	rlf	??_shiftOut+2,f
  1066  0142                     u344:	
  1067  0142  0BA0               	decfsz	??_shiftOut,f
  1068  0143  293F               	goto	u345
  1069  0144                     L4:	
  1070  0144  0874               	movf	shiftOut@val,w
  1071  0145  0521               	andwf	??_shiftOut+1,w
  1072  0146  00A3               	movwf	??_shiftOut+3
  1073  0147  0875               	movf	shiftOut@val+1,w
  1074  0148  0522               	andwf	??_shiftOut+2,w
  1075  0149  00A4               	movwf	??_shiftOut+4
  1076  014A  0823               	movf	??_shiftOut+3,w
  1077  014B  0424               	iorwf	??_shiftOut+4,w
  1078  014C  1903               	btfsc	3,2
  1079  014D  2952               	goto	u350
  1080  014E  1283               	bcf	3,5	;RP0=0, select bank0
  1081  014F  1303               	bcf	3,6	;RP1=0, select bank0
  1082  0150  1405               	bsf	5,0	;volatile
  1083  0151  2955               	goto	l831
  1084  0152                     u350:	
  1085  0152  1283               	bcf	3,5	;RP0=0, select bank0
  1086  0153  1303               	bcf	3,6	;RP1=0, select bank0
  1087  0154  1005               	bcf	5,0	;volatile
  1088  0155                     l831:	
  1089                           
  1090                           ;main.c: 33: }
  1091                           ;main.c: 35: RE1 = 1;
  1092  0155  1489               	bsf	9,1	;volatile
  1093                           
  1094                           ;main.c: 36: RE1 = 0;
  1095  0156  1089               	bcf	9,1	;volatile
  1096  0157  3001               	movlw	1
  1097  0158  07F7               	addwf	shiftOut@i,f
  1098  0159  1803               	skipnc
  1099  015A  0AF8               	incf	shiftOut@i+1,f
  1100  015B  3000               	movlw	0
  1101  015C  07F8               	addwf	shiftOut@i+1,f
  1102  015D  2916               	goto	L2
  1103  015E                     __end_of_shiftOut:	
  1104                           
  1105                           	psect	text2
  1106  015E                     __ptext2:	
  1107 ;; *************** function _lcd_initialize *****************
  1108 ;; Defined at:
  1109 ;;		line 100 in file "lcd.c"
  1110 ;; Parameters:    Size  Location     Type
  1111 ;;		None
  1112 ;; Auto vars:     Size  Location     Type
  1113 ;;		None
  1114 ;; Return value:  Size  Location     Type
  1115 ;;                  1    wreg      void 
  1116 ;; Registers used:
  1117 ;;		wreg, status,2, status,0, pclath, cstack
  1118 ;; Tracked objects:
  1119 ;;		On entry : 0/0
  1120 ;;		On exit  : 0/0
  1121 ;;		Unchanged: 0/0
  1122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1123 ;;      Params:         0       0       0       0       0
  1124 ;;      Locals:         0       0       0       0       0
  1125 ;;      Temps:          0       2       0       0       0
  1126 ;;      Totals:         0       2       0       0       0
  1127 ;;Total ram usage:        2 bytes
  1128 ;; Hardware stack levels used:    1
  1129 ;; Hardware stack levels required when called:    4
  1130 ;; This function calls:
  1131 ;;		_lcd_clear
  1132 ;;		_send_lcd_data
  1133 ;;		_set_lcd_e
  1134 ;; This function is called by:
  1135 ;;		_main
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _lcd_initialize
  1141  015E                     _lcd_initialize:	
  1142                           
  1143                           ;lcd.c: 104: set_lcd_e(1);
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1147  015E  3001               	movlw	1
  1148  015F  120A  118A  21D6  120A  118A  	fcall	_set_lcd_e
  1149                           
  1150                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1151  0164  3062               	movlw	98
  1152  0165  1283               	bcf	3,5	;RP0=0, select bank0
  1153  0166  1303               	bcf	3,6	;RP1=0, select bank0
  1154  0167  00A1               	movwf	??_lcd_initialize+1
  1155  0168  3065               	movlw	101
  1156  0169  00A0               	movwf	??_lcd_initialize
  1157  016A                     u647:	
  1158  016A  0BA0               	decfsz	??_lcd_initialize,f
  1159  016B  296A               	goto	u647
  1160  016C  0BA1               	decfsz	??_lcd_initialize+1,f
  1161  016D  296A               	goto	u647
  1162                           
  1163                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1164  016E  3038               	movlw	56
  1165  016F  1283               	bcf	3,5	;RP0=0, select bank0
  1166  0170  1303               	bcf	3,6	;RP1=0, select bank0
  1167  0171  00A0               	movwf	??_lcd_initialize
  1168  0172  0820               	movf	??_lcd_initialize,w
  1169  0173  00F5               	movwf	send_lcd_data@uc_data
  1170  0174  3000               	movlw	0
  1171  0175  120A  118A  2196  120A  118A  	fcall	_send_lcd_data
  1172                           
  1173                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1174  017A  3006               	movlw	6
  1175  017B  1283               	bcf	3,5	;RP0=0, select bank0
  1176  017C  1303               	bcf	3,6	;RP1=0, select bank0
  1177  017D  00A0               	movwf	??_lcd_initialize
  1178  017E  0820               	movf	??_lcd_initialize,w
  1179  017F  00F5               	movwf	send_lcd_data@uc_data
  1180  0180  3000               	movlw	0
  1181  0181  120A  118A  2196  120A  118A  	fcall	_send_lcd_data
  1182                           
  1183                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1184  0186  300C               	movlw	12
  1185  0187  1283               	bcf	3,5	;RP0=0, select bank0
  1186  0188  1303               	bcf	3,6	;RP1=0, select bank0
  1187  0189  00A0               	movwf	??_lcd_initialize
  1188  018A  0820               	movf	??_lcd_initialize,w
  1189  018B  00F5               	movwf	send_lcd_data@uc_data
  1190  018C  3000               	movlw	0
  1191  018D  120A  118A  2196  120A  118A  	fcall	_send_lcd_data
  1192                           
  1193                           ;lcd.c: 118: lcd_clear();
  1194  0192  120A  118A  21F5   	fcall	_lcd_clear
  1195  0195  0008               	return
  1196  0196                     __end_of_lcd_initialize:	
  1197                           
  1198                           	psect	text3
  1199  01F5                     __ptext3:	
  1200 ;; *************** function _lcd_clear *****************
  1201 ;; Defined at:
  1202 ;;		line 136 in file "lcd.c"
  1203 ;; Parameters:    Size  Location     Type
  1204 ;;		None
  1205 ;; Auto vars:     Size  Location     Type
  1206 ;;		None
  1207 ;; Return value:  Size  Location     Type
  1208 ;;                  1    wreg      void 
  1209 ;; Registers used:
  1210 ;;		wreg, status,2, status,0, pclath, cstack
  1211 ;; Tracked objects:
  1212 ;;		On entry : 0/0
  1213 ;;		On exit  : 0/0
  1214 ;;		Unchanged: 0/0
  1215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1216 ;;      Params:         0       0       0       0       0
  1217 ;;      Locals:         0       0       0       0       0
  1218 ;;      Temps:          0       0       0       0       0
  1219 ;;      Totals:         0       0       0       0       0
  1220 ;;Total ram usage:        0 bytes
  1221 ;; Hardware stack levels used:    1
  1222 ;; Hardware stack levels required when called:    3
  1223 ;; This function calls:
  1224 ;;		_send_lcd_data
  1225 ;; This function is called by:
  1226 ;;		_lcd_initialize
  1227 ;; This function uses a non-reentrant model
  1228 ;;
  1229                           
  1230                           
  1231                           ;psect for function _lcd_clear
  1232  01F5                     _lcd_clear:	
  1233                           
  1234                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1235                           
  1236                           ;incstack = 0
  1237                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1238  01F5  01F5               	clrf	send_lcd_data@uc_data
  1239  01F6  0AF5               	incf	send_lcd_data@uc_data,f
  1240  01F7  3000               	movlw	0
  1241  01F8  120A  118A  2196   	fcall	_send_lcd_data
  1242  01FB  0008               	return
  1243  01FC                     __end_of_lcd_clear:	
  1244                           
  1245                           	psect	text4
  1246  01EC                     __ptext4:	
  1247 ;; *************** function _lcd_home *****************
  1248 ;; Defined at:
  1249 ;;		line 157 in file "lcd.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;		None
  1252 ;; Auto vars:     Size  Location     Type
  1253 ;;		None
  1254 ;; Return value:  Size  Location     Type
  1255 ;;                  1    wreg      void 
  1256 ;; Registers used:
  1257 ;;		wreg, status,2, status,0, pclath, cstack
  1258 ;; Tracked objects:
  1259 ;;		On entry : 0/0
  1260 ;;		On exit  : 0/0
  1261 ;;		Unchanged: 0/0
  1262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1263 ;;      Params:         0       0       0       0       0
  1264 ;;      Locals:         0       0       0       0       0
  1265 ;;      Temps:          1       0       0       0       0
  1266 ;;      Totals:         1       0       0       0       0
  1267 ;;Total ram usage:        1 bytes
  1268 ;; Hardware stack levels used:    1
  1269 ;; Hardware stack levels required when called:    3
  1270 ;; This function calls:
  1271 ;;		_send_lcd_data
  1272 ;; This function is called by:
  1273 ;;		_main
  1274 ;; This function uses a non-reentrant model
  1275 ;;
  1276                           
  1277                           
  1278                           ;psect for function _lcd_home
  1279  01EC                     _lcd_home:	
  1280                           
  1281                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1282                           
  1283                           ;incstack = 0
  1284                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1285  01EC  3002               	movlw	2
  1286  01ED  00F9               	movwf	??_lcd_home
  1287  01EE  0879               	movf	??_lcd_home,w
  1288  01EF  00F5               	movwf	send_lcd_data@uc_data
  1289  01F0  3000               	movlw	0
  1290  01F1  120A  118A  2196   	fcall	_send_lcd_data
  1291  01F4  0008               	return
  1292  01F5                     __end_of_lcd_home:	
  1293                           
  1294                           	psect	text5
  1295  0196                     __ptext5:	
  1296 ;; *************** function _send_lcd_data *****************
  1297 ;; Defined at:
  1298 ;;		line 308 in file "lcd.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  b_rs            1    wreg     unsigned char 
  1301 ;;  uc_data         1    5[COMMON] unsigned char 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  b_rs            1    8[COMMON] unsigned char 
  1304 ;; Return value:  Size  Location     Type
  1305 ;;                  1    wreg      void 
  1306 ;; Registers used:
  1307 ;;		wreg, status,2, status,0, pclath, cstack
  1308 ;; Tracked objects:
  1309 ;;		On entry : 0/0
  1310 ;;		On exit  : 0/0
  1311 ;;		Unchanged: 0/0
  1312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1313 ;;      Params:         1       0       0       0       0
  1314 ;;      Locals:         1       0       0       0       0
  1315 ;;      Temps:          2       0       0       0       0
  1316 ;;      Totals:         4       0       0       0       0
  1317 ;;Total ram usage:        4 bytes
  1318 ;; Hardware stack levels used:    1
  1319 ;; Hardware stack levels required when called:    2
  1320 ;; This function calls:
  1321 ;;		_set_lcd_data
  1322 ;;		_set_lcd_e
  1323 ;;		_set_lcd_rs
  1324 ;; This function is called by:
  1325 ;;		_lcd_initialize
  1326 ;;		_lcd_clear
  1327 ;;		_lcd_home
  1328 ;;		_lcd_2ndline
  1329 ;;		_lcd_goto
  1330 ;;		_lcd_putchar
  1331 ;; This function uses a non-reentrant model
  1332 ;;
  1333                           
  1334                           
  1335                           ;psect for function _send_lcd_data
  1336  0196                     _send_lcd_data:	
  1337                           
  1338                           ;incstack = 0
  1339                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1340                           ;send_lcd_data@b_rs stored from wreg
  1341  0196  00F8               	movwf	send_lcd_data@b_rs
  1342                           
  1343                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1344  0197  0878               	movf	send_lcd_data@b_rs,w
  1345  0198  120A  118A  21CB  120A  118A  	fcall	_set_lcd_rs
  1346                           
  1347                           ;lcd.c: 312: set_lcd_data(uc_data);
  1348  019D  0875               	movf	send_lcd_data@uc_data,w
  1349  019E  120A  118A  21FC  120A  118A  	fcall	_set_lcd_data
  1350                           
  1351                           ;lcd.c: 315: set_lcd_e(1);
  1352  01A3  3001               	movlw	1
  1353  01A4  120A  118A  21D6  120A  118A  	fcall	_set_lcd_e
  1354                           
  1355                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1356  01A9  3007               	movlw	7
  1357  01AA  00F7               	movwf	??_send_lcd_data+1
  1358  01AB  307D               	movlw	125
  1359  01AC  00F6               	movwf	??_send_lcd_data
  1360  01AD                     u657:	
  1361  01AD  0BF6               	decfsz	??_send_lcd_data,f
  1362  01AE  29AD               	goto	u657
  1363  01AF  0BF7               	decfsz	??_send_lcd_data+1,f
  1364  01B0  29AD               	goto	u657
  1365                           
  1366                           ;lcd.c: 317: set_lcd_e(0);
  1367  01B1  3000               	movlw	0
  1368  01B2  120A  118A  21D6  120A  118A  	fcall	_set_lcd_e
  1369                           
  1370                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1371  01B7  300D               	movlw	13
  1372  01B8  00F7               	movwf	??_send_lcd_data+1
  1373  01B9  30FB               	movlw	251
  1374  01BA  00F6               	movwf	??_send_lcd_data
  1375  01BB                     u667:	
  1376  01BB  0BF6               	decfsz	??_send_lcd_data,f
  1377  01BC  29BB               	goto	u667
  1378  01BD  0BF7               	decfsz	??_send_lcd_data+1,f
  1379  01BE  29BB               	goto	u667
  1380  01BF  29C0               	nop2
  1381                           
  1382                           ;lcd.c: 321: set_lcd_rs(0);
  1383  01C0  3000               	movlw	0
  1384  01C1  120A  118A  21CB  120A  118A  	fcall	_set_lcd_rs
  1385                           
  1386                           ;lcd.c: 322: set_lcd_data(0);
  1387  01C6  3000               	movlw	0
  1388  01C7  120A  118A  21FC   	fcall	_set_lcd_data
  1389  01CA  0008               	return
  1390  01CB                     __end_of_send_lcd_data:	
  1391                           
  1392                           	psect	text6
  1393  01CB                     __ptext6:	
  1394 ;; *************** function _set_lcd_rs *****************
  1395 ;; Defined at:
  1396 ;;		line 360 in file "lcd.c"
  1397 ;; Parameters:    Size  Location     Type
  1398 ;;  b_output        1    wreg     unsigned char 
  1399 ;; Auto vars:     Size  Location     Type
  1400 ;;  b_output        1    4[COMMON] unsigned char 
  1401 ;; Return value:  Size  Location     Type
  1402 ;;                  1    wreg      void 
  1403 ;; Registers used:
  1404 ;;		wreg
  1405 ;; Tracked objects:
  1406 ;;		On entry : 0/0
  1407 ;;		On exit  : 0/0
  1408 ;;		Unchanged: 0/0
  1409 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1410 ;;      Params:         0       0       0       0       0
  1411 ;;      Locals:         1       0       0       0       0
  1412 ;;      Temps:          0       0       0       0       0
  1413 ;;      Totals:         1       0       0       0       0
  1414 ;;Total ram usage:        1 bytes
  1415 ;; Hardware stack levels used:    1
  1416 ;; Hardware stack levels required when called:    1
  1417 ;; This function calls:
  1418 ;;		Nothing
  1419 ;; This function is called by:
  1420 ;;		_send_lcd_data
  1421 ;; This function uses a non-reentrant model
  1422 ;;
  1423                           
  1424                           
  1425                           ;psect for function _set_lcd_rs
  1426  01CB                     _set_lcd_rs:	
  1427                           
  1428                           ;incstack = 0
  1429                           ; Regs used in _set_lcd_rs: [wreg]
  1430                           ;set_lcd_rs@b_output stored from wreg
  1431  01CB  00F4               	movwf	set_lcd_rs@b_output
  1432                           
  1433                           ;lcd.c: 362: RB4 = b_output;
  1434  01CC  1C74               	btfss	set_lcd_rs@b_output,0
  1435  01CD  29D2               	goto	u270
  1436  01CE  1283               	bcf	3,5	;RP0=0, select bank0
  1437  01CF  1303               	bcf	3,6	;RP1=0, select bank0
  1438  01D0  1606               	bsf	6,4	;volatile
  1439  01D1  0008               	return
  1440  01D2                     u270:	
  1441  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  1442  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  1443  01D4  1206               	bcf	6,4	;volatile
  1444  01D5  0008               	return
  1445  01D6                     __end_of_set_lcd_rs:	
  1446                           
  1447                           	psect	text7
  1448  01D6                     __ptext7:	
  1449 ;; *************** function _set_lcd_e *****************
  1450 ;; Defined at:
  1451 ;;		line 340 in file "lcd.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  b_output        1    wreg     unsigned char 
  1454 ;; Auto vars:     Size  Location     Type
  1455 ;;  b_output        1    4[COMMON] unsigned char 
  1456 ;; Return value:  Size  Location     Type
  1457 ;;                  1    wreg      void 
  1458 ;; Registers used:
  1459 ;;		wreg
  1460 ;; Tracked objects:
  1461 ;;		On entry : 0/0
  1462 ;;		On exit  : 0/0
  1463 ;;		Unchanged: 0/0
  1464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1465 ;;      Params:         0       0       0       0       0
  1466 ;;      Locals:         1       0       0       0       0
  1467 ;;      Temps:          0       0       0       0       0
  1468 ;;      Totals:         1       0       0       0       0
  1469 ;;Total ram usage:        1 bytes
  1470 ;; Hardware stack levels used:    1
  1471 ;; Hardware stack levels required when called:    1
  1472 ;; This function calls:
  1473 ;;		Nothing
  1474 ;; This function is called by:
  1475 ;;		_lcd_initialize
  1476 ;;		_send_lcd_data
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           
  1481                           ;psect for function _set_lcd_e
  1482  01D6                     _set_lcd_e:	
  1483                           
  1484                           ;incstack = 0
  1485                           ; Regs used in _set_lcd_e: [wreg]
  1486                           ;set_lcd_e@b_output stored from wreg
  1487  01D6  00F4               	movwf	set_lcd_e@b_output
  1488                           
  1489                           ;lcd.c: 342: RB5 = b_output;
  1490  01D7  1C74               	btfss	set_lcd_e@b_output,0
  1491  01D8  29DD               	goto	u250
  1492  01D9  1283               	bcf	3,5	;RP0=0, select bank0
  1493  01DA  1303               	bcf	3,6	;RP1=0, select bank0
  1494  01DB  1686               	bsf	6,5	;volatile
  1495  01DC  0008               	return
  1496  01DD                     u250:	
  1497  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1498  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1499  01DF  1286               	bcf	6,5	;volatile
  1500  01E0  0008               	return
  1501  01E1                     __end_of_set_lcd_e:	
  1502                           
  1503                           	psect	text8
  1504  01FC                     __ptext8:	
  1505 ;; *************** function _set_lcd_data *****************
  1506 ;; Defined at:
  1507 ;;		line 380 in file "lcd.c"
  1508 ;; Parameters:    Size  Location     Type
  1509 ;;  uc_data         1    wreg     unsigned char 
  1510 ;; Auto vars:     Size  Location     Type
  1511 ;;  uc_data         1    4[COMMON] unsigned char 
  1512 ;; Return value:  Size  Location     Type
  1513 ;;                  1    wreg      void 
  1514 ;; Registers used:
  1515 ;;		wreg
  1516 ;; Tracked objects:
  1517 ;;		On entry : 0/0
  1518 ;;		On exit  : 0/0
  1519 ;;		Unchanged: 0/0
  1520 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1521 ;;      Params:         0       0       0       0       0
  1522 ;;      Locals:         1       0       0       0       0
  1523 ;;      Temps:          0       0       0       0       0
  1524 ;;      Totals:         1       0       0       0       0
  1525 ;;Total ram usage:        1 bytes
  1526 ;; Hardware stack levels used:    1
  1527 ;; Hardware stack levels required when called:    1
  1528 ;; This function calls:
  1529 ;;		Nothing
  1530 ;; This function is called by:
  1531 ;;		_send_lcd_data
  1532 ;; This function uses a non-reentrant model
  1533 ;;
  1534                           
  1535                           
  1536                           ;psect for function _set_lcd_data
  1537  01FC                     _set_lcd_data:	
  1538                           
  1539                           ;incstack = 0
  1540                           ; Regs used in _set_lcd_data: [wreg]
  1541                           ;set_lcd_data@uc_data stored from wreg
  1542  01FC  00F4               	movwf	set_lcd_data@uc_data
  1543                           
  1544                           ;lcd.c: 382: PORTD = uc_data;
  1545  01FD  0874               	movf	set_lcd_data@uc_data,w
  1546  01FE  1283               	bcf	3,5	;RP0=0, select bank0
  1547  01FF  1303               	bcf	3,6	;RP1=0, select bank0
  1548  0200  0088               	movwf	8	;volatile
  1549  0201  0008               	return
  1550  0202                     __end_of_set_lcd_data:	
  1551                           
  1552                           	psect	text9
  1553  0202                     __ptext9:	
  1554 ;; *************** function _InitApp *****************
  1555 ;; Defined at:
  1556 ;;		line 22 in file "user.c"
  1557 ;; Parameters:    Size  Location     Type
  1558 ;;		None
  1559 ;; Auto vars:     Size  Location     Type
  1560 ;;		None
  1561 ;; Return value:  Size  Location     Type
  1562 ;;                  1    wreg      void 
  1563 ;; Registers used:
  1564 ;;		None
  1565 ;; Tracked objects:
  1566 ;;		On entry : 0/0
  1567 ;;		On exit  : 0/0
  1568 ;;		Unchanged: 0/0
  1569 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1570 ;;      Params:         0       0       0       0       0
  1571 ;;      Locals:         0       0       0       0       0
  1572 ;;      Temps:          0       0       0       0       0
  1573 ;;      Totals:         0       0       0       0       0
  1574 ;;Total ram usage:        0 bytes
  1575 ;; Hardware stack levels used:    1
  1576 ;; Hardware stack levels required when called:    1
  1577 ;; This function calls:
  1578 ;;		Nothing
  1579 ;; This function is called by:
  1580 ;;		_main
  1581 ;; This function uses a non-reentrant model
  1582 ;;
  1583                           
  1584                           
  1585                           ;psect for function _InitApp
  1586  0202                     _InitApp:	
  1587                           
  1588                           ;incstack = 0
  1589                           ; Regs used in _InitApp: []
  1590  0202  0008               	return
  1591  0203                     __end_of_InitApp:	
  1592                           
  1593                           	psect	text10
  1594  01E1                     __ptext10:	
  1595 ;; *************** function _isr *****************
  1596 ;; Defined at:
  1597 ;;		line 23 in file "interrupts.c"
  1598 ;; Parameters:    Size  Location     Type
  1599 ;;		None
  1600 ;; Auto vars:     Size  Location     Type
  1601 ;;		None
  1602 ;; Return value:  Size  Location     Type
  1603 ;;                  1    wreg      void 
  1604 ;; Registers used:
  1605 ;;		None
  1606 ;; Tracked objects:
  1607 ;;		On entry : 0/0
  1608 ;;		On exit  : 0/0
  1609 ;;		Unchanged: 0/0
  1610 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1611 ;;      Params:         0       0       0       0       0
  1612 ;;      Locals:         0       0       0       0       0
  1613 ;;      Temps:          4       0       0       0       0
  1614 ;;      Totals:         4       0       0       0       0
  1615 ;;Total ram usage:        4 bytes
  1616 ;; Hardware stack levels used:    1
  1617 ;; This function calls:
  1618 ;;		Nothing
  1619 ;; This function is called by:
  1620 ;;		Interrupt level 1
  1621 ;; This function uses a non-reentrant model
  1622 ;;
  1623                           
  1624                           
  1625                           ;psect for function _isr
  1626  01E1                     _isr:	
  1627  01E1  0873               	movf	??_isr+3,w
  1628  01E2  00FF               	movwf	127
  1629  01E3  0872               	movf	??_isr+2,w
  1630  01E4  008A               	movwf	10
  1631  01E5  0871               	movf	??_isr+1,w
  1632  01E6  0084               	movwf	4
  1633  01E7  0E70               	swapf	??_isr^(0+-128),w
  1634  01E8  0083               	movwf	3
  1635  01E9  0EFE               	swapf	126,f
  1636  01EA  0E7E               	swapf	126,w
  1637  01EB  0009               	retfie
  1638  01EC                     __end_of_isr:	
  1639  007E                     btemp	set	126	;btemp
  1640  007E                     wtemp0	set	126
  1641                           
  1642                           	psect	intentry
  1643  0004                     __pintentry:	
  1644                           ;incstack = 0
  1645                           ; Regs used in _isr: []
  1646                           
  1647  0004                     interrupt_function:	
  1648  007E                     saved_w	set	btemp
  1649  0004  00FE               	movwf	btemp
  1650  0005  0E03               	swapf	3,w
  1651  0006  00F0               	movwf	??_isr
  1652  0007  0804               	movf	4,w
  1653  0008  00F1               	movwf	??_isr+1
  1654  0009  080A               	movf	10,w
  1655  000A  00F2               	movwf	??_isr+2
  1656  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1657  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1658  000D  087F               	movf	btemp+1,w
  1659  000E  00F3               	movwf	??_isr+3
  1660  000F  120A  118A  29E1   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     74      74
    BANK1            80      0      10
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_lcd_home
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_shiftOut

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                69    69      0    2571
                                              5 BANK0     69    69      0
                            _InitApp
                           _lcd_home
                     _lcd_initialize
                           _shiftOut
 ---------------------------------------------------------------------------------
 (1) _shiftOut                                            10     8      2     262
                                              4 COMMON     5     3      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _shiftOut

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      5E       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     4A      4A       5       92.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       A       7       12.5%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      5E      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 27 16:35:45 2018

            __CFG_CP$OFF 0000                       l57 0111                      l831 0155  
                    l921 008F                      l931 00A0                      l829 0133  
                    l951 00DE                      l945 00D6                      _RA0 0028  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RE1 0049                      _RE2 004A                      u250 01DD  
                    u314 0130                      u315 012D                      u270 01D2  
                    u350 0152                      u344 0142                      u345 013F  
           __CFG_CPD$OFF 0000                      u295 011F                      u627 00C1  
                    u637 00FF                      u647 016A                      u657 01AD  
                    u667 01BB                      _isr 01E1                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000        set_lcd_e@b_output 0074  
           __CFG_LVP$OFF 0000                     ?_isr 0070             __CFG_WRT$OFF 0000  
                   _main 0025                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0012             main@dataSend 0066          __end_of_InitApp 0203  
                  ??_isr 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089     send_lcd_data@uc_data 0075            __CFG_PWRTE$ON 0000  
                  main@j 0068                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 0015        send_lcd_data@b_rs 0078  
          main@dataArray 0028             __end_of_main 0113    __end_of_send_lcd_data 01CB  
                 ??_main 0025                ??_InitApp 0074         __end_of_lcd_home 01F5  
       __end_of_shiftOut 015E                   saved_w 007E         ??_lcd_initialize 0020  
__end_of__initialization 0021           __pcstackCOMMON 0070       __size_of_lcd_clear 0007  
             __pbssBANK1 00A0               __pmaintext 0025               __pintentry 0004  
     __size_of_set_lcd_e 000B         shiftOut@bitOrder 0076                ?_lcd_home 0070  
          ?_set_lcd_data 0070                  _InitApp 0202                ?_shiftOut 0074  
      __end_of_lcd_clear 01FC              shiftOut@val 0074                  __ptext1 0113  
                __ptext2 015E                  __ptext3 01F5                  __ptext4 01EC  
                __ptext5 0196                  __ptext6 01CB                  __ptext7 01D6  
                __ptext8 01FC                  __ptext9 0202             __size_of_isr 000B  
             ??_lcd_home 0079     end_of_initialization 0021           ??_set_lcd_data 0074  
      __end_of_set_lcd_e 01E1               _set_lcd_rs 01CB               ??_shiftOut 0020  
 __size_of_send_lcd_data 0035      start_initialization 0015       set_lcd_rs@b_output 0074  
            __end_of_isr 01EC              ?_set_lcd_rs 0070            _send_lcd_data 0196  
   __end_of_set_lcd_data 0202                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_home 0009                 ?_InitApp 0070  __size_of_lcd_initialize 0038  
      __size_of_shiftOut 004B                _lcd_clear 01F5           ?_send_lcd_data 0075  
    __size_of_set_lcd_rs 000B      set_lcd_data@uc_data 0074        interrupt_function 0004  
              _set_lcd_e 01D6               ?_lcd_clear 0070         __size_of_InitApp 0001  
             ?_set_lcd_e 0070    __size_of_set_lcd_data 0006          ??_send_lcd_data 0076  
               __ptext10 01E1                 _lcd_home 01EC            __size_of_main 00EE  
              shiftOut@i 0077             _set_lcd_data 01FC           _lcd_initialize 015E  
           ??_set_lcd_rs 0074                 _shiftOut 0113              ??_lcd_clear 0079  
     __end_of_set_lcd_rs 01D6                 intlevel1 0000   __end_of_lcd_initialize 0196  
            ??_set_lcd_e 0074             lcd_bcd@F1134 00A0          ?_lcd_initialize 0070  
