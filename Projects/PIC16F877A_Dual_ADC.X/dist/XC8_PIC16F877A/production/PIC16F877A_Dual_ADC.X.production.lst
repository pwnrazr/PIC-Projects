

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed Jan 24 12:29:25 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	intentry,global,class=CODE,delta=2
    30                           	dabs	1,0x7E,2
    31  0000                     
    32                           ; Version 1.45
    33                           ; Generated 16/11/2017 GMT
    34                           ; 
    35                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    36                           ; All rights reserved.
    37                           ; 
    38                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    39                           ; 
    40                           ; Redistribution and use in source and binary forms, with or without modification, are
    41                           ; permitted provided that the following conditions are met:
    42                           ; 
    43                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    44                           ;        conditions and the following disclaimer.
    45                           ; 
    46                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    47                           ;        of conditions and the following disclaimer in the documentation and/or other
    48                           ;        materials provided with the distribution.
    49                           ; 
    50                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    51                           ;        software without specific prior written permission.
    52                           ; 
    53                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    54                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    55                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    56                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    57                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    58                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    59                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    60                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    61                           ; 
    62                           ; 
    63                           ; Code-generator required, PIC16F877A Definitions
    64                           ; 
    65                           ; SFR Addresses
    66  0000                     	;# 
    67  0001                     	;# 
    68  0002                     	;# 
    69  0003                     	;# 
    70  0004                     	;# 
    71  0005                     	;# 
    72  0006                     	;# 
    73  0007                     	;# 
    74  0008                     	;# 
    75  0009                     	;# 
    76  000A                     	;# 
    77  000B                     	;# 
    78  000C                     	;# 
    79  000D                     	;# 
    80  000E                     	;# 
    81  000E                     	;# 
    82  000F                     	;# 
    83  0010                     	;# 
    84  0011                     	;# 
    85  0012                     	;# 
    86  0013                     	;# 
    87  0014                     	;# 
    88  0015                     	;# 
    89  0015                     	;# 
    90  0016                     	;# 
    91  0017                     	;# 
    92  0018                     	;# 
    93  0019                     	;# 
    94  001A                     	;# 
    95  001B                     	;# 
    96  001B                     	;# 
    97  001C                     	;# 
    98  001D                     	;# 
    99  001E                     	;# 
   100  001F                     	;# 
   101  0081                     	;# 
   102  0085                     	;# 
   103  0086                     	;# 
   104  0087                     	;# 
   105  0088                     	;# 
   106  0089                     	;# 
   107  008C                     	;# 
   108  008D                     	;# 
   109  008E                     	;# 
   110  0091                     	;# 
   111  0092                     	;# 
   112  0093                     	;# 
   113  0094                     	;# 
   114  0098                     	;# 
   115  0099                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  010C                     	;# 
   121  010D                     	;# 
   122  010E                     	;# 
   123  010F                     	;# 
   124  018C                     	;# 
   125  018D                     	;# 
   126  0000                     	;# 
   127  0001                     	;# 
   128  0002                     	;# 
   129  0003                     	;# 
   130  0004                     	;# 
   131  0005                     	;# 
   132  0006                     	;# 
   133  0007                     	;# 
   134  0008                     	;# 
   135  0009                     	;# 
   136  000A                     	;# 
   137  000B                     	;# 
   138  000C                     	;# 
   139  000D                     	;# 
   140  000E                     	;# 
   141  000E                     	;# 
   142  000F                     	;# 
   143  0010                     	;# 
   144  0011                     	;# 
   145  0012                     	;# 
   146  0013                     	;# 
   147  0014                     	;# 
   148  0015                     	;# 
   149  0015                     	;# 
   150  0016                     	;# 
   151  0017                     	;# 
   152  0018                     	;# 
   153  0019                     	;# 
   154  001A                     	;# 
   155  001B                     	;# 
   156  001B                     	;# 
   157  001C                     	;# 
   158  001D                     	;# 
   159  001E                     	;# 
   160  001F                     	;# 
   161  0081                     	;# 
   162  0085                     	;# 
   163  0086                     	;# 
   164  0087                     	;# 
   165  0088                     	;# 
   166  0089                     	;# 
   167  008C                     	;# 
   168  008D                     	;# 
   169  008E                     	;# 
   170  0091                     	;# 
   171  0092                     	;# 
   172  0093                     	;# 
   173  0094                     	;# 
   174  0098                     	;# 
   175  0099                     	;# 
   176  009C                     	;# 
   177  009D                     	;# 
   178  009E                     	;# 
   179  009F                     	;# 
   180  010C                     	;# 
   181  010D                     	;# 
   182  010E                     	;# 
   183  010F                     	;# 
   184  018C                     	;# 
   185  018D                     	;# 
   186  0000                     	;# 
   187  0001                     	;# 
   188  0002                     	;# 
   189  0003                     	;# 
   190  0004                     	;# 
   191  0005                     	;# 
   192  0006                     	;# 
   193  0007                     	;# 
   194  0008                     	;# 
   195  0009                     	;# 
   196  000A                     	;# 
   197  000B                     	;# 
   198  000C                     	;# 
   199  000D                     	;# 
   200  000E                     	;# 
   201  000E                     	;# 
   202  000F                     	;# 
   203  0010                     	;# 
   204  0011                     	;# 
   205  0012                     	;# 
   206  0013                     	;# 
   207  0014                     	;# 
   208  0015                     	;# 
   209  0015                     	;# 
   210  0016                     	;# 
   211  0017                     	;# 
   212  0018                     	;# 
   213  0019                     	;# 
   214  001A                     	;# 
   215  001B                     	;# 
   216  001B                     	;# 
   217  001C                     	;# 
   218  001D                     	;# 
   219  001E                     	;# 
   220  001F                     	;# 
   221  0081                     	;# 
   222  0085                     	;# 
   223  0086                     	;# 
   224  0087                     	;# 
   225  0088                     	;# 
   226  0089                     	;# 
   227  008C                     	;# 
   228  008D                     	;# 
   229  008E                     	;# 
   230  0091                     	;# 
   231  0092                     	;# 
   232  0093                     	;# 
   233  0094                     	;# 
   234  0098                     	;# 
   235  0099                     	;# 
   236  009C                     	;# 
   237  009D                     	;# 
   238  009E                     	;# 
   239  009F                     	;# 
   240  010C                     	;# 
   241  010D                     	;# 
   242  010E                     	;# 
   243  010F                     	;# 
   244  018C                     	;# 
   245  018D                     	;# 
   246  0000                     	;# 
   247  0001                     	;# 
   248  0002                     	;# 
   249  0003                     	;# 
   250  0004                     	;# 
   251  0005                     	;# 
   252  0006                     	;# 
   253  0007                     	;# 
   254  0008                     	;# 
   255  0009                     	;# 
   256  000A                     	;# 
   257  000B                     	;# 
   258  000C                     	;# 
   259  000D                     	;# 
   260  000E                     	;# 
   261  000E                     	;# 
   262  000F                     	;# 
   263  0010                     	;# 
   264  0011                     	;# 
   265  0012                     	;# 
   266  0013                     	;# 
   267  0014                     	;# 
   268  0015                     	;# 
   269  0015                     	;# 
   270  0016                     	;# 
   271  0017                     	;# 
   272  0018                     	;# 
   273  0019                     	;# 
   274  001A                     	;# 
   275  001B                     	;# 
   276  001B                     	;# 
   277  001C                     	;# 
   278  001D                     	;# 
   279  001E                     	;# 
   280  001F                     	;# 
   281  0081                     	;# 
   282  0085                     	;# 
   283  0086                     	;# 
   284  0087                     	;# 
   285  0088                     	;# 
   286  0089                     	;# 
   287  008C                     	;# 
   288  008D                     	;# 
   289  008E                     	;# 
   290  0091                     	;# 
   291  0092                     	;# 
   292  0093                     	;# 
   293  0094                     	;# 
   294  0098                     	;# 
   295  0099                     	;# 
   296  009C                     	;# 
   297  009D                     	;# 
   298  009E                     	;# 
   299  009F                     	;# 
   300  010C                     	;# 
   301  010D                     	;# 
   302  010E                     	;# 
   303  010F                     	;# 
   304  018C                     	;# 
   305  018D                     	;# 
   306  0000                     	;# 
   307  0001                     	;# 
   308  0002                     	;# 
   309  0003                     	;# 
   310  0004                     	;# 
   311  0005                     	;# 
   312  0006                     	;# 
   313  0007                     	;# 
   314  0008                     	;# 
   315  0009                     	;# 
   316  000A                     	;# 
   317  000B                     	;# 
   318  000C                     	;# 
   319  000D                     	;# 
   320  000E                     	;# 
   321  000E                     	;# 
   322  000F                     	;# 
   323  0010                     	;# 
   324  0011                     	;# 
   325  0012                     	;# 
   326  0013                     	;# 
   327  0014                     	;# 
   328  0015                     	;# 
   329  0015                     	;# 
   330  0016                     	;# 
   331  0017                     	;# 
   332  0018                     	;# 
   333  0019                     	;# 
   334  001A                     	;# 
   335  001B                     	;# 
   336  001B                     	;# 
   337  001C                     	;# 
   338  001D                     	;# 
   339  001E                     	;# 
   340  001F                     	;# 
   341  0081                     	;# 
   342  0085                     	;# 
   343  0086                     	;# 
   344  0087                     	;# 
   345  0088                     	;# 
   346  0089                     	;# 
   347  008C                     	;# 
   348  008D                     	;# 
   349  008E                     	;# 
   350  0091                     	;# 
   351  0092                     	;# 
   352  0093                     	;# 
   353  0094                     	;# 
   354  0098                     	;# 
   355  0099                     	;# 
   356  009C                     	;# 
   357  009D                     	;# 
   358  009E                     	;# 
   359  009F                     	;# 
   360  010C                     	;# 
   361  010D                     	;# 
   362  010E                     	;# 
   363  010F                     	;# 
   364  018C                     	;# 
   365  018D                     	;# 
   366  0000                     	;# 
   367  0001                     	;# 
   368  0002                     	;# 
   369  0003                     	;# 
   370  0004                     	;# 
   371  0005                     	;# 
   372  0006                     	;# 
   373  0007                     	;# 
   374  0008                     	;# 
   375  0009                     	;# 
   376  000A                     	;# 
   377  000B                     	;# 
   378  000C                     	;# 
   379  000D                     	;# 
   380  000E                     	;# 
   381  000E                     	;# 
   382  000F                     	;# 
   383  0010                     	;# 
   384  0011                     	;# 
   385  0012                     	;# 
   386  0013                     	;# 
   387  0014                     	;# 
   388  0015                     	;# 
   389  0015                     	;# 
   390  0016                     	;# 
   391  0017                     	;# 
   392  0018                     	;# 
   393  0019                     	;# 
   394  001A                     	;# 
   395  001B                     	;# 
   396  001B                     	;# 
   397  001C                     	;# 
   398  001D                     	;# 
   399  001E                     	;# 
   400  001F                     	;# 
   401  0081                     	;# 
   402  0085                     	;# 
   403  0086                     	;# 
   404  0087                     	;# 
   405  0088                     	;# 
   406  0089                     	;# 
   407  008C                     	;# 
   408  008D                     	;# 
   409  008E                     	;# 
   410  0091                     	;# 
   411  0092                     	;# 
   412  0093                     	;# 
   413  0094                     	;# 
   414  0098                     	;# 
   415  0099                     	;# 
   416  009C                     	;# 
   417  009D                     	;# 
   418  009E                     	;# 
   419  009F                     	;# 
   420  010C                     	;# 
   421  010D                     	;# 
   422  010E                     	;# 
   423  010F                     	;# 
   424  018C                     	;# 
   425  018D                     	;# 
   426  0000                     	;# 
   427  0001                     	;# 
   428  0002                     	;# 
   429  0003                     	;# 
   430  0004                     	;# 
   431  0005                     	;# 
   432  0006                     	;# 
   433  0007                     	;# 
   434  0008                     	;# 
   435  0009                     	;# 
   436  000A                     	;# 
   437  000B                     	;# 
   438  000C                     	;# 
   439  000D                     	;# 
   440  000E                     	;# 
   441  000E                     	;# 
   442  000F                     	;# 
   443  0010                     	;# 
   444  0011                     	;# 
   445  0012                     	;# 
   446  0013                     	;# 
   447  0014                     	;# 
   448  0015                     	;# 
   449  0015                     	;# 
   450  0016                     	;# 
   451  0017                     	;# 
   452  0018                     	;# 
   453  0019                     	;# 
   454  001A                     	;# 
   455  001B                     	;# 
   456  001B                     	;# 
   457  001C                     	;# 
   458  001D                     	;# 
   459  001E                     	;# 
   460  001F                     	;# 
   461  0081                     	;# 
   462  0085                     	;# 
   463  0086                     	;# 
   464  0087                     	;# 
   465  0088                     	;# 
   466  0089                     	;# 
   467  008C                     	;# 
   468  008D                     	;# 
   469  008E                     	;# 
   470  0091                     	;# 
   471  0092                     	;# 
   472  0093                     	;# 
   473  0094                     	;# 
   474  0098                     	;# 
   475  0099                     	;# 
   476  009C                     	;# 
   477  009D                     	;# 
   478  009E                     	;# 
   479  009F                     	;# 
   480  010C                     	;# 
   481  010D                     	;# 
   482  010E                     	;# 
   483  010F                     	;# 
   484  018C                     	;# 
   485  018D                     	;# 
   486  0000                     	;# 
   487  0001                     	;# 
   488  0002                     	;# 
   489  0003                     	;# 
   490  0004                     	;# 
   491  0005                     	;# 
   492  0006                     	;# 
   493  0007                     	;# 
   494  0008                     	;# 
   495  0009                     	;# 
   496  000A                     	;# 
   497  000B                     	;# 
   498  000C                     	;# 
   499  000D                     	;# 
   500  000E                     	;# 
   501  000E                     	;# 
   502  000F                     	;# 
   503  0010                     	;# 
   504  0011                     	;# 
   505  0012                     	;# 
   506  0013                     	;# 
   507  0014                     	;# 
   508  0015                     	;# 
   509  0015                     	;# 
   510  0016                     	;# 
   511  0017                     	;# 
   512  0018                     	;# 
   513  0019                     	;# 
   514  001A                     	;# 
   515  001B                     	;# 
   516  001B                     	;# 
   517  001C                     	;# 
   518  001D                     	;# 
   519  001E                     	;# 
   520  001F                     	;# 
   521  0081                     	;# 
   522  0085                     	;# 
   523  0086                     	;# 
   524  0087                     	;# 
   525  0088                     	;# 
   526  0089                     	;# 
   527  008C                     	;# 
   528  008D                     	;# 
   529  008E                     	;# 
   530  0091                     	;# 
   531  0092                     	;# 
   532  0093                     	;# 
   533  0094                     	;# 
   534  0098                     	;# 
   535  0099                     	;# 
   536  009C                     	;# 
   537  009D                     	;# 
   538  009E                     	;# 
   539  009F                     	;# 
   540  010C                     	;# 
   541  010D                     	;# 
   542  010E                     	;# 
   543  010F                     	;# 
   544  018C                     	;# 
   545  018D                     	;# 
   546  0000                     	;# 
   547  0001                     	;# 
   548  0002                     	;# 
   549  0003                     	;# 
   550  0004                     	;# 
   551  0005                     	;# 
   552  0006                     	;# 
   553  0007                     	;# 
   554  0008                     	;# 
   555  0009                     	;# 
   556  000A                     	;# 
   557  000B                     	;# 
   558  000C                     	;# 
   559  000D                     	;# 
   560  000E                     	;# 
   561  000E                     	;# 
   562  000F                     	;# 
   563  0010                     	;# 
   564  0011                     	;# 
   565  0012                     	;# 
   566  0013                     	;# 
   567  0014                     	;# 
   568  0015                     	;# 
   569  0015                     	;# 
   570  0016                     	;# 
   571  0017                     	;# 
   572  0018                     	;# 
   573  0019                     	;# 
   574  001A                     	;# 
   575  001B                     	;# 
   576  001B                     	;# 
   577  001C                     	;# 
   578  001D                     	;# 
   579  001E                     	;# 
   580  001F                     	;# 
   581  0081                     	;# 
   582  0085                     	;# 
   583  0086                     	;# 
   584  0087                     	;# 
   585  0088                     	;# 
   586  0089                     	;# 
   587  008C                     	;# 
   588  008D                     	;# 
   589  008E                     	;# 
   590  0091                     	;# 
   591  0092                     	;# 
   592  0093                     	;# 
   593  0094                     	;# 
   594  0098                     	;# 
   595  0099                     	;# 
   596  009C                     	;# 
   597  009D                     	;# 
   598  009E                     	;# 
   599  009F                     	;# 
   600  010C                     	;# 
   601  010D                     	;# 
   602  010E                     	;# 
   603  010F                     	;# 
   604  018C                     	;# 
   605  018D                     	;# 
   606                           
   607                           	psect	strings
   608  038C                     __pstrings:	
   609  038C                     stringtab:	
   610  038C                     __stringtab:	
   611  038C                     stringcode:	
   612                           ;	String table - string pointers are 1 byte each
   613                           
   614  038C                     stringdir:	
   615  038C  3003               	movlw	high stringdir
   616  038D  008A               	movwf	10
   617  038E  0804               	movf	4,w
   618  038F  0A84               	incf	4,f
   619  0390  0782               	addwf	2,f
   620  0391                     __stringbase:	
   621  0391  3400               	retlw	0
   622  0392                     __end_of__stringtab:	
   623  0392                     _dpowers:	
   624  0392  3401               	retlw	1
   625  0393  3400               	retlw	0
   626  0394  340A               	retlw	10
   627  0395  3400               	retlw	0
   628  0396  3464               	retlw	100
   629  0397  3400               	retlw	0
   630  0398  34E8               	retlw	232
   631  0399  3403               	retlw	3
   632  039A  3410               	retlw	16
   633  039B  3427               	retlw	39
   634  039C                     __end_of_dpowers:	
   635  0007                     _PORTCbits	set	7
   636  001D                     _CCP2CON	set	29
   637  001B                     _CCPR2L	set	27
   638  001E                     _ADRESH	set	30
   639  0008                     _PORTD	set	8
   640  0007                     _PORTC	set	7
   641  0006                     _PORTB	set	6
   642  0005                     _PORTA	set	5
   643  0001                     _TMR0	set	1
   644  000E                     _TMR1L	set	14
   645  000F                     _TMR1H	set	15
   646  00E8                     _CCP2M0	set	232
   647  00E9                     _CCP2M1	set	233
   648  00EA                     _CCP2M2	set	234
   649  00EB                     _CCP2M3	set	235
   650  0092                     _TMR2ON	set	146
   651  0090                     _T2CKPS0	set	144
   652  0091                     _T2CKPS1	set	145
   653  0034                     _RB4	set	52
   654  0035                     _RB5	set	53
   655  00FA                     _GO_nDONE	set	250
   656  00F8                     _ADON	set	248
   657  00FE                     _ADCS0	set	254
   658  00FF                     _ADCS1	set	255
   659  0036                     _RB6	set	54
   660  00FB                     _CHS0	set	251
   661  00FC                     _CHS1	set	252
   662  00FD                     _CHS2	set	253
   663  0031                     _RB1	set	49
   664  005D                     _TMR0IE	set	93
   665  0080                     _TMR1ON	set	128
   666  005E                     _PEIE	set	94
   667  005F                     _GIE	set	95
   668  0085                     _T1CKPS1	set	133
   669  0084                     _T1CKPS0	set	132
   670  005A                     _TMR0IF	set	90
   671  0037                     _RB7	set	55
   672  0060                     _TMR1IF	set	96
   673  0092                     _PR2	set	146
   674  009E                     _ADRESL	set	158
   675  0088                     _TRISD	set	136
   676  0087                     _TRISC	set	135
   677  0086                     _TRISB	set	134
   678  0085                     _TRISA	set	133
   679  04F8                     _PCFG0	set	1272
   680  04F9                     _PCFG1	set	1273
   681  04FA                     _PCFG2	set	1274
   682  04FB                     _PCFG3	set	1275
   683  04FF                     _ADFM	set	1279
   684  040A                     _PS2	set	1034
   685  0460                     _TMR1IE	set	1120
   686  010C                     _EEDATA	set	268
   687  010D                     _EEADR	set	269
   688  018D                     _EECON2	set	397
   689  0C62                     _WREN	set	3170
   690  0C61                     _WR	set	3169
   691  0C60                     _RD	set	3168
   692  0C67                     _EEPGD	set	3175
   693  039C                     STR_2:	
   694  039C  3425               	retlw	37	;'%'
   695  039D  3464               	retlw	100	;'d'
   696  039E  3400               	retlw	0
   697  039F                     STR_1:	
   698  039F  3443               	retlw	67	;'C'
   699  03A0  3400               	retlw	0
   700                           
   701                           ; #config settings
   702  0000                     
   703                           	psect	cinit
   704  0015                     start_initialization:	
   705  0015                     __initialization:	
   706                           
   707                           ; Clear objects allocated to BANK0
   708  0015  1283               	bcf	3,5	;RP0=0, select bank0
   709  0016  1303               	bcf	3,6	;RP1=0, select bank0
   710  0017  01C0               	clrf	__pbssBANK0& (0+127)
   711  0018  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   712  0019  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   713  001A  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   714  001B  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   715  001C  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   716  001D  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   717  001E  01C7               	clrf	(__pbssBANK0+7)& (0+127)
   718  001F  01C8               	clrf	(__pbssBANK0+8)& (0+127)
   719  0020  01C9               	clrf	(__pbssBANK0+9)& (0+127)
   720  0021                     end_of_initialization:	
   721                           ;End of C runtime variable initialization code
   722                           
   723  0021                     __end_of__initialization:	
   724  0021  0183               	clrf	3
   725  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   726                           
   727                           	psect	bssBANK0
   728  0040                     __pbssBANK0:	
   729  0040                     lcd_bcd@F1134:	
   730  0040                     	ds	10
   731                           
   732                           	psect	cstackCOMMON
   733  0070                     __pcstackCOMMON:	
   734  0070                     ?_InitApp:	
   735  0070                     ?_lcd_initialize:	
   736                           ; 1 bytes @ 0x0
   737                           
   738  0070                     ?_adc_initialize:	
   739                           ; 1 bytes @ 0x0
   740                           
   741  0070                     ?_adc_on:	
   742                           ; 1 bytes @ 0x0
   743                           
   744  0070                     ?_lcd_goto:	
   745                           ; 1 bytes @ 0x0
   746                           
   747  0070                     ?_lcd_putstr:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     ?_pwm_initialize:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     ?_set_lcd_e:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     ?_lcd_clear:	
   757                           ; 1 bytes @ 0x0
   758                           
   759  0070                     ?_set_lcd_rs:	
   760                           ; 1 bytes @ 0x0
   761                           
   762  0070                     ?_set_lcd_data:	
   763                           ; 1 bytes @ 0x0
   764                           
   765  0070                     ?_timer_isr:	
   766                           ; 1 bytes @ 0x0
   767                           
   768  0070                     ??_timer_isr:	
   769                           ; 1 bytes @ 0x0
   770                           
   771  0070                     ?_main:	
   772                           ; 1 bytes @ 0x0
   773                           
   774  0070                     ?_lcd_2ndline:	
   775                           ; 1 bytes @ 0x0
   776                           
   777  0070                     ?_lcd_putchar:	
   778                           ; 1 bytes @ 0x0
   779                           
   780                           
   781                           ; 1 bytes @ 0x0
   782  0070                     	ds	4
   783  0074                     ??_InitApp:	
   784  0074                     ??_adc_initialize:	
   785                           ; 1 bytes @ 0x4
   786                           
   787  0074                     ??_adc_on:	
   788                           ; 1 bytes @ 0x4
   789                           
   790  0074                     ??_pwm_initialize:	
   791                           ; 1 bytes @ 0x4
   792                           
   793  0074                     ??_set_lcd_e:	
   794                           ; 1 bytes @ 0x4
   795                           
   796  0074                     ??_set_lcd_rs:	
   797                           ; 1 bytes @ 0x4
   798                           
   799  0074                     ??_set_lcd_data:	
   800                           ; 1 bytes @ 0x4
   801                           
   802  0074                     ?_ui_adc_read:	
   803                           ; 1 bytes @ 0x4
   804                           
   805  0074                     ?___lwdiv:	
   806                           ; 2 bytes @ 0x4
   807                           
   808  0074                     ?___lwmod:	
   809                           ; 2 bytes @ 0x4
   810                           
   811  0074                     set_lcd_e@b_output:	
   812                           ; 2 bytes @ 0x4
   813                           
   814  0074                     set_lcd_rs@b_output:	
   815                           ; 1 bytes @ 0x4
   816                           
   817  0074                     set_lcd_data@uc_data:	
   818                           ; 1 bytes @ 0x4
   819                           
   820  0074                     ___lwdiv@divisor:	
   821                           ; 1 bytes @ 0x4
   822                           
   823  0074                     ___lwmod@divisor:	
   824                           ; 2 bytes @ 0x4
   825                           
   826                           
   827                           ; 2 bytes @ 0x4
   828  0074                     	ds	1
   829  0075                     ?_send_lcd_data:	
   830  0075                     send_lcd_data@uc_data:	
   831                           ; 1 bytes @ 0x5
   832                           
   833                           
   834                           ; 1 bytes @ 0x5
   835  0075                     	ds	1
   836  0076                     ??_ui_adc_read:	
   837  0076                     ??_send_lcd_data:	
   838                           ; 1 bytes @ 0x6
   839                           
   840  0076                     ___lwdiv@dividend:	
   841                           ; 1 bytes @ 0x6
   842                           
   843  0076                     ___lwmod@dividend:	
   844                           ; 2 bytes @ 0x6
   845                           
   846                           
   847                           ; 2 bytes @ 0x6
   848  0076                     	ds	2
   849  0078                     ??___lwdiv:	
   850  0078                     ??___lwmod:	
   851                           ; 1 bytes @ 0x8
   852                           
   853  0078                     send_lcd_data@b_rs:	
   854                           ; 1 bytes @ 0x8
   855                           
   856  0078                     ui_adc_read@pot:	
   857                           ; 1 bytes @ 0x8
   858                           
   859                           
   860                           ; 2 bytes @ 0x8
   861  0078                     	ds	1
   862  0079                     ??_lcd_goto:	
   863  0079                     ??_lcd_clear:	
   864                           ; 1 bytes @ 0x9
   865                           
   866  0079                     ??_lcd_2ndline:	
   867                           ; 1 bytes @ 0x9
   868                           
   869  0079                     ??_lcd_putchar:	
   870                           ; 1 bytes @ 0x9
   871                           
   872  0079                     ___lwmod@counter:	
   873                           ; 1 bytes @ 0x9
   874                           
   875                           
   876                           ; 1 bytes @ 0x9
   877  0079                     	ds	1
   878                           
   879                           	psect	cstackBANK0
   880  0020                     __pcstackBANK0:	
   881  0020                     ??_lcd_initialize:	
   882  0020                     lcd_goto@uc_position:	
   883                           ; 1 bytes @ 0x0
   884                           
   885  0020                     lcd_putchar@c_data:	
   886                           ; 1 bytes @ 0x0
   887                           
   888  0020                     ___lwdiv@quotient:	
   889                           ; 1 bytes @ 0x0
   890                           
   891                           
   892                           ; 2 bytes @ 0x0
   893  0020                     	ds	1
   894  0021                     ??_lcd_putstr:	
   895                           
   896                           ; 1 bytes @ 0x1
   897  0021                     	ds	1
   898  0022                     lcd_putstr@csz_string:	
   899  0022                     ___lwdiv@counter:	
   900                           ; 1 bytes @ 0x2
   901                           
   902                           
   903                           ; 1 bytes @ 0x2
   904  0022                     	ds	1
   905  0023                     ?_lcd_bcd:	
   906  0023                     lcd_bcd@ui_number:	
   907                           ; 1 bytes @ 0x3
   908                           
   909                           
   910                           ; 2 bytes @ 0x3
   911  0023                     	ds	2
   912  0025                     ??_lcd_bcd:	
   913                           
   914                           ; 1 bytes @ 0x5
   915  0025                     	ds	4
   916  0029                     lcd_bcd@ui_decimal:	
   917                           
   918                           ; 10 bytes @ 0x9
   919  0029                     	ds	10
   920  0033                     lcd_bcd@uc_digit:	
   921                           
   922                           ; 1 bytes @ 0x13
   923  0033                     	ds	1
   924  0034                     ??_main:	
   925                           
   926                           ; 1 bytes @ 0x14
   927  0034                     	ds	2
   928  0036                     main@i:	
   929                           
   930                           ; 2 bytes @ 0x16
   931  0036                     	ds	2
   932  0038                     main@lastButtonState:	
   933                           
   934                           ; 2 bytes @ 0x18
   935  0038                     	ds	2
   936  003A                     main@buttonState:	
   937                           
   938                           ; 2 bytes @ 0x1A
   939  003A                     	ds	2
   940  003C                     main@adc_value_1:	
   941                           
   942                           ; 2 bytes @ 0x1C
   943  003C                     	ds	2
   944  003E                     main@data:	
   945                           
   946                           ; 2 bytes @ 0x1E
   947  003E                     	ds	2
   948                           
   949                           	psect	maintext
   950  0025                     __pmaintext:	
   951 ;;
   952 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   953 ;;
   954 ;; *************** function _main *****************
   955 ;; Defined at:
   956 ;;		line 21 in file "main.c"
   957 ;; Parameters:    Size  Location     Type
   958 ;;		None
   959 ;; Auto vars:     Size  Location     Type
   960 ;;  data            2   30[BANK0 ] unsigned int 
   961 ;;  adc_value_1     2   28[BANK0 ] unsigned int 
   962 ;;  buttonState     2   26[BANK0 ] unsigned int 
   963 ;;  lastButtonSt    2   24[BANK0 ] unsigned int 
   964 ;;  i               2   22[BANK0 ] unsigned int 
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : B00/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0      10       0       0       0
   976 ;;      Temps:          0       2       0       0       0
   977 ;;      Totals:         0      12       0       0       0
   978 ;;Total ram usage:       12 bytes
   979 ;; Hardware stack levels required when called:    5
   980 ;; This function calls:
   981 ;;		_InitApp
   982 ;;		_adc_initialize
   983 ;;		_adc_on
   984 ;;		_lcd_bcd
   985 ;;		_lcd_goto
   986 ;;		_lcd_initialize
   987 ;;		_lcd_putstr
   988 ;;		_pwm_initialize
   989 ;;		_ui_adc_read
   990 ;; This function is called by:
   991 ;;		Startup code after reset
   992 ;; This function uses a non-reentrant model
   993 ;;
   994                           
   995                           
   996                           ;psect for function _main
   997  0025                     _main:	
   998                           
   999                           ;main.c: 24: InitApp();
  1000                           
  1001                           ;incstack = 0
  1002                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  1003  0025  120A  118A  2409  120A  118A  	fcall	_InitApp
  1004                           
  1005                           ;main.c: 26: PORTA = 0;
  1006  002A  1283               	bcf	3,5	;RP0=0, select bank0
  1007  002B  1303               	bcf	3,6	;RP1=0, select bank0
  1008  002C  0185               	clrf	5	;volatile
  1009                           
  1010                           ;main.c: 27: PORTB = 0;
  1011  002D  0186               	clrf	6	;volatile
  1012                           
  1013                           ;main.c: 28: PORTC = 0;
  1014  002E  0187               	clrf	7	;volatile
  1015                           
  1016                           ;main.c: 29: PORTD = 0;
  1017  002F  0188               	clrf	8	;volatile
  1018                           
  1019                           ;main.c: 31: TRISA = 0b11111111;
  1020  0030  30FF               	movlw	255
  1021  0031  1683               	bsf	3,5	;RP0=1, select bank1
  1022  0032  1303               	bcf	3,6	;RP1=0, select bank1
  1023  0033  0085               	movwf	5	;volatile
  1024                           
  1025                           ;main.c: 32: TRISB = 0b00000011;
  1026  0034  3003               	movlw	3
  1027  0035  0086               	movwf	6	;volatile
  1028                           
  1029                           ;main.c: 33: TRISC = 0b00000000;
  1030  0036  0187               	clrf	7	;volatile
  1031                           
  1032                           ;main.c: 34: TRISD = 0b00000000;
  1033  0037  0188               	clrf	8	;volatile
  1034                           
  1035                           ;main.c: 36: lcd_initialize();
  1036  0038  120A  118A  22A8  120A  118A  	fcall	_lcd_initialize
  1037                           
  1038                           ;main.c: 37: adc_initialize();
  1039  003D  120A  118A  23B1  120A  118A  	fcall	_adc_initialize
  1040                           
  1041                           ;main.c: 39: unsigned int adc_value_1 = 0;
  1042  0042  1283               	bcf	3,5	;RP0=0, select bank0
  1043  0043  1303               	bcf	3,6	;RP1=0, select bank0
  1044  0044  01BC               	clrf	main@adc_value_1
  1045  0045  01BD               	clrf	main@adc_value_1+1
  1046                           
  1047                           ;main.c: 40: unsigned int data;
  1048                           ;main.c: 41: unsigned int lastButtonState = 1;
  1049  0046  3001               	movlw	1
  1050  0047  00B8               	movwf	main@lastButtonState
  1051  0048  3000               	movlw	0
  1052  0049  00B9               	movwf	main@lastButtonState+1
  1053                           
  1054                           ;main.c: 42: unsigned int buttonState = 0;
  1055  004A  01BA               	clrf	main@buttonState
  1056  004B  01BB               	clrf	main@buttonState+1
  1057                           
  1058                           ;main.c: 44: adc_on();
  1059  004C  120A  118A  2405  120A  118A  	fcall	_adc_on
  1060                           
  1061                           ;main.c: 46: lcd_goto(0x3);
  1062  0051  3003               	movlw	3
  1063  0052  120A  118A  23C0  120A  118A  	fcall	_lcd_goto
  1064                           
  1065                           ;main.c: 47: lcd_putstr("C");
  1066  0057  300E               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1067  0058  120A  118A  226C  120A  118A  	fcall	_lcd_putstr
  1068                           
  1069                           ;main.c: 51: TMR1IE = 1;
  1070  005D  1683               	bsf	3,5	;RP0=1, select bank1
  1071  005E  1303               	bcf	3,6	;RP1=0, select bank1
  1072  005F  140C               	bsf	12,0	;volatile
  1073                           
  1074                           ;main.c: 53: T1CKPS0 = 1;
  1075  0060  1283               	bcf	3,5	;RP0=0, select bank0
  1076  0061  1303               	bcf	3,6	;RP1=0, select bank0
  1077  0062  1610               	bsf	16,4	;volatile
  1078                           
  1079                           ;main.c: 54: T1CKPS1 = 1;
  1080  0063  1690               	bsf	16,5	;volatile
  1081                           
  1082                           ;main.c: 56: GIE = 1;
  1083  0064  178B               	bsf	11,7	;volatile
  1084                           
  1085                           ;main.c: 57: PEIE=1;
  1086  0065  170B               	bsf	11,6	;volatile
  1087                           
  1088                           ;main.c: 58: TMR1H=0x0B;
  1089  0066  300B               	movlw	11
  1090  0067  008F               	movwf	15	;volatile
  1091                           
  1092                           ;main.c: 59: TMR1L=0xDC;
  1093  0068  30DC               	movlw	220
  1094  0069  008E               	movwf	14	;volatile
  1095                           
  1096                           ;main.c: 60: TMR1ON = 1;
  1097  006A  1410               	bsf	16,0	;volatile
  1098                           
  1099                           ;main.c: 62: TMR0=100;
  1100  006B  3064               	movlw	100
  1101  006C  0081               	movwf	1	;volatile
  1102                           
  1103                           ;main.c: 63: TMR0IE=1;
  1104  006D  168B               	bsf	11,5	;volatile
  1105                           
  1106                           ;main.c: 64: PS2 = 1;
  1107  006E  1683               	bsf	3,5	;RP0=1, select bank1
  1108  006F  1303               	bcf	3,6	;RP1=0, select bank1
  1109  0070  1501               	bsf	1,2	;volatile
  1110                           
  1111                           ;main.c: 67: EEADR = 0x0;
  1112  0071  1283               	bcf	3,5	;RP0=0, select bank2
  1113  0072  1703               	bsf	3,6	;RP1=1, select bank2
  1114  0073  018D               	clrf	13	;volatile
  1115                           
  1116                           ;main.c: 68: EEPGD = 0;
  1117  0074  1683               	bsf	3,5	;RP0=1, select bank3
  1118  0075  1703               	bsf	3,6	;RP1=1, select bank3
  1119  0076  138C               	bcf	12,7	;volsfr
  1120                           
  1121                           ;main.c: 69: RD = 1;
  1122  0077  140C               	bsf	12,0	;volsfr
  1123                           
  1124                           ;main.c: 70: data = (EEDATA << 8);
  1125  0078  1283               	bcf	3,5	;RP0=0, select bank2
  1126  0079  1703               	bsf	3,6	;RP1=1, select bank2
  1127  007A  080C               	movf	12,w	;volatile
  1128  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1129  007C  1303               	bcf	3,6	;RP1=0, select bank0
  1130  007D  00B4               	movwf	??_main
  1131  007E  01B5               	clrf	??_main+1
  1132  007F  0834               	movf	??_main,w
  1133  0080  00B5               	movwf	??_main+1
  1134  0081  01B4               	clrf	??_main
  1135  0082  0834               	movf	??_main,w
  1136  0083  00BE               	movwf	main@data
  1137  0084  0835               	movf	??_main+1,w
  1138  0085  00BF               	movwf	main@data+1
  1139                           
  1140                           ;main.c: 72: EEADR = 0x1;
  1141  0086  3001               	movlw	1
  1142  0087  1283               	bcf	3,5	;RP0=0, select bank2
  1143  0088  1703               	bsf	3,6	;RP1=1, select bank2
  1144  0089  008D               	movwf	13	;volatile
  1145                           
  1146                           ;main.c: 73: EEPGD = 0;
  1147  008A  1683               	bsf	3,5	;RP0=1, select bank3
  1148  008B  1703               	bsf	3,6	;RP1=1, select bank3
  1149  008C  138C               	bcf	12,7	;volsfr
  1150                           
  1151                           ;main.c: 74: RD = 1;
  1152  008D  140C               	bsf	12,0	;volsfr
  1153                           
  1154                           ;main.c: 75: data = data + EEDATA;
  1155  008E  1283               	bcf	3,5	;RP0=0, select bank2
  1156  008F  1703               	bsf	3,6	;RP1=1, select bank2
  1157  0090  080C               	movf	12,w	;volatile
  1158  0091  1283               	bcf	3,5	;RP0=0, select bank0
  1159  0092  1303               	bcf	3,6	;RP1=0, select bank0
  1160  0093  073E               	addwf	main@data,w
  1161  0094  00B4               	movwf	??_main
  1162  0095  083F               	movf	main@data+1,w
  1163  0096  1803               	skipnc
  1164  0097  0A3F               	incf	main@data+1,w
  1165  0098  00B5               	movwf	??_main+1
  1166  0099  0834               	movf	??_main,w
  1167  009A  00BE               	movwf	main@data
  1168  009B  0835               	movf	??_main+1,w
  1169  009C  00BF               	movwf	main@data+1
  1170                           
  1171                           ;main.c: 77: pwm_initialize();
  1172  009D  120A  118A  23A1  120A  118A  	fcall	_pwm_initialize
  1173                           
  1174                           ;main.c: 80: unsigned int i = 0;
  1175  00A2  1283               	bcf	3,5	;RP0=0, select bank0
  1176  00A3  1303               	bcf	3,6	;RP1=0, select bank0
  1177  00A4  01B6               	clrf	main@i
  1178  00A5  01B7               	clrf	main@i+1
  1179  00A6                     l1484:	
  1180                           ;main.c: 81: while(1)
  1181                           
  1182                           
  1183                           ;main.c: 82: {
  1184                           ;main.c: 83: buttonState = RB1;
  1185  00A6  1003               	clrc
  1186  00A7  1886               	btfsc	6,1	;volatile
  1187  00A8  1403               	setc
  1188  00A9  3000               	movlw	0
  1189  00AA  1803               	skipnc
  1190  00AB  3001               	movlw	1
  1191  00AC  00B4               	movwf	??_main
  1192  00AD  01B5               	clrf	??_main+1
  1193  00AE  0834               	movf	??_main,w
  1194  00AF  00BA               	movwf	main@buttonState
  1195  00B0  0835               	movf	??_main+1,w
  1196  00B1  00BB               	movwf	main@buttonState+1
  1197                           
  1198                           ;main.c: 85: if (buttonState != lastButtonState)
  1199  00B2  0839               	movf	main@lastButtonState+1,w
  1200  00B3  063B               	xorwf	main@buttonState+1,w
  1201  00B4  1D03               	skipz
  1202  00B5  28B8               	goto	u705
  1203  00B6  0838               	movf	main@lastButtonState,w
  1204  00B7  063A               	xorwf	main@buttonState,w
  1205  00B8                     u705:	
  1206  00B8  1903               	skipnz
  1207  00B9  2907               	goto	l1518
  1208                           
  1209                           ;main.c: 86: {
  1210                           ;main.c: 87: if (buttonState == 0 & WR==0)
  1211  00BA  1683               	bsf	3,5	;RP0=1, select bank3
  1212  00BB  1703               	bsf	3,6	;RP1=1, select bank3
  1213  00BC  1C8C               	btfss	12,1	;volsfr
  1214  00BD  28BF               	goto	u711
  1215  00BE  28C1               	goto	u710
  1216  00BF                     u711:	
  1217  00BF  3001               	movlw	1
  1218  00C0  28C2               	goto	u712
  1219  00C1                     u710:	
  1220  00C1  3000               	movlw	0
  1221  00C2                     u712:	
  1222  00C2  1283               	bcf	3,5	;RP0=0, select bank0
  1223  00C3  1303               	bcf	3,6	;RP1=0, select bank0
  1224  00C4  00B4               	movwf	??_main
  1225  00C5  083A               	movf	main@buttonState,w
  1226  00C6  043B               	iorwf	main@buttonState+1,w
  1227  00C7  1D03               	btfss	3,2
  1228  00C8  28CB               	goto	u720
  1229  00C9  3001               	movlw	1
  1230  00CA  28CC               	goto	u722
  1231  00CB                     u720:	
  1232  00CB  3000               	movlw	0
  1233  00CC                     u722:	
  1234  00CC  0534               	andwf	??_main,w
  1235  00CD  3800               	iorlw	0
  1236  00CE  1903               	skipnz
  1237  00CF  2907               	goto	l1518
  1238                           
  1239                           ;main.c: 88: {
  1240                           ;main.c: 89: data = data + 1000;
  1241  00D0  083E               	movf	main@data,w
  1242  00D1  3EE8               	addlw	232
  1243  00D2  00BE               	movwf	main@data
  1244  00D3  083F               	movf	main@data+1,w
  1245  00D4  1803               	skipnc
  1246  00D5  3E01               	addlw	1
  1247  00D6  3E03               	addlw	3
  1248  00D7  00BF               	movwf	main@data+1
  1249                           
  1250                           ;main.c: 92: EEADR = 0x0;
  1251  00D8  1283               	bcf	3,5	;RP0=0, select bank2
  1252  00D9  1703               	bsf	3,6	;RP1=1, select bank2
  1253  00DA  018D               	clrf	13	;volatile
  1254                           
  1255                           ;main.c: 93: EEDATA = (data >> 8);
  1256  00DB  1283               	bcf	3,5	;RP0=0, select bank0
  1257  00DC  1303               	bcf	3,6	;RP1=0, select bank0
  1258  00DD  083F               	movf	main@data+1,w
  1259  00DE  1283               	bcf	3,5	;RP0=0, select bank2
  1260  00DF  1703               	bsf	3,6	;RP1=1, select bank2
  1261  00E0  008C               	movwf	12	;volatile
  1262                           
  1263                           ;main.c: 94: EEPGD = 0;
  1264  00E1  1683               	bsf	3,5	;RP0=1, select bank3
  1265  00E2  1703               	bsf	3,6	;RP1=1, select bank3
  1266  00E3  138C               	bcf	12,7	;volsfr
  1267                           
  1268                           ;main.c: 95: WREN = 1;
  1269  00E4  150C               	bsf	12,2	;volsfr
  1270                           
  1271                           ;main.c: 96: GIE = 0;
  1272  00E5  138B               	bcf	11,7	;volatile
  1273                           
  1274                           ;main.c: 97: EECON2 = 0b01010101;
  1275  00E6  3055               	movlw	85
  1276  00E7  008D               	movwf	13	;volsfr
  1277                           
  1278                           ;main.c: 98: EECON2 = 0b10101010;
  1279  00E8  30AA               	movlw	170
  1280  00E9  008D               	movwf	13	;volsfr
  1281                           
  1282                           ;main.c: 99: WR = 1;
  1283  00EA  148C               	bsf	12,1	;volsfr
  1284  00EB                     l110:	
  1285                           ;main.c: 100: while(WR==1);
  1286                           
  1287  00EB  188C               	btfsc	12,1	;volsfr
  1288  00EC  28EB               	goto	l110
  1289                           
  1290                           ;main.c: 101: GIE = 1;
  1291  00ED  178B               	bsf	11,7	;volatile
  1292                           
  1293                           ;main.c: 102: WREN = 0;
  1294  00EE  110C               	bcf	12,2	;volsfr
  1295                           
  1296                           ;main.c: 105: EEADR = 0x1;
  1297  00EF  3001               	movlw	1
  1298  00F0  1283               	bcf	3,5	;RP0=0, select bank2
  1299  00F1  1703               	bsf	3,6	;RP1=1, select bank2
  1300  00F2  008D               	movwf	13	;volatile
  1301                           
  1302                           ;main.c: 106: EEDATA = data;
  1303  00F3  1283               	bcf	3,5	;RP0=0, select bank0
  1304  00F4  1303               	bcf	3,6	;RP1=0, select bank0
  1305  00F5  083E               	movf	main@data,w
  1306  00F6  1283               	bcf	3,5	;RP0=0, select bank2
  1307  00F7  1703               	bsf	3,6	;RP1=1, select bank2
  1308  00F8  008C               	movwf	12	;volatile
  1309                           
  1310                           ;main.c: 107: EEPGD = 0;
  1311  00F9  1683               	bsf	3,5	;RP0=1, select bank3
  1312  00FA  1703               	bsf	3,6	;RP1=1, select bank3
  1313  00FB  138C               	bcf	12,7	;volsfr
  1314                           
  1315                           ;main.c: 108: WREN = 1;
  1316  00FC  150C               	bsf	12,2	;volsfr
  1317                           
  1318                           ;main.c: 109: GIE = 0;
  1319  00FD  138B               	bcf	11,7	;volatile
  1320                           
  1321                           ;main.c: 110: EECON2 = 0b01010101;
  1322  00FE  3055               	movlw	85
  1323  00FF  008D               	movwf	13	;volsfr
  1324                           
  1325                           ;main.c: 111: EECON2 = 0b10101010;
  1326  0100  30AA               	movlw	170
  1327  0101  008D               	movwf	13	;volsfr
  1328                           
  1329                           ;main.c: 112: WR = 1;
  1330  0102  148C               	bsf	12,1	;volsfr
  1331  0103                     l113:	
  1332                           ;main.c: 113: while(WR==1);
  1333                           
  1334  0103  188C               	btfsc	12,1	;volsfr
  1335  0104  2903               	goto	l113
  1336                           
  1337                           ;main.c: 114: GIE = 1;
  1338  0105  178B               	bsf	11,7	;volatile
  1339                           
  1340                           ;main.c: 115: WREN = 0;
  1341  0106  110C               	bcf	12,2	;volsfr
  1342  0107                     l1518:	
  1343                           
  1344                           ;main.c: 116: }
  1345                           ;main.c: 117: }
  1346                           ;main.c: 118: lastButtonState = buttonState;
  1347  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1348  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1349  0109  083B               	movf	main@buttonState+1,w
  1350  010A  00B9               	movwf	main@lastButtonState+1
  1351  010B  083A               	movf	main@buttonState,w
  1352  010C  00B8               	movwf	main@lastButtonState
  1353                           
  1354                           ;main.c: 120: lcd_goto(0x40);
  1355  010D  3040               	movlw	64
  1356  010E  120A  118A  23C0  120A  118A  	fcall	_lcd_goto
  1357                           
  1358                           ;main.c: 121: lcd_bcd(5,data);
  1359  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1360  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1361  0115  083F               	movf	main@data+1,w
  1362  0116  00A4               	movwf	lcd_bcd@ui_number+1
  1363  0117  083E               	movf	main@data,w
  1364  0118  00A3               	movwf	lcd_bcd@ui_number
  1365  0119  3005               	movlw	5
  1366  011A  120A  118A  2160  120A  118A  	fcall	_lcd_bcd
  1367                           
  1368                           ;main.c: 124: CHS2 = 0;
  1369  011F  1283               	bcf	3,5	;RP0=0, select bank0
  1370  0120  1303               	bcf	3,6	;RP1=0, select bank0
  1371  0121  129F               	bcf	31,5	;volatile
  1372                           
  1373                           ;main.c: 125: CHS1 = 0;
  1374  0122  121F               	bcf	31,4	;volatile
  1375                           
  1376                           ;main.c: 126: CHS0 = 0;
  1377  0123  119F               	bcf	31,3	;volatile
  1378                           
  1379                           ;main.c: 127: adc_value_1 = ui_adc_read();
  1380  0124  120A  118A  2347  120A  118A  	fcall	_ui_adc_read
  1381  0129  0875               	movf	?_ui_adc_read+1,w
  1382  012A  1283               	bcf	3,5	;RP0=0, select bank0
  1383  012B  1303               	bcf	3,6	;RP1=0, select bank0
  1384  012C  00BD               	movwf	main@adc_value_1+1
  1385  012D  0874               	movf	?_ui_adc_read,w
  1386  012E  00BC               	movwf	main@adc_value_1
  1387                           
  1388                           ;main.c: 129: adc_value_1 = adc_value_1 / 2;
  1389  012F  083D               	movf	main@adc_value_1+1,w
  1390  0130  00B5               	movwf	??_main+1
  1391  0131  083C               	movf	main@adc_value_1,w
  1392  0132  00B4               	movwf	??_main
  1393  0133  1003               	clrc
  1394  0134  0CB5               	rrf	??_main+1,f
  1395  0135  0CB4               	rrf	??_main,f
  1396  0136  0834               	movf	??_main,w
  1397  0137  00BC               	movwf	main@adc_value_1
  1398  0138  0835               	movf	??_main+1,w
  1399  0139  00BD               	movwf	main@adc_value_1+1
  1400                           
  1401                           ;main.c: 131: lcd_goto(0x00);
  1402  013A  3000               	movlw	0
  1403  013B  120A  118A  23C0  120A  118A  	fcall	_lcd_goto
  1404                           
  1405                           ;main.c: 132: lcd_bcd(3,adc_value_1);
  1406  0140  1283               	bcf	3,5	;RP0=0, select bank0
  1407  0141  1303               	bcf	3,6	;RP1=0, select bank0
  1408  0142  083D               	movf	main@adc_value_1+1,w
  1409  0143  00A4               	movwf	lcd_bcd@ui_number+1
  1410  0144  083C               	movf	main@adc_value_1,w
  1411  0145  00A3               	movwf	lcd_bcd@ui_number
  1412  0146  3003               	movlw	3
  1413  0147  120A  118A  2160  120A  118A  	fcall	_lcd_bcd
  1414                           
  1415                           ;main.c: 134: if(adc_value_1>=30)
  1416  014C  3000               	movlw	0
  1417  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1418  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1419  014F  023D               	subwf	main@adc_value_1+1,w
  1420  0150  301E               	movlw	30
  1421  0151  1903               	skipnz
  1422  0152  023C               	subwf	main@adc_value_1,w
  1423  0153  1C03               	skipc
  1424  0154  2957               	goto	l1542
  1425                           
  1426                           ;main.c: 135: {
  1427                           ;main.c: 136: RB6=1;
  1428  0155  1706               	bsf	6,6	;volatile
  1429                           
  1430                           ;main.c: 137: }
  1431  0156  28A6               	goto	l1484
  1432  0157                     l1542:	
  1433                           
  1434                           ;main.c: 138: else if(adc_value_1<=29)
  1435  0157  3000               	movlw	0
  1436  0158  023D               	subwf	main@adc_value_1+1,w
  1437  0159  301E               	movlw	30
  1438  015A  1903               	skipnz
  1439  015B  023C               	subwf	main@adc_value_1,w
  1440  015C  1803               	skipnc
  1441  015D  28A6               	goto	l1484
  1442                           
  1443                           ;main.c: 139: {
  1444                           ;main.c: 140: RB6=0;
  1445  015E  1306               	bcf	6,6	;volatile
  1446  015F  28A6               	goto	l1484
  1447  0160                     __end_of_main:	
  1448                           
  1449                           	psect	text1
  1450  0347                     __ptext1:	
  1451 ;; *************** function _ui_adc_read *****************
  1452 ;; Defined at:
  1453 ;;		line 107 in file "adc.c"
  1454 ;; Parameters:    Size  Location     Type
  1455 ;;		None
  1456 ;; Auto vars:     Size  Location     Type
  1457 ;;  pot             2    8[COMMON] unsigned int 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    4[COMMON] unsigned int 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, btemp+1
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1467 ;;      Params:         2       0       0       0       0
  1468 ;;      Locals:         2       0       0       0       0
  1469 ;;      Temps:          2       0       0       0       0
  1470 ;;      Totals:         6       0       0       0       0
  1471 ;;Total ram usage:        6 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; Hardware stack levels required when called:    1
  1474 ;; This function calls:
  1475 ;;		Nothing
  1476 ;; This function is called by:
  1477 ;;		_main
  1478 ;; This function uses a non-reentrant model
  1479 ;;
  1480                           
  1481                           
  1482                           ;psect for function _ui_adc_read
  1483  0347                     _ui_adc_read:	
  1484                           
  1485                           ;adc.c: 109: unsigned int pot = 0;
  1486                           
  1487                           ;incstack = 0
  1488                           ; Regs used in _ui_adc_read: [wreg+status,2+btemp+1]
  1489  0347  01F8               	clrf	ui_adc_read@pot
  1490  0348  01F9               	clrf	ui_adc_read@pot+1
  1491                           
  1492                           ;adc.c: 117: _delay((unsigned long)((5)*(20000000/4000000.0)));
  1493  0349  3008               	movlw	8
  1494  034A  00F6               	movwf	??_ui_adc_read
  1495  034B                     u787:	
  1496  034B  0BF6               	decfsz	??_ui_adc_read,f
  1497  034C  2B4B               	goto	u787
  1498                           
  1499                           ;adc.c: 121: GO_nDONE = 1;
  1500  034D  1283               	bcf	3,5	;RP0=0, select bank0
  1501  034E  1303               	bcf	3,6	;RP1=0, select bank0
  1502  034F  151F               	bsf	31,2	;volatile
  1503  0350                     l160:	
  1504                           ;adc.c: 122: while (GO_nDONE == 1);
  1505                           
  1506  0350  191F               	btfsc	31,2	;volatile
  1507  0351  2B50               	goto	l160
  1508                           
  1509                           ;adc.c: 125: pot = (unsigned int)ADRESH << 8;
  1510  0352  081E               	movf	30,w	;volatile
  1511  0353  00F6               	movwf	??_ui_adc_read
  1512  0354  01F7               	clrf	??_ui_adc_read+1
  1513  0355  0876               	movf	??_ui_adc_read,w
  1514  0356  00F7               	movwf	??_ui_adc_read+1
  1515  0357  01F6               	clrf	??_ui_adc_read
  1516  0358  0876               	movf	??_ui_adc_read,w
  1517  0359  00F8               	movwf	ui_adc_read@pot
  1518  035A  0877               	movf	??_ui_adc_read+1,w
  1519  035B  00F9               	movwf	ui_adc_read@pot+1
  1520                           
  1521                           ;adc.c: 126: pot = pot + ADRESL;
  1522  035C  1683               	bsf	3,5	;RP0=1, select bank1
  1523  035D  1303               	bcf	3,6	;RP1=0, select bank1
  1524  035E  081E               	movf	30,w	;volatile
  1525  035F  0778               	addwf	ui_adc_read@pot,w
  1526  0360  00F6               	movwf	??_ui_adc_read
  1527  0361  0879               	movf	ui_adc_read@pot+1,w
  1528  0362  1803               	skipnc
  1529  0363  0A79               	incf	ui_adc_read@pot+1,w
  1530  0364  00F7               	movwf	??_ui_adc_read+1
  1531  0365  0876               	movf	??_ui_adc_read,w
  1532  0366  00F8               	movwf	ui_adc_read@pot
  1533  0367  0877               	movf	??_ui_adc_read+1,w
  1534  0368  00F9               	movwf	ui_adc_read@pot+1
  1535                           
  1536                           ;adc.c: 127: return pot;
  1537  0369  0879               	movf	ui_adc_read@pot+1,w
  1538  036A  00F5               	movwf	?_ui_adc_read+1
  1539  036B  0878               	movf	ui_adc_read@pot,w
  1540  036C  00F4               	movwf	?_ui_adc_read
  1541  036D  0008               	return
  1542  036E                     __end_of_ui_adc_read:	
  1543                           
  1544                           	psect	text2
  1545  03A1                     __ptext2:	
  1546 ;; *************** function _pwm_initialize *****************
  1547 ;; Defined at:
  1548 ;;		line 29 in file "pwm.c"
  1549 ;; Parameters:    Size  Location     Type
  1550 ;;		None
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1562 ;;      Params:         0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0
  1564 ;;      Temps:          0       0       0       0       0
  1565 ;;      Totals:         0       0       0       0       0
  1566 ;;Total ram usage:        0 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		Nothing
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           
  1577                           ;psect for function _pwm_initialize
  1578  03A1                     _pwm_initialize:	
  1579                           
  1580                           ;pwm.c: 32: PR2 = 0x40;
  1581                           
  1582                           ;incstack = 0
  1583                           ; Regs used in _pwm_initialize: [wreg+status,2]
  1584  03A1  3040               	movlw	64
  1585  03A2  1683               	bsf	3,5	;RP0=1, select bank1
  1586  03A3  1303               	bcf	3,6	;RP1=0, select bank1
  1587  03A4  0092               	movwf	18	;volatile
  1588                           
  1589                           ;pwm.c: 34: T2CKPS1 = 0;
  1590  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  1591  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  1592  03A7  1092               	bcf	18,1	;volatile
  1593                           
  1594                           ;pwm.c: 35: T2CKPS0 = 0;
  1595  03A8  1012               	bcf	18,0	;volatile
  1596                           
  1597                           ;pwm.c: 37: CCPR2L = 0;
  1598  03A9  019B               	clrf	27	;volatile
  1599                           
  1600                           ;pwm.c: 38: TMR2ON = 1;
  1601  03AA  1512               	bsf	18,2	;volatile
  1602                           
  1603                           ;pwm.c: 40: CCP2M3 = 1;
  1604  03AB  159D               	bsf	29,3	;volatile
  1605                           
  1606                           ;pwm.c: 41: CCP2M2 = 1;
  1607  03AC  151D               	bsf	29,2	;volatile
  1608                           
  1609                           ;pwm.c: 42: CCP2M1 = 0;
  1610  03AD  109D               	bcf	29,1	;volatile
  1611                           
  1612                           ;pwm.c: 43: CCP2M0 = 0;
  1613  03AE  101D               	bcf	29,0	;volatile
  1614                           
  1615                           ;pwm.c: 45: CCPR2L = 0x00;
  1616  03AF  019B               	clrf	27	;volatile
  1617  03B0  0008               	return
  1618  03B1                     __end_of_pwm_initialize:	
  1619                           
  1620                           	psect	text3
  1621  026C                     __ptext3:	
  1622 ;; *************** function _lcd_putstr *****************
  1623 ;; Defined at:
  1624 ;;		line 241 in file "lcd.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;  csz_string      1    wreg     PTR const unsigned char 
  1627 ;;		 -> STR_1(2), 
  1628 ;; Auto vars:     Size  Location     Type
  1629 ;;  csz_string      1    2[BANK0 ] PTR const unsigned char 
  1630 ;;		 -> STR_1(2), 
  1631 ;; Return value:  Size  Location     Type
  1632 ;;                  1    wreg      void 
  1633 ;; Registers used:
  1634 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1635 ;; Tracked objects:
  1636 ;;		On entry : 0/0
  1637 ;;		On exit  : 0/0
  1638 ;;		Unchanged: 0/0
  1639 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1640 ;;      Params:         0       0       0       0       0
  1641 ;;      Locals:         0       1       0       0       0
  1642 ;;      Temps:          0       1       0       0       0
  1643 ;;      Totals:         0       2       0       0       0
  1644 ;;Total ram usage:        2 bytes
  1645 ;; Hardware stack levels used:    1
  1646 ;; Hardware stack levels required when called:    4
  1647 ;; This function calls:
  1648 ;;		_lcd_2ndline
  1649 ;;		_lcd_putchar
  1650 ;; This function is called by:
  1651 ;;		_main
  1652 ;; This function uses a non-reentrant model
  1653 ;;
  1654                           
  1655                           
  1656                           ;psect for function _lcd_putstr
  1657  026C                     _lcd_putstr:	
  1658                           
  1659                           ;incstack = 0
  1660                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1661                           ;lcd_putstr@csz_string stored from wreg
  1662  026C  1283               	bcf	3,5	;RP0=0, select bank0
  1663  026D  1303               	bcf	3,6	;RP1=0, select bank0
  1664  026E  00A2               	movwf	lcd_putstr@csz_string
  1665  026F                     l1342:	
  1666                           ;lcd.c: 244: while (*csz_string != '\0') {
  1667                           
  1668  026F  0822               	movf	lcd_putstr@csz_string,w
  1669  0270  0084               	movwf	4
  1670  0271  120A  118A  238C  120A  118A  	fcall	stringdir
  1671  0276  3A00               	xorlw	0
  1672  0277  1903               	btfsc	3,2
  1673  0278  0008               	return
  1674                           
  1675                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1676  0279  0822               	movf	lcd_putstr@csz_string,w
  1677  027A  0084               	movwf	4
  1678  027B  120A  118A  238C  120A  118A  	fcall	stringdir
  1679  0280  3A0A               	xorlw	10
  1680  0281  1903               	skipnz
  1681  0282  2A8D               	goto	l1336
  1682  0283  0822               	movf	lcd_putstr@csz_string,w
  1683  0284  0084               	movwf	4
  1684  0285  120A  118A  238C  120A  118A  	fcall	stringdir
  1685  028A  3A0D               	xorlw	13
  1686  028B  1D03               	skipz
  1687  028C  2A93               	goto	l1338
  1688  028D                     l1336:	
  1689                           
  1690                           ;lcd.c: 248: lcd_2ndline();
  1691  028D  120A  118A  23EF  120A  118A  	fcall	_lcd_2ndline
  1692                           
  1693                           ;lcd.c: 249: }
  1694  0292  2AA1               	goto	l1340
  1695  0293                     l1338:	
  1696                           
  1697                           ;lcd.c: 252: else {
  1698                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1699  0293  1283               	bcf	3,5	;RP0=0, select bank0
  1700  0294  1303               	bcf	3,6	;RP1=0, select bank0
  1701  0295  0822               	movf	lcd_putstr@csz_string,w
  1702  0296  0084               	movwf	4
  1703  0297  120A  118A  238C  120A  118A  	fcall	stringdir
  1704  029C  120A  118A  23CD  120A  118A  	fcall	_lcd_putchar
  1705  02A1                     l1340:	
  1706                           
  1707                           ;lcd.c: 254: }
  1708                           ;lcd.c: 257: csz_string++;
  1709  02A1  3001               	movlw	1
  1710  02A2  1283               	bcf	3,5	;RP0=0, select bank0
  1711  02A3  1303               	bcf	3,6	;RP1=0, select bank0
  1712  02A4  00A1               	movwf	??_lcd_putstr
  1713  02A5  0821               	movf	??_lcd_putstr,w
  1714  02A6  07A2               	addwf	lcd_putstr@csz_string,f
  1715  02A7  2A6F               	goto	l1342
  1716  02A8                     __end_of_lcd_putstr:	
  1717                           
  1718                           	psect	text4
  1719  03EF                     __ptext4:	
  1720 ;; *************** function _lcd_2ndline *****************
  1721 ;; Defined at:
  1722 ;;		line 178 in file "lcd.c"
  1723 ;; Parameters:    Size  Location     Type
  1724 ;;		None
  1725 ;; Auto vars:     Size  Location     Type
  1726 ;;		None
  1727 ;; Return value:  Size  Location     Type
  1728 ;;                  1    wreg      void 
  1729 ;; Registers used:
  1730 ;;		wreg, status,2, status,0, pclath, cstack
  1731 ;; Tracked objects:
  1732 ;;		On entry : 0/0
  1733 ;;		On exit  : 0/0
  1734 ;;		Unchanged: 0/0
  1735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1736 ;;      Params:         0       0       0       0       0
  1737 ;;      Locals:         0       0       0       0       0
  1738 ;;      Temps:          1       0       0       0       0
  1739 ;;      Totals:         1       0       0       0       0
  1740 ;;Total ram usage:        1 bytes
  1741 ;; Hardware stack levels used:    1
  1742 ;; Hardware stack levels required when called:    3
  1743 ;; This function calls:
  1744 ;;		_send_lcd_data
  1745 ;; This function is called by:
  1746 ;;		_lcd_putstr
  1747 ;; This function uses a non-reentrant model
  1748 ;;
  1749                           
  1750                           
  1751                           ;psect for function _lcd_2ndline
  1752  03EF                     _lcd_2ndline:	
  1753                           
  1754                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1755                           
  1756                           ;incstack = 0
  1757                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1758  03EF  30C0               	movlw	192
  1759  03F0  00F9               	movwf	??_lcd_2ndline
  1760  03F1  0879               	movf	??_lcd_2ndline,w
  1761  03F2  00F5               	movwf	send_lcd_data@uc_data
  1762  03F3  3000               	movlw	0
  1763  03F4  120A  118A  22E0   	fcall	_send_lcd_data
  1764  03F7  0008               	return
  1765  03F8                     __end_of_lcd_2ndline:	
  1766                           
  1767                           	psect	text5
  1768  02A8                     __ptext5:	
  1769 ;; *************** function _lcd_initialize *****************
  1770 ;; Defined at:
  1771 ;;		line 100 in file "lcd.c"
  1772 ;; Parameters:    Size  Location     Type
  1773 ;;		None
  1774 ;; Auto vars:     Size  Location     Type
  1775 ;;		None
  1776 ;; Return value:  Size  Location     Type
  1777 ;;                  1    wreg      void 
  1778 ;; Registers used:
  1779 ;;		wreg, status,2, status,0, pclath, cstack
  1780 ;; Tracked objects:
  1781 ;;		On entry : 0/0
  1782 ;;		On exit  : 0/0
  1783 ;;		Unchanged: 0/0
  1784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1785 ;;      Params:         0       0       0       0       0
  1786 ;;      Locals:         0       0       0       0       0
  1787 ;;      Temps:          0       2       0       0       0
  1788 ;;      Totals:         0       2       0       0       0
  1789 ;;Total ram usage:        2 bytes
  1790 ;; Hardware stack levels used:    1
  1791 ;; Hardware stack levels required when called:    4
  1792 ;; This function calls:
  1793 ;;		_lcd_clear
  1794 ;;		_send_lcd_data
  1795 ;;		_set_lcd_e
  1796 ;; This function is called by:
  1797 ;;		_main
  1798 ;; This function uses a non-reentrant model
  1799 ;;
  1800                           
  1801                           
  1802                           ;psect for function _lcd_initialize
  1803  02A8                     _lcd_initialize:	
  1804                           
  1805                           ;lcd.c: 104: set_lcd_e(1);
  1806                           
  1807                           ;incstack = 0
  1808                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1809  02A8  3001               	movlw	1
  1810  02A9  120A  118A  23E4  120A  118A  	fcall	_set_lcd_e
  1811                           
  1812                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1813  02AE  3062               	movlw	98
  1814  02AF  1283               	bcf	3,5	;RP0=0, select bank0
  1815  02B0  1303               	bcf	3,6	;RP1=0, select bank0
  1816  02B1  00A1               	movwf	??_lcd_initialize+1
  1817  02B2  3065               	movlw	101
  1818  02B3  00A0               	movwf	??_lcd_initialize
  1819  02B4                     u797:	
  1820  02B4  0BA0               	decfsz	??_lcd_initialize,f
  1821  02B5  2AB4               	goto	u797
  1822  02B6  0BA1               	decfsz	??_lcd_initialize+1,f
  1823  02B7  2AB4               	goto	u797
  1824                           
  1825                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1826  02B8  3038               	movlw	56
  1827  02B9  1283               	bcf	3,5	;RP0=0, select bank0
  1828  02BA  1303               	bcf	3,6	;RP1=0, select bank0
  1829  02BB  00A0               	movwf	??_lcd_initialize
  1830  02BC  0820               	movf	??_lcd_initialize,w
  1831  02BD  00F5               	movwf	send_lcd_data@uc_data
  1832  02BE  3000               	movlw	0
  1833  02BF  120A  118A  22E0  120A  118A  	fcall	_send_lcd_data
  1834                           
  1835                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1836  02C4  3006               	movlw	6
  1837  02C5  1283               	bcf	3,5	;RP0=0, select bank0
  1838  02C6  1303               	bcf	3,6	;RP1=0, select bank0
  1839  02C7  00A0               	movwf	??_lcd_initialize
  1840  02C8  0820               	movf	??_lcd_initialize,w
  1841  02C9  00F5               	movwf	send_lcd_data@uc_data
  1842  02CA  3000               	movlw	0
  1843  02CB  120A  118A  22E0  120A  118A  	fcall	_send_lcd_data
  1844                           
  1845                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1846  02D0  300C               	movlw	12
  1847  02D1  1283               	bcf	3,5	;RP0=0, select bank0
  1848  02D2  1303               	bcf	3,6	;RP1=0, select bank0
  1849  02D3  00A0               	movwf	??_lcd_initialize
  1850  02D4  0820               	movf	??_lcd_initialize,w
  1851  02D5  00F5               	movwf	send_lcd_data@uc_data
  1852  02D6  3000               	movlw	0
  1853  02D7  120A  118A  22E0  120A  118A  	fcall	_send_lcd_data
  1854                           
  1855                           ;lcd.c: 118: lcd_clear();
  1856  02DC  120A  118A  23F8   	fcall	_lcd_clear
  1857  02DF  0008               	return
  1858  02E0                     __end_of_lcd_initialize:	
  1859                           
  1860                           	psect	text6
  1861  03F8                     __ptext6:	
  1862 ;; *************** function _lcd_clear *****************
  1863 ;; Defined at:
  1864 ;;		line 136 in file "lcd.c"
  1865 ;; Parameters:    Size  Location     Type
  1866 ;;		None
  1867 ;; Auto vars:     Size  Location     Type
  1868 ;;		None
  1869 ;; Return value:  Size  Location     Type
  1870 ;;                  1    wreg      void 
  1871 ;; Registers used:
  1872 ;;		wreg, status,2, status,0, pclath, cstack
  1873 ;; Tracked objects:
  1874 ;;		On entry : 0/0
  1875 ;;		On exit  : 0/0
  1876 ;;		Unchanged: 0/0
  1877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1878 ;;      Params:         0       0       0       0       0
  1879 ;;      Locals:         0       0       0       0       0
  1880 ;;      Temps:          0       0       0       0       0
  1881 ;;      Totals:         0       0       0       0       0
  1882 ;;Total ram usage:        0 bytes
  1883 ;; Hardware stack levels used:    1
  1884 ;; Hardware stack levels required when called:    3
  1885 ;; This function calls:
  1886 ;;		_send_lcd_data
  1887 ;; This function is called by:
  1888 ;;		_lcd_initialize
  1889 ;; This function uses a non-reentrant model
  1890 ;;
  1891                           
  1892                           
  1893                           ;psect for function _lcd_clear
  1894  03F8                     _lcd_clear:	
  1895                           
  1896                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1897                           
  1898                           ;incstack = 0
  1899                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1900  03F8  01F5               	clrf	send_lcd_data@uc_data
  1901  03F9  0AF5               	incf	send_lcd_data@uc_data,f
  1902  03FA  3000               	movlw	0
  1903  03FB  120A  118A  22E0   	fcall	_send_lcd_data
  1904  03FE  0008               	return
  1905  03FF                     __end_of_lcd_clear:	
  1906                           
  1907                           	psect	text7
  1908  03C0                     __ptext7:	
  1909 ;; *************** function _lcd_goto *****************
  1910 ;; Defined at:
  1911 ;;		line 199 in file "lcd.c"
  1912 ;; Parameters:    Size  Location     Type
  1913 ;;  uc_position     1    wreg     unsigned char 
  1914 ;; Auto vars:     Size  Location     Type
  1915 ;;  uc_position     1    0[BANK0 ] unsigned char 
  1916 ;; Return value:  Size  Location     Type
  1917 ;;                  1    wreg      void 
  1918 ;; Registers used:
  1919 ;;		wreg, status,2, status,0, pclath, cstack
  1920 ;; Tracked objects:
  1921 ;;		On entry : 0/0
  1922 ;;		On exit  : 0/0
  1923 ;;		Unchanged: 0/0
  1924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1925 ;;      Params:         0       0       0       0       0
  1926 ;;      Locals:         0       1       0       0       0
  1927 ;;      Temps:          1       0       0       0       0
  1928 ;;      Totals:         1       1       0       0       0
  1929 ;;Total ram usage:        2 bytes
  1930 ;; Hardware stack levels used:    1
  1931 ;; Hardware stack levels required when called:    3
  1932 ;; This function calls:
  1933 ;;		_send_lcd_data
  1934 ;; This function is called by:
  1935 ;;		_main
  1936 ;; This function uses a non-reentrant model
  1937 ;;
  1938                           
  1939                           
  1940                           ;psect for function _lcd_goto
  1941  03C0                     _lcd_goto:	
  1942                           
  1943                           ;incstack = 0
  1944                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1945                           ;lcd_goto@uc_position stored from wreg
  1946  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1947  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1948  03C2  00A0               	movwf	lcd_goto@uc_position
  1949                           
  1950                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1951  03C3  0820               	movf	lcd_goto@uc_position,w
  1952  03C4  3880               	iorlw	128
  1953  03C5  00F9               	movwf	??_lcd_goto
  1954  03C6  0879               	movf	??_lcd_goto,w
  1955  03C7  00F5               	movwf	send_lcd_data@uc_data
  1956  03C8  3000               	movlw	0
  1957  03C9  120A  118A  22E0   	fcall	_send_lcd_data
  1958  03CC  0008               	return
  1959  03CD                     __end_of_lcd_goto:	
  1960                           
  1961                           	psect	text8
  1962  0160                     __ptext8:	
  1963 ;; *************** function _lcd_bcd *****************
  1964 ;; Defined at:
  1965 ;;		line 274 in file "lcd.c"
  1966 ;; Parameters:    Size  Location     Type
  1967 ;;  uc_digit        1    wreg     unsigned char 
  1968 ;;  ui_number       2    3[BANK0 ] unsigned int 
  1969 ;; Auto vars:     Size  Location     Type
  1970 ;;  uc_digit        1   19[BANK0 ] unsigned char 
  1971 ;;  ui_decimal     10    9[BANK0 ] unsigned int [5]
  1972 ;; Return value:  Size  Location     Type
  1973 ;;                  1    wreg      void 
  1974 ;; Registers used:
  1975 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1976 ;; Tracked objects:
  1977 ;;		On entry : 0/0
  1978 ;;		On exit  : 0/0
  1979 ;;		Unchanged: 0/0
  1980 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1981 ;;      Params:         0       2       0       0       0
  1982 ;;      Locals:         0      11       0       0       0
  1983 ;;      Temps:          0       4       0       0       0
  1984 ;;      Totals:         0      17       0       0       0
  1985 ;;Total ram usage:       17 bytes
  1986 ;; Hardware stack levels used:    1
  1987 ;; Hardware stack levels required when called:    4
  1988 ;; This function calls:
  1989 ;;		___lwdiv
  1990 ;;		___lwmod
  1991 ;;		_lcd_putchar
  1992 ;; This function is called by:
  1993 ;;		_main
  1994 ;; This function uses a non-reentrant model
  1995 ;;
  1996                           
  1997                           
  1998                           ;psect for function _lcd_bcd
  1999  0160                     _lcd_bcd:	
  2000                           
  2001                           ;incstack = 0
  2002                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2003                           ;lcd_bcd@uc_digit stored from wreg
  2004  0160  1283               	bcf	3,5	;RP0=0, select bank0
  2005  0161  1303               	bcf	3,6	;RP1=0, select bank0
  2006  0162  00B3               	movwf	lcd_bcd@uc_digit
  2007                           
  2008                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  2009  0163  3029               	movlw	lcd_bcd@ui_decimal& (0+255)
  2010  0164  0084               	movwf	4
  2011  0165  3040               	movlw	low lcd_bcd@F1134
  2012  0166  00A5               	movwf	??_lcd_bcd
  2013  0167  0804               	movf	4,w
  2014  0168  00A6               	movwf	??_lcd_bcd+1
  2015  0169  300A               	movlw	10
  2016  016A  00A7               	movwf	??_lcd_bcd+2
  2017  016B                     u650:	
  2018  016B  0825               	movf	??_lcd_bcd,w
  2019  016C  0084               	movwf	4
  2020  016D  1383               	bcf	3,7	;select IRP bank0
  2021  016E  0800               	movf	0,w
  2022  016F  00A8               	movwf	??_lcd_bcd+3
  2023  0170  0AA5               	incf	??_lcd_bcd,f
  2024  0171  0826               	movf	??_lcd_bcd+1,w
  2025  0172  0084               	movwf	4
  2026  0173  0828               	movf	??_lcd_bcd+3,w
  2027  0174  0080               	movwf	0
  2028  0175  0AA6               	incf	??_lcd_bcd+1,f
  2029  0176  0BA7               	decfsz	??_lcd_bcd+2,f
  2030  0177  296B               	goto	u650
  2031                           
  2032                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  2033  0178  3010               	movlw	16
  2034  0179  00F4               	movwf	___lwdiv@divisor
  2035  017A  3027               	movlw	39
  2036  017B  00F5               	movwf	___lwdiv@divisor+1
  2037  017C  0824               	movf	lcd_bcd@ui_number+1,w
  2038  017D  00F7               	movwf	___lwdiv@dividend+1
  2039  017E  0823               	movf	lcd_bcd@ui_number,w
  2040  017F  00F6               	movwf	___lwdiv@dividend
  2041  0180  120A  118A  222E  120A  118A  	fcall	___lwdiv
  2042  0185  0875               	movf	?___lwdiv+1,w
  2043  0186  1283               	bcf	3,5	;RP0=0, select bank0
  2044  0187  1303               	bcf	3,6	;RP1=0, select bank0
  2045  0188  00B2               	movwf	lcd_bcd@ui_decimal+9
  2046  0189  0874               	movf	?___lwdiv,w
  2047  018A  00B1               	movwf	lcd_bcd@ui_decimal+8
  2048                           
  2049                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  2050  018B  3010               	movlw	16
  2051  018C  00F4               	movwf	___lwmod@divisor
  2052  018D  3027               	movlw	39
  2053  018E  00F5               	movwf	___lwmod@divisor+1
  2054  018F  0824               	movf	lcd_bcd@ui_number+1,w
  2055  0190  00F7               	movwf	___lwmod@dividend+1
  2056  0191  0823               	movf	lcd_bcd@ui_number,w
  2057  0192  00F6               	movwf	___lwmod@dividend
  2058  0193  120A  118A  2315  120A  118A  	fcall	___lwmod
  2059  0198  0875               	movf	?___lwmod+1,w
  2060  0199  1283               	bcf	3,5	;RP0=0, select bank0
  2061  019A  1303               	bcf	3,6	;RP1=0, select bank0
  2062  019B  00B0               	movwf	lcd_bcd@ui_decimal+7
  2063  019C  0874               	movf	?___lwmod,w
  2064  019D  00AF               	movwf	lcd_bcd@ui_decimal+6
  2065                           
  2066                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  2067  019E  30E8               	movlw	232
  2068  019F  00F4               	movwf	___lwmod@divisor
  2069  01A0  3003               	movlw	3
  2070  01A1  00F5               	movwf	___lwmod@divisor+1
  2071  01A2  0830               	movf	lcd_bcd@ui_decimal+7,w
  2072  01A3  00F7               	movwf	___lwmod@dividend+1
  2073  01A4  082F               	movf	lcd_bcd@ui_decimal+6,w
  2074  01A5  00F6               	movwf	___lwmod@dividend
  2075  01A6  120A  118A  2315  120A  118A  	fcall	___lwmod
  2076  01AB  0875               	movf	?___lwmod+1,w
  2077  01AC  1283               	bcf	3,5	;RP0=0, select bank0
  2078  01AD  1303               	bcf	3,6	;RP1=0, select bank0
  2079  01AE  00AE               	movwf	lcd_bcd@ui_decimal+5
  2080  01AF  0874               	movf	?___lwmod,w
  2081  01B0  00AD               	movwf	lcd_bcd@ui_decimal+4
  2082                           
  2083                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  2084  01B1  30E8               	movlw	232
  2085  01B2  00F4               	movwf	___lwdiv@divisor
  2086  01B3  3003               	movlw	3
  2087  01B4  00F5               	movwf	___lwdiv@divisor+1
  2088  01B5  0830               	movf	lcd_bcd@ui_decimal+7,w
  2089  01B6  00F7               	movwf	___lwdiv@dividend+1
  2090  01B7  082F               	movf	lcd_bcd@ui_decimal+6,w
  2091  01B8  00F6               	movwf	___lwdiv@dividend
  2092  01B9  120A  118A  222E  120A  118A  	fcall	___lwdiv
  2093  01BE  0875               	movf	?___lwdiv+1,w
  2094  01BF  1283               	bcf	3,5	;RP0=0, select bank0
  2095  01C0  1303               	bcf	3,6	;RP1=0, select bank0
  2096  01C1  00B0               	movwf	lcd_bcd@ui_decimal+7
  2097  01C2  0874               	movf	?___lwdiv,w
  2098  01C3  00AF               	movwf	lcd_bcd@ui_decimal+6
  2099                           
  2100                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  2101  01C4  3064               	movlw	100
  2102  01C5  00F4               	movwf	___lwmod@divisor
  2103  01C6  3000               	movlw	0
  2104  01C7  00F5               	movwf	___lwmod@divisor+1
  2105  01C8  082E               	movf	lcd_bcd@ui_decimal+5,w
  2106  01C9  00F7               	movwf	___lwmod@dividend+1
  2107  01CA  082D               	movf	lcd_bcd@ui_decimal+4,w
  2108  01CB  00F6               	movwf	___lwmod@dividend
  2109  01CC  120A  118A  2315  120A  118A  	fcall	___lwmod
  2110  01D1  0875               	movf	?___lwmod+1,w
  2111  01D2  1283               	bcf	3,5	;RP0=0, select bank0
  2112  01D3  1303               	bcf	3,6	;RP1=0, select bank0
  2113  01D4  00AC               	movwf	lcd_bcd@ui_decimal+3
  2114  01D5  0874               	movf	?___lwmod,w
  2115  01D6  00AB               	movwf	lcd_bcd@ui_decimal+2
  2116                           
  2117                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  2118  01D7  3064               	movlw	100
  2119  01D8  00F4               	movwf	___lwdiv@divisor
  2120  01D9  3000               	movlw	0
  2121  01DA  00F5               	movwf	___lwdiv@divisor+1
  2122  01DB  082E               	movf	lcd_bcd@ui_decimal+5,w
  2123  01DC  00F7               	movwf	___lwdiv@dividend+1
  2124  01DD  082D               	movf	lcd_bcd@ui_decimal+4,w
  2125  01DE  00F6               	movwf	___lwdiv@dividend
  2126  01DF  120A  118A  222E  120A  118A  	fcall	___lwdiv
  2127  01E4  0875               	movf	?___lwdiv+1,w
  2128  01E5  1283               	bcf	3,5	;RP0=0, select bank0
  2129  01E6  1303               	bcf	3,6	;RP1=0, select bank0
  2130  01E7  00AE               	movwf	lcd_bcd@ui_decimal+5
  2131  01E8  0874               	movf	?___lwdiv,w
  2132  01E9  00AD               	movwf	lcd_bcd@ui_decimal+4
  2133                           
  2134                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  2135  01EA  300A               	movlw	10
  2136  01EB  00F4               	movwf	___lwmod@divisor
  2137  01EC  3000               	movlw	0
  2138  01ED  00F5               	movwf	___lwmod@divisor+1
  2139  01EE  082C               	movf	lcd_bcd@ui_decimal+3,w
  2140  01EF  00F7               	movwf	___lwmod@dividend+1
  2141  01F0  082B               	movf	lcd_bcd@ui_decimal+2,w
  2142  01F1  00F6               	movwf	___lwmod@dividend
  2143  01F2  120A  118A  2315  120A  118A  	fcall	___lwmod
  2144  01F7  0875               	movf	?___lwmod+1,w
  2145  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2146  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2147  01FA  00AA               	movwf	lcd_bcd@ui_decimal+1
  2148  01FB  0874               	movf	?___lwmod,w
  2149  01FC  00A9               	movwf	lcd_bcd@ui_decimal
  2150                           
  2151                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  2152  01FD  300A               	movlw	10
  2153  01FE  00F4               	movwf	___lwdiv@divisor
  2154  01FF  3000               	movlw	0
  2155  0200  00F5               	movwf	___lwdiv@divisor+1
  2156  0201  082C               	movf	lcd_bcd@ui_decimal+3,w
  2157  0202  00F7               	movwf	___lwdiv@dividend+1
  2158  0203  082B               	movf	lcd_bcd@ui_decimal+2,w
  2159  0204  00F6               	movwf	___lwdiv@dividend
  2160  0205  120A  118A  222E  120A  118A  	fcall	___lwdiv
  2161  020A  0875               	movf	?___lwdiv+1,w
  2162  020B  1283               	bcf	3,5	;RP0=0, select bank0
  2163  020C  1303               	bcf	3,6	;RP1=0, select bank0
  2164  020D  00AC               	movwf	lcd_bcd@ui_decimal+3
  2165  020E  0874               	movf	?___lwdiv,w
  2166  020F  00AB               	movwf	lcd_bcd@ui_decimal+2
  2167                           
  2168                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  2169  0210  3006               	movlw	6
  2170  0211  0233               	subwf	lcd_bcd@uc_digit,w
  2171  0212  1C03               	skipc
  2172  0213  2A18               	goto	l1386
  2173  0214  3005               	movlw	5
  2174  0215  00A5               	movwf	??_lcd_bcd
  2175  0216  0825               	movf	??_lcd_bcd,w
  2176  0217  00B3               	movwf	lcd_bcd@uc_digit
  2177  0218                     l1386:	
  2178                           
  2179                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  2180  0218  0833               	movf	lcd_bcd@uc_digit,w
  2181  0219  1903               	btfsc	3,2
  2182  021A  0008               	return
  2183                           
  2184                           ;lcd.c: 289: {
  2185                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  2186  021B  0833               	movf	lcd_bcd@uc_digit,w
  2187  021C  00A5               	movwf	??_lcd_bcd
  2188  021D  0725               	addwf	??_lcd_bcd,w
  2189  021E  3EFE               	addlw	254
  2190  021F  3E29               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  2191  0220  0084               	movwf	4
  2192  0221  1383               	bcf	3,7	;select IRP bank0
  2193  0222  0800               	movf	0,w
  2194  0223  3E30               	addlw	48
  2195  0224  120A  118A  23CD  120A  118A  	fcall	_lcd_putchar
  2196  0229  3001               	movlw	1
  2197  022A  1283               	bcf	3,5	;RP0=0, select bank0
  2198  022B  1303               	bcf	3,6	;RP1=0, select bank0
  2199  022C  02B3               	subwf	lcd_bcd@uc_digit,f
  2200  022D  2A18               	goto	l1386
  2201  022E                     __end_of_lcd_bcd:	
  2202                           
  2203                           	psect	text9
  2204  03CD                     __ptext9:	
  2205 ;; *************** function _lcd_putchar *****************
  2206 ;; Defined at:
  2207 ;;		line 220 in file "lcd.c"
  2208 ;; Parameters:    Size  Location     Type
  2209 ;;  c_data          1    wreg     unsigned char 
  2210 ;; Auto vars:     Size  Location     Type
  2211 ;;  c_data          1    0[BANK0 ] unsigned char 
  2212 ;; Return value:  Size  Location     Type
  2213 ;;                  1    wreg      void 
  2214 ;; Registers used:
  2215 ;;		wreg, status,2, status,0, pclath, cstack
  2216 ;; Tracked objects:
  2217 ;;		On entry : 0/0
  2218 ;;		On exit  : 0/0
  2219 ;;		Unchanged: 0/0
  2220 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2221 ;;      Params:         0       0       0       0       0
  2222 ;;      Locals:         0       1       0       0       0
  2223 ;;      Temps:          1       0       0       0       0
  2224 ;;      Totals:         1       1       0       0       0
  2225 ;;Total ram usage:        2 bytes
  2226 ;; Hardware stack levels used:    1
  2227 ;; Hardware stack levels required when called:    3
  2228 ;; This function calls:
  2229 ;;		_send_lcd_data
  2230 ;; This function is called by:
  2231 ;;		_lcd_putstr
  2232 ;;		_lcd_bcd
  2233 ;; This function uses a non-reentrant model
  2234 ;;
  2235                           
  2236                           
  2237                           ;psect for function _lcd_putchar
  2238  03CD                     _lcd_putchar:	
  2239                           
  2240                           ;incstack = 0
  2241                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  2242                           ;lcd_putchar@c_data stored from wreg
  2243  03CD  1283               	bcf	3,5	;RP0=0, select bank0
  2244  03CE  1303               	bcf	3,6	;RP1=0, select bank0
  2245  03CF  00A0               	movwf	lcd_putchar@c_data
  2246                           
  2247                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  2248  03D0  0820               	movf	lcd_putchar@c_data,w
  2249  03D1  00F9               	movwf	??_lcd_putchar
  2250  03D2  0879               	movf	??_lcd_putchar,w
  2251  03D3  00F5               	movwf	send_lcd_data@uc_data
  2252  03D4  3001               	movlw	1
  2253  03D5  120A  118A  22E0   	fcall	_send_lcd_data
  2254  03D8  0008               	return
  2255  03D9                     __end_of_lcd_putchar:	
  2256                           
  2257                           	psect	text10
  2258  02E0                     __ptext10:	
  2259 ;; *************** function _send_lcd_data *****************
  2260 ;; Defined at:
  2261 ;;		line 308 in file "lcd.c"
  2262 ;; Parameters:    Size  Location     Type
  2263 ;;  b_rs            1    wreg     unsigned char 
  2264 ;;  uc_data         1    5[COMMON] unsigned char 
  2265 ;; Auto vars:     Size  Location     Type
  2266 ;;  b_rs            1    8[COMMON] unsigned char 
  2267 ;; Return value:  Size  Location     Type
  2268 ;;                  1    wreg      void 
  2269 ;; Registers used:
  2270 ;;		wreg, status,2, status,0, pclath, cstack
  2271 ;; Tracked objects:
  2272 ;;		On entry : 0/0
  2273 ;;		On exit  : 0/0
  2274 ;;		Unchanged: 0/0
  2275 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2276 ;;      Params:         1       0       0       0       0
  2277 ;;      Locals:         1       0       0       0       0
  2278 ;;      Temps:          2       0       0       0       0
  2279 ;;      Totals:         4       0       0       0       0
  2280 ;;Total ram usage:        4 bytes
  2281 ;; Hardware stack levels used:    1
  2282 ;; Hardware stack levels required when called:    2
  2283 ;; This function calls:
  2284 ;;		_set_lcd_data
  2285 ;;		_set_lcd_e
  2286 ;;		_set_lcd_rs
  2287 ;; This function is called by:
  2288 ;;		_lcd_initialize
  2289 ;;		_lcd_clear
  2290 ;;		_lcd_2ndline
  2291 ;;		_lcd_goto
  2292 ;;		_lcd_putchar
  2293 ;;		_lcd_home
  2294 ;; This function uses a non-reentrant model
  2295 ;;
  2296                           
  2297                           
  2298                           ;psect for function _send_lcd_data
  2299  02E0                     _send_lcd_data:	
  2300                           
  2301                           ;incstack = 0
  2302                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2303                           ;send_lcd_data@b_rs stored from wreg
  2304  02E0  00F8               	movwf	send_lcd_data@b_rs
  2305                           
  2306                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2307  02E1  0878               	movf	send_lcd_data@b_rs,w
  2308  02E2  120A  118A  23D9  120A  118A  	fcall	_set_lcd_rs
  2309                           
  2310                           ;lcd.c: 312: set_lcd_data(uc_data);
  2311  02E7  0875               	movf	send_lcd_data@uc_data,w
  2312  02E8  120A  118A  23FF  120A  118A  	fcall	_set_lcd_data
  2313                           
  2314                           ;lcd.c: 315: set_lcd_e(1);
  2315  02ED  3001               	movlw	1
  2316  02EE  120A  118A  23E4  120A  118A  	fcall	_set_lcd_e
  2317                           
  2318                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2319  02F3  3007               	movlw	7
  2320  02F4  00F7               	movwf	??_send_lcd_data+1
  2321  02F5  307D               	movlw	125
  2322  02F6  00F6               	movwf	??_send_lcd_data
  2323  02F7                     u807:	
  2324  02F7  0BF6               	decfsz	??_send_lcd_data,f
  2325  02F8  2AF7               	goto	u807
  2326  02F9  0BF7               	decfsz	??_send_lcd_data+1,f
  2327  02FA  2AF7               	goto	u807
  2328                           
  2329                           ;lcd.c: 317: set_lcd_e(0);
  2330  02FB  3000               	movlw	0
  2331  02FC  120A  118A  23E4  120A  118A  	fcall	_set_lcd_e
  2332                           
  2333                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2334  0301  300D               	movlw	13
  2335  0302  00F7               	movwf	??_send_lcd_data+1
  2336  0303  30FB               	movlw	251
  2337  0304  00F6               	movwf	??_send_lcd_data
  2338  0305                     u817:	
  2339  0305  0BF6               	decfsz	??_send_lcd_data,f
  2340  0306  2B05               	goto	u817
  2341  0307  0BF7               	decfsz	??_send_lcd_data+1,f
  2342  0308  2B05               	goto	u817
  2343  0309  2B0A               	nop2
  2344                           
  2345                           ;lcd.c: 321: set_lcd_rs(0);
  2346  030A  3000               	movlw	0
  2347  030B  120A  118A  23D9  120A  118A  	fcall	_set_lcd_rs
  2348                           
  2349                           ;lcd.c: 322: set_lcd_data(0);
  2350  0310  3000               	movlw	0
  2351  0311  120A  118A  23FF   	fcall	_set_lcd_data
  2352  0314  0008               	return
  2353  0315                     __end_of_send_lcd_data:	
  2354                           
  2355                           	psect	text11
  2356  03D9                     __ptext11:	
  2357 ;; *************** function _set_lcd_rs *****************
  2358 ;; Defined at:
  2359 ;;		line 360 in file "lcd.c"
  2360 ;; Parameters:    Size  Location     Type
  2361 ;;  b_output        1    wreg     unsigned char 
  2362 ;; Auto vars:     Size  Location     Type
  2363 ;;  b_output        1    4[COMMON] unsigned char 
  2364 ;; Return value:  Size  Location     Type
  2365 ;;                  1    wreg      void 
  2366 ;; Registers used:
  2367 ;;		wreg
  2368 ;; Tracked objects:
  2369 ;;		On entry : 0/0
  2370 ;;		On exit  : 0/0
  2371 ;;		Unchanged: 0/0
  2372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2373 ;;      Params:         0       0       0       0       0
  2374 ;;      Locals:         1       0       0       0       0
  2375 ;;      Temps:          0       0       0       0       0
  2376 ;;      Totals:         1       0       0       0       0
  2377 ;;Total ram usage:        1 bytes
  2378 ;; Hardware stack levels used:    1
  2379 ;; Hardware stack levels required when called:    1
  2380 ;; This function calls:
  2381 ;;		Nothing
  2382 ;; This function is called by:
  2383 ;;		_send_lcd_data
  2384 ;; This function uses a non-reentrant model
  2385 ;;
  2386                           
  2387                           
  2388                           ;psect for function _set_lcd_rs
  2389  03D9                     _set_lcd_rs:	
  2390                           
  2391                           ;incstack = 0
  2392                           ; Regs used in _set_lcd_rs: [wreg]
  2393                           ;set_lcd_rs@b_output stored from wreg
  2394  03D9  00F4               	movwf	set_lcd_rs@b_output
  2395                           
  2396                           ;lcd.c: 362: RB4 = b_output;
  2397  03DA  1C74               	btfss	set_lcd_rs@b_output,0
  2398  03DB  2BE0               	goto	u470
  2399  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2400  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2401  03DE  1606               	bsf	6,4	;volatile
  2402  03DF  0008               	return
  2403  03E0                     u470:	
  2404  03E0  1283               	bcf	3,5	;RP0=0, select bank0
  2405  03E1  1303               	bcf	3,6	;RP1=0, select bank0
  2406  03E2  1206               	bcf	6,4	;volatile
  2407  03E3  0008               	return
  2408  03E4                     __end_of_set_lcd_rs:	
  2409                           
  2410                           	psect	text12
  2411  03E4                     __ptext12:	
  2412 ;; *************** function _set_lcd_e *****************
  2413 ;; Defined at:
  2414 ;;		line 340 in file "lcd.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  b_output        1    wreg     unsigned char 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;  b_output        1    4[COMMON] unsigned char 
  2419 ;; Return value:  Size  Location     Type
  2420 ;;                  1    wreg      void 
  2421 ;; Registers used:
  2422 ;;		wreg
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2428 ;;      Params:         0       0       0       0       0
  2429 ;;      Locals:         1       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0
  2431 ;;      Totals:         1       0       0       0       0
  2432 ;;Total ram usage:        1 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    1
  2435 ;; This function calls:
  2436 ;;		Nothing
  2437 ;; This function is called by:
  2438 ;;		_lcd_initialize
  2439 ;;		_send_lcd_data
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           
  2444                           ;psect for function _set_lcd_e
  2445  03E4                     _set_lcd_e:	
  2446                           
  2447                           ;incstack = 0
  2448                           ; Regs used in _set_lcd_e: [wreg]
  2449                           ;set_lcd_e@b_output stored from wreg
  2450  03E4  00F4               	movwf	set_lcd_e@b_output
  2451                           
  2452                           ;lcd.c: 342: RB5 = b_output;
  2453  03E5  1C74               	btfss	set_lcd_e@b_output,0
  2454  03E6  2BEB               	goto	u450
  2455  03E7  1283               	bcf	3,5	;RP0=0, select bank0
  2456  03E8  1303               	bcf	3,6	;RP1=0, select bank0
  2457  03E9  1686               	bsf	6,5	;volatile
  2458  03EA  0008               	return
  2459  03EB                     u450:	
  2460  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  2461  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  2462  03ED  1286               	bcf	6,5	;volatile
  2463  03EE  0008               	return
  2464  03EF                     __end_of_set_lcd_e:	
  2465                           
  2466                           	psect	text13
  2467  03FF                     __ptext13:	
  2468 ;; *************** function _set_lcd_data *****************
  2469 ;; Defined at:
  2470 ;;		line 380 in file "lcd.c"
  2471 ;; Parameters:    Size  Location     Type
  2472 ;;  uc_data         1    wreg     unsigned char 
  2473 ;; Auto vars:     Size  Location     Type
  2474 ;;  uc_data         1    4[COMMON] unsigned char 
  2475 ;; Return value:  Size  Location     Type
  2476 ;;                  1    wreg      void 
  2477 ;; Registers used:
  2478 ;;		wreg
  2479 ;; Tracked objects:
  2480 ;;		On entry : 0/0
  2481 ;;		On exit  : 0/0
  2482 ;;		Unchanged: 0/0
  2483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2484 ;;      Params:         0       0       0       0       0
  2485 ;;      Locals:         1       0       0       0       0
  2486 ;;      Temps:          0       0       0       0       0
  2487 ;;      Totals:         1       0       0       0       0
  2488 ;;Total ram usage:        1 bytes
  2489 ;; Hardware stack levels used:    1
  2490 ;; Hardware stack levels required when called:    1
  2491 ;; This function calls:
  2492 ;;		Nothing
  2493 ;; This function is called by:
  2494 ;;		_send_lcd_data
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _set_lcd_data
  2500  03FF                     _set_lcd_data:	
  2501                           
  2502                           ;incstack = 0
  2503                           ; Regs used in _set_lcd_data: [wreg]
  2504                           ;set_lcd_data@uc_data stored from wreg
  2505  03FF  00F4               	movwf	set_lcd_data@uc_data
  2506                           
  2507                           ;lcd.c: 382: PORTD = uc_data;
  2508  0400  0874               	movf	set_lcd_data@uc_data,w
  2509  0401  1283               	bcf	3,5	;RP0=0, select bank0
  2510  0402  1303               	bcf	3,6	;RP1=0, select bank0
  2511  0403  0088               	movwf	8	;volatile
  2512  0404  0008               	return
  2513  0405                     __end_of_set_lcd_data:	
  2514                           
  2515                           	psect	text14
  2516  0315                     __ptext14:	
  2517 ;; *************** function ___lwmod *****************
  2518 ;; Defined at:
  2519 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2520 ;; Parameters:    Size  Location     Type
  2521 ;;  divisor         2    4[COMMON] unsigned int 
  2522 ;;  dividend        2    6[COMMON] unsigned int 
  2523 ;; Auto vars:     Size  Location     Type
  2524 ;;  counter         1    9[COMMON] unsigned char 
  2525 ;; Return value:  Size  Location     Type
  2526 ;;                  2    4[COMMON] unsigned int 
  2527 ;; Registers used:
  2528 ;;		wreg, status,2, status,0
  2529 ;; Tracked objects:
  2530 ;;		On entry : 0/0
  2531 ;;		On exit  : 0/0
  2532 ;;		Unchanged: 0/0
  2533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2534 ;;      Params:         4       0       0       0       0
  2535 ;;      Locals:         1       0       0       0       0
  2536 ;;      Temps:          1       0       0       0       0
  2537 ;;      Totals:         6       0       0       0       0
  2538 ;;Total ram usage:        6 bytes
  2539 ;; Hardware stack levels used:    1
  2540 ;; Hardware stack levels required when called:    1
  2541 ;; This function calls:
  2542 ;;		Nothing
  2543 ;; This function is called by:
  2544 ;;		_lcd_bcd
  2545 ;; This function uses a non-reentrant model
  2546 ;;
  2547                           
  2548                           
  2549                           ;psect for function ___lwmod
  2550  0315                     ___lwmod:	
  2551                           
  2552                           ;incstack = 0
  2553                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2554  0315  0874               	movf	___lwmod@divisor,w
  2555  0316  0475               	iorwf	___lwmod@divisor+1,w
  2556  0317  1903               	btfsc	3,2
  2557  0318  2B42               	goto	l1308
  2558  0319  01F9               	clrf	___lwmod@counter
  2559  031A  0AF9               	incf	___lwmod@counter,f
  2560  031B                     l1298:	
  2561  031B  1BF5               	btfsc	___lwmod@divisor+1,7
  2562  031C  2B29               	goto	l1300
  2563  031D  3001               	movlw	1
  2564  031E                     u575:	
  2565  031E  1003               	clrc
  2566  031F  0DF4               	rlf	___lwmod@divisor,f
  2567  0320  0DF5               	rlf	___lwmod@divisor+1,f
  2568  0321  3EFF               	addlw	-1
  2569  0322  1D03               	skipz
  2570  0323  2B1E               	goto	u575
  2571  0324  3001               	movlw	1
  2572  0325  00F8               	movwf	??___lwmod
  2573  0326  0878               	movf	??___lwmod,w
  2574  0327  07F9               	addwf	___lwmod@counter,f
  2575  0328  2B1B               	goto	l1298
  2576  0329                     l1300:	
  2577  0329  0875               	movf	___lwmod@divisor+1,w
  2578  032A  0277               	subwf	___lwmod@dividend+1,w
  2579  032B  1D03               	skipz
  2580  032C  2B2F               	goto	u595
  2581  032D  0874               	movf	___lwmod@divisor,w
  2582  032E  0276               	subwf	___lwmod@dividend,w
  2583  032F                     u595:	
  2584  032F  1C03               	skipc
  2585  0330  2B37               	goto	l1304
  2586  0331  0874               	movf	___lwmod@divisor,w
  2587  0332  02F6               	subwf	___lwmod@dividend,f
  2588  0333  0875               	movf	___lwmod@divisor+1,w
  2589  0334  1C03               	skipc
  2590  0335  03F7               	decf	___lwmod@dividend+1,f
  2591  0336  02F7               	subwf	___lwmod@dividend+1,f
  2592  0337                     l1304:	
  2593  0337  3001               	movlw	1
  2594  0338                     u605:	
  2595  0338  1003               	clrc
  2596  0339  0CF5               	rrf	___lwmod@divisor+1,f
  2597  033A  0CF4               	rrf	___lwmod@divisor,f
  2598  033B  3EFF               	addlw	-1
  2599  033C  1D03               	skipz
  2600  033D  2B38               	goto	u605
  2601  033E  3001               	movlw	1
  2602  033F  02F9               	subwf	___lwmod@counter,f
  2603  0340  1D03               	btfss	3,2
  2604  0341  2B29               	goto	l1300
  2605  0342                     l1308:	
  2606  0342  0877               	movf	___lwmod@dividend+1,w
  2607  0343  00F5               	movwf	?___lwmod+1
  2608  0344  0876               	movf	___lwmod@dividend,w
  2609  0345  00F4               	movwf	?___lwmod
  2610  0346  0008               	return
  2611  0347                     __end_of___lwmod:	
  2612                           
  2613                           	psect	text15
  2614  022E                     __ptext15:	
  2615 ;; *************** function ___lwdiv *****************
  2616 ;; Defined at:
  2617 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2618 ;; Parameters:    Size  Location     Type
  2619 ;;  divisor         2    4[COMMON] unsigned int 
  2620 ;;  dividend        2    6[COMMON] unsigned int 
  2621 ;; Auto vars:     Size  Location     Type
  2622 ;;  quotient        2    0[BANK0 ] unsigned int 
  2623 ;;  counter         1    2[BANK0 ] unsigned char 
  2624 ;; Return value:  Size  Location     Type
  2625 ;;                  2    4[COMMON] unsigned int 
  2626 ;; Registers used:
  2627 ;;		wreg, status,2, status,0
  2628 ;; Tracked objects:
  2629 ;;		On entry : 0/0
  2630 ;;		On exit  : 0/0
  2631 ;;		Unchanged: 0/0
  2632 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2633 ;;      Params:         4       0       0       0       0
  2634 ;;      Locals:         0       3       0       0       0
  2635 ;;      Temps:          1       0       0       0       0
  2636 ;;      Totals:         5       3       0       0       0
  2637 ;;Total ram usage:        8 bytes
  2638 ;; Hardware stack levels used:    1
  2639 ;; Hardware stack levels required when called:    1
  2640 ;; This function calls:
  2641 ;;		Nothing
  2642 ;; This function is called by:
  2643 ;;		_lcd_bcd
  2644 ;; This function uses a non-reentrant model
  2645 ;;
  2646                           
  2647                           
  2648                           ;psect for function ___lwdiv
  2649  022E                     ___lwdiv:	
  2650                           
  2651                           ;incstack = 0
  2652                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2653  022E  1283               	bcf	3,5	;RP0=0, select bank0
  2654  022F  1303               	bcf	3,6	;RP1=0, select bank0
  2655  0230  01A0               	clrf	___lwdiv@quotient
  2656  0231  01A1               	clrf	___lwdiv@quotient+1
  2657  0232  0874               	movf	___lwdiv@divisor,w
  2658  0233  0475               	iorwf	___lwdiv@divisor+1,w
  2659  0234  1903               	btfsc	3,2
  2660  0235  2A67               	goto	l1286
  2661  0236  01A2               	clrf	___lwdiv@counter
  2662  0237  0AA2               	incf	___lwdiv@counter,f
  2663  0238                     l1274:	
  2664  0238  1BF5               	btfsc	___lwdiv@divisor+1,7
  2665  0239  2A46               	goto	l1276
  2666  023A  3001               	movlw	1
  2667  023B                     u505:	
  2668  023B  1003               	clrc
  2669  023C  0DF4               	rlf	___lwdiv@divisor,f
  2670  023D  0DF5               	rlf	___lwdiv@divisor+1,f
  2671  023E  3EFF               	addlw	-1
  2672  023F  1D03               	skipz
  2673  0240  2A3B               	goto	u505
  2674  0241  3001               	movlw	1
  2675  0242  00F8               	movwf	??___lwdiv
  2676  0243  0878               	movf	??___lwdiv,w
  2677  0244  07A2               	addwf	___lwdiv@counter,f
  2678  0245  2A38               	goto	l1274
  2679  0246                     l1276:	
  2680  0246  3001               	movlw	1
  2681  0247                     u525:	
  2682  0247  1003               	clrc
  2683  0248  0DA0               	rlf	___lwdiv@quotient,f
  2684  0249  0DA1               	rlf	___lwdiv@quotient+1,f
  2685  024A  3EFF               	addlw	-1
  2686  024B  1D03               	skipz
  2687  024C  2A47               	goto	u525
  2688  024D  0875               	movf	___lwdiv@divisor+1,w
  2689  024E  0277               	subwf	___lwdiv@dividend+1,w
  2690  024F  1D03               	skipz
  2691  0250  2A53               	goto	u535
  2692  0251  0874               	movf	___lwdiv@divisor,w
  2693  0252  0276               	subwf	___lwdiv@dividend,w
  2694  0253                     u535:	
  2695  0253  1C03               	skipc
  2696  0254  2A5C               	goto	l1282
  2697  0255  0874               	movf	___lwdiv@divisor,w
  2698  0256  02F6               	subwf	___lwdiv@dividend,f
  2699  0257  0875               	movf	___lwdiv@divisor+1,w
  2700  0258  1C03               	skipc
  2701  0259  03F7               	decf	___lwdiv@dividend+1,f
  2702  025A  02F7               	subwf	___lwdiv@dividend+1,f
  2703  025B  1420               	bsf	___lwdiv@quotient,0
  2704  025C                     l1282:	
  2705  025C  3001               	movlw	1
  2706  025D                     u545:	
  2707  025D  1003               	clrc
  2708  025E  0CF5               	rrf	___lwdiv@divisor+1,f
  2709  025F  0CF4               	rrf	___lwdiv@divisor,f
  2710  0260  3EFF               	addlw	-1
  2711  0261  1D03               	skipz
  2712  0262  2A5D               	goto	u545
  2713  0263  3001               	movlw	1
  2714  0264  02A2               	subwf	___lwdiv@counter,f
  2715  0265  1D03               	btfss	3,2
  2716  0266  2A46               	goto	l1276
  2717  0267                     l1286:	
  2718  0267  0821               	movf	___lwdiv@quotient+1,w
  2719  0268  00F5               	movwf	?___lwdiv+1
  2720  0269  0820               	movf	___lwdiv@quotient,w
  2721  026A  00F4               	movwf	?___lwdiv
  2722  026B  0008               	return
  2723  026C                     __end_of___lwdiv:	
  2724                           
  2725                           	psect	text16
  2726  0405                     __ptext16:	
  2727 ;; *************** function _adc_on *****************
  2728 ;; Defined at:
  2729 ;;		line 64 in file "adc.c"
  2730 ;; Parameters:    Size  Location     Type
  2731 ;;		None
  2732 ;; Auto vars:     Size  Location     Type
  2733 ;;		None
  2734 ;; Return value:  Size  Location     Type
  2735 ;;                  1    wreg      void 
  2736 ;; Registers used:
  2737 ;;		None
  2738 ;; Tracked objects:
  2739 ;;		On entry : 0/0
  2740 ;;		On exit  : 0/0
  2741 ;;		Unchanged: 0/0
  2742 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2743 ;;      Params:         0       0       0       0       0
  2744 ;;      Locals:         0       0       0       0       0
  2745 ;;      Temps:          0       0       0       0       0
  2746 ;;      Totals:         0       0       0       0       0
  2747 ;;Total ram usage:        0 bytes
  2748 ;; Hardware stack levels used:    1
  2749 ;; Hardware stack levels required when called:    1
  2750 ;; This function calls:
  2751 ;;		Nothing
  2752 ;; This function is called by:
  2753 ;;		_main
  2754 ;; This function uses a non-reentrant model
  2755 ;;
  2756                           
  2757                           
  2758                           ;psect for function _adc_on
  2759  0405                     _adc_on:	
  2760                           
  2761                           ;adc.c: 67: ADON = 1;
  2762                           
  2763                           ;incstack = 0
  2764                           ; Regs used in _adc_on: []
  2765  0405  1283               	bcf	3,5	;RP0=0, select bank0
  2766  0406  1303               	bcf	3,6	;RP1=0, select bank0
  2767  0407  141F               	bsf	31,0	;volatile
  2768  0408  0008               	return
  2769  0409                     __end_of_adc_on:	
  2770                           
  2771                           	psect	text17
  2772  03B1                     __ptext17:	
  2773 ;; *************** function _adc_initialize *****************
  2774 ;; Defined at:
  2775 ;;		line 28 in file "adc.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		None
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0
  2791 ;;      Temps:          0       0       0       0       0
  2792 ;;      Totals:         0       0       0       0       0
  2793 ;;Total ram usage:        0 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; Hardware stack levels required when called:    1
  2796 ;; This function calls:
  2797 ;;		Nothing
  2798 ;; This function is called by:
  2799 ;;		_main
  2800 ;; This function uses a non-reentrant model
  2801 ;;
  2802                           
  2803                           
  2804                           ;psect for function _adc_initialize
  2805  03B1                     _adc_initialize:	
  2806                           
  2807                           ;adc.c: 31: ADCS1 = 1;
  2808                           
  2809                           ;incstack = 0
  2810                           ; Regs used in _adc_initialize: []
  2811  03B1  1283               	bcf	3,5	;RP0=0, select bank0
  2812  03B2  1303               	bcf	3,6	;RP1=0, select bank0
  2813  03B3  179F               	bsf	31,7	;volatile
  2814                           
  2815                           ;adc.c: 32: ADCS0 = 0;
  2816  03B4  131F               	bcf	31,6	;volatile
  2817                           
  2818                           ;adc.c: 39: ADFM = 1;
  2819  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2820  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2821  03B7  179F               	bsf	31,7	;volatile
  2822                           
  2823                           ;adc.c: 41: PCFG3 = 0;
  2824  03B8  119F               	bcf	31,3	;volatile
  2825                           
  2826                           ;adc.c: 42: PCFG2 = 0;
  2827  03B9  111F               	bcf	31,2	;volatile
  2828                           
  2829                           ;adc.c: 43: PCFG1 = 0;
  2830  03BA  109F               	bcf	31,1	;volatile
  2831                           
  2832                           ;adc.c: 44: PCFG0 = 0;
  2833  03BB  101F               	bcf	31,0	;volatile
  2834                           
  2835                           ;adc.c: 47: ADON = 0;
  2836  03BC  1283               	bcf	3,5	;RP0=0, select bank0
  2837  03BD  1303               	bcf	3,6	;RP1=0, select bank0
  2838  03BE  101F               	bcf	31,0	;volatile
  2839  03BF  0008               	return
  2840  03C0                     __end_of_adc_initialize:	
  2841                           
  2842                           	psect	text18
  2843  0409                     __ptext18:	
  2844 ;; *************** function _InitApp *****************
  2845 ;; Defined at:
  2846 ;;		line 22 in file "user.c"
  2847 ;; Parameters:    Size  Location     Type
  2848 ;;		None
  2849 ;; Auto vars:     Size  Location     Type
  2850 ;;		None
  2851 ;; Return value:  Size  Location     Type
  2852 ;;                  1    wreg      void 
  2853 ;; Registers used:
  2854 ;;		None
  2855 ;; Tracked objects:
  2856 ;;		On entry : 0/0
  2857 ;;		On exit  : 0/0
  2858 ;;		Unchanged: 0/0
  2859 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2860 ;;      Params:         0       0       0       0       0
  2861 ;;      Locals:         0       0       0       0       0
  2862 ;;      Temps:          0       0       0       0       0
  2863 ;;      Totals:         0       0       0       0       0
  2864 ;;Total ram usage:        0 bytes
  2865 ;; Hardware stack levels used:    1
  2866 ;; Hardware stack levels required when called:    1
  2867 ;; This function calls:
  2868 ;;		Nothing
  2869 ;; This function is called by:
  2870 ;;		_main
  2871 ;; This function uses a non-reentrant model
  2872 ;;
  2873                           
  2874                           
  2875                           ;psect for function _InitApp
  2876  0409                     _InitApp:	
  2877                           
  2878                           ;incstack = 0
  2879                           ; Regs used in _InitApp: []
  2880  0409  0008               	return
  2881  040A                     __end_of_InitApp:	
  2882                           
  2883                           	psect	text19
  2884  036E                     __ptext19:	
  2885 ;; *************** function _timer_isr *****************
  2886 ;; Defined at:
  2887 ;;		line 15 in file "interrupts.c"
  2888 ;; Parameters:    Size  Location     Type
  2889 ;;		None
  2890 ;; Auto vars:     Size  Location     Type
  2891 ;;		None
  2892 ;; Return value:  Size  Location     Type
  2893 ;;                  1    wreg      void 
  2894 ;; Registers used:
  2895 ;;		wreg
  2896 ;; Tracked objects:
  2897 ;;		On entry : 0/0
  2898 ;;		On exit  : 0/0
  2899 ;;		Unchanged: 0/0
  2900 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2901 ;;      Params:         0       0       0       0       0
  2902 ;;      Locals:         0       0       0       0       0
  2903 ;;      Temps:          4       0       0       0       0
  2904 ;;      Totals:         4       0       0       0       0
  2905 ;;Total ram usage:        4 bytes
  2906 ;; Hardware stack levels used:    1
  2907 ;; This function calls:
  2908 ;;		Nothing
  2909 ;; This function is called by:
  2910 ;;		Interrupt level 1
  2911 ;; This function uses a non-reentrant model
  2912 ;;
  2913                           
  2914                           
  2915                           ;psect for function _timer_isr
  2916  036E                     _timer_isr:	
  2917                           
  2918                           ;interrupts.c: 17: if(TMR1IF==1)
  2919  036E  1C0C               	btfss	12,0	;volatile
  2920  036F  2B81               	goto	i1l22
  2921                           
  2922                           ;interrupts.c: 18: {
  2923                           ;interrupts.c: 19: if(RB7==0)
  2924  0370  1B86               	btfsc	6,7	;volatile
  2925  0371  2B74               	goto	i1l18
  2926                           
  2927                           ;interrupts.c: 20: {
  2928                           ;interrupts.c: 21: RB7=1;
  2929  0372  1786               	bsf	6,7	;volatile
  2930                           
  2931                           ;interrupts.c: 22: }
  2932  0373  2B77               	goto	i1l1050
  2933  0374                     i1l18:	
  2934                           
  2935                           ;interrupts.c: 23: else if(RB7==1)
  2936  0374  1F86               	btfss	6,7	;volatile
  2937  0375  2B77               	goto	i1l1050
  2938                           
  2939                           ;interrupts.c: 24: {
  2940                           ;interrupts.c: 25: RB7=0;
  2941  0376  1386               	bcf	6,7	;volatile
  2942  0377                     i1l1050:	
  2943                           
  2944                           ;interrupts.c: 26: }
  2945                           ;interrupts.c: 28: TMR1H=0x0B;
  2946  0377  300B               	movlw	11
  2947  0378  008F               	movwf	15	;volatile
  2948                           
  2949                           ;interrupts.c: 29: TMR1L=0xDC;
  2950  0379  30DC               	movlw	220
  2951  037A  008E               	movwf	14	;volatile
  2952                           
  2953                           ;interrupts.c: 30: TMR1IF=0;
  2954  037B  100C               	bcf	12,0	;volatile
  2955                           
  2956                           ;interrupts.c: 32: if(TMR0IF==1)
  2957  037C  1D0B               	btfss	11,2	;volatile
  2958  037D  2B81               	goto	i1l22
  2959                           
  2960                           ;interrupts.c: 33: {
  2961                           ;interrupts.c: 34: TMR0 = 101;
  2962  037E  3065               	movlw	101
  2963  037F  0081               	movwf	1	;volatile
  2964                           
  2965                           ;interrupts.c: 36: TMR0IF=0;
  2966  0380  110B               	bcf	11,2	;volatile
  2967  0381                     i1l22:	
  2968  0381  0873               	movf	??_timer_isr+3,w
  2969  0382  00FF               	movwf	127
  2970  0383  0872               	movf	??_timer_isr+2,w
  2971  0384  008A               	movwf	10
  2972  0385  0871               	movf	??_timer_isr+1,w
  2973  0386  0084               	movwf	4
  2974  0387  0E70               	swapf	??_timer_isr^(0+-128),w
  2975  0388  0083               	movwf	3
  2976  0389  0EFE               	swapf	126,f
  2977  038A  0E7E               	swapf	126,w
  2978  038B  0009               	retfie
  2979  038C                     __end_of_timer_isr:	
  2980  007E                     btemp	set	126	;btemp
  2981  007E                     wtemp0	set	126
  2982                           
  2983                           	psect	intentry
  2984  0004                     __pintentry:	
  2985                           ;incstack = 0
  2986                           ; Regs used in _timer_isr: [wreg]
  2987                           
  2988  0004                     interrupt_function:	
  2989  007E                     saved_w	set	btemp
  2990  0004  00FE               	movwf	btemp
  2991  0005  0E03               	swapf	3,w
  2992  0006  00F0               	movwf	??_timer_isr
  2993  0007  0804               	movf	4,w
  2994  0008  00F1               	movwf	??_timer_isr+1
  2995  0009  080A               	movf	10,w
  2996  000A  00F2               	movwf	??_timer_isr+2
  2997  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2998  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2999  000D  087F               	movf	btemp+1,w
  3000  000E  00F3               	movwf	??_timer_isr+3
  3001  000F  120A  118A  2B6E   	ljmp	_timer_isr


Data Sizes:
    Strings     5
    Constant    10
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     32      42
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 2
		 -> STR_1(CODE[2]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_ui_adc_read
    _lcd_putstr->_lcd_2ndline
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwmod
    _lcd_bcd->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _timer_isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_putstr->_lcd_putchar
    _lcd_bcd->___lwdiv

Critical Paths under _timer_isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _timer_isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _timer_isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _timer_isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0    5652
                                             20 BANK0     12    12      0
                            _InitApp
                     _adc_initialize
                             _adc_on
                            _lcd_bcd
                           _lcd_goto
                     _lcd_initialize
                         _lcd_putstr
                     _pwm_initialize
                        _ui_adc_read
 ---------------------------------------------------------------------------------
 (1) _ui_adc_read                                          6     4      2      47
                                              4 COMMON     6     4      2
 ---------------------------------------------------------------------------------
 (1) _pwm_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    1206
                                              1 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2456
                                              3 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (4) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     663
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     666
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _adc_on                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _timer_isr                                            4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _adc_initialize
   _adc_on
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _pwm_initialize
   _ui_adc_read

 _timer_isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      34       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     20      2A       5       52.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      34      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed Jan 24 12:29:25 2018

         ui_adc_read@pot 0078                        pc 0002             ?_lcd_putchar 0070  
            __CFG_CP$OFF 0000                       _RD 0C60                       _WR 0C61  
                     fsr 0004                      l110 00EB                      l113 0103  
                    l160 0350                      _GIE 005F                      _RB1 0031  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      _PR2 0092                      _PS2 040A  
                    u505 023B                      u450 03EB             __CFG_CPD$OFF 0000  
                    u525 0247                      u605 0338                      u470 03E0  
                    u710 00C1                      u535 0253                      u711 00BF  
                    u720 00CB                      u712 00C2                      u545 025D  
                    u705 00B8                      u650 016B                      u722 00CC  
                    u575 031E                      u807 02F7                      u817 0305  
                    u595 032F                      u787 034B                      u797 02B4  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
      set_lcd_e@b_output 0074             __CFG_LVP$OFF 0000                     l1300 0329  
                   l1304 0337                     l1308 0342                     l1340 02A1  
                   l1342 026F                     l1336 028D                     l1282 025C  
                   l1274 0238                     l1338 0293                     l1276 0246  
                   l1286 0267                     l1542 0157                     l1518 0107  
                   l1298 031B                     l1386 0218                     l1484 00A6  
                   _ADFM 04FF                     _ADON 00F8                     _CHS0 00FB  
                   _CHS1 00FC                     _CHS2 00FD                     STR_1 039F  
                   STR_2 039C                     _PEIE 005E                     i1l22 0381  
                   i1l18 0374                     _TMR0 0001                     _WREN 0C62  
           __CFG_WRT$OFF 0000                     _main 0025                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0012           _pwm_initialize 03A1  
        __end_of_InitApp 040A                    _ADCS0 00FE                    _ADCS1 00FF  
                  ?_main 0070                    _EEADR 010D            __CFG_WDTE$OFF 0000  
                  _EEPGD 0C67                    _PCFG0 04F8                    _PCFG1 04F9  
                  _PCFG2 04FA                    _PCFG3 04FB          __end_of___lwdiv 026C  
        __end_of___lwmod 0347                    _TMR1H 000F                    _TMR1L 000E  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088     send_lcd_data@uc_data 0075  
          __CFG_PWRTE$ON 0000          __end_of_lcd_bcd 022E          __end_of_dpowers 039C  
                  main@i 0036                    pclath 000A                    status 0003  
 __end_of_pwm_initialize 03B1                    wtemp0 007E          __initialization 0015  
      send_lcd_data@b_rs 0078             __end_of_main 0160     __size_of_lcd_2ndline 0009  
  __end_of_send_lcd_data 0315                   ??_main 0034             ?_ui_adc_read 0074  
                 _CCP2M0 00E8                   _CCP2M1 00E9                   _CCP2M2 00EA  
                 _CCP2M3 00EB                   _ADRESH 001E                   _ADRESL 009E  
                 _EEDATA 010C                   _CCPR2L 001B                   _EECON2 018D  
                 i1l1050 0377                   _TMR0IE 005D                   _TMR0IF 005A  
                 _TMR1IE 0460                   _TMR1IF 0060                   _TMR1ON 0080  
                 _TMR2ON 0092          ?_pwm_initialize 0070                ??_InitApp 0074  
       __end_of_lcd_goto 03CD                   _adc_on 0405  __size_of_adc_initialize 000F  
              ??___lwdiv 0078                ??___lwmod 0078                ??_lcd_bcd 0025  
   __size_of_lcd_putchar 000C                   saved_w 007E         ??_lcd_initialize 0020  
__end_of__initialization 0021           __pcstackCOMMON 0070       __size_of_lcd_clear 0007  
             __pbssBANK0 0040               __pmaintext 0025                  ?_adc_on 0070  
             __pintentry 0004                  _CCP2CON 001D       __size_of_set_lcd_e 000B  
                _T1CKPS0 0084                  _T1CKPS1 0085                  _T2CKPS0 0090  
                _T2CKPS1 0091       __size_of_timer_isr 001E               _lcd_putstr 026C  
              ?_lcd_goto 0070               __stringtab 038C     __size_of_ui_adc_read 0027  
          ?_set_lcd_data 0070                  _InitApp 0409        __end_of_lcd_clear 03FF  
         _adc_initialize 03B1          __size_of_adc_on 0004                  ___lwdiv 022E  
                ___lwmod 0315                  __ptext1 0347                  __ptext2 03A1  
                __ptext3 026C                  __ptext4 03EF                  __ptext5 02A8  
                __ptext6 03F8                  __ptext7 03C0                  __ptext8 0160  
                __ptext9 03CD                  _lcd_bcd 0160                  _dpowers 0392  
       ??_pwm_initialize 0074               ??_lcd_goto 0079     end_of_initialization 0021  
      lcd_bcd@ui_decimal 0029           ??_set_lcd_data 0074        __end_of_set_lcd_e 03EF  
      __end_of_timer_isr 038C   __end_of_adc_initialize 03C0               _set_lcd_rs 03D9  
          ??_lcd_2ndline 0079                _PORTCbits 0007          main@adc_value_1 003C  
            ?_lcd_putstr 0070   __size_of_send_lcd_data 0035          ?_adc_initialize 0070  
          ??_lcd_putchar 0079           __end_of_adc_on 0409        lcd_putchar@c_data 0020  
    __end_of_lcd_2ndline 03F8      main@lastButtonState 0038      start_initialization 0015  
     set_lcd_rs@b_output 0074     lcd_putstr@csz_string 0022      lcd_goto@uc_position 0020  
            ?_set_lcd_rs 0070                 ??_adc_on 0074      __size_of_lcd_putstr 003C  
          _send_lcd_data 02E0     __end_of_set_lcd_data 0405      __end_of_lcd_putchar 03D9  
              ___latbits 0002            __pcstackBANK0 0020        __size_of_lcd_goto 000D  
               ?_InitApp 0070  __size_of_lcd_initialize 0038         ___lwdiv@dividend 0076  
            _lcd_2ndline 03EF                 ?___lwdiv 0074                 ?___lwmod 0074  
              _lcd_clear 03F8           ?_send_lcd_data 0075                __pstrings 038C  
               ?_lcd_bcd 0023            ??_ui_adc_read 0076      __size_of_set_lcd_rs 000B  
       ___lwdiv@quotient 0020      set_lcd_data@uc_data 0074        interrupt_function 0004  
              _set_lcd_e 03E4                 _GO_nDONE 00FA         lcd_bcd@ui_number 0023  
              _timer_isr 036E              _lcd_putchar 03CD               ?_lcd_clear 0070  
            __stringbase 0391          main@buttonState 003A             ??_lcd_putstr 0021  
       ??_adc_initialize 0074      __end_of_ui_adc_read 036E         __size_of_InitApp 0001  
             ?_set_lcd_e 0070    __size_of_set_lcd_data 0006          ??_send_lcd_data 0076  
             ?_timer_isr 0070         __size_of___lwdiv 003E       __end_of_lcd_putstr 02A8  
       __size_of___lwmod 0032       __end_of__stringtab 0392         __size_of_lcd_bcd 00CE  
        ___lwdiv@divisor 0074          ___lwdiv@counter 0022                 __ptext10 02E0  
               __ptext11 03D9                 __ptext12 03E4                 __ptext13 03FF  
               __ptext14 0315                 __ptext15 022E                 __ptext16 0405  
               __ptext17 03B1                 __ptext18 0409                 __ptext19 036E  
               _lcd_goto 03C0            __size_of_main 013B          lcd_bcd@uc_digit 0033  
           _set_lcd_data 03FF           _lcd_initialize 02A8             ??_set_lcd_rs 0074  
__size_of_pwm_initialize 0010                 main@data 003E              ??_lcd_clear 0079  
            _ui_adc_read 0347       __end_of_set_lcd_rs 03E4                 intlevel1 0000  
       ___lwmod@dividend 0076   __end_of_lcd_initialize 02E0                stringcode 038C  
            ??_set_lcd_e 0074             ?_lcd_2ndline 0070              ??_timer_isr 0070  
           lcd_bcd@F1134 0040          ___lwmod@divisor 0074          ___lwmod@counter 0079  
               stringdir 038C                 stringtab 038C          ?_lcd_initialize 0070  
