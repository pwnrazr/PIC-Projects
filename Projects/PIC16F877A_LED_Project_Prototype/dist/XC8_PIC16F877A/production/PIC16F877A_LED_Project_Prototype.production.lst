

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 09 13:47:57 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	clrtext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2,group=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	text9,local,class=CODE,merge=1,delta=2
    21                           	psect	text10,local,class=CODE,merge=1,delta=2
    22                           	psect	text11,local,class=CODE,merge=1,delta=2
    23                           	psect	text12,local,class=CODE,merge=1,delta=2
    24                           	psect	text13,local,class=CODE,merge=1,delta=2
    25                           	psect	text14,local,class=CODE,merge=1,delta=2
    26                           	psect	text15,local,class=CODE,merge=1,delta=2
    27                           	psect	intentry,global,class=CODE,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	dabs	1,0x7E,2
    32  0000                     
    33                           ; Version 1.45
    34                           ; Generated 16/11/2017 GMT
    35                           ; 
    36                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    37                           ; All rights reserved.
    38                           ; 
    39                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    40                           ; 
    41                           ; Redistribution and use in source and binary forms, with or without modification, are
    42                           ; permitted provided that the following conditions are met:
    43                           ; 
    44                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    45                           ;        conditions and the following disclaimer.
    46                           ; 
    47                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    48                           ;        of conditions and the following disclaimer in the documentation and/or other
    49                           ;        materials provided with the distribution.
    50                           ; 
    51                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    52                           ;        software without specific prior written permission.
    53                           ; 
    54                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    55                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    56                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    57                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    58                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    59                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    60                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    61                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    62                           ; 
    63                           ; 
    64                           ; Code-generator required, PIC16F877A Definitions
    65                           ; 
    66                           ; SFR Addresses
    67  0000                     	;# 
    68  0001                     	;# 
    69  0002                     	;# 
    70  0003                     	;# 
    71  0004                     	;# 
    72  0005                     	;# 
    73  0006                     	;# 
    74  0007                     	;# 
    75  0008                     	;# 
    76  0009                     	;# 
    77  000A                     	;# 
    78  000B                     	;# 
    79  000C                     	;# 
    80  000D                     	;# 
    81  000E                     	;# 
    82  000E                     	;# 
    83  000F                     	;# 
    84  0010                     	;# 
    85  0011                     	;# 
    86  0012                     	;# 
    87  0013                     	;# 
    88  0014                     	;# 
    89  0015                     	;# 
    90  0015                     	;# 
    91  0016                     	;# 
    92  0017                     	;# 
    93  0018                     	;# 
    94  0019                     	;# 
    95  001A                     	;# 
    96  001B                     	;# 
    97  001B                     	;# 
    98  001C                     	;# 
    99  001D                     	;# 
   100  001E                     	;# 
   101  001F                     	;# 
   102  0081                     	;# 
   103  0085                     	;# 
   104  0086                     	;# 
   105  0087                     	;# 
   106  0088                     	;# 
   107  0089                     	;# 
   108  008C                     	;# 
   109  008D                     	;# 
   110  008E                     	;# 
   111  0091                     	;# 
   112  0092                     	;# 
   113  0093                     	;# 
   114  0094                     	;# 
   115  0098                     	;# 
   116  0099                     	;# 
   117  009C                     	;# 
   118  009D                     	;# 
   119  009E                     	;# 
   120  009F                     	;# 
   121  010C                     	;# 
   122  010D                     	;# 
   123  010E                     	;# 
   124  010F                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0094                     	;# 
   175  0098                     	;# 
   176  0099                     	;# 
   177  009C                     	;# 
   178  009D                     	;# 
   179  009E                     	;# 
   180  009F                     	;# 
   181  010C                     	;# 
   182  010D                     	;# 
   183  010E                     	;# 
   184  010F                     	;# 
   185  018C                     	;# 
   186  018D                     	;# 
   187  0000                     	;# 
   188  0001                     	;# 
   189  0002                     	;# 
   190  0003                     	;# 
   191  0004                     	;# 
   192  0005                     	;# 
   193  0006                     	;# 
   194  0007                     	;# 
   195  0008                     	;# 
   196  0009                     	;# 
   197  000A                     	;# 
   198  000B                     	;# 
   199  000C                     	;# 
   200  000D                     	;# 
   201  000E                     	;# 
   202  000E                     	;# 
   203  000F                     	;# 
   204  0010                     	;# 
   205  0011                     	;# 
   206  0012                     	;# 
   207  0013                     	;# 
   208  0014                     	;# 
   209  0015                     	;# 
   210  0015                     	;# 
   211  0016                     	;# 
   212  0017                     	;# 
   213  0018                     	;# 
   214  0019                     	;# 
   215  001A                     	;# 
   216  001B                     	;# 
   217  001B                     	;# 
   218  001C                     	;# 
   219  001D                     	;# 
   220  001E                     	;# 
   221  001F                     	;# 
   222  0081                     	;# 
   223  0085                     	;# 
   224  0086                     	;# 
   225  0087                     	;# 
   226  0088                     	;# 
   227  0089                     	;# 
   228  008C                     	;# 
   229  008D                     	;# 
   230  008E                     	;# 
   231  0091                     	;# 
   232  0092                     	;# 
   233  0093                     	;# 
   234  0094                     	;# 
   235  0098                     	;# 
   236  0099                     	;# 
   237  009C                     	;# 
   238  009D                     	;# 
   239  009E                     	;# 
   240  009F                     	;# 
   241  010C                     	;# 
   242  010D                     	;# 
   243  010E                     	;# 
   244  010F                     	;# 
   245  018C                     	;# 
   246  018D                     	;# 
   247  0000                     	;# 
   248  0001                     	;# 
   249  0002                     	;# 
   250  0003                     	;# 
   251  0004                     	;# 
   252  0005                     	;# 
   253  0006                     	;# 
   254  0007                     	;# 
   255  0008                     	;# 
   256  0009                     	;# 
   257  000A                     	;# 
   258  000B                     	;# 
   259  000C                     	;# 
   260  000D                     	;# 
   261  000E                     	;# 
   262  000E                     	;# 
   263  000F                     	;# 
   264  0010                     	;# 
   265  0011                     	;# 
   266  0012                     	;# 
   267  0013                     	;# 
   268  0014                     	;# 
   269  0015                     	;# 
   270  0015                     	;# 
   271  0016                     	;# 
   272  0017                     	;# 
   273  0018                     	;# 
   274  0019                     	;# 
   275  001A                     	;# 
   276  001B                     	;# 
   277  001B                     	;# 
   278  001C                     	;# 
   279  001D                     	;# 
   280  001E                     	;# 
   281  001F                     	;# 
   282  0081                     	;# 
   283  0085                     	;# 
   284  0086                     	;# 
   285  0087                     	;# 
   286  0088                     	;# 
   287  0089                     	;# 
   288  008C                     	;# 
   289  008D                     	;# 
   290  008E                     	;# 
   291  0091                     	;# 
   292  0092                     	;# 
   293  0093                     	;# 
   294  0094                     	;# 
   295  0098                     	;# 
   296  0099                     	;# 
   297  009C                     	;# 
   298  009D                     	;# 
   299  009E                     	;# 
   300  009F                     	;# 
   301  010C                     	;# 
   302  010D                     	;# 
   303  010E                     	;# 
   304  010F                     	;# 
   305  018C                     	;# 
   306  018D                     	;# 
   307  0000                     	;# 
   308  0001                     	;# 
   309  0002                     	;# 
   310  0003                     	;# 
   311  0004                     	;# 
   312  0005                     	;# 
   313  0006                     	;# 
   314  0007                     	;# 
   315  0008                     	;# 
   316  0009                     	;# 
   317  000A                     	;# 
   318  000B                     	;# 
   319  000C                     	;# 
   320  000D                     	;# 
   321  000E                     	;# 
   322  000E                     	;# 
   323  000F                     	;# 
   324  0010                     	;# 
   325  0011                     	;# 
   326  0012                     	;# 
   327  0013                     	;# 
   328  0014                     	;# 
   329  0015                     	;# 
   330  0015                     	;# 
   331  0016                     	;# 
   332  0017                     	;# 
   333  0018                     	;# 
   334  0019                     	;# 
   335  001A                     	;# 
   336  001B                     	;# 
   337  001B                     	;# 
   338  001C                     	;# 
   339  001D                     	;# 
   340  001E                     	;# 
   341  001F                     	;# 
   342  0081                     	;# 
   343  0085                     	;# 
   344  0086                     	;# 
   345  0087                     	;# 
   346  0088                     	;# 
   347  0089                     	;# 
   348  008C                     	;# 
   349  008D                     	;# 
   350  008E                     	;# 
   351  0091                     	;# 
   352  0092                     	;# 
   353  0093                     	;# 
   354  0094                     	;# 
   355  0098                     	;# 
   356  0099                     	;# 
   357  009C                     	;# 
   358  009D                     	;# 
   359  009E                     	;# 
   360  009F                     	;# 
   361  010C                     	;# 
   362  010D                     	;# 
   363  010E                     	;# 
   364  010F                     	;# 
   365  018C                     	;# 
   366  018D                     	;# 
   367  0000                     	;# 
   368  0001                     	;# 
   369  0002                     	;# 
   370  0003                     	;# 
   371  0004                     	;# 
   372  0005                     	;# 
   373  0006                     	;# 
   374  0007                     	;# 
   375  0008                     	;# 
   376  0009                     	;# 
   377  000A                     	;# 
   378  000B                     	;# 
   379  000C                     	;# 
   380  000D                     	;# 
   381  000E                     	;# 
   382  000E                     	;# 
   383  000F                     	;# 
   384  0010                     	;# 
   385  0011                     	;# 
   386  0012                     	;# 
   387  0013                     	;# 
   388  0014                     	;# 
   389  0015                     	;# 
   390  0015                     	;# 
   391  0016                     	;# 
   392  0017                     	;# 
   393  0018                     	;# 
   394  0019                     	;# 
   395  001A                     	;# 
   396  001B                     	;# 
   397  001B                     	;# 
   398  001C                     	;# 
   399  001D                     	;# 
   400  001E                     	;# 
   401  001F                     	;# 
   402  0081                     	;# 
   403  0085                     	;# 
   404  0086                     	;# 
   405  0087                     	;# 
   406  0088                     	;# 
   407  0089                     	;# 
   408  008C                     	;# 
   409  008D                     	;# 
   410  008E                     	;# 
   411  0091                     	;# 
   412  0092                     	;# 
   413  0093                     	;# 
   414  0094                     	;# 
   415  0098                     	;# 
   416  0099                     	;# 
   417  009C                     	;# 
   418  009D                     	;# 
   419  009E                     	;# 
   420  009F                     	;# 
   421  010C                     	;# 
   422  010D                     	;# 
   423  010E                     	;# 
   424  010F                     	;# 
   425  018C                     	;# 
   426  018D                     	;# 
   427  0000                     	;# 
   428  0001                     	;# 
   429  0002                     	;# 
   430  0003                     	;# 
   431  0004                     	;# 
   432  0005                     	;# 
   433  0006                     	;# 
   434  0007                     	;# 
   435  0008                     	;# 
   436  0009                     	;# 
   437  000A                     	;# 
   438  000B                     	;# 
   439  000C                     	;# 
   440  000D                     	;# 
   441  000E                     	;# 
   442  000E                     	;# 
   443  000F                     	;# 
   444  0010                     	;# 
   445  0011                     	;# 
   446  0012                     	;# 
   447  0013                     	;# 
   448  0014                     	;# 
   449  0015                     	;# 
   450  0015                     	;# 
   451  0016                     	;# 
   452  0017                     	;# 
   453  0018                     	;# 
   454  0019                     	;# 
   455  001A                     	;# 
   456  001B                     	;# 
   457  001B                     	;# 
   458  001C                     	;# 
   459  001D                     	;# 
   460  001E                     	;# 
   461  001F                     	;# 
   462  0081                     	;# 
   463  0085                     	;# 
   464  0086                     	;# 
   465  0087                     	;# 
   466  0088                     	;# 
   467  0089                     	;# 
   468  008C                     	;# 
   469  008D                     	;# 
   470  008E                     	;# 
   471  0091                     	;# 
   472  0092                     	;# 
   473  0093                     	;# 
   474  0094                     	;# 
   475  0098                     	;# 
   476  0099                     	;# 
   477  009C                     	;# 
   478  009D                     	;# 
   479  009E                     	;# 
   480  009F                     	;# 
   481  010C                     	;# 
   482  010D                     	;# 
   483  010E                     	;# 
   484  010F                     	;# 
   485  018C                     	;# 
   486  018D                     	;# 
   487  0000                     	;# 
   488  0001                     	;# 
   489  0002                     	;# 
   490  0003                     	;# 
   491  0004                     	;# 
   492  0005                     	;# 
   493  0006                     	;# 
   494  0007                     	;# 
   495  0008                     	;# 
   496  0009                     	;# 
   497  000A                     	;# 
   498  000B                     	;# 
   499  000C                     	;# 
   500  000D                     	;# 
   501  000E                     	;# 
   502  000E                     	;# 
   503  000F                     	;# 
   504  0010                     	;# 
   505  0011                     	;# 
   506  0012                     	;# 
   507  0013                     	;# 
   508  0014                     	;# 
   509  0015                     	;# 
   510  0015                     	;# 
   511  0016                     	;# 
   512  0017                     	;# 
   513  0018                     	;# 
   514  0019                     	;# 
   515  001A                     	;# 
   516  001B                     	;# 
   517  001B                     	;# 
   518  001C                     	;# 
   519  001D                     	;# 
   520  001E                     	;# 
   521  001F                     	;# 
   522  0081                     	;# 
   523  0085                     	;# 
   524  0086                     	;# 
   525  0087                     	;# 
   526  0088                     	;# 
   527  0089                     	;# 
   528  008C                     	;# 
   529  008D                     	;# 
   530  008E                     	;# 
   531  0091                     	;# 
   532  0092                     	;# 
   533  0093                     	;# 
   534  0094                     	;# 
   535  0098                     	;# 
   536  0099                     	;# 
   537  009C                     	;# 
   538  009D                     	;# 
   539  009E                     	;# 
   540  009F                     	;# 
   541  010C                     	;# 
   542  010D                     	;# 
   543  010E                     	;# 
   544  010F                     	;# 
   545  018C                     	;# 
   546  018D                     	;# 
   547  0000                     	;# 
   548  0001                     	;# 
   549  0002                     	;# 
   550  0003                     	;# 
   551  0004                     	;# 
   552  0005                     	;# 
   553  0006                     	;# 
   554  0007                     	;# 
   555  0008                     	;# 
   556  0009                     	;# 
   557  000A                     	;# 
   558  000B                     	;# 
   559  000C                     	;# 
   560  000D                     	;# 
   561  000E                     	;# 
   562  000E                     	;# 
   563  000F                     	;# 
   564  0010                     	;# 
   565  0011                     	;# 
   566  0012                     	;# 
   567  0013                     	;# 
   568  0014                     	;# 
   569  0015                     	;# 
   570  0015                     	;# 
   571  0016                     	;# 
   572  0017                     	;# 
   573  0018                     	;# 
   574  0019                     	;# 
   575  001A                     	;# 
   576  001B                     	;# 
   577  001B                     	;# 
   578  001C                     	;# 
   579  001D                     	;# 
   580  001E                     	;# 
   581  001F                     	;# 
   582  0081                     	;# 
   583  0085                     	;# 
   584  0086                     	;# 
   585  0087                     	;# 
   586  0088                     	;# 
   587  0089                     	;# 
   588  008C                     	;# 
   589  008D                     	;# 
   590  008E                     	;# 
   591  0091                     	;# 
   592  0092                     	;# 
   593  0093                     	;# 
   594  0094                     	;# 
   595  0098                     	;# 
   596  0099                     	;# 
   597  009C                     	;# 
   598  009D                     	;# 
   599  009E                     	;# 
   600  009F                     	;# 
   601  010C                     	;# 
   602  010D                     	;# 
   603  010E                     	;# 
   604  010F                     	;# 
   605  018C                     	;# 
   606  018D                     	;# 
   607  001A                     _RCREG	set	26
   608  0019                     _TXREG	set	25
   609  001D                     _CCP2CON	set	29
   610  001B                     _CCPR2L	set	27
   611  001E                     _ADRESH	set	30
   612  0008                     _PORTD	set	8
   613  0007                     _PORTC	set	7
   614  0006                     _PORTB	set	6
   615  0005                     _PORTA	set	5
   616  0001                     _TMR0	set	1
   617  00C1                     _OERR	set	193
   618  0064                     _TXIF	set	100
   619  00C4                     _CREN	set	196
   620  00C7                     _SPEN	set	199
   621  00E8                     _CCP2M0	set	232
   622  00E9                     _CCP2M1	set	233
   623  00EA                     _CCP2M2	set	234
   624  00EB                     _CCP2M3	set	235
   625  0090                     _T2CKPS0	set	144
   626  0091                     _T2CKPS1	set	145
   627  0034                     _RB4	set	52
   628  0035                     _RB5	set	53
   629  00FA                     _GO_nDONE	set	250
   630  00FB                     _CHS0	set	251
   631  00FC                     _CHS1	set	252
   632  00FD                     _CHS2	set	253
   633  00F8                     _ADON	set	248
   634  00FE                     _ADCS0	set	254
   635  00FF                     _ADCS1	set	255
   636  005E                     _PEIE	set	94
   637  005F                     _GIE	set	95
   638  005D                     _TMR0IE	set	93
   639  005C                     _INTE	set	92
   640  0065                     _RCIF	set	101
   641  0059                     _INTF	set	89
   642  0036                     _RB6	set	54
   643  0092                     _TMR2ON	set	146
   644  005A                     _TMR0IF	set	90
   645  0099                     _SPBRG	set	153
   646  0092                     _PR2	set	146
   647  009E                     _ADRESL	set	158
   648  0081                     _OPTION_REG	set	129
   649  0088                     _TRISD	set	136
   650  0087                     _TRISC	set	135
   651  0086                     _TRISB	set	134
   652  0085                     _TRISA	set	133
   653  04C5                     _TXEN	set	1221
   654  043E                     _TRISC6	set	1086
   655  043F                     _TRISC7	set	1087
   656  04C4                     _SYNC	set	1220
   657  0465                     _RCIE	set	1125
   658  04C2                     _BRGH	set	1218
   659  04F8                     _PCFG0	set	1272
   660  04F9                     _PCFG1	set	1273
   661  04FA                     _PCFG2	set	1274
   662  04FB                     _PCFG3	set	1275
   663  04FF                     _ADFM	set	1279
   664                           
   665                           	psect	strings
   666  0321                     __pstrings:	
   667  0321                     stringtab:	
   668  0321                     __stringtab:	
   669  0321                     stringcode:	
   670                           ;	String table - string pointers are 1 byte each
   671                           
   672  0321                     stringdir:	
   673  0321  3003               	movlw	high stringdir
   674  0322  008A               	movwf	10
   675  0323  0804               	movf	4,w
   676  0324  0A84               	incf	4,f
   677  0325  0782               	addwf	2,f
   678  0326                     __stringbase:	
   679  0326  3400               	retlw	0
   680  0327                     __end_of__stringtab:	
   681  0327                     STR_2:	
   682  0327  347E               	retlw	126	;'~'
   683  0328  347E               	retlw	126	;'~'
   684  0329  3452               	retlw	82	;'R'
   685  032A  3465               	retlw	101	;'e'
   686  032B  3473               	retlw	115	;'s'
   687  032C  3465               	retlw	101	;'e'
   688  032D  3474               	retlw	116	;'t'
   689  032E  347E               	retlw	126	;'~'
   690  032F  347E               	retlw	126	;'~'
   691  0330  340A               	retlw	10
   692  0331  3400               	retlw	0
   693  0332                     STR_1:	
   694  0332  3442               	retlw	66	;'B'
   695  0333  3445               	retlw	69	;'E'
   696  0334  3445               	retlw	69	;'E'
   697  0335  3450               	retlw	80	;'P'
   698  0336  3421               	retlw	33	;'!'
   699  0337  340A               	retlw	10
   700  0338  3400               	retlw	0
   701                           
   702                           ; #config settings
   703  0000                     
   704                           	psect	cinit
   705  0015                     start_initialization:	
   706  0015                     __initialization:	
   707                           
   708                           ; Clear objects allocated to COMMON
   709  0015  01F0               	clrf	__pbssCOMMON& (0+127)
   710  0016  01F1               	clrf	(__pbssCOMMON+1)& (0+127)
   711  0017  01F2               	clrf	(__pbssCOMMON+2)& (0+127)
   712  0018  01F3               	clrf	(__pbssCOMMON+3)& (0+127)
   713  0019  01F4               	clrf	(__pbssCOMMON+4)& (0+127)
   714  001A  01F5               	clrf	(__pbssCOMMON+5)& (0+127)
   715  001B  01F6               	clrf	(__pbssCOMMON+6)& (0+127)
   716                           
   717                           ; Clear objects allocated to BANK0
   718  001C  1383               	bcf	3,7	;select IRP bank0
   719  001D  3041               	movlw	low __pbssBANK0
   720  001E  0084               	movwf	4
   721  001F  3059               	movlw	low (__pbssBANK0+24)
   722  0020  120A  118A  2385   	fcall	clear_ram0
   723  0023                     end_of_initialization:	
   724                           ;End of C runtime variable initialization code
   725                           
   726  0023                     __end_of__initialization:	
   727  0023  0183               	clrf	3
   728  0024  120A  118A  2A04   	ljmp	_main	;jump to C main() function
   729                           
   730                           	psect	bssCOMMON
   731  0070                     __pbssCOMMON:	
   732  0070                     _ledtime:	
   733  0070                     	ds	2
   734  0072                     _beep:	
   735  0072                     	ds	2
   736  0074                     _time:	
   737  0074                     	ds	2
   738  0076                     _datarec:	
   739  0076                     	ds	1
   740                           
   741                           	psect	bssBANK0
   742  0041                     __pbssBANK0:	
   743  0041                     lcd_bcd@F1136:	
   744  0041                     	ds	10
   745  004B                     _data:	
   746  004B                     	ds	10
   747  0055                     _ready:	
   748  0055                     	ds	2
   749  0057                     _charcount:	
   750  0057                     	ds	2
   751                           
   752                           	psect	clrtext
   753  0385                     clear_ram0:	
   754                           ;	Called with FSR containing the base address, and
   755                           ;	W with the last address+1
   756                           
   757  0385  0064               	clrwdt	;clear the watchdog before getting into this loop
   758  0386                     clrloop0:	
   759  0386  0180               	clrf	0	;clear RAM location pointed to by FSR
   760  0387  0A84               	incf	4,f	;increment pointer
   761  0388  0604               	xorwf	4,w	;XOR with final address
   762  0389  1903               	btfsc	3,2	;have we reached the end yet?
   763  038A  3400               	retlw	0	;all done for this memory range, return
   764  038B  0604               	xorwf	4,w	;XOR again to restore value
   765  038C  2B86               	goto	clrloop0	;do the next byte
   766                           
   767                           	psect	cstackCOMMON
   768  0077                     __pcstackCOMMON:	
   769  0077                     ?_uart_putstr:	
   770  0077                     ?_uart_read:	
   771                           ; 1 bytes @ 0x0
   772                           
   773  0077                     ??_uart_read:	
   774                           ; 1 bytes @ 0x0
   775                           
   776  0077                     ?_InitApp:	
   777                           ; 1 bytes @ 0x0
   778                           
   779  0077                     ?_lcd_initialize:	
   780                           ; 1 bytes @ 0x0
   781                           
   782  0077                     ?_adc_initialize:	
   783                           ; 1 bytes @ 0x0
   784                           
   785  0077                     ?_pwm_initialize:	
   786                           ; 1 bytes @ 0x0
   787                           
   788  0077                     ?_set_lcd_e:	
   789                           ; 1 bytes @ 0x0
   790                           
   791  0077                     ?_lcd_clear:	
   792                           ; 1 bytes @ 0x0
   793                           
   794  0077                     ?_set_lcd_rs:	
   795                           ; 1 bytes @ 0x0
   796                           
   797  0077                     ?_set_lcd_data:	
   798                           ; 1 bytes @ 0x0
   799                           
   800  0077                     ?_isr:	
   801                           ; 1 bytes @ 0x0
   802                           
   803  0077                     ?_main:	
   804                           ; 1 bytes @ 0x0
   805                           
   806  0077                     ?_uart_send:	
   807                           ; 1 bytes @ 0x0
   808                           
   809  0077                     ?i1_uart_send:	
   810                           ; 1 bytes @ 0x0
   811                           
   812  0077                     ??i1_uart_send:	
   813                           ; 1 bytes @ 0x0
   814                           
   815  0077                     ?i1_uart_putstr:	
   816                           ; 1 bytes @ 0x0
   817                           
   818  0077                     i1uart_send@uc_data:	
   819                           ; 1 bytes @ 0x0
   820                           
   821                           
   822                           ; 1 bytes @ 0x0
   823  0077                     	ds	1
   824  0078                     ??i1_uart_putstr:	
   825                           
   826                           ; 1 bytes @ 0x1
   827  0078                     	ds	1
   828  0079                     i1uart_putstr@st_pt:	
   829                           
   830                           ; 1 bytes @ 0x2
   831  0079                     	ds	1
   832  007A                     ??_isr:	
   833                           
   834                           ; 1 bytes @ 0x3
   835  007A                     	ds	4
   836                           
   837                           	psect	cstackBANK0
   838  0020                     __pcstackBANK0:	
   839  0020                     ??_InitApp:	
   840  0020                     ??_adc_initialize:	
   841                           ; 1 bytes @ 0x0
   842                           
   843  0020                     ??_pwm_initialize:	
   844                           ; 1 bytes @ 0x0
   845                           
   846  0020                     ?_pwm_set_duty_cycle:	
   847                           ; 1 bytes @ 0x0
   848                           
   849  0020                     ??_set_lcd_e:	
   850                           ; 1 bytes @ 0x0
   851                           
   852  0020                     ??_set_lcd_rs:	
   853                           ; 1 bytes @ 0x0
   854                           
   855  0020                     ??_set_lcd_data:	
   856                           ; 1 bytes @ 0x0
   857                           
   858  0020                     ??_uart_send:	
   859                           ; 1 bytes @ 0x0
   860                           
   861  0020                     ?___aldiv:	
   862                           ; 1 bytes @ 0x0
   863                           
   864  0020                     set_lcd_e@b_output:	
   865                           ; 4 bytes @ 0x0
   866                           
   867  0020                     set_lcd_rs@b_output:	
   868                           ; 1 bytes @ 0x0
   869                           
   870  0020                     set_lcd_data@uc_data:	
   871                           ; 1 bytes @ 0x0
   872                           
   873  0020                     uart_send@uc_data:	
   874                           ; 1 bytes @ 0x0
   875                           
   876  0020                     pwm_set_duty_cycle@ui_duty_cycle:	
   877                           ; 1 bytes @ 0x0
   878                           
   879  0020                     ___aldiv@divisor:	
   880                           ; 2 bytes @ 0x0
   881                           
   882                           
   883                           ; 4 bytes @ 0x0
   884  0020                     	ds	1
   885  0021                     ??_uart_putstr:	
   886  0021                     ?_send_lcd_data:	
   887                           ; 1 bytes @ 0x1
   888                           
   889  0021                     send_lcd_data@uc_data:	
   890                           ; 1 bytes @ 0x1
   891                           
   892                           
   893                           ; 1 bytes @ 0x1
   894  0021                     	ds	1
   895  0022                     ??_pwm_set_duty_cycle:	
   896  0022                     ??_send_lcd_data:	
   897                           ; 1 bytes @ 0x2
   898                           
   899  0022                     uart_putstr@st_pt:	
   900                           ; 1 bytes @ 0x2
   901                           
   902                           
   903                           ; 1 bytes @ 0x2
   904  0022                     	ds	2
   905  0024                     send_lcd_data@b_rs:	
   906  0024                     ___aldiv@dividend:	
   907                           ; 1 bytes @ 0x4
   908                           
   909                           
   910                           ; 4 bytes @ 0x4
   911  0024                     	ds	1
   912  0025                     ??_lcd_initialize:	
   913  0025                     ??_lcd_clear:	
   914                           ; 1 bytes @ 0x5
   915                           
   916                           
   917                           ; 1 bytes @ 0x5
   918  0025                     	ds	3
   919  0028                     ??___aldiv:	
   920                           
   921                           ; 1 bytes @ 0x8
   922  0028                     	ds	1
   923  0029                     ___aldiv@counter:	
   924                           
   925                           ; 1 bytes @ 0x9
   926  0029                     	ds	1
   927  002A                     ___aldiv@sign:	
   928                           
   929                           ; 1 bytes @ 0xA
   930  002A                     	ds	1
   931  002B                     ___aldiv@quotient:	
   932                           
   933                           ; 4 bytes @ 0xB
   934  002B                     	ds	4
   935  002F                     ?_uart_init:	
   936  002F                     uart_init@baudrate:	
   937                           ; 1 bytes @ 0xF
   938                           
   939                           
   940                           ; 4 bytes @ 0xF
   941  002F                     	ds	4
   942  0033                     ??_uart_init:	
   943                           
   944                           ; 1 bytes @ 0x13
   945  0033                     	ds	12
   946  003F                     uart_init@x:	
   947                           
   948                           ; 2 bytes @ 0x1F
   949  003F                     	ds	2
   950  0041                     ??_main:	
   951                           
   952                           	psect	maintext
   953  0204                     __pmaintext:	
   954                           ; 1 bytes @ 0x21
   955 ;;
   956 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   957 ;;
   958 ;; *************** function _main *****************
   959 ;; Defined at:
   960 ;;		line 23 in file "main.c"
   961 ;; Parameters:    Size  Location     Type
   962 ;;		None
   963 ;; Auto vars:     Size  Location     Type
   964 ;;		None
   965 ;; Return value:  Size  Location     Type
   966 ;;                  1    wreg      void 
   967 ;; Registers used:
   968 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   969 ;; Tracked objects:
   970 ;;		On entry : B00/0
   971 ;;		On exit  : 0/0
   972 ;;		Unchanged: 0/0
   973 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   974 ;;      Params:         0       0       0       0       0
   975 ;;      Locals:         0       0       0       0       0
   976 ;;      Temps:          0       0       0       0       0
   977 ;;      Totals:         0       0       0       0       0
   978 ;;Total ram usage:        0 bytes
   979 ;; Hardware stack levels required when called:    7
   980 ;; This function calls:
   981 ;;		_InitApp
   982 ;;		_adc_initialize
   983 ;;		_lcd_initialize
   984 ;;		_pwm_initialize
   985 ;;		_pwm_set_duty_cycle
   986 ;;		_uart_init
   987 ;;		_uart_putstr
   988 ;; This function is called by:
   989 ;;		Startup code after reset
   990 ;; This function uses a non-reentrant model
   991 ;;
   992                           
   993                           
   994                           ;psect for function _main
   995  0204                     _main:	
   996                           
   997                           ;main.c: 26: InitApp();
   998                           
   999                           ;incstack = 0
  1000                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1001  0204  120A  118A  23A3  120A  118A  	fcall	_InitApp
  1002                           
  1003                           ;main.c: 28: PORTA = 0;
  1004  0209  1283               	bcf	3,5	;RP0=0, select bank0
  1005  020A  1303               	bcf	3,6	;RP1=0, select bank0
  1006  020B  0185               	clrf	5	;volatile
  1007                           
  1008                           ;main.c: 29: PORTB = 0;
  1009  020C  0186               	clrf	6	;volatile
  1010                           
  1011                           ;main.c: 30: PORTC = 0;
  1012  020D  0187               	clrf	7	;volatile
  1013                           
  1014                           ;main.c: 31: PORTD = 0;
  1015  020E  0188               	clrf	8	;volatile
  1016                           
  1017                           ;main.c: 33: TRISA = 0b11111111;
  1018  020F  30FF               	movlw	255
  1019  0210  1683               	bsf	3,5	;RP0=1, select bank1
  1020  0211  1303               	bcf	3,6	;RP1=0, select bank1
  1021  0212  0085               	movwf	5	;volatile
  1022                           
  1023                           ;main.c: 34: TRISB = 0b00000011;
  1024  0213  3003               	movlw	3
  1025  0214  0086               	movwf	6	;volatile
  1026                           
  1027                           ;main.c: 35: TRISC = 0b10000000;
  1028  0215  3080               	movlw	128
  1029  0216  0087               	movwf	7	;volatile
  1030                           
  1031                           ;main.c: 36: TRISD = 0b00000000;
  1032  0217  0188               	clrf	8	;volatile
  1033                           
  1034                           ;main.c: 38: lcd_initialize();
  1035  0218  120A  118A  228F  120A  118A  	fcall	_lcd_initialize
  1036                           
  1037                           ;main.c: 39: adc_initialize();
  1038  021D  120A  118A  2349  120A  118A  	fcall	_adc_initialize
  1039                           
  1040                           ;main.c: 40: pwm_initialize();
  1041  0222  120A  118A  2339  120A  118A  	fcall	_pwm_initialize
  1042                           
  1043                           ;main.c: 41: uart_init(9600);
  1044  0227  3000               	movlw	0
  1045  0228  1283               	bcf	3,5	;RP0=0, select bank0
  1046  0229  1303               	bcf	3,6	;RP1=0, select bank0
  1047  022A  00B2               	movwf	uart_init@baudrate+3
  1048  022B  3000               	movlw	0
  1049  022C  00B1               	movwf	uart_init@baudrate+2
  1050  022D  3025               	movlw	37
  1051  022E  00B0               	movwf	uart_init@baudrate+1
  1052  022F  3080               	movlw	128
  1053  0230  00AF               	movwf	uart_init@baudrate
  1054  0231  120A  118A  2027  120A  118A  	fcall	_uart_init
  1055                           
  1056                           ;main.c: 43: OPTION_REG = (1<<2);
  1057  0236  3004               	movlw	4
  1058  0237  1683               	bsf	3,5	;RP0=1, select bank1
  1059  0238  1303               	bcf	3,6	;RP1=0, select bank1
  1060  0239  0081               	movwf	1	;volatile
  1061                           
  1062                           ;main.c: 44: TMR0=100;
  1063  023A  3064               	movlw	100
  1064  023B  1283               	bcf	3,5	;RP0=0, select bank0
  1065  023C  1303               	bcf	3,6	;RP1=0, select bank0
  1066  023D  0081               	movwf	1	;volatile
  1067                           
  1068                           ;main.c: 46: INTE=1;
  1069  023E  160B               	bsf	11,4	;volatile
  1070                           
  1071                           ;main.c: 47: TMR0IE=1;
  1072  023F  168B               	bsf	11,5	;volatile
  1073                           
  1074                           ;main.c: 48: GIE=1;
  1075  0240  178B               	bsf	11,7	;volatile
  1076                           
  1077                           ;main.c: 49: PEIE=1;
  1078  0241  170B               	bsf	11,6	;volatile
  1079                           
  1080                           ;main.c: 50: pwm_set_duty_cycle(128);
  1081  0242  3080               	movlw	128
  1082  0243  00A0               	movwf	pwm_set_duty_cycle@ui_duty_cycle
  1083  0244  3000               	movlw	0
  1084  0245  00A1               	movwf	pwm_set_duty_cycle@ui_duty_cycle+1
  1085  0246  120A  118A  22E7  120A  118A  	fcall	_pwm_set_duty_cycle
  1086                           
  1087                           ;main.c: 52: uart_putstr("~~Reset~~\n");
  1088  024B  3001               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1089  024C  120A  118A  22C7  120A  118A  	fcall	_uart_putstr
  1090  0251                     l91:	
  1091                           ;main.c: 54: while(1)
  1092                           
  1093                           
  1094                           ;main.c: 55: {
  1095  0251  2A51               	goto	l91
  1096  0252                     __end_of_main:	
  1097                           
  1098                           	psect	text1
  1099  02C7                     __ptext1:	
  1100 ;; *************** function _uart_putstr *****************
  1101 ;; Defined at:
  1102 ;;		line 127 in file "uart.c"
  1103 ;; Parameters:    Size  Location     Type
  1104 ;;  st_pt           1    wreg     PTR unsigned char 
  1105 ;;		 -> STR_2(11), STR_1(7), 
  1106 ;; Auto vars:     Size  Location     Type
  1107 ;;  st_pt           1    2[BANK0 ] PTR unsigned char 
  1108 ;;		 -> STR_2(11), STR_1(7), 
  1109 ;; Return value:  Size  Location     Type
  1110 ;;                  1    wreg      void 
  1111 ;; Registers used:
  1112 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1113 ;; Tracked objects:
  1114 ;;		On entry : 0/0
  1115 ;;		On exit  : 0/0
  1116 ;;		Unchanged: 0/0
  1117 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1118 ;;      Params:         0       0       0       0       0
  1119 ;;      Locals:         0       1       0       0       0
  1120 ;;      Temps:          0       1       0       0       0
  1121 ;;      Totals:         0       2       0       0       0
  1122 ;;Total ram usage:        2 bytes
  1123 ;; Hardware stack levels used:    1
  1124 ;; Hardware stack levels required when called:    4
  1125 ;; This function calls:
  1126 ;;		_uart_send
  1127 ;; This function is called by:
  1128 ;;		_main
  1129 ;; This function uses a non-reentrant model
  1130 ;;
  1131                           
  1132                           
  1133                           ;psect for function _uart_putstr
  1134  02C7                     _uart_putstr:	
  1135                           
  1136                           ;incstack = 0
  1137                           ; Regs used in _uart_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1138                           ;uart_putstr@st_pt stored from wreg
  1139  02C7  1283               	bcf	3,5	;RP0=0, select bank0
  1140  02C8  1303               	bcf	3,6	;RP1=0, select bank0
  1141  02C9  00A2               	movwf	uart_putstr@st_pt
  1142  02CA                     l1386:	
  1143                           ;uart.c: 129: while(*st_pt)
  1144                           
  1145  02CA  0822               	movf	uart_putstr@st_pt,w
  1146  02CB  0084               	movwf	4
  1147  02CC  120A  118A  2321  120A  118A  	fcall	stringdir
  1148  02D1  3A00               	xorlw	0
  1149  02D2  1903               	btfsc	3,2
  1150  02D3  0008               	return
  1151                           
  1152                           ;uart.c: 130: uart_send(*st_pt++);
  1153  02D4  0822               	movf	uart_putstr@st_pt,w
  1154  02D5  0084               	movwf	4
  1155  02D6  120A  118A  2321  120A  118A  	fcall	stringdir
  1156  02DB  120A  118A  238D  120A  118A  	fcall	_uart_send
  1157  02E0  3001               	movlw	1
  1158  02E1  1283               	bcf	3,5	;RP0=0, select bank0
  1159  02E2  1303               	bcf	3,6	;RP1=0, select bank0
  1160  02E3  00A1               	movwf	??_uart_putstr
  1161  02E4  0821               	movf	??_uart_putstr,w
  1162  02E5  07A2               	addwf	uart_putstr@st_pt,f
  1163  02E6  2ACA               	goto	l1386
  1164  02E7                     __end_of_uart_putstr:	
  1165                           
  1166                           	psect	text2
  1167  038D                     __ptext2:	
  1168 ;; *************** function _uart_send *****************
  1169 ;; Defined at:
  1170 ;;		line 69 in file "uart.c"
  1171 ;; Parameters:    Size  Location     Type
  1172 ;;  uc_data         1    wreg     unsigned char 
  1173 ;; Auto vars:     Size  Location     Type
  1174 ;;  uc_data         1    0[BANK0 ] unsigned char 
  1175 ;; Return value:  Size  Location     Type
  1176 ;;                  1    wreg      void 
  1177 ;; Registers used:
  1178 ;;		wreg
  1179 ;; Tracked objects:
  1180 ;;		On entry : 0/0
  1181 ;;		On exit  : 0/0
  1182 ;;		Unchanged: 0/0
  1183 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1184 ;;      Params:         0       0       0       0       0
  1185 ;;      Locals:         0       1       0       0       0
  1186 ;;      Temps:          0       0       0       0       0
  1187 ;;      Totals:         0       1       0       0       0
  1188 ;;Total ram usage:        1 bytes
  1189 ;; Hardware stack levels used:    1
  1190 ;; Hardware stack levels required when called:    3
  1191 ;; This function calls:
  1192 ;;		Nothing
  1193 ;; This function is called by:
  1194 ;;		_uart_putstr
  1195 ;; This function uses a non-reentrant model
  1196 ;;
  1197                           
  1198                           
  1199                           ;psect for function _uart_send
  1200  038D                     _uart_send:	
  1201                           
  1202                           ;incstack = 0
  1203                           ; Regs used in _uart_send: [wreg]
  1204                           ;uart_send@uc_data stored from wreg
  1205  038D  1283               	bcf	3,5	;RP0=0, select bank0
  1206  038E  1303               	bcf	3,6	;RP1=0, select bank0
  1207  038F  00A0               	movwf	uart_send@uc_data
  1208  0390                     l270:	
  1209                           ;uart.c: 72: while (!TXIF);
  1210                           
  1211  0390  1E0C               	btfss	12,4	;volatile
  1212  0391  2B90               	goto	l270
  1213                           
  1214                           ;uart.c: 75: TXREG = uc_data;
  1215  0392  0820               	movf	uart_send@uc_data,w
  1216  0393  0099               	movwf	25	;volatile
  1217  0394  0008               	return
  1218  0395                     __end_of_uart_send:	
  1219                           
  1220                           	psect	text3
  1221  0027                     __ptext3:	
  1222 ;; *************** function _uart_init *****************
  1223 ;; Defined at:
  1224 ;;		line 28 in file "uart.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  baudrate        4   15[BANK0 ] const long 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  x               2   31[BANK0 ] unsigned int 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      unsigned char 
  1231 ;; Registers used:
  1232 ;;		wreg, status,2, status,0, pclath, cstack
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       4       0       0       0
  1239 ;;      Locals:         0       2       0       0       0
  1240 ;;      Temps:          0      12       0       0       0
  1241 ;;      Totals:         0      18       0       0       0
  1242 ;;Total ram usage:       18 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    4
  1245 ;; This function calls:
  1246 ;;		___aldiv
  1247 ;; This function is called by:
  1248 ;;		_main
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _uart_init
  1254  0027                     _uart_init:	
  1255                           
  1256                           ;uart.c: 30: unsigned int x;
  1257                           ;uart.c: 31: x = (20000000 - baudrate*64)/(baudrate*64);
  1258                           
  1259                           ;incstack = 0
  1260                           ; Regs used in _uart_init: [wreg+status,2+status,0+pclath+cstack]
  1261  0027  1283               	bcf	3,5	;RP0=0, select bank0
  1262  0028  1303               	bcf	3,6	;RP1=0, select bank0
  1263  0029  082F               	movf	uart_init@baudrate,w
  1264  002A  00B3               	movwf	??_uart_init
  1265  002B  0830               	movf	uart_init@baudrate+1,w
  1266  002C  00B4               	movwf	??_uart_init+1
  1267  002D  0831               	movf	uart_init@baudrate+2,w
  1268  002E  00B5               	movwf	??_uart_init+2
  1269  002F  0832               	movf	uart_init@baudrate+3,w
  1270  0030  00B6               	movwf	??_uart_init+3
  1271  0031  3006               	movlw	6
  1272  0032                     u635:	
  1273  0032  1003               	clrc
  1274  0033  0DB3               	rlf	??_uart_init,f
  1275  0034  0DB4               	rlf	??_uart_init+1,f
  1276  0035  0DB5               	rlf	??_uart_init+2,f
  1277  0036  0DB6               	rlf	??_uart_init+3,f
  1278  0037  3EFF               	addlw	-1
  1279  0038  1D03               	skipz
  1280  0039  2832               	goto	u635
  1281  003A  0836               	movf	??_uart_init+3,w
  1282  003B  00A3               	movwf	___aldiv@divisor+3
  1283  003C  0835               	movf	??_uart_init+2,w
  1284  003D  00A2               	movwf	___aldiv@divisor+2
  1285  003E  0834               	movf	??_uart_init+1,w
  1286  003F  00A1               	movwf	___aldiv@divisor+1
  1287  0040  0833               	movf	??_uart_init,w
  1288  0041  00A0               	movwf	___aldiv@divisor
  1289  0042  3000               	movlw	0
  1290  0043  00B7               	movwf	??_uart_init+4
  1291  0044  302D               	movlw	45
  1292  0045  00B8               	movwf	??_uart_init+5
  1293  0046  3031               	movlw	49
  1294  0047  00B9               	movwf	??_uart_init+6
  1295  0048  3001               	movlw	1
  1296  0049  00BA               	movwf	??_uart_init+7
  1297  004A  082F               	movf	uart_init@baudrate,w
  1298  004B  00BB               	movwf	??_uart_init+8
  1299  004C  0830               	movf	uart_init@baudrate+1,w
  1300  004D  00BC               	movwf	??_uart_init+9
  1301  004E  0831               	movf	uart_init@baudrate+2,w
  1302  004F  00BD               	movwf	??_uart_init+10
  1303  0050  0832               	movf	uart_init@baudrate+3,w
  1304  0051  00BE               	movwf	??_uart_init+11
  1305  0052  3006               	movlw	6
  1306  0053                     u645:	
  1307  0053  1003               	clrc
  1308  0054  0DBB               	rlf	??_uart_init+8,f
  1309  0055  0DBC               	rlf	??_uart_init+9,f
  1310  0056  0DBD               	rlf	??_uart_init+10,f
  1311  0057  0DBE               	rlf	??_uart_init+11,f
  1312  0058  3EFF               	addlw	-1
  1313  0059  1D03               	skipz
  1314  005A  2853               	goto	u645
  1315  005B  09BB               	comf	??_uart_init+8,f
  1316  005C  09BC               	comf	??_uart_init+9,f
  1317  005D  09BD               	comf	??_uart_init+10,f
  1318  005E  09BE               	comf	??_uart_init+11,f
  1319  005F  0ABB               	incf	??_uart_init+8,f
  1320  0060  1903               	skipnz
  1321  0061  0ABC               	incf	??_uart_init+9,f
  1322  0062  1903               	skipnz
  1323  0063  0ABD               	incf	??_uart_init+10,f
  1324  0064  1903               	skipnz
  1325  0065  0ABE               	incf	??_uart_init+11,f
  1326  0066  083B               	movf	??_uart_init+8,w
  1327  0067  07B7               	addwf	??_uart_init+4,f
  1328  0068  083C               	movf	??_uart_init+9,w
  1329  0069  1803               	skipnc
  1330  006A  0F3C               	incfsz	??_uart_init+9,w
  1331  006B  286D               	goto	u650
  1332  006C  286E               	goto	u651
  1333  006D                     u650:	
  1334  006D  07B8               	addwf	??_uart_init+5,f
  1335  006E                     u651:	
  1336  006E  083D               	movf	??_uart_init+10,w
  1337  006F  1803               	skipnc
  1338  0070  0F3D               	incfsz	??_uart_init+10,w
  1339  0071  2873               	goto	u652
  1340  0072  2874               	goto	u653
  1341  0073                     u652:	
  1342  0073  07B9               	addwf	??_uart_init+6,f
  1343  0074                     u653:	
  1344  0074  083E               	movf	??_uart_init+11,w
  1345  0075  1803               	skipnc
  1346  0076  0A3E               	incf	??_uart_init+11,w
  1347  0077  07BA               	addwf	??_uart_init+7,f
  1348  0078  083A               	movf	??_uart_init+7,w
  1349  0079  00A7               	movwf	___aldiv@dividend+3
  1350  007A  0839               	movf	??_uart_init+6,w
  1351  007B  00A6               	movwf	___aldiv@dividend+2
  1352  007C  0838               	movf	??_uart_init+5,w
  1353  007D  00A5               	movwf	___aldiv@dividend+1
  1354  007E  0837               	movf	??_uart_init+4,w
  1355  007F  00A4               	movwf	___aldiv@dividend
  1356  0080  120A  118A  2117  120A  118A  	fcall	___aldiv
  1357  0085  1283               	bcf	3,5	;RP0=0, select bank0
  1358  0086  1303               	bcf	3,6	;RP1=0, select bank0
  1359  0087  0821               	movf	?___aldiv+1,w
  1360  0088  00C0               	movwf	uart_init@x+1
  1361  0089  0820               	movf	?___aldiv,w
  1362  008A  00BF               	movwf	uart_init@x
  1363                           
  1364                           ;uart.c: 32: if(x>255)
  1365  008B  3001               	movlw	1
  1366  008C  0240               	subwf	uart_init@x+1,w
  1367  008D  3000               	movlw	0
  1368  008E  1903               	skipnz
  1369  008F  023F               	subwf	uart_init@x,w
  1370  0090  1C03               	skipc
  1371  0091  28F7               	goto	l1148
  1372                           
  1373                           ;uart.c: 33: {
  1374                           ;uart.c: 34: x = (20000000 - baudrate*16)/(baudrate*16);
  1375  0092  082F               	movf	uart_init@baudrate,w
  1376  0093  00B3               	movwf	??_uart_init
  1377  0094  0830               	movf	uart_init@baudrate+1,w
  1378  0095  00B4               	movwf	??_uart_init+1
  1379  0096  0831               	movf	uart_init@baudrate+2,w
  1380  0097  00B5               	movwf	??_uart_init+2
  1381  0098  0832               	movf	uart_init@baudrate+3,w
  1382  0099  00B6               	movwf	??_uart_init+3
  1383  009A  3004               	movlw	4
  1384  009B                     u675:	
  1385  009B  1003               	clrc
  1386  009C  0DB3               	rlf	??_uart_init,f
  1387  009D  0DB4               	rlf	??_uart_init+1,f
  1388  009E  0DB5               	rlf	??_uart_init+2,f
  1389  009F  0DB6               	rlf	??_uart_init+3,f
  1390  00A0  3EFF               	addlw	-1
  1391  00A1  1D03               	skipz
  1392  00A2  289B               	goto	u675
  1393  00A3  0836               	movf	??_uart_init+3,w
  1394  00A4  00A3               	movwf	___aldiv@divisor+3
  1395  00A5  0835               	movf	??_uart_init+2,w
  1396  00A6  00A2               	movwf	___aldiv@divisor+2
  1397  00A7  0834               	movf	??_uart_init+1,w
  1398  00A8  00A1               	movwf	___aldiv@divisor+1
  1399  00A9  0833               	movf	??_uart_init,w
  1400  00AA  00A0               	movwf	___aldiv@divisor
  1401  00AB  3000               	movlw	0
  1402  00AC  00B7               	movwf	??_uart_init+4
  1403  00AD  302D               	movlw	45
  1404  00AE  00B8               	movwf	??_uart_init+5
  1405  00AF  3031               	movlw	49
  1406  00B0  00B9               	movwf	??_uart_init+6
  1407  00B1  3001               	movlw	1
  1408  00B2  00BA               	movwf	??_uart_init+7
  1409  00B3  082F               	movf	uart_init@baudrate,w
  1410  00B4  00BB               	movwf	??_uart_init+8
  1411  00B5  0830               	movf	uart_init@baudrate+1,w
  1412  00B6  00BC               	movwf	??_uart_init+9
  1413  00B7  0831               	movf	uart_init@baudrate+2,w
  1414  00B8  00BD               	movwf	??_uart_init+10
  1415  00B9  0832               	movf	uart_init@baudrate+3,w
  1416  00BA  00BE               	movwf	??_uart_init+11
  1417  00BB  3004               	movlw	4
  1418  00BC                     u685:	
  1419  00BC  1003               	clrc
  1420  00BD  0DBB               	rlf	??_uart_init+8,f
  1421  00BE  0DBC               	rlf	??_uart_init+9,f
  1422  00BF  0DBD               	rlf	??_uart_init+10,f
  1423  00C0  0DBE               	rlf	??_uart_init+11,f
  1424  00C1  3EFF               	addlw	-1
  1425  00C2  1D03               	skipz
  1426  00C3  28BC               	goto	u685
  1427  00C4  09BB               	comf	??_uart_init+8,f
  1428  00C5  09BC               	comf	??_uart_init+9,f
  1429  00C6  09BD               	comf	??_uart_init+10,f
  1430  00C7  09BE               	comf	??_uart_init+11,f
  1431  00C8  0ABB               	incf	??_uart_init+8,f
  1432  00C9  1903               	skipnz
  1433  00CA  0ABC               	incf	??_uart_init+9,f
  1434  00CB  1903               	skipnz
  1435  00CC  0ABD               	incf	??_uart_init+10,f
  1436  00CD  1903               	skipnz
  1437  00CE  0ABE               	incf	??_uart_init+11,f
  1438  00CF  083B               	movf	??_uart_init+8,w
  1439  00D0  07B7               	addwf	??_uart_init+4,f
  1440  00D1  083C               	movf	??_uart_init+9,w
  1441  00D2  1803               	skipnc
  1442  00D3  0F3C               	incfsz	??_uart_init+9,w
  1443  00D4  28D6               	goto	u690
  1444  00D5  28D7               	goto	u691
  1445  00D6                     u690:	
  1446  00D6  07B8               	addwf	??_uart_init+5,f
  1447  00D7                     u691:	
  1448  00D7  083D               	movf	??_uart_init+10,w
  1449  00D8  1803               	skipnc
  1450  00D9  0F3D               	incfsz	??_uart_init+10,w
  1451  00DA  28DC               	goto	u692
  1452  00DB  28DD               	goto	u693
  1453  00DC                     u692:	
  1454  00DC  07B9               	addwf	??_uart_init+6,f
  1455  00DD                     u693:	
  1456  00DD  083E               	movf	??_uart_init+11,w
  1457  00DE  1803               	skipnc
  1458  00DF  0A3E               	incf	??_uart_init+11,w
  1459  00E0  07BA               	addwf	??_uart_init+7,f
  1460  00E1  083A               	movf	??_uart_init+7,w
  1461  00E2  00A7               	movwf	___aldiv@dividend+3
  1462  00E3  0839               	movf	??_uart_init+6,w
  1463  00E4  00A6               	movwf	___aldiv@dividend+2
  1464  00E5  0838               	movf	??_uart_init+5,w
  1465  00E6  00A5               	movwf	___aldiv@dividend+1
  1466  00E7  0837               	movf	??_uart_init+4,w
  1467  00E8  00A4               	movwf	___aldiv@dividend
  1468  00E9  120A  118A  2117  120A  118A  	fcall	___aldiv
  1469  00EE  1283               	bcf	3,5	;RP0=0, select bank0
  1470  00EF  1303               	bcf	3,6	;RP1=0, select bank0
  1471  00F0  0821               	movf	?___aldiv+1,w
  1472  00F1  00C0               	movwf	uart_init@x+1
  1473  00F2  0820               	movf	?___aldiv,w
  1474  00F3  00BF               	movwf	uart_init@x
  1475                           
  1476                           ;uart.c: 35: BRGH = 1;
  1477  00F4  1683               	bsf	3,5	;RP0=1, select bank1
  1478  00F5  1303               	bcf	3,6	;RP1=0, select bank1
  1479  00F6  1518               	bsf	24,2	;volatile
  1480  00F7                     l1148:	
  1481                           
  1482                           ;uart.c: 36: }
  1483                           ;uart.c: 37: if(x<256)
  1484  00F7  3001               	movlw	1
  1485  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1486  00F9  0240               	subwf	uart_init@x+1,w
  1487  00FA  3000               	movlw	0
  1488  00FB  1903               	skipnz
  1489  00FC  023F               	subwf	uart_init@x,w
  1490  00FD  1803               	skipnc
  1491  00FE  0008               	return
  1492                           
  1493                           ;uart.c: 38: {
  1494                           ;uart.c: 39: RCIE = 1;
  1495  00FF  1683               	bsf	3,5	;RP0=1, select bank1
  1496  0100  1303               	bcf	3,6	;RP1=0, select bank1
  1497  0101  168C               	bsf	12,5	;volatile
  1498                           
  1499                           ;uart.c: 41: SPBRG = x;
  1500  0102  1283               	bcf	3,5	;RP0=0, select bank0
  1501  0103  1303               	bcf	3,6	;RP1=0, select bank0
  1502  0104  083F               	movf	uart_init@x,w
  1503  0105  1683               	bsf	3,5	;RP0=1, select bank1
  1504  0106  1303               	bcf	3,6	;RP1=0, select bank1
  1505  0107  0099               	movwf	25	;volatile
  1506                           
  1507                           ;uart.c: 42: SYNC = 0;
  1508  0108  1218               	bcf	24,4	;volatile
  1509                           
  1510                           ;uart.c: 43: SPEN = 1;
  1511  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1512  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1513  010B  1798               	bsf	24,7	;volatile
  1514                           
  1515                           ;uart.c: 44: TRISC7 = 1;
  1516  010C  1683               	bsf	3,5	;RP0=1, select bank1
  1517  010D  1303               	bcf	3,6	;RP1=0, select bank1
  1518  010E  1787               	bsf	7,7	;volatile
  1519                           
  1520                           ;uart.c: 45: TRISC6 = 1;
  1521  010F  1707               	bsf	7,6	;volatile
  1522                           
  1523                           ;uart.c: 46: CREN = 1;
  1524  0110  1283               	bcf	3,5	;RP0=0, select bank0
  1525  0111  1303               	bcf	3,6	;RP1=0, select bank0
  1526  0112  1618               	bsf	24,4	;volatile
  1527                           
  1528                           ;uart.c: 47: TXEN = 1;
  1529  0113  1683               	bsf	3,5	;RP0=1, select bank1
  1530  0114  1303               	bcf	3,6	;RP1=0, select bank1
  1531  0115  1698               	bsf	24,5	;volatile
  1532                           
  1533                           ;uart.c: 48: return 1;
  1534                           ;	Return value of _uart_init is never used
  1535  0116  0008               	return
  1536  0117                     __end_of_uart_init:	
  1537                           ;uart.c: 49: }
  1538                           ;uart.c: 50: return 0;
  1539                           ;	Return value of _uart_init is never used
  1540                           
  1541                           
  1542                           	psect	text4
  1543  0117                     __ptext4:	
  1544 ;; *************** function ___aldiv *****************
  1545 ;; Defined at:
  1546 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  divisor         4    0[BANK0 ] long 
  1549 ;;  dividend        4    4[BANK0 ] long 
  1550 ;; Auto vars:     Size  Location     Type
  1551 ;;  quotient        4   11[BANK0 ] long 
  1552 ;;  sign            1   10[BANK0 ] unsigned char 
  1553 ;;  counter         1    9[BANK0 ] unsigned char 
  1554 ;; Return value:  Size  Location     Type
  1555 ;;                  4    0[BANK0 ] long 
  1556 ;; Registers used:
  1557 ;;		wreg, status,2, status,0
  1558 ;; Tracked objects:
  1559 ;;		On entry : 0/0
  1560 ;;		On exit  : 0/0
  1561 ;;		Unchanged: 0/0
  1562 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1563 ;;      Params:         0       8       0       0       0
  1564 ;;      Locals:         0       6       0       0       0
  1565 ;;      Temps:          0       1       0       0       0
  1566 ;;      Totals:         0      15       0       0       0
  1567 ;;Total ram usage:       15 bytes
  1568 ;; Hardware stack levels used:    1
  1569 ;; Hardware stack levels required when called:    3
  1570 ;; This function calls:
  1571 ;;		Nothing
  1572 ;; This function is called by:
  1573 ;;		_uart_init
  1574 ;; This function uses a non-reentrant model
  1575 ;;
  1576                           
  1577                           
  1578                           ;psect for function ___aldiv
  1579  0117                     ___aldiv:	
  1580                           
  1581                           ;incstack = 0
  1582                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  1583  0117  1283               	bcf	3,5	;RP0=0, select bank0
  1584  0118  1303               	bcf	3,6	;RP1=0, select bank0
  1585  0119  01AA               	clrf	___aldiv@sign
  1586  011A  1FA3               	btfss	___aldiv@divisor+3,7
  1587  011B  2929               	goto	l425
  1588  011C  09A0               	comf	___aldiv@divisor,f
  1589  011D  09A1               	comf	___aldiv@divisor+1,f
  1590  011E  09A2               	comf	___aldiv@divisor+2,f
  1591  011F  09A3               	comf	___aldiv@divisor+3,f
  1592  0120  0AA0               	incf	___aldiv@divisor,f
  1593  0121  1903               	skipnz
  1594  0122  0AA1               	incf	___aldiv@divisor+1,f
  1595  0123  1903               	skipnz
  1596  0124  0AA2               	incf	___aldiv@divisor+2,f
  1597  0125  1903               	skipnz
  1598  0126  0AA3               	incf	___aldiv@divisor+3,f
  1599  0127  01AA               	clrf	___aldiv@sign
  1600  0128  0AAA               	incf	___aldiv@sign,f
  1601  0129                     l425:	
  1602  0129  1FA7               	btfss	___aldiv@dividend+3,7
  1603  012A  293A               	goto	l1086
  1604  012B  09A4               	comf	___aldiv@dividend,f
  1605  012C  09A5               	comf	___aldiv@dividend+1,f
  1606  012D  09A6               	comf	___aldiv@dividend+2,f
  1607  012E  09A7               	comf	___aldiv@dividend+3,f
  1608  012F  0AA4               	incf	___aldiv@dividend,f
  1609  0130  1903               	skipnz
  1610  0131  0AA5               	incf	___aldiv@dividend+1,f
  1611  0132  1903               	skipnz
  1612  0133  0AA6               	incf	___aldiv@dividend+2,f
  1613  0134  1903               	skipnz
  1614  0135  0AA7               	incf	___aldiv@dividend+3,f
  1615  0136  3001               	movlw	1
  1616  0137  00A8               	movwf	??___aldiv
  1617  0138  0828               	movf	??___aldiv,w
  1618  0139  06AA               	xorwf	___aldiv@sign,f
  1619  013A                     l1086:	
  1620  013A  3000               	movlw	0
  1621  013B  00AE               	movwf	___aldiv@quotient+3
  1622  013C  3000               	movlw	0
  1623  013D  00AD               	movwf	___aldiv@quotient+2
  1624  013E  3000               	movlw	0
  1625  013F  00AC               	movwf	___aldiv@quotient+1
  1626  0140  3000               	movlw	0
  1627  0141  00AB               	movwf	___aldiv@quotient
  1628  0142  0823               	movf	___aldiv@divisor+3,w
  1629  0143  0422               	iorwf	___aldiv@divisor+2,w
  1630  0144  0421               	iorwf	___aldiv@divisor+1,w
  1631  0145  0420               	iorwf	___aldiv@divisor,w
  1632  0146  1903               	skipnz
  1633  0147  298F               	goto	l1108
  1634  0148  01A9               	clrf	___aldiv@counter
  1635  0149  0AA9               	incf	___aldiv@counter,f
  1636  014A                     l1094:	
  1637  014A  1BA3               	btfsc	___aldiv@divisor+3,7
  1638  014B  295A               	goto	l1096
  1639  014C  3001               	movlw	1
  1640  014D  00A8               	movwf	??___aldiv
  1641  014E                     u545:	
  1642  014E  1003               	clrc
  1643  014F  0DA0               	rlf	___aldiv@divisor,f
  1644  0150  0DA1               	rlf	___aldiv@divisor+1,f
  1645  0151  0DA2               	rlf	___aldiv@divisor+2,f
  1646  0152  0DA3               	rlf	___aldiv@divisor+3,f
  1647  0153  0BA8               	decfsz	??___aldiv,f
  1648  0154  294E               	goto	u545
  1649  0155  3001               	movlw	1
  1650  0156  00A8               	movwf	??___aldiv
  1651  0157  0828               	movf	??___aldiv,w
  1652  0158  07A9               	addwf	___aldiv@counter,f
  1653  0159  294A               	goto	l1094
  1654  015A                     l1096:	
  1655  015A  3001               	movlw	1
  1656  015B  00A8               	movwf	??___aldiv
  1657  015C                     u565:	
  1658  015C  1003               	clrc
  1659  015D  0DAB               	rlf	___aldiv@quotient,f
  1660  015E  0DAC               	rlf	___aldiv@quotient+1,f
  1661  015F  0DAD               	rlf	___aldiv@quotient+2,f
  1662  0160  0DAE               	rlf	___aldiv@quotient+3,f
  1663  0161  0BA8               	decfsz	??___aldiv,f
  1664  0162  295C               	goto	u565
  1665  0163  0823               	movf	___aldiv@divisor+3,w
  1666  0164  0227               	subwf	___aldiv@dividend+3,w
  1667  0165  1D03               	skipz
  1668  0166  2971               	goto	u575
  1669  0167  0822               	movf	___aldiv@divisor+2,w
  1670  0168  0226               	subwf	___aldiv@dividend+2,w
  1671  0169  1D03               	skipz
  1672  016A  2971               	goto	u575
  1673  016B  0821               	movf	___aldiv@divisor+1,w
  1674  016C  0225               	subwf	___aldiv@dividend+1,w
  1675  016D  1D03               	skipz
  1676  016E  2971               	goto	u575
  1677  016F  0820               	movf	___aldiv@divisor,w
  1678  0170  0224               	subwf	___aldiv@dividend,w
  1679  0171                     u575:	
  1680  0171  1C03               	skipc
  1681  0172  2982               	goto	l1104
  1682  0173  0820               	movf	___aldiv@divisor,w
  1683  0174  02A4               	subwf	___aldiv@dividend,f
  1684  0175  0821               	movf	___aldiv@divisor+1,w
  1685  0176  1C03               	skipc
  1686  0177  0F21               	incfsz	___aldiv@divisor+1,w
  1687  0178  02A5               	subwf	___aldiv@dividend+1,f
  1688  0179  0822               	movf	___aldiv@divisor+2,w
  1689  017A  1C03               	skipc
  1690  017B  0F22               	incfsz	___aldiv@divisor+2,w
  1691  017C  02A6               	subwf	___aldiv@dividend+2,f
  1692  017D  0823               	movf	___aldiv@divisor+3,w
  1693  017E  1C03               	skipc
  1694  017F  0F23               	incfsz	___aldiv@divisor+3,w
  1695  0180  02A7               	subwf	___aldiv@dividend+3,f
  1696  0181  142B               	bsf	___aldiv@quotient,0
  1697  0182                     l1104:	
  1698  0182  3001               	movlw	1
  1699  0183                     u585:	
  1700  0183  1003               	clrc
  1701  0184  0CA3               	rrf	___aldiv@divisor+3,f
  1702  0185  0CA2               	rrf	___aldiv@divisor+2,f
  1703  0186  0CA1               	rrf	___aldiv@divisor+1,f
  1704  0187  0CA0               	rrf	___aldiv@divisor,f
  1705  0188  3EFF               	addlw	-1
  1706  0189  1D03               	skipz
  1707  018A  2983               	goto	u585
  1708  018B  3001               	movlw	1
  1709  018C  02A9               	subwf	___aldiv@counter,f
  1710  018D  1D03               	btfss	3,2
  1711  018E  295A               	goto	l1096
  1712  018F                     l1108:	
  1713  018F  082A               	movf	___aldiv@sign,w
  1714  0190  1903               	btfsc	3,2
  1715  0191  299D               	goto	l1112
  1716  0192  09AB               	comf	___aldiv@quotient,f
  1717  0193  09AC               	comf	___aldiv@quotient+1,f
  1718  0194  09AD               	comf	___aldiv@quotient+2,f
  1719  0195  09AE               	comf	___aldiv@quotient+3,f
  1720  0196  0AAB               	incf	___aldiv@quotient,f
  1721  0197  1903               	skipnz
  1722  0198  0AAC               	incf	___aldiv@quotient+1,f
  1723  0199  1903               	skipnz
  1724  019A  0AAD               	incf	___aldiv@quotient+2,f
  1725  019B  1903               	skipnz
  1726  019C  0AAE               	incf	___aldiv@quotient+3,f
  1727  019D                     l1112:	
  1728  019D  082E               	movf	___aldiv@quotient+3,w
  1729  019E  00A3               	movwf	?___aldiv+3
  1730  019F  082D               	movf	___aldiv@quotient+2,w
  1731  01A0  00A2               	movwf	?___aldiv+2
  1732  01A1  082C               	movf	___aldiv@quotient+1,w
  1733  01A2  00A1               	movwf	?___aldiv+1
  1734  01A3  082B               	movf	___aldiv@quotient,w
  1735  01A4  00A0               	movwf	?___aldiv
  1736  01A5  0008               	return
  1737  01A6                     __end_of___aldiv:	
  1738                           
  1739                           	psect	text5
  1740  02E7                     __ptext5:	
  1741 ;; *************** function _pwm_set_duty_cycle *****************
  1742 ;; Defined at:
  1743 ;;		line 64 in file "pwm.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  ui_duty_cycl    2    0[BANK0 ] unsigned int 
  1746 ;; Auto vars:     Size  Location     Type
  1747 ;;		None
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      void 
  1750 ;; Registers used:
  1751 ;;		wreg, status,2, status,0
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1757 ;;      Params:         0       2       0       0       0
  1758 ;;      Locals:         0       0       0       0       0
  1759 ;;      Temps:          0       2       0       0       0
  1760 ;;      Totals:         0       4       0       0       0
  1761 ;;Total ram usage:        4 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    3
  1764 ;; This function calls:
  1765 ;;		Nothing
  1766 ;; This function is called by:
  1767 ;;		_main
  1768 ;; This function uses a non-reentrant model
  1769 ;;
  1770                           
  1771                           
  1772                           ;psect for function _pwm_set_duty_cycle
  1773  02E7                     _pwm_set_duty_cycle:	
  1774                           
  1775                           ;pwm.c: 66: CCP2CON = (CCP2CON & 0b00001111) | (0b00110000 & ((unsigned char)(ui_duty_cy
      +                          cle << 4)));
  1776                           
  1777                           ;incstack = 0
  1778                           ; Regs used in _pwm_set_duty_cycle: [wreg+status,2+status,0]
  1779  02E7  1283               	bcf	3,5	;RP0=0, select bank0
  1780  02E8  1303               	bcf	3,6	;RP1=0, select bank0
  1781  02E9  0820               	movf	pwm_set_duty_cycle@ui_duty_cycle,w
  1782  02EA  00A2               	movwf	??_pwm_set_duty_cycle
  1783  02EB  3004               	movlw	4
  1784  02EC                     u715:	
  1785  02EC  1003               	clrc
  1786  02ED  0DA2               	rlf	??_pwm_set_duty_cycle,f
  1787  02EE  3EFF               	addlw	-1
  1788  02EF  1D03               	skipz
  1789  02F0  2AEC               	goto	u715
  1790  02F1  3030               	movlw	48
  1791  02F2  0522               	andwf	??_pwm_set_duty_cycle,w
  1792  02F3  00A3               	movwf	??_pwm_set_duty_cycle+1
  1793  02F4  081D               	movf	29,w	;volatile
  1794  02F5  390F               	andlw	15
  1795  02F6  0423               	iorwf	??_pwm_set_duty_cycle+1,w
  1796  02F7  009D               	movwf	29	;volatile
  1797                           
  1798                           ;pwm.c: 67: CCPR2L = ui_duty_cycle >> 2;
  1799  02F8  0821               	movf	pwm_set_duty_cycle@ui_duty_cycle+1,w
  1800  02F9  00A3               	movwf	??_pwm_set_duty_cycle+1
  1801  02FA  0820               	movf	pwm_set_duty_cycle@ui_duty_cycle,w
  1802  02FB  00A2               	movwf	??_pwm_set_duty_cycle
  1803  02FC  1003               	clrc
  1804  02FD  0CA3               	rrf	??_pwm_set_duty_cycle+1,f
  1805  02FE  0CA2               	rrf	??_pwm_set_duty_cycle,f
  1806  02FF  1003               	clrc
  1807  0300  0CA3               	rrf	??_pwm_set_duty_cycle+1,f
  1808  0301  0CA2               	rrf	??_pwm_set_duty_cycle,f
  1809  0302  0822               	movf	??_pwm_set_duty_cycle,w
  1810  0303  009B               	movwf	27	;volatile
  1811  0304  0008               	return
  1812  0305                     __end_of_pwm_set_duty_cycle:	
  1813                           
  1814                           	psect	text6
  1815  0339                     __ptext6:	
  1816 ;; *************** function _pwm_initialize *****************
  1817 ;; Defined at:
  1818 ;;		line 29 in file "pwm.c"
  1819 ;; Parameters:    Size  Location     Type
  1820 ;;		None
  1821 ;; Auto vars:     Size  Location     Type
  1822 ;;		None
  1823 ;; Return value:  Size  Location     Type
  1824 ;;                  1    wreg      void 
  1825 ;; Registers used:
  1826 ;;		wreg, status,2
  1827 ;; Tracked objects:
  1828 ;;		On entry : 0/0
  1829 ;;		On exit  : 0/0
  1830 ;;		Unchanged: 0/0
  1831 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1832 ;;      Params:         0       0       0       0       0
  1833 ;;      Locals:         0       0       0       0       0
  1834 ;;      Temps:          0       0       0       0       0
  1835 ;;      Totals:         0       0       0       0       0
  1836 ;;Total ram usage:        0 bytes
  1837 ;; Hardware stack levels used:    1
  1838 ;; Hardware stack levels required when called:    3
  1839 ;; This function calls:
  1840 ;;		Nothing
  1841 ;; This function is called by:
  1842 ;;		_main
  1843 ;; This function uses a non-reentrant model
  1844 ;;
  1845                           
  1846                           
  1847                           ;psect for function _pwm_initialize
  1848  0339                     _pwm_initialize:	
  1849                           
  1850                           ;pwm.c: 33: PR2 = 0xFF;
  1851                           
  1852                           ;incstack = 0
  1853                           ; Regs used in _pwm_initialize: [wreg+status,2]
  1854  0339  30FF               	movlw	255
  1855  033A  1683               	bsf	3,5	;RP0=1, select bank1
  1856  033B  1303               	bcf	3,6	;RP1=0, select bank1
  1857  033C  0092               	movwf	18	;volatile
  1858                           
  1859                           ;pwm.c: 35: T2CKPS1 = 1;
  1860  033D  1283               	bcf	3,5	;RP0=0, select bank0
  1861  033E  1303               	bcf	3,6	;RP1=0, select bank0
  1862  033F  1492               	bsf	18,1	;volatile
  1863                           
  1864                           ;pwm.c: 36: T2CKPS0 = 1;
  1865  0340  1412               	bsf	18,0	;volatile
  1866                           
  1867                           ;pwm.c: 38: CCPR2L = 0;
  1868  0341  019B               	clrf	27	;volatile
  1869                           
  1870                           ;pwm.c: 39: TMR2ON = 0;
  1871  0342  1112               	bcf	18,2	;volatile
  1872                           
  1873                           ;pwm.c: 41: CCP2M3 = 1;
  1874  0343  159D               	bsf	29,3	;volatile
  1875                           
  1876                           ;pwm.c: 42: CCP2M2 = 1;
  1877  0344  151D               	bsf	29,2	;volatile
  1878                           
  1879                           ;pwm.c: 43: CCP2M1 = 0;
  1880  0345  109D               	bcf	29,1	;volatile
  1881                           
  1882                           ;pwm.c: 44: CCP2M0 = 0;
  1883  0346  101D               	bcf	29,0	;volatile
  1884                           
  1885                           ;pwm.c: 46: CCPR2L = 0x00;
  1886  0347  019B               	clrf	27	;volatile
  1887  0348  0008               	return
  1888  0349                     __end_of_pwm_initialize:	
  1889                           
  1890                           	psect	text7
  1891  028F                     __ptext7:	
  1892 ;; *************** function _lcd_initialize *****************
  1893 ;; Defined at:
  1894 ;;		line 100 in file "lcd.c"
  1895 ;; Parameters:    Size  Location     Type
  1896 ;;		None
  1897 ;; Auto vars:     Size  Location     Type
  1898 ;;		None
  1899 ;; Return value:  Size  Location     Type
  1900 ;;                  1    wreg      void 
  1901 ;; Registers used:
  1902 ;;		wreg, status,2, status,0, pclath, cstack
  1903 ;; Tracked objects:
  1904 ;;		On entry : 0/0
  1905 ;;		On exit  : 0/0
  1906 ;;		Unchanged: 0/0
  1907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1908 ;;      Params:         0       0       0       0       0
  1909 ;;      Locals:         0       0       0       0       0
  1910 ;;      Temps:          0       2       0       0       0
  1911 ;;      Totals:         0       2       0       0       0
  1912 ;;Total ram usage:        2 bytes
  1913 ;; Hardware stack levels used:    1
  1914 ;; Hardware stack levels required when called:    6
  1915 ;; This function calls:
  1916 ;;		_lcd_clear
  1917 ;;		_send_lcd_data
  1918 ;;		_set_lcd_e
  1919 ;; This function is called by:
  1920 ;;		_main
  1921 ;; This function uses a non-reentrant model
  1922 ;;
  1923                           
  1924                           
  1925                           ;psect for function _lcd_initialize
  1926  028F                     _lcd_initialize:	
  1927                           
  1928                           ;lcd.c: 104: set_lcd_e(1);
  1929                           
  1930                           ;incstack = 0
  1931                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1932  028F  3001               	movlw	1
  1933  0290  120A  118A  2365  120A  118A  	fcall	_set_lcd_e
  1934                           
  1935                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1936  0295  3062               	movlw	98
  1937  0296  1283               	bcf	3,5	;RP0=0, select bank0
  1938  0297  1303               	bcf	3,6	;RP1=0, select bank0
  1939  0298  00A6               	movwf	??_lcd_initialize+1
  1940  0299  3065               	movlw	101
  1941  029A  00A5               	movwf	??_lcd_initialize
  1942  029B                     u1147:	
  1943  029B  0BA5               	decfsz	??_lcd_initialize,f
  1944  029C  2A9B               	goto	u1147
  1945  029D  0BA6               	decfsz	??_lcd_initialize+1,f
  1946  029E  2A9B               	goto	u1147
  1947                           
  1948                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1949  029F  3038               	movlw	56
  1950  02A0  1283               	bcf	3,5	;RP0=0, select bank0
  1951  02A1  1303               	bcf	3,6	;RP1=0, select bank0
  1952  02A2  00A5               	movwf	??_lcd_initialize
  1953  02A3  0825               	movf	??_lcd_initialize,w
  1954  02A4  00A1               	movwf	send_lcd_data@uc_data
  1955  02A5  3000               	movlw	0
  1956  02A6  120A  118A  2252  120A  118A  	fcall	_send_lcd_data
  1957                           
  1958                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1959  02AB  3006               	movlw	6
  1960  02AC  1283               	bcf	3,5	;RP0=0, select bank0
  1961  02AD  1303               	bcf	3,6	;RP1=0, select bank0
  1962  02AE  00A5               	movwf	??_lcd_initialize
  1963  02AF  0825               	movf	??_lcd_initialize,w
  1964  02B0  00A1               	movwf	send_lcd_data@uc_data
  1965  02B1  3000               	movlw	0
  1966  02B2  120A  118A  2252  120A  118A  	fcall	_send_lcd_data
  1967                           
  1968                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1969  02B7  300C               	movlw	12
  1970  02B8  1283               	bcf	3,5	;RP0=0, select bank0
  1971  02B9  1303               	bcf	3,6	;RP1=0, select bank0
  1972  02BA  00A5               	movwf	??_lcd_initialize
  1973  02BB  0825               	movf	??_lcd_initialize,w
  1974  02BC  00A1               	movwf	send_lcd_data@uc_data
  1975  02BD  3000               	movlw	0
  1976  02BE  120A  118A  2252  120A  118A  	fcall	_send_lcd_data
  1977                           
  1978                           ;lcd.c: 118: lcd_clear();
  1979  02C3  120A  118A  237C   	fcall	_lcd_clear
  1980  02C6  0008               	return
  1981  02C7                     __end_of_lcd_initialize:	
  1982                           
  1983                           	psect	text8
  1984  037C                     __ptext8:	
  1985 ;; *************** function _lcd_clear *****************
  1986 ;; Defined at:
  1987 ;;		line 136 in file "lcd.c"
  1988 ;; Parameters:    Size  Location     Type
  1989 ;;		None
  1990 ;; Auto vars:     Size  Location     Type
  1991 ;;		None
  1992 ;; Return value:  Size  Location     Type
  1993 ;;                  1    wreg      void 
  1994 ;; Registers used:
  1995 ;;		wreg, status,2, status,0, pclath, cstack
  1996 ;; Tracked objects:
  1997 ;;		On entry : 0/0
  1998 ;;		On exit  : 0/0
  1999 ;;		Unchanged: 0/0
  2000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2001 ;;      Params:         0       0       0       0       0
  2002 ;;      Locals:         0       0       0       0       0
  2003 ;;      Temps:          0       0       0       0       0
  2004 ;;      Totals:         0       0       0       0       0
  2005 ;;Total ram usage:        0 bytes
  2006 ;; Hardware stack levels used:    1
  2007 ;; Hardware stack levels required when called:    5
  2008 ;; This function calls:
  2009 ;;		_send_lcd_data
  2010 ;; This function is called by:
  2011 ;;		_lcd_initialize
  2012 ;; This function uses a non-reentrant model
  2013 ;;
  2014                           
  2015                           
  2016                           ;psect for function _lcd_clear
  2017  037C                     _lcd_clear:	
  2018                           
  2019                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  2020                           
  2021                           ;incstack = 0
  2022                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2023  037C  1283               	bcf	3,5	;RP0=0, select bank0
  2024  037D  1303               	bcf	3,6	;RP1=0, select bank0
  2025  037E  01A1               	clrf	send_lcd_data@uc_data
  2026  037F  0AA1               	incf	send_lcd_data@uc_data,f
  2027  0380  3000               	movlw	0
  2028  0381  120A  118A  2252   	fcall	_send_lcd_data
  2029  0384  0008               	return
  2030  0385                     __end_of_lcd_clear:	
  2031                           
  2032                           	psect	text9
  2033  0252                     __ptext9:	
  2034 ;; *************** function _send_lcd_data *****************
  2035 ;; Defined at:
  2036 ;;		line 308 in file "lcd.c"
  2037 ;; Parameters:    Size  Location     Type
  2038 ;;  b_rs            1    wreg     unsigned char 
  2039 ;;  uc_data         1    1[BANK0 ] unsigned char 
  2040 ;; Auto vars:     Size  Location     Type
  2041 ;;  b_rs            1    4[BANK0 ] unsigned char 
  2042 ;; Return value:  Size  Location     Type
  2043 ;;                  1    wreg      void 
  2044 ;; Registers used:
  2045 ;;		wreg, status,2, status,0, pclath, cstack
  2046 ;; Tracked objects:
  2047 ;;		On entry : 0/0
  2048 ;;		On exit  : 0/0
  2049 ;;		Unchanged: 0/0
  2050 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2051 ;;      Params:         0       1       0       0       0
  2052 ;;      Locals:         0       1       0       0       0
  2053 ;;      Temps:          0       2       0       0       0
  2054 ;;      Totals:         0       4       0       0       0
  2055 ;;Total ram usage:        4 bytes
  2056 ;; Hardware stack levels used:    1
  2057 ;; Hardware stack levels required when called:    4
  2058 ;; This function calls:
  2059 ;;		_set_lcd_data
  2060 ;;		_set_lcd_e
  2061 ;;		_set_lcd_rs
  2062 ;; This function is called by:
  2063 ;;		_lcd_initialize
  2064 ;;		_lcd_clear
  2065 ;;		_lcd_home
  2066 ;;		_lcd_2ndline
  2067 ;;		_lcd_goto
  2068 ;;		_lcd_putchar
  2069 ;; This function uses a non-reentrant model
  2070 ;;
  2071                           
  2072                           
  2073                           ;psect for function _send_lcd_data
  2074  0252                     _send_lcd_data:	
  2075                           
  2076                           ;incstack = 0
  2077                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2078                           ;send_lcd_data@b_rs stored from wreg
  2079  0252  1283               	bcf	3,5	;RP0=0, select bank0
  2080  0253  1303               	bcf	3,6	;RP1=0, select bank0
  2081  0254  00A4               	movwf	send_lcd_data@b_rs
  2082                           
  2083                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2084  0255  0824               	movf	send_lcd_data@b_rs,w
  2085  0256  120A  118A  2358  120A  118A  	fcall	_set_lcd_rs
  2086                           
  2087                           ;lcd.c: 312: set_lcd_data(uc_data);
  2088  025B  1283               	bcf	3,5	;RP0=0, select bank0
  2089  025C  1303               	bcf	3,6	;RP1=0, select bank0
  2090  025D  0821               	movf	send_lcd_data@uc_data,w
  2091  025E  120A  118A  239D  120A  118A  	fcall	_set_lcd_data
  2092                           
  2093                           ;lcd.c: 315: set_lcd_e(1);
  2094  0263  3001               	movlw	1
  2095  0264  120A  118A  2365  120A  118A  	fcall	_set_lcd_e
  2096                           
  2097                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2098  0269  3007               	movlw	7
  2099  026A  1283               	bcf	3,5	;RP0=0, select bank0
  2100  026B  1303               	bcf	3,6	;RP1=0, select bank0
  2101  026C  00A3               	movwf	??_send_lcd_data+1
  2102  026D  307C               	movlw	124
  2103  026E  00A2               	movwf	??_send_lcd_data
  2104  026F                     u1157:	
  2105  026F  0BA2               	decfsz	??_send_lcd_data,f
  2106  0270  2A6F               	goto	u1157
  2107  0271  0BA3               	decfsz	??_send_lcd_data+1,f
  2108  0272  2A6F               	goto	u1157
  2109  0273  0000               	nop
  2110                           
  2111                           ;lcd.c: 317: set_lcd_e(0);
  2112  0274  3000               	movlw	0
  2113  0275  120A  118A  2365  120A  118A  	fcall	_set_lcd_e
  2114                           
  2115                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2116  027A  300D               	movlw	13
  2117  027B  1283               	bcf	3,5	;RP0=0, select bank0
  2118  027C  1303               	bcf	3,6	;RP1=0, select bank0
  2119  027D  00A3               	movwf	??_send_lcd_data+1
  2120  027E  30FB               	movlw	251
  2121  027F  00A2               	movwf	??_send_lcd_data
  2122  0280                     u1167:	
  2123  0280  0BA2               	decfsz	??_send_lcd_data,f
  2124  0281  2A80               	goto	u1167
  2125  0282  0BA3               	decfsz	??_send_lcd_data+1,f
  2126  0283  2A80               	goto	u1167
  2127                           
  2128                           ;lcd.c: 321: set_lcd_rs(0);
  2129  0284  3000               	movlw	0
  2130  0285  120A  118A  2358  120A  118A  	fcall	_set_lcd_rs
  2131                           
  2132                           ;lcd.c: 322: set_lcd_data(0);
  2133  028A  3000               	movlw	0
  2134  028B  120A  118A  239D   	fcall	_set_lcd_data
  2135  028E  0008               	return
  2136  028F                     __end_of_send_lcd_data:	
  2137                           
  2138                           	psect	text10
  2139  0358                     __ptext10:	
  2140 ;; *************** function _set_lcd_rs *****************
  2141 ;; Defined at:
  2142 ;;		line 360 in file "lcd.c"
  2143 ;; Parameters:    Size  Location     Type
  2144 ;;  b_output        1    wreg     unsigned char 
  2145 ;; Auto vars:     Size  Location     Type
  2146 ;;  b_output        1    0[BANK0 ] unsigned char 
  2147 ;; Return value:  Size  Location     Type
  2148 ;;                  1    wreg      void 
  2149 ;; Registers used:
  2150 ;;		wreg
  2151 ;; Tracked objects:
  2152 ;;		On entry : 0/0
  2153 ;;		On exit  : 0/0
  2154 ;;		Unchanged: 0/0
  2155 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2156 ;;      Params:         0       0       0       0       0
  2157 ;;      Locals:         0       1       0       0       0
  2158 ;;      Temps:          0       0       0       0       0
  2159 ;;      Totals:         0       1       0       0       0
  2160 ;;Total ram usage:        1 bytes
  2161 ;; Hardware stack levels used:    1
  2162 ;; Hardware stack levels required when called:    3
  2163 ;; This function calls:
  2164 ;;		Nothing
  2165 ;; This function is called by:
  2166 ;;		_send_lcd_data
  2167 ;; This function uses a non-reentrant model
  2168 ;;
  2169                           
  2170                           
  2171                           ;psect for function _set_lcd_rs
  2172  0358                     _set_lcd_rs:	
  2173                           
  2174                           ;incstack = 0
  2175                           ; Regs used in _set_lcd_rs: [wreg]
  2176                           ;set_lcd_rs@b_output stored from wreg
  2177  0358  1283               	bcf	3,5	;RP0=0, select bank0
  2178  0359  1303               	bcf	3,6	;RP1=0, select bank0
  2179  035A  00A0               	movwf	set_lcd_rs@b_output
  2180                           
  2181                           ;lcd.c: 362: RB4 = b_output;
  2182  035B  1C20               	btfss	set_lcd_rs@b_output,0
  2183  035C  2B61               	goto	u1030
  2184  035D  1283               	bcf	3,5	;RP0=0, select bank0
  2185  035E  1303               	bcf	3,6	;RP1=0, select bank0
  2186  035F  1606               	bsf	6,4	;volatile
  2187  0360  0008               	return
  2188  0361                     u1030:	
  2189  0361  1283               	bcf	3,5	;RP0=0, select bank0
  2190  0362  1303               	bcf	3,6	;RP1=0, select bank0
  2191  0363  1206               	bcf	6,4	;volatile
  2192  0364  0008               	return
  2193  0365                     __end_of_set_lcd_rs:	
  2194                           
  2195                           	psect	text11
  2196  0365                     __ptext11:	
  2197 ;; *************** function _set_lcd_e *****************
  2198 ;; Defined at:
  2199 ;;		line 340 in file "lcd.c"
  2200 ;; Parameters:    Size  Location     Type
  2201 ;;  b_output        1    wreg     unsigned char 
  2202 ;; Auto vars:     Size  Location     Type
  2203 ;;  b_output        1    0[BANK0 ] unsigned char 
  2204 ;; Return value:  Size  Location     Type
  2205 ;;                  1    wreg      void 
  2206 ;; Registers used:
  2207 ;;		wreg
  2208 ;; Tracked objects:
  2209 ;;		On entry : 0/0
  2210 ;;		On exit  : 0/0
  2211 ;;		Unchanged: 0/0
  2212 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2213 ;;      Params:         0       0       0       0       0
  2214 ;;      Locals:         0       1       0       0       0
  2215 ;;      Temps:          0       0       0       0       0
  2216 ;;      Totals:         0       1       0       0       0
  2217 ;;Total ram usage:        1 bytes
  2218 ;; Hardware stack levels used:    1
  2219 ;; Hardware stack levels required when called:    3
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_lcd_initialize
  2224 ;;		_send_lcd_data
  2225 ;; This function uses a non-reentrant model
  2226 ;;
  2227                           
  2228                           
  2229                           ;psect for function _set_lcd_e
  2230  0365                     _set_lcd_e:	
  2231                           
  2232                           ;incstack = 0
  2233                           ; Regs used in _set_lcd_e: [wreg]
  2234                           ;set_lcd_e@b_output stored from wreg
  2235  0365  1283               	bcf	3,5	;RP0=0, select bank0
  2236  0366  1303               	bcf	3,6	;RP1=0, select bank0
  2237  0367  00A0               	movwf	set_lcd_e@b_output
  2238                           
  2239                           ;lcd.c: 342: RB5 = b_output;
  2240  0368  1C20               	btfss	set_lcd_e@b_output,0
  2241  0369  2B6E               	goto	u1010
  2242  036A  1283               	bcf	3,5	;RP0=0, select bank0
  2243  036B  1303               	bcf	3,6	;RP1=0, select bank0
  2244  036C  1686               	bsf	6,5	;volatile
  2245  036D  0008               	return
  2246  036E                     u1010:	
  2247  036E  1283               	bcf	3,5	;RP0=0, select bank0
  2248  036F  1303               	bcf	3,6	;RP1=0, select bank0
  2249  0370  1286               	bcf	6,5	;volatile
  2250  0371  0008               	return
  2251  0372                     __end_of_set_lcd_e:	
  2252                           
  2253                           	psect	text12
  2254  039D                     __ptext12:	
  2255 ;; *************** function _set_lcd_data *****************
  2256 ;; Defined at:
  2257 ;;		line 380 in file "lcd.c"
  2258 ;; Parameters:    Size  Location     Type
  2259 ;;  uc_data         1    wreg     unsigned char 
  2260 ;; Auto vars:     Size  Location     Type
  2261 ;;  uc_data         1    0[BANK0 ] unsigned char 
  2262 ;; Return value:  Size  Location     Type
  2263 ;;                  1    wreg      void 
  2264 ;; Registers used:
  2265 ;;		wreg
  2266 ;; Tracked objects:
  2267 ;;		On entry : 0/0
  2268 ;;		On exit  : 0/0
  2269 ;;		Unchanged: 0/0
  2270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2271 ;;      Params:         0       0       0       0       0
  2272 ;;      Locals:         0       1       0       0       0
  2273 ;;      Temps:          0       0       0       0       0
  2274 ;;      Totals:         0       1       0       0       0
  2275 ;;Total ram usage:        1 bytes
  2276 ;; Hardware stack levels used:    1
  2277 ;; Hardware stack levels required when called:    3
  2278 ;; This function calls:
  2279 ;;		Nothing
  2280 ;; This function is called by:
  2281 ;;		_send_lcd_data
  2282 ;; This function uses a non-reentrant model
  2283 ;;
  2284                           
  2285                           
  2286                           ;psect for function _set_lcd_data
  2287  039D                     _set_lcd_data:	
  2288                           
  2289                           ;incstack = 0
  2290                           ; Regs used in _set_lcd_data: [wreg]
  2291                           ;set_lcd_data@uc_data stored from wreg
  2292  039D  1283               	bcf	3,5	;RP0=0, select bank0
  2293  039E  1303               	bcf	3,6	;RP1=0, select bank0
  2294  039F  00A0               	movwf	set_lcd_data@uc_data
  2295                           
  2296                           ;lcd.c: 382: PORTD = uc_data;
  2297  03A0  0820               	movf	set_lcd_data@uc_data,w
  2298  03A1  0088               	movwf	8	;volatile
  2299  03A2  0008               	return
  2300  03A3                     __end_of_set_lcd_data:	
  2301                           
  2302                           	psect	text13
  2303  0349                     __ptext13:	
  2304 ;; *************** function _adc_initialize *****************
  2305 ;; Defined at:
  2306 ;;		line 28 in file "adc.c"
  2307 ;; Parameters:    Size  Location     Type
  2308 ;;		None
  2309 ;; Auto vars:     Size  Location     Type
  2310 ;;		None
  2311 ;; Return value:  Size  Location     Type
  2312 ;;                  1    wreg      void 
  2313 ;; Registers used:
  2314 ;;		None
  2315 ;; Tracked objects:
  2316 ;;		On entry : 0/0
  2317 ;;		On exit  : 0/0
  2318 ;;		Unchanged: 0/0
  2319 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2320 ;;      Params:         0       0       0       0       0
  2321 ;;      Locals:         0       0       0       0       0
  2322 ;;      Temps:          0       0       0       0       0
  2323 ;;      Totals:         0       0       0       0       0
  2324 ;;Total ram usage:        0 bytes
  2325 ;; Hardware stack levels used:    1
  2326 ;; Hardware stack levels required when called:    3
  2327 ;; This function calls:
  2328 ;;		Nothing
  2329 ;; This function is called by:
  2330 ;;		_main
  2331 ;; This function uses a non-reentrant model
  2332 ;;
  2333                           
  2334                           
  2335                           ;psect for function _adc_initialize
  2336  0349                     _adc_initialize:	
  2337                           
  2338                           ;adc.c: 31: ADCS1 = 1;
  2339                           
  2340                           ;incstack = 0
  2341                           ; Regs used in _adc_initialize: []
  2342  0349  1283               	bcf	3,5	;RP0=0, select bank0
  2343  034A  1303               	bcf	3,6	;RP1=0, select bank0
  2344  034B  179F               	bsf	31,7	;volatile
  2345                           
  2346                           ;adc.c: 32: ADCS0 = 0;
  2347  034C  131F               	bcf	31,6	;volatile
  2348                           
  2349                           ;adc.c: 39: ADFM = 1;
  2350  034D  1683               	bsf	3,5	;RP0=1, select bank1
  2351  034E  1303               	bcf	3,6	;RP1=0, select bank1
  2352  034F  179F               	bsf	31,7	;volatile
  2353                           
  2354                           ;adc.c: 41: PCFG3 = 0;
  2355  0350  119F               	bcf	31,3	;volatile
  2356                           
  2357                           ;adc.c: 42: PCFG2 = 0;
  2358  0351  111F               	bcf	31,2	;volatile
  2359                           
  2360                           ;adc.c: 43: PCFG1 = 0;
  2361  0352  109F               	bcf	31,1	;volatile
  2362                           
  2363                           ;adc.c: 44: PCFG0 = 0;
  2364  0353  101F               	bcf	31,0	;volatile
  2365                           
  2366                           ;adc.c: 47: ADON = 0;
  2367  0354  1283               	bcf	3,5	;RP0=0, select bank0
  2368  0355  1303               	bcf	3,6	;RP1=0, select bank0
  2369  0356  101F               	bcf	31,0	;volatile
  2370  0357  0008               	return
  2371  0358                     __end_of_adc_initialize:	
  2372                           
  2373                           	psect	text14
  2374  03A3                     __ptext14:	
  2375 ;; *************** function _InitApp *****************
  2376 ;; Defined at:
  2377 ;;		line 22 in file "user.c"
  2378 ;; Parameters:    Size  Location     Type
  2379 ;;		None
  2380 ;; Auto vars:     Size  Location     Type
  2381 ;;		None
  2382 ;; Return value:  Size  Location     Type
  2383 ;;                  1    wreg      void 
  2384 ;; Registers used:
  2385 ;;		None
  2386 ;; Tracked objects:
  2387 ;;		On entry : 0/0
  2388 ;;		On exit  : 0/0
  2389 ;;		Unchanged: 0/0
  2390 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2391 ;;      Params:         0       0       0       0       0
  2392 ;;      Locals:         0       0       0       0       0
  2393 ;;      Temps:          0       0       0       0       0
  2394 ;;      Totals:         0       0       0       0       0
  2395 ;;Total ram usage:        0 bytes
  2396 ;; Hardware stack levels used:    1
  2397 ;; Hardware stack levels required when called:    3
  2398 ;; This function calls:
  2399 ;;		Nothing
  2400 ;; This function is called by:
  2401 ;;		_main
  2402 ;; This function uses a non-reentrant model
  2403 ;;
  2404                           
  2405                           
  2406                           ;psect for function _InitApp
  2407  03A3                     _InitApp:	
  2408                           
  2409                           ;incstack = 0
  2410                           ; Regs used in _InitApp: []
  2411  03A3  0008               	return
  2412  03A4                     __end_of_InitApp:	
  2413                           
  2414                           	psect	text15
  2415  01A6                     __ptext15:	
  2416 ;; *************** function _isr *****************
  2417 ;; Defined at:
  2418 ;;		line 31 in file "interrupts.c"
  2419 ;; Parameters:    Size  Location     Type
  2420 ;;		None
  2421 ;; Auto vars:     Size  Location     Type
  2422 ;;		None
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2432 ;;      Params:         0       0       0       0       0
  2433 ;;      Locals:         0       0       0       0       0
  2434 ;;      Temps:          4       0       0       0       0
  2435 ;;      Totals:         4       0       0       0       0
  2436 ;;Total ram usage:        4 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    2
  2439 ;; This function calls:
  2440 ;;		_uart_read
  2441 ;;		i1_uart_putstr
  2442 ;; This function is called by:
  2443 ;;		Interrupt level 1
  2444 ;; This function uses a non-reentrant model
  2445 ;;
  2446                           
  2447                           
  2448                           ;psect for function _isr
  2449  01A6                     _isr:	
  2450                           
  2451                           ;interrupts.c: 34: if(TMR0IF==1)
  2452  01A6  1D0B               	btfss	11,2	;volatile
  2453  01A7  29DD               	goto	i1l35
  2454                           
  2455                           ;interrupts.c: 35: {
  2456                           ;interrupts.c: 36: TMR0 = 101;
  2457  01A8  3065               	movlw	101
  2458  01A9  0081               	movwf	1	;volatile
  2459                           
  2460                           ;interrupts.c: 38: TMR0IF=0;
  2461  01AA  110B               	bcf	11,2	;volatile
  2462                           
  2463                           ;interrupts.c: 41: time++;
  2464  01AB  3001               	movlw	1
  2465  01AC  07F4               	addwf	_time,f
  2466  01AD  1803               	skipnc
  2467  01AE  0AF5               	incf	_time+1,f
  2468  01AF  3000               	movlw	0
  2469  01B0  07F5               	addwf	_time+1,f
  2470                           
  2471                           ;interrupts.c: 42: if(time > 50)
  2472  01B1  3000               	movlw	0
  2473  01B2  0275               	subwf	_time+1,w
  2474  01B3  3033               	movlw	51
  2475  01B4  1903               	skipnz
  2476  01B5  0274               	subwf	_time,w
  2477  01B6  1C03               	skipc
  2478  01B7  29D0               	goto	i1l1200
  2479                           
  2480                           ;interrupts.c: 43: {
  2481                           ;interrupts.c: 45: if(beep > 0)
  2482  01B8  0872               	movf	_beep,w
  2483  01B9  0473               	iorwf	_beep+1,w
  2484  01BA  1903               	btfsc	3,2
  2485  01BB  29CE               	goto	i1l1198
  2486                           
  2487                           ;interrupts.c: 46: {
  2488                           ;interrupts.c: 47: if(TMR2ON==1)
  2489  01BC  1D12               	btfss	18,2	;volatile
  2490  01BD  29C4               	goto	i1l1194
  2491                           
  2492                           ;interrupts.c: 48: {
  2493                           ;interrupts.c: 49: uart_putstr("BEEP!\n");
  2494  01BE  300C               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2495  01BF  120A  118A  2305  120A  118A  	fcall	i1_uart_putstr
  2496  01C4                     i1l1194:	
  2497                           
  2498                           ;interrupts.c: 50: }
  2499                           ;interrupts.c: 52: TMR2ON = !TMR2ON;
  2500  01C4  3004               	movlw	4
  2501  01C5  1283               	bcf	3,5	;RP0=0, select bank0
  2502  01C6  1303               	bcf	3,6	;RP1=0, select bank0
  2503  01C7  0692               	xorwf	18,f
  2504                           
  2505                           ;interrupts.c: 53: beep--;
  2506  01C8  3001               	movlw	1
  2507  01C9  02F2               	subwf	_beep,f
  2508  01CA  3000               	movlw	0
  2509  01CB  1C03               	skipc
  2510  01CC  03F3               	decf	_beep+1,f
  2511  01CD  02F3               	subwf	_beep+1,f
  2512  01CE                     i1l1198:	
  2513                           
  2514                           ;interrupts.c: 54: }
  2515                           ;interrupts.c: 55: time = 0;
  2516  01CE  01F4               	clrf	_time
  2517  01CF  01F5               	clrf	_time+1
  2518  01D0                     i1l1200:	
  2519                           
  2520                           ;interrupts.c: 56: }
  2521                           ;interrupts.c: 60: if(ledtime > 0)
  2522  01D0  0870               	movf	_ledtime,w
  2523  01D1  0471               	iorwf	_ledtime+1,w
  2524  01D2  1903               	btfsc	3,2
  2525  01D3  29DC               	goto	i1l39
  2526                           
  2527                           ;interrupts.c: 61: {
  2528                           ;interrupts.c: 62: RB6 = 1;
  2529  01D4  1706               	bsf	6,6	;volatile
  2530                           
  2531                           ;interrupts.c: 63: ledtime--;
  2532  01D5  3001               	movlw	1
  2533  01D6  02F0               	subwf	_ledtime,f
  2534  01D7  3000               	movlw	0
  2535  01D8  1C03               	skipc
  2536  01D9  03F1               	decf	_ledtime+1,f
  2537  01DA  02F1               	subwf	_ledtime+1,f
  2538                           
  2539                           ;interrupts.c: 64: }
  2540  01DB  29DD               	goto	i1l35
  2541  01DC                     i1l39:	
  2542                           
  2543                           ;interrupts.c: 65: else
  2544                           ;interrupts.c: 66: {
  2545                           ;interrupts.c: 67: RB6 = 0;
  2546  01DC  1306               	bcf	6,6	;volatile
  2547  01DD                     i1l35:	
  2548                           
  2549                           ;interrupts.c: 68: }
  2550                           ;interrupts.c: 70: }
  2551                           ;interrupts.c: 72: if (INTF==1)
  2552  01DD  1C8B               	btfss	11,1	;volatile
  2553  01DE  29E9               	goto	i1l1212
  2554                           
  2555                           ;interrupts.c: 73: {
  2556                           ;interrupts.c: 75: beep = 6;
  2557  01DF  3006               	movlw	6
  2558  01E0  00F2               	movwf	_beep
  2559  01E1  3000               	movlw	0
  2560  01E2  00F3               	movwf	_beep+1
  2561                           
  2562                           ;interrupts.c: 76: TMR2ON = 0;
  2563  01E3  1112               	bcf	18,2	;volatile
  2564                           
  2565                           ;interrupts.c: 77: ledtime = 5000;
  2566  01E4  3088               	movlw	136
  2567  01E5  00F0               	movwf	_ledtime
  2568  01E6  3013               	movlw	19
  2569  01E7  00F1               	movwf	_ledtime+1
  2570                           
  2571                           ;interrupts.c: 78: INTF = 0;
  2572  01E8  108B               	bcf	11,1	;volatile
  2573  01E9                     i1l1212:	
  2574                           
  2575                           ;interrupts.c: 79: }
  2576                           ;interrupts.c: 81: if(RCIF== 1)
  2577  01E9  1E8C               	btfss	12,5	;volatile
  2578  01EA  29F7               	goto	i1l44
  2579                           
  2580                           ;interrupts.c: 82: {
  2581                           ;interrupts.c: 83: if(uart_read() == 'A')
  2582  01EB  120A  118A  2372  120A  118A  	fcall	_uart_read
  2583  01F0  3A41               	xorlw	65
  2584  01F1  1D03               	skipz
  2585  01F2  29F7               	goto	i1l44
  2586                           
  2587                           ;interrupts.c: 84: {
  2588                           ;interrupts.c: 85: beep = 5000;
  2589  01F3  3088               	movlw	136
  2590  01F4  00F2               	movwf	_beep
  2591  01F5  3013               	movlw	19
  2592  01F6  00F3               	movwf	_beep+1
  2593  01F7                     i1l44:	
  2594  01F7  087D               	movf	??_isr+3,w
  2595  01F8  1283               	bcf	3,5	;RP0=0, select bank0
  2596  01F9  1303               	bcf	3,6	;RP1=0, select bank0
  2597  01FA  00FF               	movwf	127
  2598  01FB  087C               	movf	??_isr+2,w
  2599  01FC  008A               	movwf	10
  2600  01FD  087B               	movf	??_isr+1,w
  2601  01FE  0084               	movwf	4
  2602  01FF  0E7A               	swapf	??_isr^(0+-128),w
  2603  0200  0083               	movwf	3
  2604  0201  0EFE               	swapf	126,f
  2605  0202  0E7E               	swapf	126,w
  2606  0203  0009               	retfie
  2607  0204                     __end_of_isr:	
  2608                           
  2609                           	psect	intentry
  2610  0004                     __pintentry:	
  2611                           ;incstack = 0
  2612                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2613                           
  2614  0004                     interrupt_function:	
  2615  007E                     saved_w	set	btemp
  2616  0004  00FE               	movwf	btemp
  2617  0005  0E03               	swapf	3,w
  2618  0006  00FA               	movwf	??_isr
  2619  0007  0804               	movf	4,w
  2620  0008  00FB               	movwf	??_isr+1
  2621  0009  080A               	movf	10,w
  2622  000A  00FC               	movwf	??_isr+2
  2623  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2624  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2625  000D  087F               	movf	btemp+1,w
  2626  000E  00FD               	movwf	??_isr+3
  2627  000F  120A  118A  29A6   	ljmp	_isr
  2628                           
  2629                           	psect	text16
  2630  0305                     __ptext16:	
  2631 ;; *************** function i1_uart_putstr *****************
  2632 ;; Defined at:
  2633 ;;		line 127 in file "uart.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  st_pt           1    wreg     PTR unsigned char 
  2636 ;;		 -> STR_2(11), STR_1(7), 
  2637 ;; Auto vars:     Size  Location     Type
  2638 ;;  st_pt           1    2[COMMON] PTR unsigned char 
  2639 ;;		 -> STR_2(11), STR_1(7), 
  2640 ;; Return value:  Size  Location     Type
  2641 ;;                  1    wreg      void 
  2642 ;; Registers used:
  2643 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2644 ;; Tracked objects:
  2645 ;;		On entry : 0/0
  2646 ;;		On exit  : 0/0
  2647 ;;		Unchanged: 0/0
  2648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2649 ;;      Params:         0       0       0       0       0
  2650 ;;      Locals:         1       0       0       0       0
  2651 ;;      Temps:          1       0       0       0       0
  2652 ;;      Totals:         2       0       0       0       0
  2653 ;;Total ram usage:        2 bytes
  2654 ;; Hardware stack levels used:    1
  2655 ;; Hardware stack levels required when called:    1
  2656 ;; This function calls:
  2657 ;;		i1_uart_send
  2658 ;; This function is called by:
  2659 ;;		_isr
  2660 ;; This function uses a non-reentrant model
  2661 ;;
  2662                           
  2663                           
  2664                           ;psect for function i1_uart_putstr
  2665  0305                     i1_uart_putstr:	
  2666                           
  2667                           ;incstack = 0
  2668                           ; Regs used in i1_uart_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2669                           ;i1uart_putstr@st_pt stored from wreg
  2670  0305  00F9               	movwf	i1uart_putstr@st_pt
  2671  0306                     i1l1180:	
  2672                           ;uart.c: 129: while(*st_pt)
  2673                           
  2674  0306  0879               	movf	i1uart_putstr@st_pt,w
  2675  0307  0084               	movwf	4
  2676  0308  120A  118A  2321  120A  118A  	fcall	stringdir
  2677  030D  3A00               	xorlw	0
  2678  030E  1903               	btfsc	3,2
  2679  030F  0008               	return
  2680                           
  2681                           ;uart.c: 130: uart_send(*st_pt++);
  2682  0310  0879               	movf	i1uart_putstr@st_pt,w
  2683  0311  0084               	movwf	4
  2684  0312  120A  118A  2321  120A  118A  	fcall	stringdir
  2685  0317  120A  118A  2395  120A  118A  	fcall	i1_uart_send
  2686  031C  3001               	movlw	1
  2687  031D  00F8               	movwf	??i1_uart_putstr
  2688  031E  0878               	movf	??i1_uart_putstr,w
  2689  031F  07F9               	addwf	i1uart_putstr@st_pt,f
  2690  0320  2B06               	goto	i1l1180
  2691  0321                     __end_ofi1_uart_putstr:	
  2692                           
  2693                           	psect	text17
  2694  0395                     __ptext17:	
  2695 ;; *************** function i1_uart_send *****************
  2696 ;; Defined at:
  2697 ;;		line 69 in file "uart.c"
  2698 ;; Parameters:    Size  Location     Type
  2699 ;;  uc_data         1    wreg     unsigned char 
  2700 ;; Auto vars:     Size  Location     Type
  2701 ;;  uc_data         1    0[COMMON] unsigned char 
  2702 ;; Return value:  Size  Location     Type
  2703 ;;                  1    wreg      void 
  2704 ;; Registers used:
  2705 ;;		wreg
  2706 ;; Tracked objects:
  2707 ;;		On entry : 0/0
  2708 ;;		On exit  : 0/0
  2709 ;;		Unchanged: 0/0
  2710 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2711 ;;      Params:         0       0       0       0       0
  2712 ;;      Locals:         1       0       0       0       0
  2713 ;;      Temps:          0       0       0       0       0
  2714 ;;      Totals:         1       0       0       0       0
  2715 ;;Total ram usage:        1 bytes
  2716 ;; Hardware stack levels used:    1
  2717 ;; This function calls:
  2718 ;;		Nothing
  2719 ;; This function is called by:
  2720 ;;		i1_uart_putstr
  2721 ;; This function uses a non-reentrant model
  2722 ;;
  2723                           
  2724                           
  2725                           ;psect for function i1_uart_send
  2726  0395                     i1_uart_send:	
  2727                           
  2728                           ;incstack = 0
  2729                           ; Regs used in i1_uart_send: [wreg]
  2730                           ;i1uart_send@uc_data stored from wreg
  2731  0395  00F7               	movwf	i1uart_send@uc_data
  2732  0396                     i1l270:	
  2733                           ;uart.c: 72: while (!TXIF);
  2734                           
  2735  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2736  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2737  0398  1E0C               	btfss	12,4	;volatile
  2738  0399  2B96               	goto	i1l270
  2739                           
  2740                           ;uart.c: 75: TXREG = uc_data;
  2741  039A  0877               	movf	i1uart_send@uc_data,w
  2742  039B  0099               	movwf	25	;volatile
  2743  039C  0008               	return
  2744  039D                     __end_ofi1_uart_send:	
  2745                           
  2746                           	psect	text18
  2747  0372                     __ptext18:	
  2748 ;; *************** function _uart_read *****************
  2749 ;; Defined at:
  2750 ;;		line 95 in file "uart.c"
  2751 ;; Parameters:    Size  Location     Type
  2752 ;;		None
  2753 ;; Auto vars:     Size  Location     Type
  2754 ;;		None
  2755 ;; Return value:  Size  Location     Type
  2756 ;;                  1    wreg      unsigned char 
  2757 ;; Registers used:
  2758 ;;		wreg
  2759 ;; Tracked objects:
  2760 ;;		On entry : 0/0
  2761 ;;		On exit  : 0/0
  2762 ;;		Unchanged: 0/0
  2763 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2764 ;;      Params:         0       0       0       0       0
  2765 ;;      Locals:         0       0       0       0       0
  2766 ;;      Temps:          0       0       0       0       0
  2767 ;;      Totals:         0       0       0       0       0
  2768 ;;Total ram usage:        0 bytes
  2769 ;; Hardware stack levels used:    1
  2770 ;; This function calls:
  2771 ;;		Nothing
  2772 ;; This function is called by:
  2773 ;;		_isr
  2774 ;; This function uses a non-reentrant model
  2775 ;;
  2776                           
  2777                           
  2778                           ;psect for function _uart_read
  2779  0372                     _uart_read:	
  2780                           
  2781                           ;uart.c: 98: if (OERR == 1) {
  2782                           
  2783                           ;incstack = 0
  2784                           ; Regs used in _uart_read: [wreg]
  2785  0372  1283               	bcf	3,5	;RP0=0, select bank0
  2786  0373  1303               	bcf	3,6	;RP1=0, select bank0
  2787  0374  1C98               	btfss	24,1	;volatile
  2788  0375  2B78               	goto	i1l277
  2789                           
  2790                           ;uart.c: 100: CREN = 0;
  2791  0376  1218               	bcf	24,4	;volatile
  2792                           
  2793                           ;uart.c: 101: CREN = 1;
  2794  0377  1618               	bsf	24,4	;volatile
  2795  0378                     i1l277:	
  2796                           ;uart.c: 102: }
  2797                           ;uart.c: 105: while(!RCIF);
  2798                           
  2799  0378  1E8C               	btfss	12,5	;volatile
  2800  0379  2B78               	goto	i1l277
  2801                           
  2802                           ;uart.c: 108: return RCREG;
  2803  037A  081A               	movf	26,w	;volatile
  2804  037B  0008               	return
  2805  037C                     __end_of_uart_read:	
  2806  007E                     btemp	set	126	;btemp
  2807  007E                     wtemp0	set	126


Data Sizes:
    Strings     18
    Constant    0
    Data        0
    BSS         31
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      14
    BANK0            80     33      57
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    uart_putstr@st_pt	PTR unsigned char  size(1) Largest target is 11
		 -> STR_2(CODE[11]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->i1_uart_putstr
    i1_uart_putstr->i1_uart_send

Critical Paths under _main in BANK0

    _main->_uart_init
    _uart_putstr->_uart_send
    _uart_init->___aldiv
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    2355
                            _InitApp
                     _adc_initialize
                     _lcd_initialize
                     _pwm_initialize
                 _pwm_set_duty_cycle
                          _uart_init
                        _uart_putstr
 ---------------------------------------------------------------------------------
 (1) _uart_putstr                                          2     2      0     156
                                              1 BANK0      2     2      0
                          _uart_send
 ---------------------------------------------------------------------------------
 (2) _uart_send                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_init                                           18    14      4     721
                                             15 BANK0     18    14      4
                            ___aldiv
 ---------------------------------------------------------------------------------
 (2) ___aldiv                                             15     7      8     512
                                              0 BANK0     15     7      8
 ---------------------------------------------------------------------------------
 (1) _pwm_set_duty_cycle                                   4     2      2      97
                                              0 BANK0      4     2      2
 ---------------------------------------------------------------------------------
 (1) _pwm_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1381
                                              5 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     675
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     675
                                              1 BANK0      4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0      67
                                              3 COMMON     4     4      0
                          _uart_read
                      i1_uart_putstr
 ---------------------------------------------------------------------------------
 (6) i1_uart_putstr                                        2     2      0      67
                                              1 COMMON     2     2      0
                        i1_uart_send
 ---------------------------------------------------------------------------------
 (7) i1_uart_send                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) _uart_read                                            0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _adc_initialize
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _pwm_initialize
   _pwm_set_duty_cycle
   _uart_init
     ___aldiv
   _uart_putstr
     _uart_send

 _isr (ROOT)
   _uart_read
   i1_uart_putstr
     i1_uart_send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      47       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     21      39       5       71.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      47      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 09 13:47:57 2018

            __end_ofi1_uart_send 039D                                pc 0002                      __CFG_CP$OFF 0000  
                             l91 0251                 uart_putstr@st_pt 0022                               fsr 0004  
                            l270 0390                              l425 0129                              _GIE 005F  
                            _RB4 0034                              _RB5 0035                              _RB6 0036  
                            _PR2 0092                     __CFG_CPD$OFF 0000                              u545 014E  
                            u650 006D                              u715 02EC                              u651 006E  
                            u635 0032                              u652 0073                              u565 015C  
                            u653 0074                              u645 0053                              u575 0171  
                            u585 0183                              u690 00D6                              u691 00D7  
                            u675 009B                              u692 00DC                              u693 00DD  
                            u685 00BC                              _isr 01A6                              fsr0 0004  
                            indf 0000                     __CFG_FOSC$HS 0000            __end_ofi1_uart_putstr 0321  
              set_lcd_e@b_output 0020                     __CFG_LVP$OFF 0000                             l1112 019D  
                           l1104 0182                             l1108 018F                             l1148 00F7  
                           l1094 014A                             l1086 013A                             l1096 015A  
                           l1386 02CA                             _ADFM 04FF                             ?_isr 0077  
                           _ADON 00F8                             _CHS0 00FB                             _CHS1 00FC  
                           _CHS2 00FD                             STR_1 0332                             STR_2 0327  
                           _BRGH 04C2                             _CREN 00C4                             u1010 036E  
                           u1030 0361                             u1147 029B                             u1157 026F  
                           u1167 0280                             _PEIE 005E                             _INTE 005C  
                           _INTF 0059                             i1l35 01DD                             _RCIE 0465  
                           i1l44 01F7                             _RCIF 0065                             i1l39 01DC  
                           _OERR 00C1                             _TMR0 0001                             _SPEN 00C7  
                           _TXEN 04C5                             _TXIF 0064                             _SYNC 04C4  
                   __CFG_WRT$OFF 0000                             _beep 0072                             _data 004B  
                           _main 0204                             _time 0074                             btemp 007E  
                  __CFG_BOREN$ON 0000                             start 0012                   _pwm_initialize 0339  
                __end_of_InitApp 03A4                            ??_isr 007A                  __end_of___aldiv 01A6  
                          _ADCS0 00FE                            _ADCS1 00FF                            ?_main 0077  
                  __CFG_WDTE$OFF 0000                            _PCFG0 04F8                            _PCFG1 04F9  
                          _PCFG2 04FA                            _PCFG3 04FB                            i1l270 0396  
                          i1l277 0378                            _RCREG 001A                            _SPBRG 0099  
                          _PORTA 0005                            _PORTB 0006                            _PORTC 0007  
                          _PORTD 0008                            _TRISA 0085                            _TRISB 0086  
                          _TRISC 0087                            _TRISD 0088                            _TXREG 0019  
           send_lcd_data@uc_data 0021                    __CFG_PWRTE$ON 0000                            _ready 0055  
                          pclath 000A                            status 0003           __end_of_pwm_initialize 0349  
                          wtemp0 007E                      i1_uart_send 0395                  __initialization 0015  
              send_lcd_data@b_rs 0024                     __end_of_main 0252            __end_of_send_lcd_data 028F  
                         ??_main 0041                           _CCP2M0 00E8                           _CCP2M1 00E9  
                         _CCP2M2 00EA                           _CCP2M3 00EB                           _ADRESH 001E  
                         _ADRESL 009E                           _CCPR2L 001B                           i1l1200 01D0  
                         i1l1212 01E9                           i1l1180 0306                           i1l1194 01C4  
                         i1l1198 01CE                           _TMR0IE 005D                           _TMR0IF 005A  
                         _TMR2ON 0092                           _TRISC6 043E                           _TRISC7 043F  
                ?_pwm_initialize 0077                        ??_InitApp 0020               i1uart_putstr@st_pt 0079  
    __size_of_pwm_set_duty_cycle 001E                        ??___aldiv 0028          __size_of_adc_initialize 000F  
                         saved_w 007E                     ?_uart_putstr 0077                 ??_lcd_initialize 0025  
        __end_of__initialization 0023                   __pcstackCOMMON 0077               __size_of_lcd_clear 0009  
                     __pbssBANK0 0041                       __pmaintext 0204                       __pintentry 0004  
                        _CCP2CON 001D               __size_of_set_lcd_e 000D                          _T2CKPS0 0090  
                        _T2CKPS1 0091               __size_of_uart_init 00F0               __size_of_uart_read 000A  
             __size_of_uart_send 0008                       __stringtab 0321                    ?_set_lcd_data 0077  
                   ?i1_uart_send 0077                          _InitApp 03A3                __end_of_lcd_clear 0385  
         __size_ofi1_uart_putstr 001C                          ___aldiv 0117                   _adc_initialize 0349  
                        _datarec 0076                          __ptext1 02C7                          __ptext2 038D  
                        __ptext3 0027                          __ptext4 0117                          __ptext5 02E7  
                        __ptext6 0339                          __ptext7 028F                          __ptext8 037C  
                        __ptext9 0252                          _ledtime 0070                     __size_of_isr 005E  
               ___aldiv@dividend 0024                 ??_pwm_initialize 0020                          clrloop0 0386  
           __size_of_uart_putstr 0020             end_of_initialization 0023                   ??_set_lcd_data 0020  
              __end_of_set_lcd_e 0372                __end_of_uart_init 0117                __end_of_uart_read 037C  
              __end_of_uart_send 0395           __end_of_adc_initialize 0358                       _set_lcd_rs 0358  
               ___aldiv@quotient 002B                    i1_uart_putstr 0305           __size_of_send_lcd_data 003D  
     __end_of_pwm_set_duty_cycle 0305                  ?_adc_initialize 0077  pwm_set_duty_cycle@ui_duty_cycle 0020  
            start_initialization 0015               set_lcd_rs@b_output 0020                   ?i1_uart_putstr 0077  
                    __end_of_isr 0204                      ?_set_lcd_rs 0077             __size_ofi1_uart_send 0008  
                  _send_lcd_data 0252             __end_of_set_lcd_data 03A3                      __pbssCOMMON 0070  
                      ___latbits 0002                    __pcstackBANK0 0020                 uart_send@uc_data 0020  
                       ?_InitApp 0077                        _charcount 0057          __size_of_lcd_initialize 0038  
                       ?___aldiv 0020                        _lcd_clear 037C                   ?_send_lcd_data 0021  
                      __pstrings 0321                  ??i1_uart_putstr 0078              __size_of_set_lcd_rs 000D  
            set_lcd_data@uc_data 0020                  ___aldiv@divisor 0020                interrupt_function 0004  
                ___aldiv@counter 0029                        clear_ram0 0385                        _set_lcd_e 0365  
                       _GO_nDONE 00FA                        _uart_init 0027                        _uart_read 0372  
                      _uart_send 038D                       uart_init@x 003F                       ?_lcd_clear 0077  
                    __stringbase 0326                    ??_uart_putstr 0021                 ??_adc_initialize 0020  
               __size_of_InitApp 0001                       ?_set_lcd_e 0077                       ?_uart_init 002F  
                     ?_uart_read 0077                       ?_uart_send 0077            __size_of_set_lcd_data 0006  
                ??_send_lcd_data 0022                 __size_of___aldiv 008F               _pwm_set_duty_cycle 02E7  
             i1uart_send@uc_data 0077               __end_of__stringtab 0327              ?_pwm_set_duty_cycle 0020  
                       __ptext10 0358                         __ptext11 0365                         __ptext12 039D  
                       __ptext13 0349                         __ptext14 03A3                         __ptext15 01A6  
                       __ptext16 0305                         __ptext17 0395                         __ptext18 0372  
            __end_of_uart_putstr 02E7                    __size_of_main 004E                     _set_lcd_data 039D  
                 _lcd_initialize 028F             ??_pwm_set_duty_cycle 0022                     ??_set_lcd_rs 0020  
        __size_of_pwm_initialize 0010                      ??_lcd_clear 0025               __end_of_set_lcd_rs 0365  
                       intlevel1 0000                uart_init@baudrate 002F           __end_of_lcd_initialize 02C7  
                  ??i1_uart_send 0077                        stringcode 0321                      ??_set_lcd_e 0020  
                    ??_uart_init 0033                      ??_uart_read 0077                      ??_uart_send 0020  
                     _OPTION_REG 0081                     lcd_bcd@F1136 0041                         stringdir 0321  
                       stringtab 0321                     ___aldiv@sign 002A                      _uart_putstr 02C7  
                ?_lcd_initialize 0077  
