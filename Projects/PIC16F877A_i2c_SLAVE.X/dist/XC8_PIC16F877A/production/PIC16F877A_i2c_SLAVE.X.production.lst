

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 23 09:16:44 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	clrtext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	text4,local,class=CODE,merge=1,delta=2
    17                           	psect	text5,local,class=CODE,merge=1,delta=2
    18                           	psect	text6,local,class=CODE,merge=1,delta=2
    19                           	psect	text7,local,class=CODE,merge=1,delta=2
    20                           	psect	text8,local,class=CODE,merge=1,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	intentry,global,class=CODE,delta=2
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 1.45
    26                           ; Generated 16/11/2017 GMT
    27                           ; 
    28                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution.
    42                           ; 
    43                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    44                           ;        software without specific prior written permission.
    45                           ; 
    46                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    47                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    48                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    49                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    50                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    51                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    52                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    53                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    54                           ; 
    55                           ; 
    56                           ; Code-generator required, PIC16F877A Definitions
    57                           ; 
    58                           ; SFR Addresses
    59  0000                     	;# 
    60  0001                     	;# 
    61  0002                     	;# 
    62  0003                     	;# 
    63  0004                     	;# 
    64  0005                     	;# 
    65  0006                     	;# 
    66  0007                     	;# 
    67  0008                     	;# 
    68  0009                     	;# 
    69  000A                     	;# 
    70  000B                     	;# 
    71  000C                     	;# 
    72  000D                     	;# 
    73  000E                     	;# 
    74  000E                     	;# 
    75  000F                     	;# 
    76  0010                     	;# 
    77  0011                     	;# 
    78  0012                     	;# 
    79  0013                     	;# 
    80  0014                     	;# 
    81  0015                     	;# 
    82  0015                     	;# 
    83  0016                     	;# 
    84  0017                     	;# 
    85  0018                     	;# 
    86  0019                     	;# 
    87  001A                     	;# 
    88  001B                     	;# 
    89  001B                     	;# 
    90  001C                     	;# 
    91  001D                     	;# 
    92  001E                     	;# 
    93  001F                     	;# 
    94  0081                     	;# 
    95  0085                     	;# 
    96  0086                     	;# 
    97  0087                     	;# 
    98  0088                     	;# 
    99  0089                     	;# 
   100  008C                     	;# 
   101  008D                     	;# 
   102  008E                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0094                     	;# 
   107  0098                     	;# 
   108  0099                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  010C                     	;# 
   114  010D                     	;# 
   115  010E                     	;# 
   116  010F                     	;# 
   117  018C                     	;# 
   118  018D                     	;# 
   119  0000                     	;# 
   120  0001                     	;# 
   121  0002                     	;# 
   122  0003                     	;# 
   123  0004                     	;# 
   124  0005                     	;# 
   125  0006                     	;# 
   126  0007                     	;# 
   127  0008                     	;# 
   128  0009                     	;# 
   129  000A                     	;# 
   130  000B                     	;# 
   131  000C                     	;# 
   132  000D                     	;# 
   133  000E                     	;# 
   134  000E                     	;# 
   135  000F                     	;# 
   136  0010                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0014                     	;# 
   141  0015                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0017                     	;# 
   145  0018                     	;# 
   146  0019                     	;# 
   147  001A                     	;# 
   148  001B                     	;# 
   149  001B                     	;# 
   150  001C                     	;# 
   151  001D                     	;# 
   152  001E                     	;# 
   153  001F                     	;# 
   154  0081                     	;# 
   155  0085                     	;# 
   156  0086                     	;# 
   157  0087                     	;# 
   158  0088                     	;# 
   159  0089                     	;# 
   160  008C                     	;# 
   161  008D                     	;# 
   162  008E                     	;# 
   163  0091                     	;# 
   164  0092                     	;# 
   165  0093                     	;# 
   166  0094                     	;# 
   167  0098                     	;# 
   168  0099                     	;# 
   169  009C                     	;# 
   170  009D                     	;# 
   171  009E                     	;# 
   172  009F                     	;# 
   173  010C                     	;# 
   174  010D                     	;# 
   175  010E                     	;# 
   176  010F                     	;# 
   177  018C                     	;# 
   178  018D                     	;# 
   179  0000                     	;# 
   180  0001                     	;# 
   181  0002                     	;# 
   182  0003                     	;# 
   183  0004                     	;# 
   184  0005                     	;# 
   185  0006                     	;# 
   186  0007                     	;# 
   187  0008                     	;# 
   188  0009                     	;# 
   189  000A                     	;# 
   190  000B                     	;# 
   191  000C                     	;# 
   192  000D                     	;# 
   193  000E                     	;# 
   194  000E                     	;# 
   195  000F                     	;# 
   196  0010                     	;# 
   197  0011                     	;# 
   198  0012                     	;# 
   199  0013                     	;# 
   200  0014                     	;# 
   201  0015                     	;# 
   202  0015                     	;# 
   203  0016                     	;# 
   204  0017                     	;# 
   205  0018                     	;# 
   206  0019                     	;# 
   207  001A                     	;# 
   208  001B                     	;# 
   209  001B                     	;# 
   210  001C                     	;# 
   211  001D                     	;# 
   212  001E                     	;# 
   213  001F                     	;# 
   214  0081                     	;# 
   215  0085                     	;# 
   216  0086                     	;# 
   217  0087                     	;# 
   218  0088                     	;# 
   219  0089                     	;# 
   220  008C                     	;# 
   221  008D                     	;# 
   222  008E                     	;# 
   223  0091                     	;# 
   224  0092                     	;# 
   225  0093                     	;# 
   226  0094                     	;# 
   227  0098                     	;# 
   228  0099                     	;# 
   229  009C                     	;# 
   230  009D                     	;# 
   231  009E                     	;# 
   232  009F                     	;# 
   233  010C                     	;# 
   234  010D                     	;# 
   235  010E                     	;# 
   236  010F                     	;# 
   237  018C                     	;# 
   238  018D                     	;# 
   239  0000                     	;# 
   240  0001                     	;# 
   241  0002                     	;# 
   242  0003                     	;# 
   243  0004                     	;# 
   244  0005                     	;# 
   245  0006                     	;# 
   246  0007                     	;# 
   247  0008                     	;# 
   248  0009                     	;# 
   249  000A                     	;# 
   250  000B                     	;# 
   251  000C                     	;# 
   252  000D                     	;# 
   253  000E                     	;# 
   254  000E                     	;# 
   255  000F                     	;# 
   256  0010                     	;# 
   257  0011                     	;# 
   258  0012                     	;# 
   259  0013                     	;# 
   260  0014                     	;# 
   261  0015                     	;# 
   262  0015                     	;# 
   263  0016                     	;# 
   264  0017                     	;# 
   265  0018                     	;# 
   266  0019                     	;# 
   267  001A                     	;# 
   268  001B                     	;# 
   269  001B                     	;# 
   270  001C                     	;# 
   271  001D                     	;# 
   272  001E                     	;# 
   273  001F                     	;# 
   274  0081                     	;# 
   275  0085                     	;# 
   276  0086                     	;# 
   277  0087                     	;# 
   278  0088                     	;# 
   279  0089                     	;# 
   280  008C                     	;# 
   281  008D                     	;# 
   282  008E                     	;# 
   283  0091                     	;# 
   284  0092                     	;# 
   285  0093                     	;# 
   286  0094                     	;# 
   287  0098                     	;# 
   288  0099                     	;# 
   289  009C                     	;# 
   290  009D                     	;# 
   291  009E                     	;# 
   292  009F                     	;# 
   293  010C                     	;# 
   294  010D                     	;# 
   295  010E                     	;# 
   296  010F                     	;# 
   297  018C                     	;# 
   298  018D                     	;# 
   299  0000                     	;# 
   300  0001                     	;# 
   301  0002                     	;# 
   302  0003                     	;# 
   303  0004                     	;# 
   304  0005                     	;# 
   305  0006                     	;# 
   306  0007                     	;# 
   307  0008                     	;# 
   308  0009                     	;# 
   309  000A                     	;# 
   310  000B                     	;# 
   311  000C                     	;# 
   312  000D                     	;# 
   313  000E                     	;# 
   314  000E                     	;# 
   315  000F                     	;# 
   316  0010                     	;# 
   317  0011                     	;# 
   318  0012                     	;# 
   319  0013                     	;# 
   320  0014                     	;# 
   321  0015                     	;# 
   322  0015                     	;# 
   323  0016                     	;# 
   324  0017                     	;# 
   325  0018                     	;# 
   326  0019                     	;# 
   327  001A                     	;# 
   328  001B                     	;# 
   329  001B                     	;# 
   330  001C                     	;# 
   331  001D                     	;# 
   332  001E                     	;# 
   333  001F                     	;# 
   334  0081                     	;# 
   335  0085                     	;# 
   336  0086                     	;# 
   337  0087                     	;# 
   338  0088                     	;# 
   339  0089                     	;# 
   340  008C                     	;# 
   341  008D                     	;# 
   342  008E                     	;# 
   343  0091                     	;# 
   344  0092                     	;# 
   345  0093                     	;# 
   346  0094                     	;# 
   347  0098                     	;# 
   348  0099                     	;# 
   349  009C                     	;# 
   350  009D                     	;# 
   351  009E                     	;# 
   352  009F                     	;# 
   353  010C                     	;# 
   354  010D                     	;# 
   355  010E                     	;# 
   356  010F                     	;# 
   357  018C                     	;# 
   358  018D                     	;# 
   359  0000                     	;# 
   360  0001                     	;# 
   361  0002                     	;# 
   362  0003                     	;# 
   363  0004                     	;# 
   364  0005                     	;# 
   365  0006                     	;# 
   366  0007                     	;# 
   367  0008                     	;# 
   368  0009                     	;# 
   369  000A                     	;# 
   370  000B                     	;# 
   371  000C                     	;# 
   372  000D                     	;# 
   373  000E                     	;# 
   374  000E                     	;# 
   375  000F                     	;# 
   376  0010                     	;# 
   377  0011                     	;# 
   378  0012                     	;# 
   379  0013                     	;# 
   380  0014                     	;# 
   381  0015                     	;# 
   382  0015                     	;# 
   383  0016                     	;# 
   384  0017                     	;# 
   385  0018                     	;# 
   386  0019                     	;# 
   387  001A                     	;# 
   388  001B                     	;# 
   389  001B                     	;# 
   390  001C                     	;# 
   391  001D                     	;# 
   392  001E                     	;# 
   393  001F                     	;# 
   394  0081                     	;# 
   395  0085                     	;# 
   396  0086                     	;# 
   397  0087                     	;# 
   398  0088                     	;# 
   399  0089                     	;# 
   400  008C                     	;# 
   401  008D                     	;# 
   402  008E                     	;# 
   403  0091                     	;# 
   404  0092                     	;# 
   405  0093                     	;# 
   406  0094                     	;# 
   407  0098                     	;# 
   408  0099                     	;# 
   409  009C                     	;# 
   410  009D                     	;# 
   411  009E                     	;# 
   412  009F                     	;# 
   413  010C                     	;# 
   414  010D                     	;# 
   415  010E                     	;# 
   416  010F                     	;# 
   417  018C                     	;# 
   418  018D                     	;# 
   419  0000                     	;# 
   420  0001                     	;# 
   421  0002                     	;# 
   422  0003                     	;# 
   423  0004                     	;# 
   424  0005                     	;# 
   425  0006                     	;# 
   426  0007                     	;# 
   427  0008                     	;# 
   428  0009                     	;# 
   429  000A                     	;# 
   430  000B                     	;# 
   431  000C                     	;# 
   432  000D                     	;# 
   433  000E                     	;# 
   434  000E                     	;# 
   435  000F                     	;# 
   436  0010                     	;# 
   437  0011                     	;# 
   438  0012                     	;# 
   439  0013                     	;# 
   440  0014                     	;# 
   441  0015                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0017                     	;# 
   445  0018                     	;# 
   446  0019                     	;# 
   447  001A                     	;# 
   448  001B                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001D                     	;# 
   452  001E                     	;# 
   453  001F                     	;# 
   454  0081                     	;# 
   455  0085                     	;# 
   456  0086                     	;# 
   457  0087                     	;# 
   458  0088                     	;# 
   459  0089                     	;# 
   460  008C                     	;# 
   461  008D                     	;# 
   462  008E                     	;# 
   463  0091                     	;# 
   464  0092                     	;# 
   465  0093                     	;# 
   466  0094                     	;# 
   467  0098                     	;# 
   468  0099                     	;# 
   469  009C                     	;# 
   470  009D                     	;# 
   471  009E                     	;# 
   472  009F                     	;# 
   473  010C                     	;# 
   474  010D                     	;# 
   475  010E                     	;# 
   476  010F                     	;# 
   477  018C                     	;# 
   478  018D                     	;# 
   479  0000                     	;# 
   480  0001                     	;# 
   481  0002                     	;# 
   482  0003                     	;# 
   483  0004                     	;# 
   484  0005                     	;# 
   485  0006                     	;# 
   486  0007                     	;# 
   487  0008                     	;# 
   488  0009                     	;# 
   489  000A                     	;# 
   490  000B                     	;# 
   491  000C                     	;# 
   492  000D                     	;# 
   493  000E                     	;# 
   494  000E                     	;# 
   495  000F                     	;# 
   496  0010                     	;# 
   497  0011                     	;# 
   498  0012                     	;# 
   499  0013                     	;# 
   500  0014                     	;# 
   501  0015                     	;# 
   502  0015                     	;# 
   503  0016                     	;# 
   504  0017                     	;# 
   505  0018                     	;# 
   506  0019                     	;# 
   507  001A                     	;# 
   508  001B                     	;# 
   509  001B                     	;# 
   510  001C                     	;# 
   511  001D                     	;# 
   512  001E                     	;# 
   513  001F                     	;# 
   514  0081                     	;# 
   515  0085                     	;# 
   516  0086                     	;# 
   517  0087                     	;# 
   518  0088                     	;# 
   519  0089                     	;# 
   520  008C                     	;# 
   521  008D                     	;# 
   522  008E                     	;# 
   523  0091                     	;# 
   524  0092                     	;# 
   525  0093                     	;# 
   526  0094                     	;# 
   527  0098                     	;# 
   528  0099                     	;# 
   529  009C                     	;# 
   530  009D                     	;# 
   531  009E                     	;# 
   532  009F                     	;# 
   533  010C                     	;# 
   534  010D                     	;# 
   535  010E                     	;# 
   536  010F                     	;# 
   537  018C                     	;# 
   538  018D                     	;# 
   539                           
   540                           	psect	idataCOMMON
   541  0190                     __pidataCOMMON:	
   542                           
   543                           ;initializer for _add
   544  0190  3404               	retlw	4
   545  001E                     _ADRESH	set	30
   546  0014                     _SSPCON	set	20
   547  0008                     _PORTD	set	8
   548  0007                     _PORTC	set	7
   549  0006                     _PORTB	set	6
   550  0005                     _PORTA	set	5
   551  0014                     _SSPCONbits	set	20
   552  0013                     _SSPBUF	set	19
   553  00FA                     _GO_nDONE	set	250
   554  00FB                     _CHS0	set	251
   555  00FC                     _CHS1	set	252
   556  00FD                     _CHS2	set	253
   557  00F8                     _ADON	set	248
   558  00FE                     _ADCS0	set	254
   559  00FF                     _ADCS1	set	255
   560  005E                     _PEIE	set	94
   561  005F                     _GIE	set	95
   562  0034                     _RB4	set	52
   563  0035                     _RB5	set	53
   564  003F                     _RC7	set	63
   565  0063                     _SSPIF	set	99
   566  009E                     _ADRESL	set	158
   567  0094                     _SSPSTAT	set	148
   568  0093                     _SSPADD	set	147
   569  0091                     _SSPCON2	set	145
   570  0088                     _TRISD	set	136
   571  0087                     _TRISC	set	135
   572  0086                     _TRISB	set	134
   573  0085                     _TRISA	set	133
   574  0094                     _SSPSTATbits	set	148
   575  04F8                     _PCFG0	set	1272
   576  04F9                     _PCFG1	set	1273
   577  04FA                     _PCFG2	set	1274
   578  04FB                     _PCFG3	set	1275
   579  04FF                     _ADFM	set	1279
   580  048C                     _ACKEN	set	1164
   581  048D                     _ACKDT	set	1165
   582  048B                     _RCEN	set	1163
   583  048A                     _PEN	set	1162
   584  0489                     _RSEN	set	1161
   585  0488                     _SEN	set	1160
   586  0463                     _SSPIE	set	1123
   587  043C                     _TRISC4	set	1084
   588  043B                     _TRISC3	set	1083
   589                           
   590                           ; #config settings
   591  0000                     
   592                           	psect	cinit
   593  0015                     start_initialization:	
   594  0015                     __initialization:	
   595                           
   596                           ; Initialize objects allocated to COMMON
   597  0015  120A  118A  2190  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   598  001A  00FA               	movwf	__pdataCOMMON& (0+127)
   599                           
   600                           ; Clear objects allocated to BANK0
   601  001B  1383               	bcf	3,7	;select IRP bank0
   602  001C  3020               	movlw	low __pbssBANK0
   603  001D  0084               	movwf	4
   604  001E  3030               	movlw	low (__pbssBANK0+16)
   605  001F  120A  118A  2182   	fcall	clear_ram0
   606                           
   607                           ; Clear objects allocated to COMMON
   608  0022  01F6               	clrf	__pbssCOMMON& (0+127)
   609  0023  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   610  0024  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   611  0025  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   612  0026                     end_of_initialization:	
   613                           ;End of C runtime variable initialization code
   614                           
   615  0026                     __end_of__initialization:	
   616  0026  0183               	clrf	3
   617  0027  120A  118A  291E   	ljmp	_main	;jump to C main() function
   618                           
   619                           	psect	bssCOMMON
   620  0076                     __pbssCOMMON:	
   621  0076                     _addr:	
   622  0076                     	ds	2
   623  0078                     _temperature:	
   624  0078                     	ds	2
   625                           
   626                           	psect	dataCOMMON
   627  007A                     __pdataCOMMON:	
   628  007A                     _add:	
   629  007A                     	ds	1
   630                           
   631                           	psect	bssBANK0
   632  0020                     __pbssBANK0:	
   633  0020                     lcd_bcd@F1168:	
   634  0020                     	ds	10
   635  002A                     _tempcalc:	
   636  002A                     	ds	2
   637  002C                     _junk:	
   638  002C                     	ds	2
   639  002E                     _access:	
   640  002E                     	ds	2
   641                           
   642                           	psect	clrtext
   643  0182                     clear_ram0:	
   644                           ;	Called with FSR containing the base address, and
   645                           ;	W with the last address+1
   646                           
   647  0182  0064               	clrwdt	;clear the watchdog before getting into this loop
   648  0183                     clrloop0:	
   649  0183  0180               	clrf	0	;clear RAM location pointed to by FSR
   650  0184  0A84               	incf	4,f	;increment pointer
   651  0185  0604               	xorwf	4,w	;XOR with final address
   652  0186  1903               	btfsc	3,2	;have we reached the end yet?
   653  0187  3400               	retlw	0	;all done for this memory range, return
   654  0188  0604               	xorwf	4,w	;XOR again to restore value
   655  0189  2983               	goto	clrloop0	;do the next byte
   656                           
   657                           	psect	cstackCOMMON
   658  0070                     __pcstackCOMMON:	
   659  0070                     ?_InitApp:	
   660  0070                     ?_lcd_initialize:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?_set_lcd_e:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_lcd_clear:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_set_lcd_rs:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_set_lcd_data:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_isr:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ??_isr:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_main:	
   682                           ; 1 bytes @ 0x0
   683                           
   684                           
   685                           ; 1 bytes @ 0x0
   686  0070                     	ds	6
   687                           
   688                           	psect	cstackBANK0
   689  0030                     __pcstackBANK0:	
   690  0030                     ??_InitApp:	
   691  0030                     ?_I2C_Slave_Init:	
   692                           ; 1 bytes @ 0x0
   693                           
   694  0030                     ??_set_lcd_e:	
   695                           ; 1 bytes @ 0x0
   696                           
   697  0030                     ??_set_lcd_rs:	
   698                           ; 1 bytes @ 0x0
   699                           
   700  0030                     ??_set_lcd_data:	
   701                           ; 1 bytes @ 0x0
   702                           
   703  0030                     set_lcd_e@b_output:	
   704                           ; 1 bytes @ 0x0
   705                           
   706  0030                     set_lcd_rs@b_output:	
   707                           ; 1 bytes @ 0x0
   708                           
   709  0030                     set_lcd_data@uc_data:	
   710                           ; 1 bytes @ 0x0
   711                           
   712  0030                     I2C_Slave_Init@address:	
   713                           ; 1 bytes @ 0x0
   714                           
   715                           
   716                           ; 2 bytes @ 0x0
   717  0030                     	ds	1
   718  0031                     ?_send_lcd_data:	
   719  0031                     send_lcd_data@uc_data:	
   720                           ; 1 bytes @ 0x1
   721                           
   722                           
   723                           ; 1 bytes @ 0x1
   724  0031                     	ds	1
   725  0032                     ??_I2C_Slave_Init:	
   726  0032                     ??_send_lcd_data:	
   727                           ; 1 bytes @ 0x2
   728                           
   729                           
   730                           ; 1 bytes @ 0x2
   731  0032                     	ds	2
   732  0034                     send_lcd_data@b_rs:	
   733                           
   734                           ; 1 bytes @ 0x4
   735  0034                     	ds	1
   736  0035                     ??_lcd_initialize:	
   737  0035                     ??_lcd_clear:	
   738                           ; 1 bytes @ 0x5
   739                           
   740                           
   741                           ; 1 bytes @ 0x5
   742  0035                     	ds	2
   743  0037                     ??_main:	
   744                           
   745                           	psect	maintext
   746  011E                     __pmaintext:	
   747                           ; 1 bytes @ 0x7
   748 ;;
   749 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   750 ;;
   751 ;; *************** function _main *****************
   752 ;; Defined at:
   753 ;;		line 21 in file "main.c"
   754 ;; Parameters:    Size  Location     Type
   755 ;;		None
   756 ;; Auto vars:     Size  Location     Type
   757 ;;		None
   758 ;; Return value:  Size  Location     Type
   759 ;;                  1    wreg      void 
   760 ;; Registers used:
   761 ;;		wreg, status,2, status,0, pclath, cstack
   762 ;; Tracked objects:
   763 ;;		On entry : B00/0
   764 ;;		On exit  : 0/0
   765 ;;		Unchanged: 0/0
   766 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   767 ;;      Params:         0       0       0       0       0
   768 ;;      Locals:         0       0       0       0       0
   769 ;;      Temps:          0       0       0       0       0
   770 ;;      Totals:         0       0       0       0       0
   771 ;;Total ram usage:        0 bytes
   772 ;; Hardware stack levels required when called:    5
   773 ;; This function calls:
   774 ;;		_I2C_Slave_Init
   775 ;;		_InitApp
   776 ;;		_lcd_initialize
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           
   783                           ;psect for function _main
   784  011E                     _main:	
   785                           
   786                           ;main.c: 24: InitApp();
   787                           
   788                           ;incstack = 0
   789                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   790  011E  120A  118A  2191  120A  118A  	fcall	_InitApp
   791                           
   792                           ;main.c: 26: PORTA = 0;
   793  0123  1283               	bcf	3,5	;RP0=0, select bank0
   794  0124  1303               	bcf	3,6	;RP1=0, select bank0
   795  0125  0185               	clrf	5	;volatile
   796                           
   797                           ;main.c: 27: PORTB = 0;
   798  0126  0186               	clrf	6	;volatile
   799                           
   800                           ;main.c: 28: PORTC = 0;
   801  0127  0187               	clrf	7	;volatile
   802                           
   803                           ;main.c: 29: PORTD = 0;
   804  0128  0188               	clrf	8	;volatile
   805                           
   806                           ;main.c: 31: TRISA = 0b11111111;
   807  0129  30FF               	movlw	255
   808  012A  1683               	bsf	3,5	;RP0=1, select bank1
   809  012B  1303               	bcf	3,6	;RP1=0, select bank1
   810  012C  0085               	movwf	5	;volatile
   811                           
   812                           ;main.c: 32: TRISB = 0b00000011;
   813  012D  3003               	movlw	3
   814  012E  0086               	movwf	6	;volatile
   815                           
   816                           ;main.c: 33: TRISC = 0b00000000;
   817  012F  0187               	clrf	7	;volatile
   818                           
   819                           ;main.c: 34: TRISD = 0b00000000;
   820  0130  0188               	clrf	8	;volatile
   821                           
   822                           ;main.c: 36: lcd_initialize();
   823  0131  120A  118A  20E6  120A  118A  	fcall	_lcd_initialize
   824                           
   825                           ;main.c: 40: I2C_Slave_Init(0x30);
   826  0136  3030               	movlw	48
   827  0137  1283               	bcf	3,5	;RP0=0, select bank0
   828  0138  1303               	bcf	3,6	;RP1=0, select bank0
   829  0139  00B0               	movwf	I2C_Slave_Init@address
   830  013A  3000               	movlw	0
   831  013B  00B1               	movwf	I2C_Slave_Init@address+1
   832  013C  120A  118A  2142  120A  118A  	fcall	_I2C_Slave_Init
   833  0141                     l81:	
   834                           ;main.c: 42: while(1)
   835                           
   836                           
   837                           ;main.c: 43: {
   838  0141  2941               	goto	l81
   839  0142                     __end_of_main:	
   840                           
   841                           	psect	text1
   842  00E6                     __ptext1:	
   843 ;; *************** function _lcd_initialize *****************
   844 ;; Defined at:
   845 ;;		line 100 in file "lcd.c"
   846 ;; Parameters:    Size  Location     Type
   847 ;;		None
   848 ;; Auto vars:     Size  Location     Type
   849 ;;		None
   850 ;; Return value:  Size  Location     Type
   851 ;;                  1    wreg      void 
   852 ;; Registers used:
   853 ;;		wreg, status,2, status,0, pclath, cstack
   854 ;; Tracked objects:
   855 ;;		On entry : 0/0
   856 ;;		On exit  : 0/0
   857 ;;		Unchanged: 0/0
   858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   859 ;;      Params:         0       0       0       0       0
   860 ;;      Locals:         0       0       0       0       0
   861 ;;      Temps:          0       2       0       0       0
   862 ;;      Totals:         0       2       0       0       0
   863 ;;Total ram usage:        2 bytes
   864 ;; Hardware stack levels used:    1
   865 ;; Hardware stack levels required when called:    4
   866 ;; This function calls:
   867 ;;		_lcd_clear
   868 ;;		_send_lcd_data
   869 ;;		_set_lcd_e
   870 ;; This function is called by:
   871 ;;		_main
   872 ;; This function uses a non-reentrant model
   873 ;;
   874                           
   875                           
   876                           ;psect for function _lcd_initialize
   877  00E6                     _lcd_initialize:	
   878                           
   879                           ;lcd.c: 104: set_lcd_e(1);
   880                           
   881                           ;incstack = 0
   882                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   883  00E6  3001               	movlw	1
   884  00E7  120A  118A  216C  120A  118A  	fcall	_set_lcd_e
   885                           
   886                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
   887  00EC  3062               	movlw	98
   888  00ED  1283               	bcf	3,5	;RP0=0, select bank0
   889  00EE  1303               	bcf	3,6	;RP1=0, select bank0
   890  00EF  00B6               	movwf	??_lcd_initialize+1
   891  00F0  3065               	movlw	101
   892  00F1  00B5               	movwf	??_lcd_initialize
   893  00F2                     u697:	
   894  00F2  0BB5               	decfsz	??_lcd_initialize,f
   895  00F3  28F2               	goto	u697
   896  00F4  0BB6               	decfsz	??_lcd_initialize+1,f
   897  00F5  28F2               	goto	u697
   898                           
   899                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
   900  00F6  3038               	movlw	56
   901  00F7  1283               	bcf	3,5	;RP0=0, select bank0
   902  00F8  1303               	bcf	3,6	;RP1=0, select bank0
   903  00F9  00B5               	movwf	??_lcd_initialize
   904  00FA  0835               	movf	??_lcd_initialize,w
   905  00FB  00B1               	movwf	send_lcd_data@uc_data
   906  00FC  3000               	movlw	0
   907  00FD  120A  118A  20A9  120A  118A  	fcall	_send_lcd_data
   908                           
   909                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
   910  0102  3006               	movlw	6
   911  0103  1283               	bcf	3,5	;RP0=0, select bank0
   912  0104  1303               	bcf	3,6	;RP1=0, select bank0
   913  0105  00B5               	movwf	??_lcd_initialize
   914  0106  0835               	movf	??_lcd_initialize,w
   915  0107  00B1               	movwf	send_lcd_data@uc_data
   916  0108  3000               	movlw	0
   917  0109  120A  118A  20A9  120A  118A  	fcall	_send_lcd_data
   918                           
   919                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
   920  010E  300C               	movlw	12
   921  010F  1283               	bcf	3,5	;RP0=0, select bank0
   922  0110  1303               	bcf	3,6	;RP1=0, select bank0
   923  0111  00B5               	movwf	??_lcd_initialize
   924  0112  0835               	movf	??_lcd_initialize,w
   925  0113  00B1               	movwf	send_lcd_data@uc_data
   926  0114  3000               	movlw	0
   927  0115  120A  118A  20A9  120A  118A  	fcall	_send_lcd_data
   928                           
   929                           ;lcd.c: 118: lcd_clear();
   930  011A  120A  118A  2179   	fcall	_lcd_clear
   931  011D  0008               	return
   932  011E                     __end_of_lcd_initialize:	
   933                           
   934                           	psect	text2
   935  0179                     __ptext2:	
   936 ;; *************** function _lcd_clear *****************
   937 ;; Defined at:
   938 ;;		line 136 in file "lcd.c"
   939 ;; Parameters:    Size  Location     Type
   940 ;;		None
   941 ;; Auto vars:     Size  Location     Type
   942 ;;		None
   943 ;; Return value:  Size  Location     Type
   944 ;;                  1    wreg      void 
   945 ;; Registers used:
   946 ;;		wreg, status,2, status,0, pclath, cstack
   947 ;; Tracked objects:
   948 ;;		On entry : 0/0
   949 ;;		On exit  : 0/0
   950 ;;		Unchanged: 0/0
   951 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   952 ;;      Params:         0       0       0       0       0
   953 ;;      Locals:         0       0       0       0       0
   954 ;;      Temps:          0       0       0       0       0
   955 ;;      Totals:         0       0       0       0       0
   956 ;;Total ram usage:        0 bytes
   957 ;; Hardware stack levels used:    1
   958 ;; Hardware stack levels required when called:    3
   959 ;; This function calls:
   960 ;;		_send_lcd_data
   961 ;; This function is called by:
   962 ;;		_lcd_initialize
   963 ;; This function uses a non-reentrant model
   964 ;;
   965                           
   966                           
   967                           ;psect for function _lcd_clear
   968  0179                     _lcd_clear:	
   969                           
   970                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
   971                           
   972                           ;incstack = 0
   973                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
   974  0179  1283               	bcf	3,5	;RP0=0, select bank0
   975  017A  1303               	bcf	3,6	;RP1=0, select bank0
   976  017B  01B1               	clrf	send_lcd_data@uc_data
   977  017C  0AB1               	incf	send_lcd_data@uc_data,f
   978  017D  3000               	movlw	0
   979  017E  120A  118A  20A9   	fcall	_send_lcd_data
   980  0181  0008               	return
   981  0182                     __end_of_lcd_clear:	
   982                           
   983                           	psect	text3
   984  00A9                     __ptext3:	
   985 ;; *************** function _send_lcd_data *****************
   986 ;; Defined at:
   987 ;;		line 308 in file "lcd.c"
   988 ;; Parameters:    Size  Location     Type
   989 ;;  b_rs            1    wreg     unsigned char 
   990 ;;  uc_data         1    1[BANK0 ] unsigned char 
   991 ;; Auto vars:     Size  Location     Type
   992 ;;  b_rs            1    4[BANK0 ] unsigned char 
   993 ;; Return value:  Size  Location     Type
   994 ;;                  1    wreg      void 
   995 ;; Registers used:
   996 ;;		wreg, status,2, status,0, pclath, cstack
   997 ;; Tracked objects:
   998 ;;		On entry : 0/0
   999 ;;		On exit  : 0/0
  1000 ;;		Unchanged: 0/0
  1001 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1002 ;;      Params:         0       1       0       0       0
  1003 ;;      Locals:         0       1       0       0       0
  1004 ;;      Temps:          0       2       0       0       0
  1005 ;;      Totals:         0       4       0       0       0
  1006 ;;Total ram usage:        4 bytes
  1007 ;; Hardware stack levels used:    1
  1008 ;; Hardware stack levels required when called:    2
  1009 ;; This function calls:
  1010 ;;		_set_lcd_data
  1011 ;;		_set_lcd_e
  1012 ;;		_set_lcd_rs
  1013 ;; This function is called by:
  1014 ;;		_lcd_initialize
  1015 ;;		_lcd_clear
  1016 ;;		_lcd_home
  1017 ;;		_lcd_2ndline
  1018 ;;		_lcd_goto
  1019 ;;		_lcd_putchar
  1020 ;; This function uses a non-reentrant model
  1021 ;;
  1022                           
  1023                           
  1024                           ;psect for function _send_lcd_data
  1025  00A9                     _send_lcd_data:	
  1026                           
  1027                           ;incstack = 0
  1028                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1029                           ;send_lcd_data@b_rs stored from wreg
  1030  00A9  1283               	bcf	3,5	;RP0=0, select bank0
  1031  00AA  1303               	bcf	3,6	;RP1=0, select bank0
  1032  00AB  00B4               	movwf	send_lcd_data@b_rs
  1033                           
  1034                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1035  00AC  0834               	movf	send_lcd_data@b_rs,w
  1036  00AD  120A  118A  215F  120A  118A  	fcall	_set_lcd_rs
  1037                           
  1038                           ;lcd.c: 312: set_lcd_data(uc_data);
  1039  00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1040  00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1041  00B4  0831               	movf	send_lcd_data@uc_data,w
  1042  00B5  120A  118A  218A  120A  118A  	fcall	_set_lcd_data
  1043                           
  1044                           ;lcd.c: 315: set_lcd_e(1);
  1045  00BA  3001               	movlw	1
  1046  00BB  120A  118A  216C  120A  118A  	fcall	_set_lcd_e
  1047                           
  1048                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1049  00C0  3007               	movlw	7
  1050  00C1  1283               	bcf	3,5	;RP0=0, select bank0
  1051  00C2  1303               	bcf	3,6	;RP1=0, select bank0
  1052  00C3  00B3               	movwf	??_send_lcd_data+1
  1053  00C4  307C               	movlw	124
  1054  00C5  00B2               	movwf	??_send_lcd_data
  1055  00C6                     u707:	
  1056  00C6  0BB2               	decfsz	??_send_lcd_data,f
  1057  00C7  28C6               	goto	u707
  1058  00C8  0BB3               	decfsz	??_send_lcd_data+1,f
  1059  00C9  28C6               	goto	u707
  1060  00CA  0000               	nop
  1061                           
  1062                           ;lcd.c: 317: set_lcd_e(0);
  1063  00CB  3000               	movlw	0
  1064  00CC  120A  118A  216C  120A  118A  	fcall	_set_lcd_e
  1065                           
  1066                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1067  00D1  300D               	movlw	13
  1068  00D2  1283               	bcf	3,5	;RP0=0, select bank0
  1069  00D3  1303               	bcf	3,6	;RP1=0, select bank0
  1070  00D4  00B3               	movwf	??_send_lcd_data+1
  1071  00D5  30FB               	movlw	251
  1072  00D6  00B2               	movwf	??_send_lcd_data
  1073  00D7                     u717:	
  1074  00D7  0BB2               	decfsz	??_send_lcd_data,f
  1075  00D8  28D7               	goto	u717
  1076  00D9  0BB3               	decfsz	??_send_lcd_data+1,f
  1077  00DA  28D7               	goto	u717
  1078                           
  1079                           ;lcd.c: 321: set_lcd_rs(0);
  1080  00DB  3000               	movlw	0
  1081  00DC  120A  118A  215F  120A  118A  	fcall	_set_lcd_rs
  1082                           
  1083                           ;lcd.c: 322: set_lcd_data(0);
  1084  00E1  3000               	movlw	0
  1085  00E2  120A  118A  218A   	fcall	_set_lcd_data
  1086  00E5  0008               	return
  1087  00E6                     __end_of_send_lcd_data:	
  1088                           
  1089                           	psect	text4
  1090  015F                     __ptext4:	
  1091 ;; *************** function _set_lcd_rs *****************
  1092 ;; Defined at:
  1093 ;;		line 360 in file "lcd.c"
  1094 ;; Parameters:    Size  Location     Type
  1095 ;;  b_output        1    wreg     unsigned char 
  1096 ;; Auto vars:     Size  Location     Type
  1097 ;;  b_output        1    0[BANK0 ] unsigned char 
  1098 ;; Return value:  Size  Location     Type
  1099 ;;                  1    wreg      void 
  1100 ;; Registers used:
  1101 ;;		wreg
  1102 ;; Tracked objects:
  1103 ;;		On entry : 0/0
  1104 ;;		On exit  : 0/0
  1105 ;;		Unchanged: 0/0
  1106 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1107 ;;      Params:         0       0       0       0       0
  1108 ;;      Locals:         0       1       0       0       0
  1109 ;;      Temps:          0       0       0       0       0
  1110 ;;      Totals:         0       1       0       0       0
  1111 ;;Total ram usage:        1 bytes
  1112 ;; Hardware stack levels used:    1
  1113 ;; Hardware stack levels required when called:    1
  1114 ;; This function calls:
  1115 ;;		Nothing
  1116 ;; This function is called by:
  1117 ;;		_send_lcd_data
  1118 ;; This function uses a non-reentrant model
  1119 ;;
  1120                           
  1121                           
  1122                           ;psect for function _set_lcd_rs
  1123  015F                     _set_lcd_rs:	
  1124                           
  1125                           ;incstack = 0
  1126                           ; Regs used in _set_lcd_rs: [wreg]
  1127                           ;set_lcd_rs@b_output stored from wreg
  1128  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1129  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1130  0161  00B0               	movwf	set_lcd_rs@b_output
  1131                           
  1132                           ;lcd.c: 362: RB4 = b_output;
  1133  0162  1C30               	btfss	set_lcd_rs@b_output,0
  1134  0163  2968               	goto	u600
  1135  0164  1283               	bcf	3,5	;RP0=0, select bank0
  1136  0165  1303               	bcf	3,6	;RP1=0, select bank0
  1137  0166  1606               	bsf	6,4	;volatile
  1138  0167  0008               	return
  1139  0168                     u600:	
  1140  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1141  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1142  016A  1206               	bcf	6,4	;volatile
  1143  016B  0008               	return
  1144  016C                     __end_of_set_lcd_rs:	
  1145                           
  1146                           	psect	text5
  1147  016C                     __ptext5:	
  1148 ;; *************** function _set_lcd_e *****************
  1149 ;; Defined at:
  1150 ;;		line 340 in file "lcd.c"
  1151 ;; Parameters:    Size  Location     Type
  1152 ;;  b_output        1    wreg     unsigned char 
  1153 ;; Auto vars:     Size  Location     Type
  1154 ;;  b_output        1    0[BANK0 ] unsigned char 
  1155 ;; Return value:  Size  Location     Type
  1156 ;;                  1    wreg      void 
  1157 ;; Registers used:
  1158 ;;		wreg
  1159 ;; Tracked objects:
  1160 ;;		On entry : 0/0
  1161 ;;		On exit  : 0/0
  1162 ;;		Unchanged: 0/0
  1163 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1164 ;;      Params:         0       0       0       0       0
  1165 ;;      Locals:         0       1       0       0       0
  1166 ;;      Temps:          0       0       0       0       0
  1167 ;;      Totals:         0       1       0       0       0
  1168 ;;Total ram usage:        1 bytes
  1169 ;; Hardware stack levels used:    1
  1170 ;; Hardware stack levels required when called:    1
  1171 ;; This function calls:
  1172 ;;		Nothing
  1173 ;; This function is called by:
  1174 ;;		_lcd_initialize
  1175 ;;		_send_lcd_data
  1176 ;; This function uses a non-reentrant model
  1177 ;;
  1178                           
  1179                           
  1180                           ;psect for function _set_lcd_e
  1181  016C                     _set_lcd_e:	
  1182                           
  1183                           ;incstack = 0
  1184                           ; Regs used in _set_lcd_e: [wreg]
  1185                           ;set_lcd_e@b_output stored from wreg
  1186  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1187  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1188  016E  00B0               	movwf	set_lcd_e@b_output
  1189                           
  1190                           ;lcd.c: 342: RB5 = b_output;
  1191  016F  1C30               	btfss	set_lcd_e@b_output,0
  1192  0170  2975               	goto	u580
  1193  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1194  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1195  0173  1686               	bsf	6,5	;volatile
  1196  0174  0008               	return
  1197  0175                     u580:	
  1198  0175  1283               	bcf	3,5	;RP0=0, select bank0
  1199  0176  1303               	bcf	3,6	;RP1=0, select bank0
  1200  0177  1286               	bcf	6,5	;volatile
  1201  0178  0008               	return
  1202  0179                     __end_of_set_lcd_e:	
  1203                           
  1204                           	psect	text6
  1205  018A                     __ptext6:	
  1206 ;; *************** function _set_lcd_data *****************
  1207 ;; Defined at:
  1208 ;;		line 380 in file "lcd.c"
  1209 ;; Parameters:    Size  Location     Type
  1210 ;;  uc_data         1    wreg     unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  uc_data         1    0[BANK0 ] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 0/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         0       0       0       0       0
  1223 ;;      Locals:         0       1       0       0       0
  1224 ;;      Temps:          0       0       0       0       0
  1225 ;;      Totals:         0       1       0       0       0
  1226 ;;Total ram usage:        1 bytes
  1227 ;; Hardware stack levels used:    1
  1228 ;; Hardware stack levels required when called:    1
  1229 ;; This function calls:
  1230 ;;		Nothing
  1231 ;; This function is called by:
  1232 ;;		_send_lcd_data
  1233 ;; This function uses a non-reentrant model
  1234 ;;
  1235                           
  1236                           
  1237                           ;psect for function _set_lcd_data
  1238  018A                     _set_lcd_data:	
  1239                           
  1240                           ;incstack = 0
  1241                           ; Regs used in _set_lcd_data: [wreg]
  1242                           ;set_lcd_data@uc_data stored from wreg
  1243  018A  1283               	bcf	3,5	;RP0=0, select bank0
  1244  018B  1303               	bcf	3,6	;RP1=0, select bank0
  1245  018C  00B0               	movwf	set_lcd_data@uc_data
  1246                           
  1247                           ;lcd.c: 382: PORTD = uc_data;
  1248  018D  0830               	movf	set_lcd_data@uc_data,w
  1249  018E  0088               	movwf	8	;volatile
  1250  018F  0008               	return
  1251  0190                     __end_of_set_lcd_data:	
  1252                           
  1253                           	psect	text7
  1254  0191                     __ptext7:	
  1255 ;; *************** function _InitApp *****************
  1256 ;; Defined at:
  1257 ;;		line 22 in file "user.c"
  1258 ;; Parameters:    Size  Location     Type
  1259 ;;		None
  1260 ;; Auto vars:     Size  Location     Type
  1261 ;;		None
  1262 ;; Return value:  Size  Location     Type
  1263 ;;                  1    wreg      void 
  1264 ;; Registers used:
  1265 ;;		None
  1266 ;; Tracked objects:
  1267 ;;		On entry : 0/0
  1268 ;;		On exit  : 0/0
  1269 ;;		Unchanged: 0/0
  1270 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1271 ;;      Params:         0       0       0       0       0
  1272 ;;      Locals:         0       0       0       0       0
  1273 ;;      Temps:          0       0       0       0       0
  1274 ;;      Totals:         0       0       0       0       0
  1275 ;;Total ram usage:        0 bytes
  1276 ;; Hardware stack levels used:    1
  1277 ;; Hardware stack levels required when called:    1
  1278 ;; This function calls:
  1279 ;;		Nothing
  1280 ;; This function is called by:
  1281 ;;		_main
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           
  1286                           ;psect for function _InitApp
  1287  0191                     _InitApp:	
  1288                           
  1289                           ;incstack = 0
  1290                           ; Regs used in _InitApp: []
  1291  0191  0008               	return
  1292  0192                     __end_of_InitApp:	
  1293                           
  1294                           	psect	text8
  1295  0142                     __ptext8:	
  1296 ;; *************** function _I2C_Slave_Init *****************
  1297 ;; Defined at:
  1298 ;;		line 15 in file "i2c.c"
  1299 ;; Parameters:    Size  Location     Type
  1300 ;;  address         2    0[BANK0 ] short 
  1301 ;; Auto vars:     Size  Location     Type
  1302 ;;		None
  1303 ;; Return value:  Size  Location     Type
  1304 ;;                  1    wreg      void 
  1305 ;; Registers used:
  1306 ;;		wreg
  1307 ;; Tracked objects:
  1308 ;;		On entry : 0/0
  1309 ;;		On exit  : 0/0
  1310 ;;		Unchanged: 0/0
  1311 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1312 ;;      Params:         0       2       0       0       0
  1313 ;;      Locals:         0       0       0       0       0
  1314 ;;      Temps:          0       0       0       0       0
  1315 ;;      Totals:         0       2       0       0       0
  1316 ;;Total ram usage:        2 bytes
  1317 ;; Hardware stack levels used:    1
  1318 ;; Hardware stack levels required when called:    1
  1319 ;; This function calls:
  1320 ;;		Nothing
  1321 ;; This function is called by:
  1322 ;;		_main
  1323 ;; This function uses a non-reentrant model
  1324 ;;
  1325                           
  1326                           
  1327                           ;psect for function _I2C_Slave_Init
  1328  0142                     _I2C_Slave_Init:	
  1329                           
  1330                           ;i2c.c: 17: SSPSTAT = 0x80;
  1331                           
  1332                           ;incstack = 0
  1333                           ; Regs used in _I2C_Slave_Init: [wreg]
  1334  0142  3080               	movlw	128
  1335  0143  1683               	bsf	3,5	;RP0=1, select bank1
  1336  0144  1303               	bcf	3,6	;RP1=0, select bank1
  1337  0145  0094               	movwf	20	;volatile
  1338                           
  1339                           ;i2c.c: 18: SSPADD = address;
  1340  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1341  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1342  0148  0830               	movf	I2C_Slave_Init@address,w
  1343  0149  1683               	bsf	3,5	;RP0=1, select bank1
  1344  014A  1303               	bcf	3,6	;RP1=0, select bank1
  1345  014B  0093               	movwf	19	;volatile
  1346                           
  1347                           ;i2c.c: 19: SSPCON = 0x36;
  1348  014C  3036               	movlw	54
  1349  014D  1283               	bcf	3,5	;RP0=0, select bank0
  1350  014E  1303               	bcf	3,6	;RP1=0, select bank0
  1351  014F  0094               	movwf	20	;volatile
  1352                           
  1353                           ;i2c.c: 20: SSPCON2 = 0x01;
  1354  0150  3001               	movlw	1
  1355  0151  1683               	bsf	3,5	;RP0=1, select bank1
  1356  0152  1303               	bcf	3,6	;RP1=0, select bank1
  1357  0153  0091               	movwf	17	;volatile
  1358                           
  1359                           ;i2c.c: 21: TRISC3 = 1;
  1360  0154  1587               	bsf	7,3	;volatile
  1361                           
  1362                           ;i2c.c: 22: TRISC4 = 1;
  1363  0155  1607               	bsf	7,4	;volatile
  1364                           
  1365                           ;i2c.c: 23: GIE = 1;
  1366  0156  178B               	bsf	11,7	;volatile
  1367                           
  1368                           ;i2c.c: 24: PEIE = 1;
  1369  0157  170B               	bsf	11,6	;volatile
  1370                           
  1371                           ;i2c.c: 25: SSPIF = 0;
  1372  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1373  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1374  015A  118C               	bcf	12,3	;volatile
  1375                           
  1376                           ;i2c.c: 26: SSPIE = 1;
  1377  015B  1683               	bsf	3,5	;RP0=1, select bank1
  1378  015C  1303               	bcf	3,6	;RP1=0, select bank1
  1379  015D  158C               	bsf	12,3	;volatile
  1380  015E  0008               	return
  1381  015F                     __end_of_I2C_Slave_Init:	
  1382                           
  1383                           	psect	text9
  1384  002A                     __ptext9:	
  1385 ;; *************** function _isr *****************
  1386 ;; Defined at:
  1387 ;;		line 18 in file "interrupts.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0
  1403 ;;      Temps:          6       0       0       0       0
  1404 ;;      Totals:         6       0       0       0       0
  1405 ;;Total ram usage:        6 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; This function calls:
  1408 ;;		Nothing
  1409 ;; This function is called by:
  1410 ;;		Interrupt level 1
  1411 ;; This function uses a non-reentrant model
  1412 ;;
  1413                           
  1414                           
  1415                           ;psect for function _isr
  1416  002A                     _isr:	
  1417                           
  1418                           ;interrupts.c: 21: if(SSPIF == 1)
  1419  002A  1D8C               	btfss	12,3	;volatile
  1420  002B  289E               	goto	i1l44
  1421                           
  1422                           ;interrupts.c: 22: {
  1423                           ;interrupts.c: 23: if(SSPSTATbits.R_nW)
  1424  002C  1683               	bsf	3,5	;RP0=1, select bank1
  1425  002D  1303               	bcf	3,6	;RP1=0, select bank1
  1426  002E  1914               	btfsc	20,2	;volatile
  1427                           
  1428                           ;interrupts.c: 24: {
  1429                           ;interrupts.c: 25: if(!SSPSTATbits.D_nA)
  1430  002F  1A94               	btfsc	20,5	;volatile
  1431  0030  285E               	goto	i1l1095
  1432                           
  1433                           ;interrupts.c: 26: {
  1434                           ;interrupts.c: 27: junk = SSPBUF;
  1435  0031  1283               	bcf	3,5	;RP0=0, select bank0
  1436  0032  1303               	bcf	3,6	;RP1=0, select bank0
  1437  0033  0813               	movf	19,w	;volatile
  1438  0034  00F0               	movwf	??_isr
  1439  0035  01F1               	clrf	??_isr+1
  1440  0036  0870               	movf	??_isr,w
  1441  0037  00AC               	movwf	_junk
  1442  0038  0871               	movf	??_isr+1,w
  1443  0039  00AD               	movwf	_junk+1
  1444                           
  1445                           ;interrupts.c: 28: switch(addr)
  1446  003A  2846               	goto	i1l1087
  1447  003B                     i1l1081:	
  1448                           ;interrupts.c: 29: {
  1449                           ;interrupts.c: 30: case 1:
  1450                           
  1451                           
  1452                           ;interrupts.c: 31: SSPBUF = 69;
  1453  003B  3045               	movlw	69
  1454  003C  283E               	goto	L1
  1455  003D                     i1l1083:	
  1456                           ;interrupts.c: 34: case 2:
  1457                           
  1458                           ;interrupts.c: 33: break;
  1459                           
  1460                           ;interrupts.c: 32: access++;
  1461                           
  1462                           
  1463                           ;interrupts.c: 35: SSPBUF = temperature;
  1464  003D  0878               	movf	_temperature,w
  1465  003E                     L1:	
  1466  003E  0093               	movwf	19	;volatile
  1467                           
  1468                           ;interrupts.c: 36: access++;
  1469  003F  3001               	movlw	1
  1470  0040  07AE               	addwf	_access,f
  1471  0041  1803               	skipnc
  1472  0042  0AAF               	incf	_access+1,f
  1473  0043  3000               	movlw	0
  1474  0044  07AF               	addwf	_access+1,f
  1475                           
  1476                           ;interrupts.c: 38: }
  1477                           
  1478                           ;interrupts.c: 37: break;
  1479  0045  2853               	goto	i1l32
  1480  0046                     i1l1087:	
  1481                           
  1482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1483                           ; Switch size 1, requested type "space"
  1484                           ; Number of cases is 1, Range of values is 0 to 0
  1485                           ; switch strategies available:
  1486                           ; Name         Instructions Cycles
  1487                           ; simple_byte            4     3 (average)
  1488                           ; direct_byte           11     8 (fixed)
  1489                           ; jumptable            260     6 (fixed)
  1490                           ;	Chosen strategy is simple_byte
  1491  0046  0877               	movf	_addr+1,w
  1492  0047  3A00               	xorlw	0	; case 0
  1493  0048  1903               	skipnz
  1494  0049  284B               	goto	i1l1409
  1495  004A  2853               	goto	i1l32
  1496  004B                     i1l1409:	
  1497                           
  1498                           ; Switch size 1, requested type "space"
  1499                           ; Number of cases is 2, Range of values is 1 to 2
  1500                           ; switch strategies available:
  1501                           ; Name         Instructions Cycles
  1502                           ; simple_byte            7     4 (average)
  1503                           ; direct_byte           17    11 (fixed)
  1504                           ; jumptable            263     9 (fixed)
  1505                           ;	Chosen strategy is simple_byte
  1506  004B  0876               	movf	_addr,w
  1507  004C  3A01               	xorlw	1	; case 1
  1508  004D  1903               	skipnz
  1509  004E  283B               	goto	i1l1081
  1510  004F  3A03               	xorlw	3	; case 2
  1511  0050  1903               	skipnz
  1512  0051  283D               	goto	i1l1083
  1513  0052  2853               	goto	i1l32
  1514  0053                     i1l32:	
  1515                           
  1516                           ;interrupts.c: 40: if(SSPCONbits.SSPOV)
  1517  0053  1F14               	btfss	20,6	;volatile
  1518  0054  285D               	goto	i1l1093
  1519                           
  1520                           ;interrupts.c: 41: {
  1521                           ;interrupts.c: 42: SSPCONbits.SSPOV = 0;
  1522  0055  1314               	bcf	20,6	;volatile
  1523                           
  1524                           ;interrupts.c: 43: junk = SSPBUF;
  1525  0056  0813               	movf	19,w	;volatile
  1526  0057  00F0               	movwf	??_isr
  1527  0058  01F1               	clrf	??_isr+1
  1528  0059  0870               	movf	??_isr,w
  1529  005A  00AC               	movwf	_junk
  1530  005B  0871               	movf	??_isr+1,w
  1531  005C  00AD               	movwf	_junk+1
  1532  005D                     i1l1093:	
  1533                           
  1534                           ;interrupts.c: 44: }
  1535                           ;interrupts.c: 45: SSPCONbits.CKP = 1;
  1536  005D  1614               	bsf	20,4	;volatile
  1537  005E                     i1l1095:	
  1538                           
  1539                           ;interrupts.c: 46: }
  1540                           ;interrupts.c: 47: }
  1541                           ;interrupts.c: 49: if(!SSPSTATbits.R_nW)
  1542  005E  1683               	bsf	3,5	;RP0=1, select bank1
  1543  005F  1303               	bcf	3,6	;RP1=0, select bank1
  1544  0060  1914               	btfsc	20,2	;volatile
  1545  0061  289C               	goto	i1l1123
  1546                           
  1547                           ;interrupts.c: 50: {
  1548                           ;interrupts.c: 51: if(!SSPSTATbits.D_nA)
  1549  0062  1A94               	btfsc	20,5	;volatile
  1550  0063  286E               	goto	i1l1103
  1551                           
  1552                           ;interrupts.c: 52: {
  1553                           ;interrupts.c: 53: junk = SSPBUF;
  1554  0064  1283               	bcf	3,5	;RP0=0, select bank0
  1555  0065  1303               	bcf	3,6	;RP1=0, select bank0
  1556  0066  0813               	movf	19,w	;volatile
  1557  0067  00F0               	movwf	??_isr
  1558  0068  01F1               	clrf	??_isr+1
  1559  0069  0870               	movf	??_isr,w
  1560  006A  00AC               	movwf	_junk
  1561  006B  0871               	movf	??_isr+1,w
  1562  006C  00AD               	movwf	_junk+1
  1563                           
  1564                           ;interrupts.c: 54: SSPCONbits.CKP = 1;
  1565  006D  1614               	bsf	20,4	;volatile
  1566  006E                     i1l1103:	
  1567                           
  1568                           ;interrupts.c: 55: }
  1569                           ;interrupts.c: 56: if(SSPSTATbits.D_nA)
  1570  006E  1683               	bsf	3,5	;RP0=1, select bank1
  1571  006F  1303               	bcf	3,6	;RP1=0, select bank1
  1572  0070  1A94               	btfsc	20,5	;volatile
  1573  0071  2884               	goto	i1l1115
  1574  0072  289C               	goto	i1l1123
  1575  0073                     i1l1107:	
  1576                           ;interrupts.c: 59: {
  1577                           ;interrupts.c: 60: case 1:
  1578                           
  1579                           ;interrupts.c: 57: {
  1580                           ;interrupts.c: 58: switch(SSPBUF)
  1581                           
  1582                           
  1583                           ;interrupts.c: 61: addr = 1;
  1584  0073  3001               	movlw	1
  1585  0074  2876               	goto	L2
  1586  0075                     i1l1109:	
  1587                           ;interrupts.c: 63: case 2:
  1588                           
  1589                           ;interrupts.c: 62: break;
  1590                           
  1591                           
  1592                           ;interrupts.c: 64: addr = 2;
  1593  0075  3002               	movlw	2
  1594  0076                     L2:	
  1595  0076  00F6               	movwf	_addr
  1596  0077  3000               	movlw	0
  1597  0078  00F7               	movwf	_addr+1
  1598                           
  1599                           ;interrupts.c: 65: break;
  1600  0079  2890               	goto	i1l40
  1601  007A                     i1l1111:	
  1602                           ;interrupts.c: 66: case 0xFF:
  1603                           
  1604                           
  1605                           ;interrupts.c: 67: RC7=!RC7;
  1606  007A  3080               	movlw	128
  1607  007B  1283               	bcf	3,5	;RP0=0, select bank0
  1608  007C  0687               	xorwf	7,f
  1609                           
  1610                           ;interrupts.c: 68: access++;
  1611  007D  3001               	movlw	1
  1612  007E  07AE               	addwf	_access,f
  1613  007F  1803               	skipnc
  1614  0080  0AAF               	incf	_access+1,f
  1615  0081  3000               	movlw	0
  1616  0082  07AF               	addwf	_access+1,f
  1617                           
  1618                           ;interrupts.c: 74: }
  1619                           
  1620                           ;interrupts.c: 69: break;
  1621  0083  2890               	goto	i1l40
  1622  0084                     i1l1115:	
  1623  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1624  0085  0813               	movf	19,w	;volatile
  1625                           
  1626                           ; Switch size 1, requested type "space"
  1627                           ; Number of cases is 3, Range of values is 1 to 255
  1628                           ; switch strategies available:
  1629                           ; Name         Instructions Cycles
  1630                           ; simple_byte           10     6 (average)
  1631                           ; jumptable            263     9 (fixed)
  1632                           ;	Chosen strategy is simple_byte
  1633  0086  3A01               	xorlw	1	; case 1
  1634  0087  1903               	skipnz
  1635  0088  2873               	goto	i1l1107
  1636  0089  3A03               	xorlw	3	; case 2
  1637  008A  1903               	skipnz
  1638  008B  2875               	goto	i1l1109
  1639  008C  3AFD               	xorlw	253	; case 255
  1640  008D  1903               	skipnz
  1641  008E  287A               	goto	i1l1111
  1642  008F  2890               	goto	i1l40
  1643  0090                     i1l40:	
  1644                           
  1645                           ;interrupts.c: 76: if(SSPCONbits.WCOL)
  1646  0090  1283               	bcf	3,5	;RP0=0, select bank0
  1647  0091  1F94               	btfss	20,7	;volatile
  1648  0092  289B               	goto	i1l1121
  1649                           
  1650                           ;interrupts.c: 77: {
  1651                           ;interrupts.c: 78: SSPCONbits.WCOL = 0;
  1652  0093  1394               	bcf	20,7	;volatile
  1653                           
  1654                           ;interrupts.c: 79: junk = SSPBUF;
  1655  0094  0813               	movf	19,w	;volatile
  1656  0095  00F0               	movwf	??_isr
  1657  0096  01F1               	clrf	??_isr+1
  1658  0097  0870               	movf	??_isr,w
  1659  0098  00AC               	movwf	_junk
  1660  0099  0871               	movf	??_isr+1,w
  1661  009A  00AD               	movwf	_junk+1
  1662  009B                     i1l1121:	
  1663                           
  1664                           ;interrupts.c: 80: }
  1665                           ;interrupts.c: 81: SSPCONbits.CKP = 1;
  1666  009B  1614               	bsf	20,4	;volatile
  1667  009C                     i1l1123:	
  1668                           
  1669                           ;interrupts.c: 82: }
  1670                           ;interrupts.c: 83: }
  1671                           ;interrupts.c: 84: SSPIF = 0;
  1672  009C  1283               	bcf	3,5	;RP0=0, select bank0
  1673  009D  118C               	bcf	12,3	;volatile
  1674  009E                     i1l44:	
  1675  009E  0875               	movf	??_isr+5,w
  1676  009F  00FF               	movwf	127
  1677  00A0  0874               	movf	??_isr+4,w
  1678  00A1  008A               	movwf	10
  1679  00A2  0873               	movf	??_isr+3,w
  1680  00A3  0084               	movwf	4
  1681  00A4  0E72               	swapf	(??_isr+2)^(0+-128),w
  1682  00A5  0083               	movwf	3
  1683  00A6  0EFE               	swapf	126,f
  1684  00A7  0E7E               	swapf	126,w
  1685  00A8  0009               	retfie
  1686  00A9                     __end_of_isr:	
  1687  007E                     btemp	set	126	;btemp
  1688  007E                     wtemp0	set	126
  1689                           
  1690                           	psect	intentry
  1691  0004                     __pintentry:	
  1692                           ;incstack = 0
  1693                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1694                           
  1695  0004                     interrupt_function:	
  1696  007E                     saved_w	set	btemp
  1697  0004  00FE               	movwf	btemp
  1698  0005  0E03               	swapf	3,w
  1699  0006  00F2               	movwf	??_isr+2
  1700  0007  0804               	movf	4,w
  1701  0008  00F3               	movwf	??_isr+3
  1702  0009  080A               	movf	10,w
  1703  000A  00F4               	movwf	??_isr+4
  1704  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1705  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1706  000D  087F               	movf	btemp+1,w
  1707  000E  00F5               	movwf	??_isr+5
  1708  000F  120A  118A  282A   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         20
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      11
    BANK0            80      7      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_initialize
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1477
                     _I2C_Slave_Init
                            _InitApp
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1381
                                              5 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     675
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     675
                                              1 BANK0      4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      31
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Slave_Init                                       2     0      2      96
                                              0 BANK0      2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  6     6      0       0
                                              0 COMMON     6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Slave_Init
   _InitApp
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      7      17       5       28.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       B       1       78.6%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      22      12        0.0%
ABS                  0      0      22       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 23 09:16:44 2018

            __CFG_CP$OFF 0000              _SSPSTATbits 0094                       l81 0141  
                     fsr 0004                      _GIE 005F                      _RB4 0034  
                    _RB5 0035                      _RC7 003F                      u600 0168  
                    _PEN 048A             __CFG_CPD$OFF 0000                      u707 00C6  
                    u580 0175                      _SEN 0488                      u717 00D7  
                    u697 00F2                      _add 007A                      _isr 002A  
                    fsr0 0004                      indf 0000             __CFG_FOSC$HS 0000  
      set_lcd_e@b_output 0030             __CFG_LVP$OFF 0000                     _ADFM 04FF  
                   ?_isr 0070                     _ADON 00F8                     _CHS0 00FB  
                   _CHS1 00FC                     _CHS2 00FD                     _PEIE 005E  
                   i1l40 0090                     i1l32 0053                     i1l44 009E  
                   _RCEN 048B                     _RSEN 0489             __CFG_WRT$OFF 0000  
                   _addr 0076                     _main 011E                     _junk 002C  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0012  
        __end_of_InitApp 0192                    ??_isr 0070                    _ADCS0 00FE  
                  _ADCS1 00FF                    ?_main 0070                    _ACKEN 048C  
                  _ACKDT 048D            __CFG_WDTE$OFF 0000                    _PCFG0 04F8  
                  _PCFG1 04F9                    _PCFG2 04FA                    _PCFG3 04FB  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _SSPIE 0463  
                  _SSPIF 0063     send_lcd_data@uc_data 0031            __CFG_PWRTE$ON 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015        send_lcd_data@b_rs 0034             __end_of_main 0142  
  __end_of_send_lcd_data 00E6                   ??_main 0037                   _ADRESH 001E  
                 _ADRESL 009E                   i1l1111 007A                   i1l1103 006E  
                 i1l1121 009B                   i1l1107 0073                   i1l1115 0084  
                 i1l1123 009C                   i1l1109 0075                   i1l1081 003B  
                 i1l1083 003D                   i1l1093 005D                   i1l1087 0046  
                 i1l1095 005E                   i1l1409 004B                   _SSPADD 0093  
                 _TRISC3 043B                   _TRISC4 043C                   _SSPBUF 0013  
                 _SSPCON 0014                ??_InitApp 0030                   _access 002E  
           __pdataCOMMON 007A                   saved_w 007E         ??_lcd_initialize 0035  
__end_of__initialization 0026           __pcstackCOMMON 0070  __size_of_I2C_Slave_Init 001D  
     __size_of_lcd_clear 0009    I2C_Slave_Init@address 0030               __pbssBANK0 0020  
             __pmaintext 011E               __pintentry 0004       __size_of_set_lcd_e 000D  
                _SSPCON2 0091                  _SSPSTAT 0094            ?_set_lcd_data 0070  
                _InitApp 0191        __end_of_lcd_clear 0182                  __ptext1 00E6  
                __ptext2 0179                  __ptext3 00A9                  __ptext4 015F  
                __ptext5 016C                  __ptext6 018A                  __ptext7 0191  
                __ptext8 0142                  __ptext9 002A             __size_of_isr 007F  
                clrloop0 0183     end_of_initialization 0026           ??_set_lcd_data 0030  
      __end_of_set_lcd_e 0179               _set_lcd_rs 015F           _I2C_Slave_Init 0142  
 __size_of_send_lcd_data 003D   __end_of_I2C_Slave_Init 015F            __pidataCOMMON 0190  
    start_initialization 0015       set_lcd_rs@b_output 0030              __end_of_isr 00A9  
        ?_I2C_Slave_Init 0030              ?_set_lcd_rs 0070            _send_lcd_data 00A9  
   __end_of_set_lcd_data 0190              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 0030                 ?_InitApp 0070  __size_of_lcd_initialize 0038  
              _lcd_clear 0179           ?_send_lcd_data 0031      __size_of_set_lcd_rs 000D  
    set_lcd_data@uc_data 0030        interrupt_function 0004                clear_ram0 0182  
              _set_lcd_e 016C                 _GO_nDONE 00FA               ?_lcd_clear 0070  
       __size_of_InitApp 0001               ?_set_lcd_e 0070    __size_of_set_lcd_data 0006  
        ??_send_lcd_data 0032         ??_I2C_Slave_Init 0032            __size_of_main 0024  
           _set_lcd_data 018A           _lcd_initialize 00E6             ??_set_lcd_rs 0030  
               _tempcalc 002A              ??_lcd_clear 0035       __end_of_set_lcd_rs 016C  
               intlevel1 0000   __end_of_lcd_initialize 011E              ??_set_lcd_e 0030  
            _temperature 0078             lcd_bcd@F1168 0020          ?_lcd_initialize 0070  
             _SSPCONbits 0014  
