

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Tue May 15 15:34:05 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	clrtext,global,class=CODE,delta=2
    11                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	maintext,global,class=CODE,split=1,delta=2
    15                           	psect	text1,local,class=CODE,merge=1,delta=2
    16                           	psect	text2,local,class=CODE,merge=1,delta=2
    17                           	psect	text3,local,class=CODE,merge=1,delta=2
    18                           	psect	text4,local,class=CODE,merge=1,delta=2
    19                           	psect	text5,local,class=CODE,merge=1,delta=2
    20                           	psect	text6,local,class=CODE,merge=1,delta=2
    21                           	psect	text7,local,class=CODE,merge=1,delta=2
    22                           	psect	text8,local,class=CODE,merge=1,delta=2
    23                           	psect	text9,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text10,local,class=CODE,merge=1,delta=2
    26                           	psect	text11,local,class=CODE,merge=1,delta=2
    27                           	psect	text12,local,class=CODE,merge=1,delta=2
    28                           	psect	text13,local,class=CODE,merge=1,delta=2
    29                           	psect	text14,local,class=CODE,merge=1,delta=2
    30                           	psect	text15,local,class=CODE,merge=1,delta=2
    31                           	psect	text16,local,class=CODE,merge=1,delta=2
    32                           	psect	text17,local,class=CODE,merge=1,delta=2
    33                           	psect	text18,local,class=CODE,merge=1,delta=2
    34                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    35                           	dabs	1,0x7E,2
    36  0000                     
    37                           ; Version 1.45
    38                           ; Generated 16/11/2017 GMT
    39                           ; 
    40                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    41                           ; All rights reserved.
    42                           ; 
    43                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    44                           ; 
    45                           ; Redistribution and use in source and binary forms, with or without modification, are
    46                           ; permitted provided that the following conditions are met:
    47                           ; 
    48                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    49                           ;        conditions and the following disclaimer.
    50                           ; 
    51                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    52                           ;        of conditions and the following disclaimer in the documentation and/or other
    53                           ;        materials provided with the distribution.
    54                           ; 
    55                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    56                           ;        software without specific prior written permission.
    57                           ; 
    58                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    59                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    60                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    61                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    62                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    63                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    64                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    65                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    66                           ; 
    67                           ; 
    68                           ; Code-generator required, PIC16F877A Definitions
    69                           ; 
    70                           ; SFR Addresses
    71  0000                     	;# 
    72  0001                     	;# 
    73  0002                     	;# 
    74  0003                     	;# 
    75  0004                     	;# 
    76  0005                     	;# 
    77  0006                     	;# 
    78  0007                     	;# 
    79  0008                     	;# 
    80  0009                     	;# 
    81  000A                     	;# 
    82  000B                     	;# 
    83  000C                     	;# 
    84  000D                     	;# 
    85  000E                     	;# 
    86  000E                     	;# 
    87  000F                     	;# 
    88  0010                     	;# 
    89  0011                     	;# 
    90  0012                     	;# 
    91  0013                     	;# 
    92  0014                     	;# 
    93  0015                     	;# 
    94  0015                     	;# 
    95  0016                     	;# 
    96  0017                     	;# 
    97  0018                     	;# 
    98  0019                     	;# 
    99  001A                     	;# 
   100  001B                     	;# 
   101  001B                     	;# 
   102  001C                     	;# 
   103  001D                     	;# 
   104  001E                     	;# 
   105  001F                     	;# 
   106  0081                     	;# 
   107  0085                     	;# 
   108  0086                     	;# 
   109  0087                     	;# 
   110  0088                     	;# 
   111  0089                     	;# 
   112  008C                     	;# 
   113  008D                     	;# 
   114  008E                     	;# 
   115  0091                     	;# 
   116  0092                     	;# 
   117  0093                     	;# 
   118  0094                     	;# 
   119  0098                     	;# 
   120  0099                     	;# 
   121  009C                     	;# 
   122  009D                     	;# 
   123  009E                     	;# 
   124  009F                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  018C                     	;# 
   130  018D                     	;# 
   131  0000                     	;# 
   132  0001                     	;# 
   133  0002                     	;# 
   134  0003                     	;# 
   135  0004                     	;# 
   136  0005                     	;# 
   137  0006                     	;# 
   138  0007                     	;# 
   139  0008                     	;# 
   140  0009                     	;# 
   141  000A                     	;# 
   142  000B                     	;# 
   143  000C                     	;# 
   144  000D                     	;# 
   145  000E                     	;# 
   146  000E                     	;# 
   147  000F                     	;# 
   148  0010                     	;# 
   149  0011                     	;# 
   150  0012                     	;# 
   151  0013                     	;# 
   152  0014                     	;# 
   153  0015                     	;# 
   154  0015                     	;# 
   155  0016                     	;# 
   156  0017                     	;# 
   157  0018                     	;# 
   158  0019                     	;# 
   159  001A                     	;# 
   160  001B                     	;# 
   161  001B                     	;# 
   162  001C                     	;# 
   163  001D                     	;# 
   164  001E                     	;# 
   165  001F                     	;# 
   166  0081                     	;# 
   167  0085                     	;# 
   168  0086                     	;# 
   169  0087                     	;# 
   170  0088                     	;# 
   171  0089                     	;# 
   172  008C                     	;# 
   173  008D                     	;# 
   174  008E                     	;# 
   175  0091                     	;# 
   176  0092                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0098                     	;# 
   180  0099                     	;# 
   181  009C                     	;# 
   182  009D                     	;# 
   183  009E                     	;# 
   184  009F                     	;# 
   185  010C                     	;# 
   186  010D                     	;# 
   187  010E                     	;# 
   188  010F                     	;# 
   189  018C                     	;# 
   190  018D                     	;# 
   191  0000                     	;# 
   192  0001                     	;# 
   193  0002                     	;# 
   194  0003                     	;# 
   195  0004                     	;# 
   196  0005                     	;# 
   197  0006                     	;# 
   198  0007                     	;# 
   199  0008                     	;# 
   200  0009                     	;# 
   201  000A                     	;# 
   202  000B                     	;# 
   203  000C                     	;# 
   204  000D                     	;# 
   205  000E                     	;# 
   206  000E                     	;# 
   207  000F                     	;# 
   208  0010                     	;# 
   209  0011                     	;# 
   210  0012                     	;# 
   211  0013                     	;# 
   212  0014                     	;# 
   213  0015                     	;# 
   214  0015                     	;# 
   215  0016                     	;# 
   216  0017                     	;# 
   217  0018                     	;# 
   218  0019                     	;# 
   219  001A                     	;# 
   220  001B                     	;# 
   221  001B                     	;# 
   222  001C                     	;# 
   223  001D                     	;# 
   224  001E                     	;# 
   225  001F                     	;# 
   226  0081                     	;# 
   227  0085                     	;# 
   228  0086                     	;# 
   229  0087                     	;# 
   230  0088                     	;# 
   231  0089                     	;# 
   232  008C                     	;# 
   233  008D                     	;# 
   234  008E                     	;# 
   235  0091                     	;# 
   236  0092                     	;# 
   237  0093                     	;# 
   238  0094                     	;# 
   239  0098                     	;# 
   240  0099                     	;# 
   241  009C                     	;# 
   242  009D                     	;# 
   243  009E                     	;# 
   244  009F                     	;# 
   245  010C                     	;# 
   246  010D                     	;# 
   247  010E                     	;# 
   248  010F                     	;# 
   249  018C                     	;# 
   250  018D                     	;# 
   251  0000                     	;# 
   252  0001                     	;# 
   253  0002                     	;# 
   254  0003                     	;# 
   255  0004                     	;# 
   256  0005                     	;# 
   257  0006                     	;# 
   258  0007                     	;# 
   259  0008                     	;# 
   260  0009                     	;# 
   261  000A                     	;# 
   262  000B                     	;# 
   263  000C                     	;# 
   264  000D                     	;# 
   265  000E                     	;# 
   266  000E                     	;# 
   267  000F                     	;# 
   268  0010                     	;# 
   269  0011                     	;# 
   270  0012                     	;# 
   271  0013                     	;# 
   272  0014                     	;# 
   273  0015                     	;# 
   274  0015                     	;# 
   275  0016                     	;# 
   276  0017                     	;# 
   277  0018                     	;# 
   278  0019                     	;# 
   279  001A                     	;# 
   280  001B                     	;# 
   281  001B                     	;# 
   282  001C                     	;# 
   283  001D                     	;# 
   284  001E                     	;# 
   285  001F                     	;# 
   286  0081                     	;# 
   287  0085                     	;# 
   288  0086                     	;# 
   289  0087                     	;# 
   290  0088                     	;# 
   291  0089                     	;# 
   292  008C                     	;# 
   293  008D                     	;# 
   294  008E                     	;# 
   295  0091                     	;# 
   296  0092                     	;# 
   297  0093                     	;# 
   298  0094                     	;# 
   299  0098                     	;# 
   300  0099                     	;# 
   301  009C                     	;# 
   302  009D                     	;# 
   303  009E                     	;# 
   304  009F                     	;# 
   305  010C                     	;# 
   306  010D                     	;# 
   307  010E                     	;# 
   308  010F                     	;# 
   309  018C                     	;# 
   310  018D                     	;# 
   311  0000                     	;# 
   312  0001                     	;# 
   313  0002                     	;# 
   314  0003                     	;# 
   315  0004                     	;# 
   316  0005                     	;# 
   317  0006                     	;# 
   318  0007                     	;# 
   319  0008                     	;# 
   320  0009                     	;# 
   321  000A                     	;# 
   322  000B                     	;# 
   323  000C                     	;# 
   324  000D                     	;# 
   325  000E                     	;# 
   326  000E                     	;# 
   327  000F                     	;# 
   328  0010                     	;# 
   329  0011                     	;# 
   330  0012                     	;# 
   331  0013                     	;# 
   332  0014                     	;# 
   333  0015                     	;# 
   334  0015                     	;# 
   335  0016                     	;# 
   336  0017                     	;# 
   337  0018                     	;# 
   338  0019                     	;# 
   339  001A                     	;# 
   340  001B                     	;# 
   341  001B                     	;# 
   342  001C                     	;# 
   343  001D                     	;# 
   344  001E                     	;# 
   345  001F                     	;# 
   346  0081                     	;# 
   347  0085                     	;# 
   348  0086                     	;# 
   349  0087                     	;# 
   350  0088                     	;# 
   351  0089                     	;# 
   352  008C                     	;# 
   353  008D                     	;# 
   354  008E                     	;# 
   355  0091                     	;# 
   356  0092                     	;# 
   357  0093                     	;# 
   358  0094                     	;# 
   359  0098                     	;# 
   360  0099                     	;# 
   361  009C                     	;# 
   362  009D                     	;# 
   363  009E                     	;# 
   364  009F                     	;# 
   365  010C                     	;# 
   366  010D                     	;# 
   367  010E                     	;# 
   368  010F                     	;# 
   369  018C                     	;# 
   370  018D                     	;# 
   371  0000                     	;# 
   372  0001                     	;# 
   373  0002                     	;# 
   374  0003                     	;# 
   375  0004                     	;# 
   376  0005                     	;# 
   377  0006                     	;# 
   378  0007                     	;# 
   379  0008                     	;# 
   380  0009                     	;# 
   381  000A                     	;# 
   382  000B                     	;# 
   383  000C                     	;# 
   384  000D                     	;# 
   385  000E                     	;# 
   386  000E                     	;# 
   387  000F                     	;# 
   388  0010                     	;# 
   389  0011                     	;# 
   390  0012                     	;# 
   391  0013                     	;# 
   392  0014                     	;# 
   393  0015                     	;# 
   394  0015                     	;# 
   395  0016                     	;# 
   396  0017                     	;# 
   397  0018                     	;# 
   398  0019                     	;# 
   399  001A                     	;# 
   400  001B                     	;# 
   401  001B                     	;# 
   402  001C                     	;# 
   403  001D                     	;# 
   404  001E                     	;# 
   405  001F                     	;# 
   406  0081                     	;# 
   407  0085                     	;# 
   408  0086                     	;# 
   409  0087                     	;# 
   410  0088                     	;# 
   411  0089                     	;# 
   412  008C                     	;# 
   413  008D                     	;# 
   414  008E                     	;# 
   415  0091                     	;# 
   416  0092                     	;# 
   417  0093                     	;# 
   418  0094                     	;# 
   419  0098                     	;# 
   420  0099                     	;# 
   421  009C                     	;# 
   422  009D                     	;# 
   423  009E                     	;# 
   424  009F                     	;# 
   425  010C                     	;# 
   426  010D                     	;# 
   427  010E                     	;# 
   428  010F                     	;# 
   429  018C                     	;# 
   430  018D                     	;# 
   431  0000                     	;# 
   432  0001                     	;# 
   433  0002                     	;# 
   434  0003                     	;# 
   435  0004                     	;# 
   436  0005                     	;# 
   437  0006                     	;# 
   438  0007                     	;# 
   439  0008                     	;# 
   440  0009                     	;# 
   441  000A                     	;# 
   442  000B                     	;# 
   443  000C                     	;# 
   444  000D                     	;# 
   445  000E                     	;# 
   446  000E                     	;# 
   447  000F                     	;# 
   448  0010                     	;# 
   449  0011                     	;# 
   450  0012                     	;# 
   451  0013                     	;# 
   452  0014                     	;# 
   453  0015                     	;# 
   454  0015                     	;# 
   455  0016                     	;# 
   456  0017                     	;# 
   457  0018                     	;# 
   458  0019                     	;# 
   459  001A                     	;# 
   460  001B                     	;# 
   461  001B                     	;# 
   462  001C                     	;# 
   463  001D                     	;# 
   464  001E                     	;# 
   465  001F                     	;# 
   466  0081                     	;# 
   467  0085                     	;# 
   468  0086                     	;# 
   469  0087                     	;# 
   470  0088                     	;# 
   471  0089                     	;# 
   472  008C                     	;# 
   473  008D                     	;# 
   474  008E                     	;# 
   475  0091                     	;# 
   476  0092                     	;# 
   477  0093                     	;# 
   478  0094                     	;# 
   479  0098                     	;# 
   480  0099                     	;# 
   481  009C                     	;# 
   482  009D                     	;# 
   483  009E                     	;# 
   484  009F                     	;# 
   485  010C                     	;# 
   486  010D                     	;# 
   487  010E                     	;# 
   488  010F                     	;# 
   489  018C                     	;# 
   490  018D                     	;# 
   491                           
   492                           	psect	idataCOMMON
   493  03E0                     __pidataCOMMON:	
   494                           
   495                           ;initializer for _previous
   496  03E0  3401               	retlw	1
   497  001E                     _ADRESH	set	30
   498  0001                     _TMR0	set	1
   499  0008                     _PORTD	set	8
   500  0007                     _PORTC	set	7
   501  0006                     _PORTB	set	6
   502  0005                     _PORTA	set	5
   503  0034                     _RB4	set	52
   504  0035                     _RB5	set	53
   505  00FA                     _GO_nDONE	set	250
   506  00FB                     _CHS0	set	251
   507  00FC                     _CHS1	set	252
   508  00FD                     _CHS2	set	253
   509  00F8                     _ADON	set	248
   510  00FE                     _ADCS0	set	254
   511  00FF                     _ADCS1	set	255
   512  005E                     _PEIE	set	94
   513  005F                     _GIE	set	95
   514  005D                     _TMR0IE	set	93
   515  005C                     _INTE	set	92
   516  0037                     _RB7	set	55
   517  0036                     _RB6	set	54
   518  0031                     _RB1	set	49
   519  005A                     _TMR0IF	set	90
   520  009E                     _ADRESL	set	158
   521  0081                     _OPTION_REG	set	129
   522  0088                     _TRISD	set	136
   523  0087                     _TRISC	set	135
   524  0086                     _TRISB	set	134
   525  0085                     _TRISA	set	133
   526  04F8                     _PCFG0	set	1272
   527  04F9                     _PCFG1	set	1273
   528  04FA                     _PCFG2	set	1274
   529  04FB                     _PCFG3	set	1275
   530  04FF                     _ADFM	set	1279
   531                           
   532                           	psect	strings
   533  0343                     __pstrings:	
   534  0343                     stringtab:	
   535  0343                     __stringtab:	
   536  0343                     stringcode:	
   537                           ;	String table - string pointers are 1 byte each
   538                           
   539  0343                     stringdir:	
   540  0343  3003               	movlw	high stringdir
   541  0344  008A               	movwf	10
   542  0345  0804               	movf	4,w
   543  0346  0A84               	incf	4,f
   544  0347  0782               	addwf	2,f
   545  0348                     __stringbase:	
   546  0348  3400               	retlw	0
   547  0349                     __end_of__stringtab:	
   548  0349                     STR_3:	
   549  0349  344C               	retlw	76	;'L'
   550  034A  3461               	retlw	97	;'a'
   551  034B  3473               	retlw	115	;'s'
   552  034C  3474               	retlw	116	;'t'
   553  034D  3420               	retlw	32	;' '
   554  034E  346D               	retlw	109	;'m'
   555  034F  3465               	retlw	101	;'e'
   556  0350  346E               	retlw	110	;'n'
   557  0351  3475               	retlw	117	;'u'
   558  0352  3400               	retlw	0
   559  0353                     STR_1:	
   560  0353  344C               	retlw	76	;'L'
   561  0354  3445               	retlw	69	;'E'
   562  0355  3444               	retlw	68	;'D'
   563  0356  3420               	retlw	32	;' '
   564  0357  3431               	retlw	49	;'1'
   565  0358  3400               	retlw	0
   566  0359                     STR_2:	
   567  0359  344C               	retlw	76	;'L'
   568  035A  3445               	retlw	69	;'E'
   569  035B  3444               	retlw	68	;'D'
   570  035C  3420               	retlw	32	;' '
   571  035D  3432               	retlw	50	;'2'
   572  035E  3400               	retlw	0
   573                           
   574                           ; #config settings
   575  0000                     
   576                           	psect	cinit
   577  0015                     start_initialization:	
   578  0015                     __initialization:	
   579                           
   580                           ; Initialize objects allocated to COMMON
   581  0015  120A  118A  23E0  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   582  001A  00FD               	movwf	__pdataCOMMON& (0+127)
   583                           
   584                           ; Clear objects allocated to BANK0
   585  001B  1383               	bcf	3,7	;select IRP bank0
   586  001C  3020               	movlw	low __pbssBANK0
   587  001D  0084               	movwf	4
   588  001E  3046               	movlw	low (__pbssBANK0+38)
   589  001F  120A  118A  23C5   	fcall	clear_ram0
   590                           
   591                           ; Clear objects allocated to COMMON
   592  0022  01F9               	clrf	__pbssCOMMON& (0+127)
   593  0023  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
   594  0024  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
   595  0025  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
   596  0026                     end_of_initialization:	
   597                           ;End of C runtime variable initialization code
   598                           
   599  0026                     __end_of__initialization:	
   600  0026  0183               	clrf	3
   601  0027  120A  118A  2B19   	ljmp	_main	;jump to C main() function
   602                           
   603                           	psect	bssCOMMON
   604  0079                     __pbssCOMMON:	
   605  0079                     _menusel:	
   606  0079                     	ds	2
   607  007B                     _current:	
   608  007B                     	ds	2
   609                           
   610                           	psect	dataCOMMON
   611  007D                     __pdataCOMMON:	
   612  007D                     _previous:	
   613  007D                     	ds	1
   614                           
   615                           	psect	bssBANK0
   616  0020                     __pbssBANK0:	
   617  0020                     lcd_bcd@F1134:	
   618  0020                     	ds	10
   619  002A                     _firstTime:	
   620  002A                     	ds	4
   621  002E                     _prev_secs_held:	
   622  002E                     	ds	4
   623  0032                     _secs_held:	
   624  0032                     	ds	4
   625  0036                     _millis_held:	
   626  0036                     	ds	4
   627  003A                     _millis:	
   628  003A                     	ds	4
   629  003E                     _menu:	
   630  003E                     	ds	2
   631  0040                     _time1:	
   632  0040                     	ds	2
   633  0042                     _lastButtonState1:	
   634  0042                     	ds	2
   635  0044                     _buttonState1:	
   636  0044                     	ds	2
   637                           
   638                           	psect	clrtext
   639  03C5                     clear_ram0:	
   640                           ;	Called with FSR containing the base address, and
   641                           ;	W with the last address+1
   642                           
   643  03C5  0064               	clrwdt	;clear the watchdog before getting into this loop
   644  03C6                     clrloop0:	
   645  03C6  0180               	clrf	0	;clear RAM location pointed to by FSR
   646  03C7  0A84               	incf	4,f	;increment pointer
   647  03C8  0604               	xorwf	4,w	;XOR with final address
   648  03C9  1903               	btfsc	3,2	;have we reached the end yet?
   649  03CA  3400               	retlw	0	;all done for this memory range, return
   650  03CB  0604               	xorwf	4,w	;XOR again to restore value
   651  03CC  2BC6               	goto	clrloop0	;do the next byte
   652                           
   653                           	psect	cstackBANK1
   654  00A0                     __pcstackBANK1:	
   655  00A0                     ??_lcd_initialize:	
   656                           
   657                           ; 1 bytes @ 0x0
   658  00A0                     	ds	2
   659                           
   660                           	psect	cstackCOMMON
   661  0070                     __pcstackCOMMON:	
   662  0070                     ?_lcd_clear:	
   663  0070                     ?_lcd_goto:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ?_lcd_putstr:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?_InitApp:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ?_lcd_initialize:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?_adc_initialize:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_set_lcd_e:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_set_lcd_rs:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_set_lcd_data:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ?_isr:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_main:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_lcd_2ndline:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ?_lcd_putchar:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?i1_lcd_clear:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ?i1_set_lcd_e:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ??i1_set_lcd_e:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?i1_set_lcd_rs:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ??i1_set_lcd_rs:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ?i1_set_lcd_data:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ??i1_set_lcd_data:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ?___aldiv:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     i1set_lcd_e@b_output:	
   724                           ; 4 bytes @ 0x0
   725                           
   726  0070                     i1set_lcd_rs@b_output:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     i1set_lcd_data@uc_data:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ___aldiv@divisor:	
   733                           ; 1 bytes @ 0x0
   734                           
   735                           
   736                           ; 4 bytes @ 0x0
   737  0070                     	ds	1
   738  0071                     ?i1_send_lcd_data:	
   739  0071                     i1send_lcd_data@uc_data:	
   740                           ; 1 bytes @ 0x1
   741                           
   742                           
   743                           ; 1 bytes @ 0x1
   744  0071                     	ds	1
   745  0072                     ??i1_send_lcd_data:	
   746                           
   747                           ; 1 bytes @ 0x2
   748  0072                     	ds	2
   749  0074                     i1send_lcd_data@b_rs:	
   750  0074                     ___aldiv@dividend:	
   751                           ; 1 bytes @ 0x4
   752                           
   753                           
   754                           ; 4 bytes @ 0x4
   755  0074                     	ds	1
   756  0075                     ??_lcd_goto:	
   757  0075                     ??_lcd_2ndline:	
   758                           ; 1 bytes @ 0x5
   759                           
   760  0075                     ??_lcd_putchar:	
   761                           ; 1 bytes @ 0x5
   762                           
   763  0075                     ??i1_lcd_clear:	
   764                           ; 1 bytes @ 0x5
   765                           
   766                           
   767                           ; 1 bytes @ 0x5
   768  0075                     	ds	1
   769  0076                     lcd_goto@uc_position:	
   770  0076                     lcd_putchar@c_data:	
   771                           ; 1 bytes @ 0x6
   772                           
   773                           
   774                           ; 1 bytes @ 0x6
   775  0076                     	ds	1
   776  0077                     ??_lcd_putstr:	
   777                           
   778                           ; 1 bytes @ 0x7
   779  0077                     	ds	1
   780  0078                     ??___aldiv:	
   781  0078                     lcd_putstr@csz_string:	
   782                           ; 1 bytes @ 0x8
   783                           
   784                           
   785                           ; 1 bytes @ 0x8
   786  0078                     	ds	1
   787                           
   788                           	psect	cstackBANK0
   789  0046                     __pcstackBANK0:	
   790  0046                     ___aldiv@counter:	
   791                           
   792                           ; 1 bytes @ 0x0
   793  0046                     	ds	1
   794  0047                     ___aldiv@sign:	
   795                           
   796                           ; 1 bytes @ 0x1
   797  0047                     	ds	1
   798  0048                     ___aldiv@quotient:	
   799                           
   800                           ; 4 bytes @ 0x2
   801  0048                     	ds	4
   802  004C                     ??_isr:	
   803                           
   804                           ; 1 bytes @ 0x6
   805  004C                     	ds	12
   806  0058                     ??_InitApp:	
   807  0058                     ??_adc_initialize:	
   808                           ; 1 bytes @ 0x12
   809                           
   810  0058                     ??_set_lcd_e:	
   811                           ; 1 bytes @ 0x12
   812                           
   813  0058                     ??_set_lcd_rs:	
   814                           ; 1 bytes @ 0x12
   815                           
   816  0058                     ??_set_lcd_data:	
   817                           ; 1 bytes @ 0x12
   818                           
   819  0058                     set_lcd_e@b_output:	
   820                           ; 1 bytes @ 0x12
   821                           
   822  0058                     set_lcd_rs@b_output:	
   823                           ; 1 bytes @ 0x12
   824                           
   825  0058                     set_lcd_data@uc_data:	
   826                           ; 1 bytes @ 0x12
   827                           
   828                           
   829                           ; 1 bytes @ 0x12
   830  0058                     	ds	1
   831  0059                     ?_send_lcd_data:	
   832  0059                     send_lcd_data@uc_data:	
   833                           ; 1 bytes @ 0x13
   834                           
   835                           
   836                           ; 1 bytes @ 0x13
   837  0059                     	ds	1
   838  005A                     ??_send_lcd_data:	
   839                           
   840                           ; 1 bytes @ 0x14
   841  005A                     	ds	2
   842  005C                     send_lcd_data@b_rs:	
   843                           
   844                           ; 1 bytes @ 0x16
   845  005C                     	ds	1
   846  005D                     ??_lcd_clear:	
   847  005D                     ??_main:	
   848                           ; 1 bytes @ 0x17
   849                           
   850                           
   851                           	psect	maintext
   852  0319                     __pmaintext:	
   853                           ; 1 bytes @ 0x17
   854 ;;
   855 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   856 ;;
   857 ;; *************** function _main *****************
   858 ;; Defined at:
   859 ;;		line 20 in file "main.c"
   860 ;; Parameters:    Size  Location     Type
   861 ;;		None
   862 ;; Auto vars:     Size  Location     Type
   863 ;;		None
   864 ;; Return value:  Size  Location     Type
   865 ;;                  1    wreg      void 
   866 ;; Registers used:
   867 ;;		wreg, status,2, status,0, pclath, cstack
   868 ;; Tracked objects:
   869 ;;		On entry : B00/0
   870 ;;		On exit  : 0/0
   871 ;;		Unchanged: 0/0
   872 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   873 ;;      Params:         0       0       0       0       0
   874 ;;      Locals:         0       0       0       0       0
   875 ;;      Temps:          0       0       0       0       0
   876 ;;      Totals:         0       0       0       0       0
   877 ;;Total ram usage:        0 bytes
   878 ;; Hardware stack levels required when called:    9
   879 ;; This function calls:
   880 ;;		_InitApp
   881 ;;		_adc_initialize
   882 ;;		_lcd_initialize
   883 ;; This function is called by:
   884 ;;		Startup code after reset
   885 ;; This function uses a non-reentrant model
   886 ;;
   887                           
   888                           
   889                           ;psect for function _main
   890  0319                     _main:	
   891                           
   892                           ;main.c: 23: InitApp();
   893                           
   894                           ;incstack = 0
   895 ;; hardware stack exceeded
   896                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   897  0319  120A  118A  23E1  120A  118A  	fcall	_InitApp
   898                           
   899                           ;main.c: 25: PORTA = 0;
   900  031E  1283               	bcf	3,5	;RP0=0, select bank0
   901  031F  1303               	bcf	3,6	;RP1=0, select bank0
   902  0320  0185               	clrf	5	;volatile
   903                           
   904                           ;main.c: 26: PORTB = 0;
   905  0321  0186               	clrf	6	;volatile
   906                           
   907                           ;main.c: 27: PORTC = 0;
   908  0322  0187               	clrf	7	;volatile
   909                           
   910                           ;main.c: 28: PORTD = 0;
   911  0323  0188               	clrf	8	;volatile
   912                           
   913                           ;main.c: 30: TRISA = 0b11111111;
   914  0324  30FF               	movlw	255
   915  0325  1683               	bsf	3,5	;RP0=1, select bank1
   916  0326  1303               	bcf	3,6	;RP1=0, select bank1
   917  0327  0085               	movwf	5	;volatile
   918                           
   919                           ;main.c: 31: TRISB = 0b00000011;
   920  0328  3003               	movlw	3
   921  0329  0086               	movwf	6	;volatile
   922                           
   923                           ;main.c: 32: TRISC = 0b00000000;
   924  032A  0187               	clrf	7	;volatile
   925                           
   926                           ;main.c: 33: TRISD = 0b00000000;
   927  032B  0188               	clrf	8	;volatile
   928                           
   929                           ;main.c: 35: lcd_initialize();
   930  032C  120A  118A  2233  120A  118A  	fcall	_lcd_initialize
   931                           
   932                           ;main.c: 36: adc_initialize();
   933  0331  120A  118A  235F  120A  118A  	fcall	_adc_initialize
   934                           
   935                           ;main.c: 39: OPTION_REG = (1<<2);
   936  0336  3004               	movlw	4
   937  0337  1683               	bsf	3,5	;RP0=1, select bank1
   938  0338  1303               	bcf	3,6	;RP1=0, select bank1
   939  0339  0081               	movwf	1	;volatile
   940                           
   941                           ;main.c: 40: TMR0=100;
   942  033A  3064               	movlw	100
   943  033B  1283               	bcf	3,5	;RP0=0, select bank0
   944  033C  1303               	bcf	3,6	;RP1=0, select bank0
   945  033D  0081               	movwf	1	;volatile
   946                           
   947                           ;main.c: 42: INTE=1;
   948  033E  160B               	bsf	11,4	;volatile
   949                           
   950                           ;main.c: 43: TMR0IE=1;
   951  033F  168B               	bsf	11,5	;volatile
   952                           
   953                           ;main.c: 44: GIE=1;
   954  0340  178B               	bsf	11,7	;volatile
   955                           
   956                           ;main.c: 45: PEIE=1;
   957  0341  170B               	bsf	11,6	;volatile
   958  0342                     l98:	
   959                           ;main.c: 48: while(1)
   960                           
   961                           
   962                           ;main.c: 49: {
   963  0342  2B42               	goto	l98
   964  0343                     __end_of_main:	
   965                           
   966                           	psect	text1
   967  0233                     __ptext1:	
   968 ;; *************** function _lcd_initialize *****************
   969 ;; Defined at:
   970 ;;		line 100 in file "lcd.c"
   971 ;; Parameters:    Size  Location     Type
   972 ;;		None
   973 ;; Auto vars:     Size  Location     Type
   974 ;;		None
   975 ;; Return value:  Size  Location     Type
   976 ;;                  1    wreg      void 
   977 ;; Registers used:
   978 ;;		wreg, status,2, status,0, pclath, cstack
   979 ;; Tracked objects:
   980 ;;		On entry : 0/0
   981 ;;		On exit  : 0/0
   982 ;;		Unchanged: 0/0
   983 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   984 ;;      Params:         0       0       0       0       0
   985 ;;      Locals:         0       0       0       0       0
   986 ;;      Temps:          0       0       2       0       0
   987 ;;      Totals:         0       0       2       0       0
   988 ;;Total ram usage:        2 bytes
   989 ;; Hardware stack levels used:    1
   990 ;; Hardware stack levels required when called:    8
   991 ;; This function calls:
   992 ;;		_lcd_clear
   993 ;;		_send_lcd_data
   994 ;;		_set_lcd_e
   995 ;; This function is called by:
   996 ;;		_main
   997 ;; This function uses a non-reentrant model
   998 ;;
   999                           
  1000                           
  1001                           ;psect for function _lcd_initialize
  1002  0233                     _lcd_initialize:	
  1003                           
  1004                           ;lcd.c: 104: set_lcd_e(1);
  1005                           
  1006                           ;incstack = 0
  1007 ;; hardware stack exceeded
  1008                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1009  0233  3001               	movlw	1
  1010  0234  120A  118A  237B  120A  118A  	fcall	_set_lcd_e
  1011                           
  1012                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1013  0239  3062               	movlw	98
  1014  023A  1683               	bsf	3,5	;RP0=1, select bank1
  1015  023B  1303               	bcf	3,6	;RP1=0, select bank1
  1016  023C  00A1               	movwf	(??_lcd_initialize^(0+128)+1)
  1017  023D  3065               	movlw	101
  1018  023E  00A0               	movwf	??_lcd_initialize^(0+128)
  1019  023F                     u977:	
  1020  023F  0BA0               	decfsz	??_lcd_initialize^(0+128),f
  1021  0240  2A3F               	goto	u977
  1022  0241  0BA1               	decfsz	(??_lcd_initialize^(0+128)+1),f
  1023  0242  2A3F               	goto	u977
  1024                           
  1025                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1026  0243  3038               	movlw	56
  1027  0244  1683               	bsf	3,5	;RP0=1, select bank1
  1028  0245  1303               	bcf	3,6	;RP1=0, select bank1
  1029  0246  00A0               	movwf	??_lcd_initialize^(0+128)
  1030  0247  0820               	movf	??_lcd_initialize^(0+128),w
  1031  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1032  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1033  024A  00D9               	movwf	send_lcd_data@uc_data
  1034  024B  3000               	movlw	0
  1035  024C  120A  118A  2271  120A  118A  	fcall	_send_lcd_data
  1036                           
  1037                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1038  0251  3006               	movlw	6
  1039  0252  1683               	bsf	3,5	;RP0=1, select bank1
  1040  0253  1303               	bcf	3,6	;RP1=0, select bank1
  1041  0254  00A0               	movwf	??_lcd_initialize^(0+128)
  1042  0255  0820               	movf	??_lcd_initialize^(0+128),w
  1043  0256  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0257  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0258  00D9               	movwf	send_lcd_data@uc_data
  1046  0259  3000               	movlw	0
  1047  025A  120A  118A  2271  120A  118A  	fcall	_send_lcd_data
  1048                           
  1049                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1050  025F  300C               	movlw	12
  1051  0260  1683               	bsf	3,5	;RP0=1, select bank1
  1052  0261  1303               	bcf	3,6	;RP1=0, select bank1
  1053  0262  00A0               	movwf	??_lcd_initialize^(0+128)
  1054  0263  0820               	movf	??_lcd_initialize^(0+128),w
  1055  0264  1283               	bcf	3,5	;RP0=0, select bank0
  1056  0265  1303               	bcf	3,6	;RP1=0, select bank0
  1057  0266  00D9               	movwf	send_lcd_data@uc_data
  1058  0267  3000               	movlw	0
  1059  0268  120A  118A  2271  120A  118A  	fcall	_send_lcd_data
  1060                           
  1061                           ;lcd.c: 118: lcd_clear();
  1062  026D  120A  118A  23B3   	fcall	_lcd_clear
  1063  0270  0008               	return
  1064  0271                     __end_of_lcd_initialize:	
  1065                           
  1066                           	psect	text2
  1067  03B3                     __ptext2:	
  1068 ;; *************** function _lcd_clear *****************
  1069 ;; Defined at:
  1070 ;;		line 136 in file "lcd.c"
  1071 ;; Parameters:    Size  Location     Type
  1072 ;;		None
  1073 ;; Auto vars:     Size  Location     Type
  1074 ;;		None
  1075 ;; Return value:  Size  Location     Type
  1076 ;;                  1    wreg      void 
  1077 ;; Registers used:
  1078 ;;		wreg, status,2, status,0, pclath, cstack
  1079 ;; Tracked objects:
  1080 ;;		On entry : 0/0
  1081 ;;		On exit  : 0/0
  1082 ;;		Unchanged: 0/0
  1083 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1084 ;;      Params:         0       0       0       0       0
  1085 ;;      Locals:         0       0       0       0       0
  1086 ;;      Temps:          0       0       0       0       0
  1087 ;;      Totals:         0       0       0       0       0
  1088 ;;Total ram usage:        0 bytes
  1089 ;; Hardware stack levels used:    1
  1090 ;; Hardware stack levels required when called:    7
  1091 ;; This function calls:
  1092 ;;		_send_lcd_data
  1093 ;; This function is called by:
  1094 ;;		_lcd_initialize
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _lcd_clear
  1100  03B3                     _lcd_clear:	
  1101                           
  1102                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1103                           
  1104                           ;incstack = 0
  1105 ;; hardware stack exceeded
  1106                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1107  03B3  1283               	bcf	3,5	;RP0=0, select bank0
  1108  03B4  1303               	bcf	3,6	;RP1=0, select bank0
  1109  03B5  01D9               	clrf	send_lcd_data@uc_data
  1110  03B6  0AD9               	incf	send_lcd_data@uc_data,f
  1111  03B7  3000               	movlw	0
  1112  03B8  120A  118A  2271   	fcall	_send_lcd_data
  1113  03BB  0008               	return
  1114  03BC                     __end_of_lcd_clear:	
  1115                           
  1116                           	psect	text3
  1117  0271                     __ptext3:	
  1118 ;; *************** function _send_lcd_data *****************
  1119 ;; Defined at:
  1120 ;;		line 308 in file "lcd.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;  b_rs            1    wreg     unsigned char 
  1123 ;;  uc_data         1   19[BANK0 ] unsigned char 
  1124 ;; Auto vars:     Size  Location     Type
  1125 ;;  b_rs            1   22[BANK0 ] unsigned char 
  1126 ;; Return value:  Size  Location     Type
  1127 ;;                  1    wreg      void 
  1128 ;; Registers used:
  1129 ;;		wreg, status,2, status,0, pclath, cstack
  1130 ;; Tracked objects:
  1131 ;;		On entry : 0/0
  1132 ;;		On exit  : 0/0
  1133 ;;		Unchanged: 0/0
  1134 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1135 ;;      Params:         0       1       0       0       0
  1136 ;;      Locals:         0       1       0       0       0
  1137 ;;      Temps:          0       2       0       0       0
  1138 ;;      Totals:         0       4       0       0       0
  1139 ;;Total ram usage:        4 bytes
  1140 ;; Hardware stack levels used:    1
  1141 ;; Hardware stack levels required when called:    6
  1142 ;; This function calls:
  1143 ;;		_set_lcd_data
  1144 ;;		_set_lcd_e
  1145 ;;		_set_lcd_rs
  1146 ;; This function is called by:
  1147 ;;		_lcd_initialize
  1148 ;;		_lcd_clear
  1149 ;;		_lcd_home
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _send_lcd_data
  1155  0271                     _send_lcd_data:	
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1159                           ;send_lcd_data@b_rs stored from wreg
  1160  0271  1283               	bcf	3,5	;RP0=0, select bank0
  1161  0272  1303               	bcf	3,6	;RP1=0, select bank0
  1162  0273  00DC               	movwf	send_lcd_data@b_rs
  1163                           
  1164                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1165  0274  085C               	movf	send_lcd_data@b_rs,w
  1166  0275  120A  118A  236E  120A  118A  	fcall	_set_lcd_rs
  1167                           
  1168                           ;lcd.c: 312: set_lcd_data(uc_data);
  1169  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1170  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1171  027C  0859               	movf	send_lcd_data@uc_data,w
  1172  027D  120A  118A  23D4  120A  118A  	fcall	_set_lcd_data
  1173                           
  1174                           ;lcd.c: 315: set_lcd_e(1);
  1175  0282  3001               	movlw	1
  1176  0283  120A  118A  237B  120A  118A  	fcall	_set_lcd_e
  1177                           
  1178                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1179  0288  3007               	movlw	7
  1180  0289  1283               	bcf	3,5	;RP0=0, select bank0
  1181  028A  1303               	bcf	3,6	;RP1=0, select bank0
  1182  028B  00DB               	movwf	??_send_lcd_data+1
  1183  028C  307C               	movlw	124
  1184  028D  00DA               	movwf	??_send_lcd_data
  1185  028E                     u987:	
  1186  028E  0BDA               	decfsz	??_send_lcd_data,f
  1187  028F  2A8E               	goto	u987
  1188  0290  0BDB               	decfsz	??_send_lcd_data+1,f
  1189  0291  2A8E               	goto	u987
  1190  0292  0000               	nop
  1191                           
  1192                           ;lcd.c: 317: set_lcd_e(0);
  1193  0293  3000               	movlw	0
  1194  0294  120A  118A  237B  120A  118A  	fcall	_set_lcd_e
  1195                           
  1196                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1197  0299  300D               	movlw	13
  1198  029A  1283               	bcf	3,5	;RP0=0, select bank0
  1199  029B  1303               	bcf	3,6	;RP1=0, select bank0
  1200  029C  00DB               	movwf	??_send_lcd_data+1
  1201  029D  30FB               	movlw	251
  1202  029E  00DA               	movwf	??_send_lcd_data
  1203  029F                     u997:	
  1204  029F  0BDA               	decfsz	??_send_lcd_data,f
  1205  02A0  2A9F               	goto	u997
  1206  02A1  0BDB               	decfsz	??_send_lcd_data+1,f
  1207  02A2  2A9F               	goto	u997
  1208                           
  1209                           ;lcd.c: 321: set_lcd_rs(0);
  1210  02A3  3000               	movlw	0
  1211  02A4  120A  118A  236E  120A  118A  	fcall	_set_lcd_rs
  1212                           
  1213                           ;lcd.c: 322: set_lcd_data(0);
  1214  02A9  3000               	movlw	0
  1215  02AA  120A  118A  23D4   	fcall	_set_lcd_data
  1216  02AD  0008               	return
  1217  02AE                     __end_of_send_lcd_data:	
  1218                           
  1219                           	psect	text4
  1220  036E                     __ptext4:	
  1221 ;; *************** function _set_lcd_rs *****************
  1222 ;; Defined at:
  1223 ;;		line 360 in file "lcd.c"
  1224 ;; Parameters:    Size  Location     Type
  1225 ;;  b_output        1    wreg     unsigned char 
  1226 ;; Auto vars:     Size  Location     Type
  1227 ;;  b_output        1   18[BANK0 ] unsigned char 
  1228 ;; Return value:  Size  Location     Type
  1229 ;;                  1    wreg      void 
  1230 ;; Registers used:
  1231 ;;		wreg
  1232 ;; Tracked objects:
  1233 ;;		On entry : 0/0
  1234 ;;		On exit  : 0/0
  1235 ;;		Unchanged: 0/0
  1236 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1237 ;;      Params:         0       0       0       0       0
  1238 ;;      Locals:         0       1       0       0       0
  1239 ;;      Temps:          0       0       0       0       0
  1240 ;;      Totals:         0       1       0       0       0
  1241 ;;Total ram usage:        1 bytes
  1242 ;; Hardware stack levels used:    1
  1243 ;; Hardware stack levels required when called:    5
  1244 ;; This function calls:
  1245 ;;		Nothing
  1246 ;; This function is called by:
  1247 ;;		_send_lcd_data
  1248 ;; This function uses a non-reentrant model
  1249 ;;
  1250                           
  1251                           
  1252                           ;psect for function _set_lcd_rs
  1253  036E                     _set_lcd_rs:	
  1254                           
  1255                           ;incstack = 0
  1256                           ; Regs used in _set_lcd_rs: [wreg]
  1257                           ;set_lcd_rs@b_output stored from wreg
  1258  036E  1283               	bcf	3,5	;RP0=0, select bank0
  1259  036F  1303               	bcf	3,6	;RP1=0, select bank0
  1260  0370  00D8               	movwf	set_lcd_rs@b_output
  1261                           
  1262                           ;lcd.c: 362: RB4 = b_output;
  1263  0371  1C58               	btfss	set_lcd_rs@b_output,0
  1264  0372  2B77               	goto	u450
  1265  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1266  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1267  0375  1606               	bsf	6,4	;volatile
  1268  0376  0008               	return
  1269  0377                     u450:	
  1270  0377  1283               	bcf	3,5	;RP0=0, select bank0
  1271  0378  1303               	bcf	3,6	;RP1=0, select bank0
  1272  0379  1206               	bcf	6,4	;volatile
  1273  037A  0008               	return
  1274  037B                     __end_of_set_lcd_rs:	
  1275                           
  1276                           	psect	text5
  1277  037B                     __ptext5:	
  1278 ;; *************** function _set_lcd_e *****************
  1279 ;; Defined at:
  1280 ;;		line 340 in file "lcd.c"
  1281 ;; Parameters:    Size  Location     Type
  1282 ;;  b_output        1    wreg     unsigned char 
  1283 ;; Auto vars:     Size  Location     Type
  1284 ;;  b_output        1   18[BANK0 ] unsigned char 
  1285 ;; Return value:  Size  Location     Type
  1286 ;;                  1    wreg      void 
  1287 ;; Registers used:
  1288 ;;		wreg
  1289 ;; Tracked objects:
  1290 ;;		On entry : 0/0
  1291 ;;		On exit  : 0/0
  1292 ;;		Unchanged: 0/0
  1293 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1294 ;;      Params:         0       0       0       0       0
  1295 ;;      Locals:         0       1       0       0       0
  1296 ;;      Temps:          0       0       0       0       0
  1297 ;;      Totals:         0       1       0       0       0
  1298 ;;Total ram usage:        1 bytes
  1299 ;; Hardware stack levels used:    1
  1300 ;; Hardware stack levels required when called:    5
  1301 ;; This function calls:
  1302 ;;		Nothing
  1303 ;; This function is called by:
  1304 ;;		_lcd_initialize
  1305 ;;		_send_lcd_data
  1306 ;; This function uses a non-reentrant model
  1307 ;;
  1308                           
  1309                           
  1310                           ;psect for function _set_lcd_e
  1311  037B                     _set_lcd_e:	
  1312                           
  1313                           ;incstack = 0
  1314                           ; Regs used in _set_lcd_e: [wreg]
  1315                           ;set_lcd_e@b_output stored from wreg
  1316  037B  1283               	bcf	3,5	;RP0=0, select bank0
  1317  037C  1303               	bcf	3,6	;RP1=0, select bank0
  1318  037D  00D8               	movwf	set_lcd_e@b_output
  1319                           
  1320                           ;lcd.c: 342: RB5 = b_output;
  1321  037E  1C58               	btfss	set_lcd_e@b_output,0
  1322  037F  2B84               	goto	u430
  1323  0380  1283               	bcf	3,5	;RP0=0, select bank0
  1324  0381  1303               	bcf	3,6	;RP1=0, select bank0
  1325  0382  1686               	bsf	6,5	;volatile
  1326  0383  0008               	return
  1327  0384                     u430:	
  1328  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1329  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1330  0386  1286               	bcf	6,5	;volatile
  1331  0387  0008               	return
  1332  0388                     __end_of_set_lcd_e:	
  1333                           
  1334                           	psect	text6
  1335  03D4                     __ptext6:	
  1336 ;; *************** function _set_lcd_data *****************
  1337 ;; Defined at:
  1338 ;;		line 380 in file "lcd.c"
  1339 ;; Parameters:    Size  Location     Type
  1340 ;;  uc_data         1    wreg     unsigned char 
  1341 ;; Auto vars:     Size  Location     Type
  1342 ;;  uc_data         1   18[BANK0 ] unsigned char 
  1343 ;; Return value:  Size  Location     Type
  1344 ;;                  1    wreg      void 
  1345 ;; Registers used:
  1346 ;;		wreg
  1347 ;; Tracked objects:
  1348 ;;		On entry : 0/0
  1349 ;;		On exit  : 0/0
  1350 ;;		Unchanged: 0/0
  1351 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1352 ;;      Params:         0       0       0       0       0
  1353 ;;      Locals:         0       1       0       0       0
  1354 ;;      Temps:          0       0       0       0       0
  1355 ;;      Totals:         0       1       0       0       0
  1356 ;;Total ram usage:        1 bytes
  1357 ;; Hardware stack levels used:    1
  1358 ;; Hardware stack levels required when called:    5
  1359 ;; This function calls:
  1360 ;;		Nothing
  1361 ;; This function is called by:
  1362 ;;		_send_lcd_data
  1363 ;; This function uses a non-reentrant model
  1364 ;;
  1365                           
  1366                           
  1367                           ;psect for function _set_lcd_data
  1368  03D4                     _set_lcd_data:	
  1369                           
  1370                           ;incstack = 0
  1371                           ; Regs used in _set_lcd_data: [wreg]
  1372                           ;set_lcd_data@uc_data stored from wreg
  1373  03D4  1283               	bcf	3,5	;RP0=0, select bank0
  1374  03D5  1303               	bcf	3,6	;RP1=0, select bank0
  1375  03D6  00D8               	movwf	set_lcd_data@uc_data
  1376                           
  1377                           ;lcd.c: 382: PORTD = uc_data;
  1378  03D7  0858               	movf	set_lcd_data@uc_data,w
  1379  03D8  0088               	movwf	8	;volatile
  1380  03D9  0008               	return
  1381  03DA                     __end_of_set_lcd_data:	
  1382                           
  1383                           	psect	text7
  1384  035F                     __ptext7:	
  1385 ;; *************** function _adc_initialize *****************
  1386 ;; Defined at:
  1387 ;;		line 28 in file "adc.c"
  1388 ;; Parameters:    Size  Location     Type
  1389 ;;		None
  1390 ;; Auto vars:     Size  Location     Type
  1391 ;;		None
  1392 ;; Return value:  Size  Location     Type
  1393 ;;                  1    wreg      void 
  1394 ;; Registers used:
  1395 ;;		None
  1396 ;; Tracked objects:
  1397 ;;		On entry : 0/0
  1398 ;;		On exit  : 0/0
  1399 ;;		Unchanged: 0/0
  1400 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1401 ;;      Params:         0       0       0       0       0
  1402 ;;      Locals:         0       0       0       0       0
  1403 ;;      Temps:          0       0       0       0       0
  1404 ;;      Totals:         0       0       0       0       0
  1405 ;;Total ram usage:        0 bytes
  1406 ;; Hardware stack levels used:    1
  1407 ;; Hardware stack levels required when called:    5
  1408 ;; This function calls:
  1409 ;;		Nothing
  1410 ;; This function is called by:
  1411 ;;		_main
  1412 ;; This function uses a non-reentrant model
  1413 ;;
  1414                           
  1415                           
  1416                           ;psect for function _adc_initialize
  1417  035F                     _adc_initialize:	
  1418                           
  1419                           ;adc.c: 31: ADCS1 = 1;
  1420                           
  1421                           ;incstack = 0
  1422                           ; Regs used in _adc_initialize: []
  1423  035F  1283               	bcf	3,5	;RP0=0, select bank0
  1424  0360  1303               	bcf	3,6	;RP1=0, select bank0
  1425  0361  179F               	bsf	31,7	;volatile
  1426                           
  1427                           ;adc.c: 32: ADCS0 = 0;
  1428  0362  131F               	bcf	31,6	;volatile
  1429                           
  1430                           ;adc.c: 39: ADFM = 1;
  1431  0363  1683               	bsf	3,5	;RP0=1, select bank1
  1432  0364  1303               	bcf	3,6	;RP1=0, select bank1
  1433  0365  179F               	bsf	31,7	;volatile
  1434                           
  1435                           ;adc.c: 41: PCFG3 = 0;
  1436  0366  119F               	bcf	31,3	;volatile
  1437                           
  1438                           ;adc.c: 42: PCFG2 = 0;
  1439  0367  111F               	bcf	31,2	;volatile
  1440                           
  1441                           ;adc.c: 43: PCFG1 = 0;
  1442  0368  109F               	bcf	31,1	;volatile
  1443                           
  1444                           ;adc.c: 44: PCFG0 = 0;
  1445  0369  101F               	bcf	31,0	;volatile
  1446                           
  1447                           ;adc.c: 47: ADON = 0;
  1448  036A  1283               	bcf	3,5	;RP0=0, select bank0
  1449  036B  1303               	bcf	3,6	;RP1=0, select bank0
  1450  036C  101F               	bcf	31,0	;volatile
  1451  036D  0008               	return
  1452  036E                     __end_of_adc_initialize:	
  1453                           
  1454                           	psect	text8
  1455  03E1                     __ptext8:	
  1456 ;; *************** function _InitApp *****************
  1457 ;; Defined at:
  1458 ;;		line 22 in file "user.c"
  1459 ;; Parameters:    Size  Location     Type
  1460 ;;		None
  1461 ;; Auto vars:     Size  Location     Type
  1462 ;;		None
  1463 ;; Return value:  Size  Location     Type
  1464 ;;                  1    wreg      void 
  1465 ;; Registers used:
  1466 ;;		None
  1467 ;; Tracked objects:
  1468 ;;		On entry : 0/0
  1469 ;;		On exit  : 0/0
  1470 ;;		Unchanged: 0/0
  1471 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1472 ;;      Params:         0       0       0       0       0
  1473 ;;      Locals:         0       0       0       0       0
  1474 ;;      Temps:          0       0       0       0       0
  1475 ;;      Totals:         0       0       0       0       0
  1476 ;;Total ram usage:        0 bytes
  1477 ;; Hardware stack levels used:    1
  1478 ;; Hardware stack levels required when called:    5
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_main
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           
  1487                           ;psect for function _InitApp
  1488  03E1                     _InitApp:	
  1489                           
  1490                           ;incstack = 0
  1491                           ; Regs used in _InitApp: []
  1492  03E1  0008               	return
  1493  03E2                     __end_of_InitApp:	
  1494                           
  1495                           	psect	text9
  1496  002A                     __ptext9:	
  1497 ;; *************** function _isr *****************
  1498 ;; Defined at:
  1499 ;;		line 32 in file "interrupts.c"
  1500 ;; Parameters:    Size  Location     Type
  1501 ;;		None
  1502 ;; Auto vars:     Size  Location     Type
  1503 ;;		None
  1504 ;; Return value:  Size  Location     Type
  1505 ;;                  1    wreg      void 
  1506 ;; Registers used:
  1507 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1508 ;; Tracked objects:
  1509 ;;		On entry : 0/0
  1510 ;;		On exit  : 0/0
  1511 ;;		Unchanged: 0/0
  1512 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1513 ;;      Params:         0       0       0       0       0
  1514 ;;      Locals:         0       0       0       0       0
  1515 ;;      Temps:          0      12       0       0       0
  1516 ;;      Totals:         0      12       0       0       0
  1517 ;;Total ram usage:       12 bytes
  1518 ;; Hardware stack levels used:    1
  1519 ;; Hardware stack levels required when called:    4
  1520 ;; This function calls:
  1521 ;;		___aldiv
  1522 ;;		_lcd_goto
  1523 ;;		_lcd_putstr
  1524 ;;		i1_lcd_clear
  1525 ;; This function is called by:
  1526 ;;		Interrupt level 1
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function _isr
  1532  002A                     _isr:	
  1533                           
  1534                           ;interrupts.c: 34: if(TMR0IF==1)
  1535  002A  1D0B               	btfss	11,2	;volatile
  1536  002B  2999               	goto	i1l59
  1537                           
  1538                           ;interrupts.c: 35: {
  1539                           ;interrupts.c: 36: millis++;
  1540  002C  3001               	movlw	1
  1541  002D  07BA               	addwf	_millis,f
  1542  002E  3000               	movlw	0
  1543  002F  1803               	skipnc
  1544  0030  3001               	movlw	1
  1545  0031  07BB               	addwf	_millis+1,f
  1546  0032  3000               	movlw	0
  1547  0033  1803               	skipnc
  1548  0034  3001               	movlw	1
  1549  0035  07BC               	addwf	_millis+2,f
  1550  0036  3000               	movlw	0
  1551  0037  1803               	skipnc
  1552  0038  3001               	movlw	1
  1553  0039  07BD               	addwf	_millis+3,f
  1554                           
  1555                           ;interrupts.c: 37: time1++;
  1556  003A  3001               	movlw	1
  1557  003B  07C0               	addwf	_time1,f
  1558  003C  1803               	skipnc
  1559  003D  0AC1               	incf	_time1+1,f
  1560  003E  3000               	movlw	0
  1561  003F  07C1               	addwf	_time1+1,f
  1562                           
  1563                           ;interrupts.c: 40: current = RB1;
  1564  0040  1003               	clrc
  1565  0041  1886               	btfsc	6,1	;volatile
  1566  0042  1403               	setc
  1567  0043  3000               	movlw	0
  1568  0044  1803               	skipnc
  1569  0045  3001               	movlw	1
  1570  0046  00CC               	movwf	??_isr
  1571  0047  01CD               	clrf	??_isr+1
  1572  0048  084C               	movf	??_isr,w
  1573  0049  00FB               	movwf	_current
  1574  004A  084D               	movf	??_isr+1,w
  1575  004B  00FC               	movwf	_current+1
  1576                           
  1577                           ;interrupts.c: 42: if (current == 0 && previous == 1 && (millis - firstTime) > 200)
  1578  004C  087B               	movf	_current,w
  1579  004D  047C               	iorwf	_current+1,w
  1580  004E  1D03               	btfss	3,2
  1581  004F  2893               	goto	i1l1109
  1582  0050  037D               	decf	_previous,w
  1583  0051  1D03               	btfss	3,2
  1584  0052  2893               	goto	i1l1109
  1585  0053  083A               	movf	_millis,w
  1586  0054  00CC               	movwf	??_isr
  1587  0055  083B               	movf	_millis+1,w
  1588  0056  00CD               	movwf	??_isr+1
  1589  0057  083C               	movf	_millis+2,w
  1590  0058  00CE               	movwf	??_isr+2
  1591  0059  083D               	movf	_millis+3,w
  1592  005A  00CF               	movwf	??_isr+3
  1593  005B  092A               	comf	_firstTime,w
  1594  005C  00D0               	movwf	??_isr+4
  1595  005D  092B               	comf	_firstTime+1,w
  1596  005E  00D1               	movwf	??_isr+5
  1597  005F  092C               	comf	_firstTime+2,w
  1598  0060  00D2               	movwf	??_isr+6
  1599  0061  092D               	comf	_firstTime+3,w
  1600  0062  00D3               	movwf	??_isr+7
  1601  0063  0AD0               	incf	??_isr+4,f
  1602  0064  1903               	skipnz
  1603  0065  0AD1               	incf	??_isr+5,f
  1604  0066  1903               	skipnz
  1605  0067  0AD2               	incf	??_isr+6,f
  1606  0068  1903               	skipnz
  1607  0069  0AD3               	incf	??_isr+7,f
  1608  006A  0850               	movf	??_isr+4,w
  1609  006B  07CC               	addwf	??_isr,f
  1610  006C  0851               	movf	??_isr+5,w
  1611  006D  1803               	skipnc
  1612  006E  0F51               	incfsz	??_isr+5,w
  1613  006F  2871               	goto	u67_20
  1614  0070  2872               	goto	u67_21
  1615  0071                     u67_20:	
  1616  0071  07CD               	addwf	??_isr+1,f
  1617  0072                     u67_21:	
  1618  0072  0852               	movf	??_isr+6,w
  1619  0073  1803               	skipnc
  1620  0074  0F52               	incfsz	??_isr+6,w
  1621  0075  2877               	goto	u67_22
  1622  0076  2878               	goto	u67_23
  1623  0077                     u67_22:	
  1624  0077  07CE               	addwf	??_isr+2,f
  1625  0078                     u67_23:	
  1626  0078  0853               	movf	??_isr+7,w
  1627  0079  1803               	skipnc
  1628  007A  0A53               	incf	??_isr+7,w
  1629  007B  07CF               	addwf	??_isr+3,f
  1630  007C  084F               	movf	??_isr+3,w
  1631  007D  1D03               	btfss	3,2
  1632  007E  288B               	goto	i1l1107
  1633  007F  084E               	movf	??_isr+2,w
  1634  0080  1D03               	btfss	3,2
  1635  0081  288B               	goto	i1l1107
  1636  0082  084D               	movf	??_isr+1,w
  1637  0083  1D03               	btfss	3,2
  1638  0084  288B               	goto	i1l1107
  1639  0085  30C9               	movlw	201
  1640  0086  024C               	subwf	??_isr,w
  1641  0087  1D03               	skipz
  1642  0088  2889               	goto	u68_23
  1643  0089                     u68_23:	
  1644  0089  1C03               	btfss	3,0
  1645  008A  2893               	goto	i1l1109
  1646  008B                     i1l1107:	
  1647                           
  1648                           ;interrupts.c: 43: {
  1649                           ;interrupts.c: 44: firstTime = millis;
  1650  008B  083D               	movf	_millis+3,w
  1651  008C  00AD               	movwf	_firstTime+3
  1652  008D  083C               	movf	_millis+2,w
  1653  008E  00AC               	movwf	_firstTime+2
  1654  008F  083B               	movf	_millis+1,w
  1655  0090  00AB               	movwf	_firstTime+1
  1656  0091  083A               	movf	_millis,w
  1657  0092  00AA               	movwf	_firstTime
  1658  0093                     i1l1109:	
  1659                           
  1660                           ;interrupts.c: 45: }
  1661                           ;interrupts.c: 47: millis_held = (millis - firstTime);
  1662  0093  083A               	movf	_millis,w
  1663  0094  00CC               	movwf	??_isr
  1664  0095  083B               	movf	_millis+1,w
  1665  0096  00CD               	movwf	??_isr+1
  1666  0097  083C               	movf	_millis+2,w
  1667  0098  00CE               	movwf	??_isr+2
  1668  0099  083D               	movf	_millis+3,w
  1669  009A  00CF               	movwf	??_isr+3
  1670  009B  092A               	comf	_firstTime,w
  1671  009C  00D0               	movwf	??_isr+4
  1672  009D  092B               	comf	_firstTime+1,w
  1673  009E  00D1               	movwf	??_isr+5
  1674  009F  092C               	comf	_firstTime+2,w
  1675  00A0  00D2               	movwf	??_isr+6
  1676  00A1  092D               	comf	_firstTime+3,w
  1677  00A2  00D3               	movwf	??_isr+7
  1678  00A3  0AD0               	incf	??_isr+4,f
  1679  00A4  1903               	skipnz
  1680  00A5  0AD1               	incf	??_isr+5,f
  1681  00A6  1903               	skipnz
  1682  00A7  0AD2               	incf	??_isr+6,f
  1683  00A8  1903               	skipnz
  1684  00A9  0AD3               	incf	??_isr+7,f
  1685  00AA  0850               	movf	??_isr+4,w
  1686  00AB  07CC               	addwf	??_isr,f
  1687  00AC  0851               	movf	??_isr+5,w
  1688  00AD  1803               	skipnc
  1689  00AE  0F51               	incfsz	??_isr+5,w
  1690  00AF  28B1               	goto	u69_20
  1691  00B0  28B2               	goto	u69_21
  1692  00B1                     u69_20:	
  1693  00B1  07CD               	addwf	??_isr+1,f
  1694  00B2                     u69_21:	
  1695  00B2  0852               	movf	??_isr+6,w
  1696  00B3  1803               	skipnc
  1697  00B4  0F52               	incfsz	??_isr+6,w
  1698  00B5  28B7               	goto	u69_22
  1699  00B6  28B8               	goto	u69_23
  1700  00B7                     u69_22:	
  1701  00B7  07CE               	addwf	??_isr+2,f
  1702  00B8                     u69_23:	
  1703  00B8  0853               	movf	??_isr+7,w
  1704  00B9  1803               	skipnc
  1705  00BA  0A53               	incf	??_isr+7,w
  1706  00BB  07CF               	addwf	??_isr+3,f
  1707  00BC  084F               	movf	??_isr+3,w
  1708  00BD  00B9               	movwf	_millis_held+3
  1709  00BE  084E               	movf	??_isr+2,w
  1710  00BF  00B8               	movwf	_millis_held+2
  1711  00C0  084D               	movf	??_isr+1,w
  1712  00C1  00B7               	movwf	_millis_held+1
  1713  00C2  084C               	movf	??_isr,w
  1714  00C3  00B6               	movwf	_millis_held
  1715                           
  1716                           ;interrupts.c: 48: secs_held = millis_held / 1000;
  1717  00C4  3000               	movlw	0
  1718  00C5  00F3               	movwf	___aldiv@divisor+3
  1719  00C6  3000               	movlw	0
  1720  00C7  00F2               	movwf	___aldiv@divisor+2
  1721  00C8  3003               	movlw	3
  1722  00C9  00F1               	movwf	___aldiv@divisor+1
  1723  00CA  30E8               	movlw	232
  1724  00CB  00F0               	movwf	___aldiv@divisor
  1725  00CC  0839               	movf	_millis_held+3,w
  1726  00CD  00F7               	movwf	___aldiv@dividend+3
  1727  00CE  0838               	movf	_millis_held+2,w
  1728  00CF  00F6               	movwf	___aldiv@dividend+2
  1729  00D0  0837               	movf	_millis_held+1,w
  1730  00D1  00F5               	movwf	___aldiv@dividend+1
  1731  00D2  0836               	movf	_millis_held,w
  1732  00D3  00F4               	movwf	___aldiv@dividend
  1733  00D4  120A  118A  21A4  120A  118A  	fcall	___aldiv
  1734  00D9  0873               	movf	?___aldiv+3,w
  1735  00DA  1283               	bcf	3,5	;RP0=0, select bank0
  1736  00DB  1303               	bcf	3,6	;RP1=0, select bank0
  1737  00DC  00B5               	movwf	_secs_held+3
  1738  00DD  0872               	movf	?___aldiv+2,w
  1739  00DE  00B4               	movwf	_secs_held+2
  1740  00DF  0871               	movf	?___aldiv+1,w
  1741  00E0  00B3               	movwf	_secs_held+1
  1742  00E1  0870               	movf	?___aldiv,w
  1743  00E2  00B2               	movwf	_secs_held
  1744                           
  1745                           ;interrupts.c: 50: if (millis_held > 50)
  1746  00E3  1BB9               	btfsc	_millis_held+3,7
  1747  00E4  2935               	goto	i1l45
  1748  00E5  0839               	movf	_millis_held+3,w
  1749  00E6  1D03               	btfss	3,2
  1750  00E7  28F4               	goto	i1l1115
  1751  00E8  0838               	movf	_millis_held+2,w
  1752  00E9  1D03               	btfss	3,2
  1753  00EA  28F4               	goto	i1l1115
  1754  00EB  0837               	movf	_millis_held+1,w
  1755  00EC  1D03               	btfss	3,2
  1756  00ED  28F4               	goto	i1l1115
  1757  00EE  3033               	movlw	51
  1758  00EF  0236               	subwf	_millis_held,w
  1759  00F0  1D03               	skipz
  1760  00F1  28F2               	goto	u70_23
  1761  00F2                     u70_23:	
  1762  00F2  1C03               	btfss	3,0
  1763  00F3  2935               	goto	i1l45
  1764  00F4                     i1l1115:	
  1765                           
  1766                           ;interrupts.c: 51: {
  1767                           ;interrupts.c: 52: if (current == 1 && previous == 0)
  1768  00F4  037B               	decf	_current,w
  1769  00F5  047C               	iorwf	_current+1,w
  1770  00F6  1D03               	btfss	3,2
  1771  00F7  2935               	goto	i1l45
  1772  00F8  087D               	movf	_previous,w
  1773  00F9  1D03               	btfss	3,2
  1774  00FA  2935               	goto	i1l45
  1775                           
  1776                           ;interrupts.c: 53: {
  1777                           ;interrupts.c: 54: if (secs_held <= 0)
  1778  00FB  1BB5               	btfsc	_secs_held+3,7
  1779  00FC  290C               	goto	i1l1121
  1780  00FD  0835               	movf	_secs_held+3,w
  1781  00FE  1D03               	btfss	3,2
  1782  00FF  2920               	goto	i1l1129
  1783  0100  0834               	movf	_secs_held+2,w
  1784  0101  1D03               	btfss	3,2
  1785  0102  2920               	goto	i1l1129
  1786  0103  0833               	movf	_secs_held+1,w
  1787  0104  1D03               	btfss	3,2
  1788  0105  2920               	goto	i1l1129
  1789  0106  3001               	movlw	1
  1790  0107  0232               	subwf	_secs_held,w
  1791  0108  1D03               	skipz
  1792  0109  290A               	goto	u73_23
  1793  010A                     u73_23:	
  1794  010A  1803               	btfsc	3,0
  1795  010B  2920               	goto	i1l1129
  1796  010C                     i1l1121:	
  1797                           
  1798                           ;interrupts.c: 55: {
  1799                           ;interrupts.c: 56: menu++;
  1800  010C  3001               	movlw	1
  1801  010D  07BE               	addwf	_menu,f
  1802  010E  1803               	skipnc
  1803  010F  0ABF               	incf	_menu+1,f
  1804  0110  3000               	movlw	0
  1805  0111  07BF               	addwf	_menu+1,f
  1806                           
  1807                           ;interrupts.c: 57: lcd_clear();
  1808  0112  120A  118A  23CD  120A  118A  	fcall	i1_lcd_clear
  1809                           
  1810                           ;interrupts.c: 58: if(menu == 3)
  1811  0117  3003               	movlw	3
  1812  0118  1283               	bcf	3,5	;RP0=0, select bank0
  1813  0119  1303               	bcf	3,6	;RP1=0, select bank0
  1814  011A  063E               	xorwf	_menu,w
  1815  011B  043F               	iorwf	_menu+1,w
  1816  011C  1D03               	btfss	3,2
  1817  011D  2920               	goto	i1l1129
  1818                           
  1819                           ;interrupts.c: 59: {
  1820                           ;interrupts.c: 60: menu = 0;
  1821  011E  01BE               	clrf	_menu
  1822  011F  01BF               	clrf	_menu+1
  1823  0120                     i1l1129:	
  1824                           
  1825                           ;interrupts.c: 61: }
  1826                           ;interrupts.c: 62: }
  1827                           ;interrupts.c: 64: if (secs_held >= 1)
  1828  0120  1BB5               	btfsc	_secs_held+3,7
  1829  0121  2935               	goto	i1l45
  1830  0122  0835               	movf	_secs_held+3,w
  1831  0123  1D03               	btfss	3,2
  1832  0124  2931               	goto	i1l1131
  1833  0125  0834               	movf	_secs_held+2,w
  1834  0126  1D03               	btfss	3,2
  1835  0127  2931               	goto	i1l1131
  1836  0128  0833               	movf	_secs_held+1,w
  1837  0129  1D03               	btfss	3,2
  1838  012A  2931               	goto	i1l1131
  1839  012B  3001               	movlw	1
  1840  012C  0232               	subwf	_secs_held,w
  1841  012D  1D03               	skipz
  1842  012E  292F               	goto	u75_23
  1843  012F                     u75_23:	
  1844  012F  1C03               	btfss	3,0
  1845  0130  2935               	goto	i1l45
  1846  0131                     i1l1131:	
  1847                           
  1848                           ;interrupts.c: 65: {
  1849                           ;interrupts.c: 66: menusel = 1;
  1850  0131  3001               	movlw	1
  1851  0132  00F9               	movwf	_menusel
  1852  0133  3000               	movlw	0
  1853  0134  00FA               	movwf	_menusel+1
  1854  0135                     i1l45:	
  1855                           
  1856                           ;interrupts.c: 67: }
  1857                           ;interrupts.c: 68: }
  1858                           ;interrupts.c: 69: }
  1859                           ;interrupts.c: 70: previous = current;
  1860  0135  087B               	movf	_current,w
  1861  0136  00CC               	movwf	??_isr
  1862  0137  084C               	movf	??_isr,w
  1863  0138  00FD               	movwf	_previous
  1864                           
  1865                           ;interrupts.c: 71: prev_secs_held = secs_held;
  1866  0139  0835               	movf	_secs_held+3,w
  1867  013A  00B1               	movwf	_prev_secs_held+3
  1868  013B  0834               	movf	_secs_held+2,w
  1869  013C  00B0               	movwf	_prev_secs_held+2
  1870  013D  0833               	movf	_secs_held+1,w
  1871  013E  00AF               	movwf	_prev_secs_held+1
  1872  013F  0832               	movf	_secs_held,w
  1873  0140  00AE               	movwf	_prev_secs_held
  1874                           
  1875                           ;interrupts.c: 75: if(time1 > 500)
  1876  0141  3001               	movlw	1
  1877  0142  0241               	subwf	_time1+1,w
  1878  0143  30F5               	movlw	245
  1879  0144  1903               	skipnz
  1880  0145  0240               	subwf	_time1,w
  1881  0146  1803               	btfsc	3,0
  1882  0147  2983               	goto	i1l1165
  1883  0148  2999               	goto	i1l59
  1884  0149                     i1l1135:	
  1885                           ;interrupts.c: 78: {
  1886                           ;interrupts.c: 79: case 0:
  1887                           
  1888                           ;interrupts.c: 76: {
  1889                           ;interrupts.c: 77: switch(menu)
  1890                           
  1891                           
  1892                           ;interrupts.c: 80: lcd_goto(0x0);
  1893  0149  3000               	movlw	0
  1894  014A  120A  118A  2388  120A  118A  	fcall	_lcd_goto
  1895                           
  1896                           ;interrupts.c: 81: lcd_putstr("LED 1");
  1897  014F  300B               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1898  0150  120A  118A  22AE  120A  118A  	fcall	_lcd_putstr
  1899                           
  1900                           ;interrupts.c: 82: if(menusel == 1)
  1901  0155  0379               	decf	_menusel,w
  1902  0156  047A               	iorwf	_menusel+1,w
  1903  0157  1D03               	btfss	3,2
  1904  0158  2995               	goto	i1l1167
  1905                           
  1906                           ;interrupts.c: 83: {
  1907                           ;interrupts.c: 84: RB6 = !RB6;
  1908  0159  3040               	movlw	64
  1909  015A  296C               	goto	L1
  1910  015B                     i1l1145:	
  1911                           ;interrupts.c: 89: case 1:
  1912                           
  1913                           ;interrupts.c: 86: }
  1914                           ;interrupts.c: 87: break;
  1915                           
  1916                           ;interrupts.c: 85: menusel = 0;
  1917                           
  1918                           
  1919                           ;interrupts.c: 90: lcd_goto(0x0);
  1920  015B  3000               	movlw	0
  1921  015C  120A  118A  2388  120A  118A  	fcall	_lcd_goto
  1922                           
  1923                           ;interrupts.c: 91: lcd_putstr("LED 2");
  1924  0161  3011               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1925  0162  120A  118A  22AE  120A  118A  	fcall	_lcd_putstr
  1926                           
  1927                           ;interrupts.c: 92: if(menusel == 1)
  1928  0167  0379               	decf	_menusel,w
  1929  0168  047A               	iorwf	_menusel+1,w
  1930  0169  1D03               	btfss	3,2
  1931  016A  2995               	goto	i1l1167
  1932                           
  1933                           ;interrupts.c: 93: {
  1934                           ;interrupts.c: 94: RB7 = !RB7;
  1935  016B  3080               	movlw	128
  1936  016C                     L1:	
  1937  016C  1283               	bcf	3,5	;RP0=0, select bank0
  1938  016D  1303               	bcf	3,6	;RP1=0, select bank0
  1939  016E  0686               	xorwf	6,f
  1940  016F  2980               	goto	i1l1161
  1941  0170                     i1l1155:	
  1942                           ;interrupts.c: 99: case 2:
  1943                           
  1944                           ;interrupts.c: 96: }
  1945                           ;interrupts.c: 97: break;
  1946                           
  1947                           ;interrupts.c: 95: menusel = 0;
  1948                           
  1949                           
  1950                           ;interrupts.c: 100: lcd_goto(0x0);
  1951  0170  3000               	movlw	0
  1952  0171  120A  118A  2388  120A  118A  	fcall	_lcd_goto
  1953                           
  1954                           ;interrupts.c: 101: lcd_putstr("Last menu");
  1955  0176  3001               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1956  0177  120A  118A  22AE  120A  118A  	fcall	_lcd_putstr
  1957                           
  1958                           ;interrupts.c: 102: if(menusel == 1)
  1959  017C  0379               	decf	_menusel,w
  1960  017D  047A               	iorwf	_menusel+1,w
  1961  017E  1D03               	btfss	3,2
  1962  017F  2995               	goto	i1l1167
  1963  0180                     i1l1161:	
  1964                           
  1965                           ;interrupts.c: 103: {
  1966                           ;interrupts.c: 104: menusel = 0;
  1967  0180  01F9               	clrf	_menusel
  1968  0181  01FA               	clrf	_menusel+1
  1969                           
  1970                           ;interrupts.c: 107: }
  1971                           
  1972                           ;interrupts.c: 105: }
  1973                           ;interrupts.c: 106: break;
  1974  0182  2995               	goto	i1l1167
  1975  0183                     i1l1165:	
  1976                           
  1977                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1978                           ; Switch size 1, requested type "space"
  1979                           ; Number of cases is 1, Range of values is 0 to 0
  1980                           ; switch strategies available:
  1981                           ; Name         Instructions Cycles
  1982                           ; simple_byte            4     3 (average)
  1983                           ; direct_byte           11     8 (fixed)
  1984                           ; jumptable            260     6 (fixed)
  1985                           ;	Chosen strategy is simple_byte
  1986  0183  1283               	bcf	3,5	;RP0=0, select bank0
  1987  0184  1303               	bcf	3,6	;RP1=0, select bank0
  1988  0185  083F               	movf	_menu+1,w
  1989  0186  3A00               	xorlw	0	; case 0
  1990  0187  1903               	skipnz
  1991  0188  298A               	goto	i1l1397
  1992  0189  2995               	goto	i1l1167
  1993  018A                     i1l1397:	
  1994                           
  1995                           ; Switch size 1, requested type "space"
  1996                           ; Number of cases is 3, Range of values is 0 to 2
  1997                           ; switch strategies available:
  1998                           ; Name         Instructions Cycles
  1999                           ; simple_byte           10     6 (average)
  2000                           ; direct_byte           17     8 (fixed)
  2001                           ; jumptable            260     6 (fixed)
  2002                           ;	Chosen strategy is simple_byte
  2003  018A  083E               	movf	_menu,w
  2004  018B  3A00               	xorlw	0	; case 0
  2005  018C  1903               	skipnz
  2006  018D  2949               	goto	i1l1135
  2007  018E  3A01               	xorlw	1	; case 1
  2008  018F  1903               	skipnz
  2009  0190  295B               	goto	i1l1145
  2010  0191  3A03               	xorlw	3	; case 2
  2011  0192  1903               	skipnz
  2012  0193  2970               	goto	i1l1155
  2013  0194  2995               	goto	i1l1167
  2014  0195                     i1l1167:	
  2015                           
  2016                           ;interrupts.c: 108: time1 = 0;
  2017  0195  1283               	bcf	3,5	;RP0=0, select bank0
  2018  0196  1303               	bcf	3,6	;RP1=0, select bank0
  2019  0197  01C0               	clrf	_time1
  2020  0198  01C1               	clrf	_time1+1
  2021  0199                     i1l59:	
  2022  0199  0857               	movf	??_isr+11,w
  2023  019A  00FF               	movwf	127
  2024  019B  0856               	movf	??_isr+10,w
  2025  019C  008A               	movwf	10
  2026  019D  0855               	movf	??_isr+9,w
  2027  019E  0084               	movwf	4
  2028  019F  0E54               	swapf	(??_isr+8)^0,w
  2029  01A0  0083               	movwf	3
  2030  01A1  0EFE               	swapf	126,f
  2031  01A2  0E7E               	swapf	126,w
  2032  01A3  0009               	retfie
  2033  01A4                     __end_of_isr:	
  2034                           
  2035                           	psect	intentry
  2036  0004                     __pintentry:	
  2037                           ;incstack = 0
  2038 ;; hardware stack exceeded
  2039                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2040                           
  2041  0004                     interrupt_function:	
  2042  007E                     saved_w	set	btemp
  2043  0004  00FE               	movwf	btemp
  2044  0005  0E03               	swapf	3,w
  2045  0006  1283               	bcf	3,5	;RP0=0, select bank0
  2046  0007  1303               	bcf	3,6	;RP1=0, select bank0
  2047  0008  00D4               	movwf	??_isr+8
  2048  0009  0804               	movf	4,w
  2049  000A  00D5               	movwf	??_isr+9
  2050  000B  080A               	movf	10,w
  2051  000C  00D6               	movwf	??_isr+10
  2052  000D  087F               	movf	btemp+1,w
  2053  000E  00D7               	movwf	??_isr+11
  2054  000F  120A  118A  282A   	ljmp	_isr
  2055                           
  2056                           	psect	text10
  2057  03CD                     __ptext10:	
  2058 ;; *************** function i1_lcd_clear *****************
  2059 ;; Defined at:
  2060 ;;		line 136 in file "lcd.c"
  2061 ;; Parameters:    Size  Location     Type
  2062 ;;		None
  2063 ;; Auto vars:     Size  Location     Type
  2064 ;;		None
  2065 ;; Return value:  Size  Location     Type
  2066 ;;                  1    wreg      void 
  2067 ;; Registers used:
  2068 ;;		wreg, status,2, status,0, pclath, cstack
  2069 ;; Tracked objects:
  2070 ;;		On entry : 0/0
  2071 ;;		On exit  : 0/0
  2072 ;;		Unchanged: 0/0
  2073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2074 ;;      Params:         0       0       0       0       0
  2075 ;;      Locals:         0       0       0       0       0
  2076 ;;      Temps:          0       0       0       0       0
  2077 ;;      Totals:         0       0       0       0       0
  2078 ;;Total ram usage:        0 bytes
  2079 ;; Hardware stack levels used:    1
  2080 ;; Hardware stack levels required when called:    2
  2081 ;; This function calls:
  2082 ;;		i1_send_lcd_data
  2083 ;; This function is called by:
  2084 ;;		_isr
  2085 ;; This function uses a non-reentrant model
  2086 ;;
  2087                           
  2088                           
  2089                           ;psect for function i1_lcd_clear
  2090  03CD                     i1_lcd_clear:	
  2091                           
  2092                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  2093                           
  2094                           ;incstack = 0
  2095                           ; Regs used in i1_lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  2096  03CD  01F1               	clrf	i1send_lcd_data@uc_data
  2097  03CE  0AF1               	incf	i1send_lcd_data@uc_data,f
  2098  03CF  3000               	movlw	0
  2099  03D0  120A  118A  22E4   	fcall	i1_send_lcd_data
  2100  03D3  0008               	return
  2101  03D4                     __end_ofi1_lcd_clear:	
  2102                           
  2103                           	psect	text11
  2104  02AE                     __ptext11:	
  2105 ;; *************** function _lcd_putstr *****************
  2106 ;; Defined at:
  2107 ;;		line 241 in file "lcd.c"
  2108 ;; Parameters:    Size  Location     Type
  2109 ;;  csz_string      1    wreg     PTR const unsigned char 
  2110 ;;		 -> STR_3(10), STR_2(6), STR_1(6), 
  2111 ;; Auto vars:     Size  Location     Type
  2112 ;;  csz_string      1    8[COMMON] PTR const unsigned char 
  2113 ;;		 -> STR_3(10), STR_2(6), STR_1(6), 
  2114 ;; Return value:  Size  Location     Type
  2115 ;;                  1    wreg      void 
  2116 ;; Registers used:
  2117 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2118 ;; Tracked objects:
  2119 ;;		On entry : 0/0
  2120 ;;		On exit  : 0/0
  2121 ;;		Unchanged: 0/0
  2122 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2123 ;;      Params:         0       0       0       0       0
  2124 ;;      Locals:         1       0       0       0       0
  2125 ;;      Temps:          1       0       0       0       0
  2126 ;;      Totals:         2       0       0       0       0
  2127 ;;Total ram usage:        2 bytes
  2128 ;; Hardware stack levels used:    1
  2129 ;; Hardware stack levels required when called:    3
  2130 ;; This function calls:
  2131 ;;		_lcd_2ndline
  2132 ;;		_lcd_putchar
  2133 ;; This function is called by:
  2134 ;;		_isr
  2135 ;; This function uses a non-reentrant model
  2136 ;;
  2137                           
  2138                           
  2139                           ;psect for function _lcd_putstr
  2140  02AE                     _lcd_putstr:	
  2141                           
  2142                           ;incstack = 0
  2143 ;; hardware stack exceeded
  2144                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2145                           ;lcd_putstr@csz_string stored from wreg
  2146  02AE  00F8               	movwf	lcd_putstr@csz_string
  2147  02AF                     i1l1037:	
  2148                           ;lcd.c: 244: while (*csz_string != '\0') {
  2149                           
  2150  02AF  0878               	movf	lcd_putstr@csz_string,w
  2151  02B0  0084               	movwf	4
  2152  02B1  120A  118A  2343  120A  118A  	fcall	stringdir
  2153  02B6  3A00               	xorlw	0
  2154  02B7  1903               	btfsc	3,2
  2155  02B8  0008               	return
  2156                           
  2157                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  2158  02B9  0878               	movf	lcd_putstr@csz_string,w
  2159  02BA  0084               	movwf	4
  2160  02BB  120A  118A  2343  120A  118A  	fcall	stringdir
  2161  02C0  3A0A               	xorlw	10
  2162  02C1  1903               	skipnz
  2163  02C2  2ACD               	goto	i1l1031
  2164  02C3  0878               	movf	lcd_putstr@csz_string,w
  2165  02C4  0084               	movwf	4
  2166  02C5  120A  118A  2343  120A  118A  	fcall	stringdir
  2167  02CA  3A0D               	xorlw	13
  2168  02CB  1D03               	skipz
  2169  02CC  2AD3               	goto	i1l1033
  2170  02CD                     i1l1031:	
  2171                           
  2172                           ;lcd.c: 248: lcd_2ndline();
  2173  02CD  120A  118A  23BC  120A  118A  	fcall	_lcd_2ndline
  2174                           
  2175                           ;lcd.c: 249: }
  2176  02D2  2ADF               	goto	i1l1035
  2177  02D3                     i1l1033:	
  2178                           
  2179                           ;lcd.c: 252: else {
  2180                           ;lcd.c: 253: lcd_putchar(*csz_string);
  2181  02D3  0878               	movf	lcd_putstr@csz_string,w
  2182  02D4  0084               	movwf	4
  2183  02D5  120A  118A  2343  120A  118A  	fcall	stringdir
  2184  02DA  120A  118A  23A9  120A  118A  	fcall	_lcd_putchar
  2185  02DF                     i1l1035:	
  2186                           
  2187                           ;lcd.c: 254: }
  2188                           ;lcd.c: 257: csz_string++;
  2189  02DF  3001               	movlw	1
  2190  02E0  00F7               	movwf	??_lcd_putstr
  2191  02E1  0877               	movf	??_lcd_putstr,w
  2192  02E2  07F8               	addwf	lcd_putstr@csz_string,f
  2193  02E3  2AAF               	goto	i1l1037
  2194  02E4                     __end_of_lcd_putstr:	
  2195                           
  2196                           	psect	text12
  2197  03A9                     __ptext12:	
  2198 ;; *************** function _lcd_putchar *****************
  2199 ;; Defined at:
  2200 ;;		line 220 in file "lcd.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  c_data          1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  c_data          1    6[COMMON] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg, status,2, status,0, pclath, cstack
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         1       0       0       0       0
  2216 ;;      Temps:          1       0       0       0       0
  2217 ;;      Totals:         2       0       0       0       0
  2218 ;;Total ram usage:        2 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; Hardware stack levels required when called:    2
  2221 ;; This function calls:
  2222 ;;		i1_send_lcd_data
  2223 ;; This function is called by:
  2224 ;;		_lcd_putstr
  2225 ;;		_lcd_bcd
  2226 ;; This function uses a non-reentrant model
  2227 ;;
  2228                           
  2229                           
  2230                           ;psect for function _lcd_putchar
  2231  03A9                     _lcd_putchar:	
  2232                           
  2233                           ;incstack = 0
  2234 ;; hardware stack exceeded
  2235                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  2236                           ;lcd_putchar@c_data stored from wreg
  2237  03A9  00F6               	movwf	lcd_putchar@c_data
  2238                           
  2239                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  2240  03AA  0876               	movf	lcd_putchar@c_data,w
  2241  03AB  00F5               	movwf	??_lcd_putchar
  2242  03AC  0875               	movf	??_lcd_putchar,w
  2243  03AD  00F1               	movwf	i1send_lcd_data@uc_data
  2244  03AE  3001               	movlw	1
  2245  03AF  120A  118A  22E4   	fcall	i1_send_lcd_data
  2246  03B2  0008               	return
  2247  03B3                     __end_of_lcd_putchar:	
  2248                           
  2249                           	psect	text13
  2250  03BC                     __ptext13:	
  2251 ;; *************** function _lcd_2ndline *****************
  2252 ;; Defined at:
  2253 ;;		line 178 in file "lcd.c"
  2254 ;; Parameters:    Size  Location     Type
  2255 ;;		None
  2256 ;; Auto vars:     Size  Location     Type
  2257 ;;		None
  2258 ;; Return value:  Size  Location     Type
  2259 ;;                  1    wreg      void 
  2260 ;; Registers used:
  2261 ;;		wreg, status,2, status,0, pclath, cstack
  2262 ;; Tracked objects:
  2263 ;;		On entry : 0/0
  2264 ;;		On exit  : 0/0
  2265 ;;		Unchanged: 0/0
  2266 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2267 ;;      Params:         0       0       0       0       0
  2268 ;;      Locals:         0       0       0       0       0
  2269 ;;      Temps:          1       0       0       0       0
  2270 ;;      Totals:         1       0       0       0       0
  2271 ;;Total ram usage:        1 bytes
  2272 ;; Hardware stack levels used:    1
  2273 ;; Hardware stack levels required when called:    2
  2274 ;; This function calls:
  2275 ;;		i1_send_lcd_data
  2276 ;; This function is called by:
  2277 ;;		_lcd_putstr
  2278 ;; This function uses a non-reentrant model
  2279 ;;
  2280                           
  2281                           
  2282                           ;psect for function _lcd_2ndline
  2283  03BC                     _lcd_2ndline:	
  2284                           
  2285                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  2286                           
  2287                           ;incstack = 0
  2288 ;; hardware stack exceeded
  2289                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  2290  03BC  30C0               	movlw	192
  2291  03BD  00F5               	movwf	??_lcd_2ndline
  2292  03BE  0875               	movf	??_lcd_2ndline,w
  2293  03BF  00F1               	movwf	i1send_lcd_data@uc_data
  2294  03C0  3000               	movlw	0
  2295  03C1  120A  118A  22E4   	fcall	i1_send_lcd_data
  2296  03C4  0008               	return
  2297  03C5                     __end_of_lcd_2ndline:	
  2298                           
  2299                           	psect	text14
  2300  0388                     __ptext14:	
  2301 ;; *************** function _lcd_goto *****************
  2302 ;; Defined at:
  2303 ;;		line 199 in file "lcd.c"
  2304 ;; Parameters:    Size  Location     Type
  2305 ;;  uc_position     1    wreg     unsigned char 
  2306 ;; Auto vars:     Size  Location     Type
  2307 ;;  uc_position     1    6[COMMON] unsigned char 
  2308 ;; Return value:  Size  Location     Type
  2309 ;;                  1    wreg      void 
  2310 ;; Registers used:
  2311 ;;		wreg, status,2, status,0, pclath, cstack
  2312 ;; Tracked objects:
  2313 ;;		On entry : 0/0
  2314 ;;		On exit  : 0/0
  2315 ;;		Unchanged: 0/0
  2316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2317 ;;      Params:         0       0       0       0       0
  2318 ;;      Locals:         1       0       0       0       0
  2319 ;;      Temps:          1       0       0       0       0
  2320 ;;      Totals:         2       0       0       0       0
  2321 ;;Total ram usage:        2 bytes
  2322 ;; Hardware stack levels used:    1
  2323 ;; Hardware stack levels required when called:    2
  2324 ;; This function calls:
  2325 ;;		i1_send_lcd_data
  2326 ;; This function is called by:
  2327 ;;		_isr
  2328 ;; This function uses a non-reentrant model
  2329 ;;
  2330                           
  2331                           
  2332                           ;psect for function _lcd_goto
  2333  0388                     _lcd_goto:	
  2334                           
  2335                           ;incstack = 0
  2336                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  2337                           ;lcd_goto@uc_position stored from wreg
  2338  0388  00F6               	movwf	lcd_goto@uc_position
  2339                           
  2340                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  2341  0389  0876               	movf	lcd_goto@uc_position,w
  2342  038A  3880               	iorlw	128
  2343  038B  00F5               	movwf	??_lcd_goto
  2344  038C  0875               	movf	??_lcd_goto,w
  2345  038D  00F1               	movwf	i1send_lcd_data@uc_data
  2346  038E  3000               	movlw	0
  2347  038F  120A  118A  22E4   	fcall	i1_send_lcd_data
  2348  0392  0008               	return
  2349  0393                     __end_of_lcd_goto:	
  2350                           
  2351                           	psect	text15
  2352  02E4                     __ptext15:	
  2353 ;; *************** function i1_send_lcd_data *****************
  2354 ;; Defined at:
  2355 ;;		line 308 in file "lcd.c"
  2356 ;; Parameters:    Size  Location     Type
  2357 ;;  b_rs            1    wreg     unsigned char 
  2358 ;;  uc_data         1    1[COMMON] unsigned char 
  2359 ;; Auto vars:     Size  Location     Type
  2360 ;;  b_rs            1    4[COMMON] unsigned char 
  2361 ;; Return value:  Size  Location     Type
  2362 ;;                  1    wreg      void 
  2363 ;; Registers used:
  2364 ;;		wreg, status,2, status,0, pclath, cstack
  2365 ;; Tracked objects:
  2366 ;;		On entry : 0/0
  2367 ;;		On exit  : 0/0
  2368 ;;		Unchanged: 0/0
  2369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2370 ;;      Params:         1       0       0       0       0
  2371 ;;      Locals:         1       0       0       0       0
  2372 ;;      Temps:          2       0       0       0       0
  2373 ;;      Totals:         4       0       0       0       0
  2374 ;;Total ram usage:        4 bytes
  2375 ;; Hardware stack levels used:    1
  2376 ;; Hardware stack levels required when called:    1
  2377 ;; This function calls:
  2378 ;;		i1_set_lcd_data
  2379 ;;		i1_set_lcd_e
  2380 ;;		i1_set_lcd_rs
  2381 ;; This function is called by:
  2382 ;;		_lcd_2ndline
  2383 ;;		_lcd_goto
  2384 ;;		_lcd_putchar
  2385 ;;		i1_lcd_clear
  2386 ;; This function uses a non-reentrant model
  2387 ;;
  2388                           
  2389                           
  2390                           ;psect for function i1_send_lcd_data
  2391  02E4                     i1_send_lcd_data:	
  2392                           
  2393                           ;incstack = 0
  2394                           ; Regs used in i1_send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2395                           ;i1send_lcd_data@b_rs stored from wreg
  2396  02E4  00F4               	movwf	i1send_lcd_data@b_rs
  2397                           
  2398                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2399  02E5  0874               	movf	i1send_lcd_data@b_rs,w
  2400  02E6  120A  118A  2393  120A  118A  	fcall	i1_set_lcd_rs
  2401                           
  2402                           ;lcd.c: 312: set_lcd_data(uc_data);
  2403  02EB  0871               	movf	i1send_lcd_data@uc_data,w
  2404  02EC  120A  118A  23DA  120A  118A  	fcall	i1_set_lcd_data
  2405                           
  2406                           ;lcd.c: 315: set_lcd_e(1);
  2407  02F1  3001               	movlw	1
  2408  02F2  120A  118A  239E  120A  118A  	fcall	i1_set_lcd_e
  2409                           
  2410                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2411  02F7  3007               	movlw	7
  2412  02F8  00F3               	movwf	??i1_send_lcd_data+1
  2413  02F9  307D               	movlw	125
  2414  02FA  00F2               	movwf	??i1_send_lcd_data
  2415  02FB                     u100_27:	
  2416  02FB  0BF2               	decfsz	??i1_send_lcd_data,f
  2417  02FC  2AFB               	goto	u100_27
  2418  02FD  0BF3               	decfsz	??i1_send_lcd_data+1,f
  2419  02FE  2AFB               	goto	u100_27
  2420                           
  2421                           ;lcd.c: 317: set_lcd_e(0);
  2422  02FF  3000               	movlw	0
  2423  0300  120A  118A  239E  120A  118A  	fcall	i1_set_lcd_e
  2424                           
  2425                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2426  0305  300D               	movlw	13
  2427  0306  00F3               	movwf	??i1_send_lcd_data+1
  2428  0307  30FB               	movlw	251
  2429  0308  00F2               	movwf	??i1_send_lcd_data
  2430  0309                     u101_27:	
  2431  0309  0BF2               	decfsz	??i1_send_lcd_data,f
  2432  030A  2B09               	goto	u101_27
  2433  030B  0BF3               	decfsz	??i1_send_lcd_data+1,f
  2434  030C  2B09               	goto	u101_27
  2435  030D  2B0E               	nop2
  2436                           
  2437                           ;lcd.c: 321: set_lcd_rs(0);
  2438  030E  3000               	movlw	0
  2439  030F  120A  118A  2393  120A  118A  	fcall	i1_set_lcd_rs
  2440                           
  2441                           ;lcd.c: 322: set_lcd_data(0);
  2442  0314  3000               	movlw	0
  2443  0315  120A  118A  23DA   	fcall	i1_set_lcd_data
  2444  0318  0008               	return
  2445  0319                     __end_ofi1_send_lcd_data:	
  2446                           
  2447                           	psect	text16
  2448  0393                     __ptext16:	
  2449 ;; *************** function i1_set_lcd_rs *****************
  2450 ;; Defined at:
  2451 ;;		line 360 in file "lcd.c"
  2452 ;; Parameters:    Size  Location     Type
  2453 ;;  b_output        1    wreg     unsigned char 
  2454 ;; Auto vars:     Size  Location     Type
  2455 ;;  b_output        1    0[COMMON] unsigned char 
  2456 ;; Return value:  Size  Location     Type
  2457 ;;                  1    wreg      void 
  2458 ;; Registers used:
  2459 ;;		wreg
  2460 ;; Tracked objects:
  2461 ;;		On entry : 0/0
  2462 ;;		On exit  : 0/0
  2463 ;;		Unchanged: 0/0
  2464 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2465 ;;      Params:         0       0       0       0       0
  2466 ;;      Locals:         1       0       0       0       0
  2467 ;;      Temps:          0       0       0       0       0
  2468 ;;      Totals:         1       0       0       0       0
  2469 ;;Total ram usage:        1 bytes
  2470 ;; Hardware stack levels used:    1
  2471 ;; This function calls:
  2472 ;;		Nothing
  2473 ;; This function is called by:
  2474 ;;		i1_send_lcd_data
  2475 ;; This function uses a non-reentrant model
  2476 ;;
  2477                           
  2478                           
  2479                           ;psect for function i1_set_lcd_rs
  2480  0393                     i1_set_lcd_rs:	
  2481                           
  2482                           ;incstack = 0
  2483                           ; Regs used in i1_set_lcd_rs: [wreg]
  2484                           ;i1set_lcd_rs@b_output stored from wreg
  2485  0393  00F0               	movwf	i1set_lcd_rs@b_output
  2486                           
  2487                           ;lcd.c: 362: RB4 = b_output;
  2488  0394  1C70               	btfss	i1set_lcd_rs@b_output,0
  2489  0395  2B9A               	goto	u49_20
  2490  0396  1283               	bcf	3,5	;RP0=0, select bank0
  2491  0397  1303               	bcf	3,6	;RP1=0, select bank0
  2492  0398  1606               	bsf	6,4	;volatile
  2493  0399  0008               	return
  2494  039A                     u49_20:	
  2495  039A  1283               	bcf	3,5	;RP0=0, select bank0
  2496  039B  1303               	bcf	3,6	;RP1=0, select bank0
  2497  039C  1206               	bcf	6,4	;volatile
  2498  039D  0008               	return
  2499  039E                     __end_ofi1_set_lcd_rs:	
  2500                           
  2501                           	psect	text17
  2502  039E                     __ptext17:	
  2503 ;; *************** function i1_set_lcd_e *****************
  2504 ;; Defined at:
  2505 ;;		line 340 in file "lcd.c"
  2506 ;; Parameters:    Size  Location     Type
  2507 ;;  b_output        1    wreg     unsigned char 
  2508 ;; Auto vars:     Size  Location     Type
  2509 ;;  b_output        1    0[COMMON] unsigned char 
  2510 ;; Return value:  Size  Location     Type
  2511 ;;                  1    wreg      void 
  2512 ;; Registers used:
  2513 ;;		wreg
  2514 ;; Tracked objects:
  2515 ;;		On entry : 0/0
  2516 ;;		On exit  : 0/0
  2517 ;;		Unchanged: 0/0
  2518 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2519 ;;      Params:         0       0       0       0       0
  2520 ;;      Locals:         1       0       0       0       0
  2521 ;;      Temps:          0       0       0       0       0
  2522 ;;      Totals:         1       0       0       0       0
  2523 ;;Total ram usage:        1 bytes
  2524 ;; Hardware stack levels used:    1
  2525 ;; This function calls:
  2526 ;;		Nothing
  2527 ;; This function is called by:
  2528 ;;		i1_send_lcd_data
  2529 ;; This function uses a non-reentrant model
  2530 ;;
  2531                           
  2532                           
  2533                           ;psect for function i1_set_lcd_e
  2534  039E                     i1_set_lcd_e:	
  2535                           
  2536                           ;incstack = 0
  2537                           ; Regs used in i1_set_lcd_e: [wreg]
  2538                           ;i1set_lcd_e@b_output stored from wreg
  2539  039E  00F0               	movwf	i1set_lcd_e@b_output
  2540                           
  2541                           ;lcd.c: 342: RB5 = b_output;
  2542  039F  1C70               	btfss	i1set_lcd_e@b_output,0
  2543  03A0  2BA5               	goto	u47_20
  2544  03A1  1283               	bcf	3,5	;RP0=0, select bank0
  2545  03A2  1303               	bcf	3,6	;RP1=0, select bank0
  2546  03A3  1686               	bsf	6,5	;volatile
  2547  03A4  0008               	return
  2548  03A5                     u47_20:	
  2549  03A5  1283               	bcf	3,5	;RP0=0, select bank0
  2550  03A6  1303               	bcf	3,6	;RP1=0, select bank0
  2551  03A7  1286               	bcf	6,5	;volatile
  2552  03A8  0008               	return
  2553  03A9                     __end_ofi1_set_lcd_e:	
  2554                           
  2555                           	psect	text18
  2556  03DA                     __ptext18:	
  2557 ;; *************** function i1_set_lcd_data *****************
  2558 ;; Defined at:
  2559 ;;		line 380 in file "lcd.c"
  2560 ;; Parameters:    Size  Location     Type
  2561 ;;  uc_data         1    wreg     unsigned char 
  2562 ;; Auto vars:     Size  Location     Type
  2563 ;;  uc_data         1    0[COMMON] unsigned char 
  2564 ;; Return value:  Size  Location     Type
  2565 ;;                  1    wreg      void 
  2566 ;; Registers used:
  2567 ;;		wreg
  2568 ;; Tracked objects:
  2569 ;;		On entry : 0/0
  2570 ;;		On exit  : 0/0
  2571 ;;		Unchanged: 0/0
  2572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2573 ;;      Params:         0       0       0       0       0
  2574 ;;      Locals:         1       0       0       0       0
  2575 ;;      Temps:          0       0       0       0       0
  2576 ;;      Totals:         1       0       0       0       0
  2577 ;;Total ram usage:        1 bytes
  2578 ;; Hardware stack levels used:    1
  2579 ;; This function calls:
  2580 ;;		Nothing
  2581 ;; This function is called by:
  2582 ;;		i1_send_lcd_data
  2583 ;; This function uses a non-reentrant model
  2584 ;;
  2585                           
  2586                           
  2587                           ;psect for function i1_set_lcd_data
  2588  03DA                     i1_set_lcd_data:	
  2589                           
  2590                           ;incstack = 0
  2591                           ; Regs used in i1_set_lcd_data: [wreg]
  2592                           ;i1set_lcd_data@uc_data stored from wreg
  2593  03DA  00F0               	movwf	i1set_lcd_data@uc_data
  2594                           
  2595                           ;lcd.c: 382: PORTD = uc_data;
  2596  03DB  0870               	movf	i1set_lcd_data@uc_data,w
  2597  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  2598  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  2599  03DE  0088               	movwf	8	;volatile
  2600  03DF  0008               	return
  2601  03E0                     __end_ofi1_set_lcd_data:	
  2602                           
  2603                           	psect	text19
  2604  01A4                     __ptext19:	
  2605 ;; *************** function ___aldiv *****************
  2606 ;; Defined at:
  2607 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\aldiv.c"
  2608 ;; Parameters:    Size  Location     Type
  2609 ;;  divisor         4    0[COMMON] long 
  2610 ;;  dividend        4    4[COMMON] long 
  2611 ;; Auto vars:     Size  Location     Type
  2612 ;;  quotient        4    2[BANK0 ] long 
  2613 ;;  sign            1    1[BANK0 ] unsigned char 
  2614 ;;  counter         1    0[BANK0 ] unsigned char 
  2615 ;; Return value:  Size  Location     Type
  2616 ;;                  4    0[COMMON] long 
  2617 ;; Registers used:
  2618 ;;		wreg, status,2, status,0
  2619 ;; Tracked objects:
  2620 ;;		On entry : 0/0
  2621 ;;		On exit  : 0/0
  2622 ;;		Unchanged: 0/0
  2623 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2624 ;;      Params:         8       0       0       0       0
  2625 ;;      Locals:         0       6       0       0       0
  2626 ;;      Temps:          1       0       0       0       0
  2627 ;;      Totals:         9       6       0       0       0
  2628 ;;Total ram usage:       15 bytes
  2629 ;; Hardware stack levels used:    1
  2630 ;; This function calls:
  2631 ;;		Nothing
  2632 ;; This function is called by:
  2633 ;;		_isr
  2634 ;; This function uses a non-reentrant model
  2635 ;;
  2636                           
  2637                           
  2638                           ;psect for function ___aldiv
  2639  01A4                     ___aldiv:	
  2640                           
  2641                           ;incstack = 0
  2642                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
  2643  01A4  1283               	bcf	3,5	;RP0=0, select bank0
  2644  01A5  1303               	bcf	3,6	;RP1=0, select bank0
  2645  01A6  01C7               	clrf	___aldiv@sign
  2646  01A7  1FF3               	btfss	___aldiv@divisor+3,7
  2647  01A8  29B6               	goto	i1l354
  2648  01A9  09F0               	comf	___aldiv@divisor,f
  2649  01AA  09F1               	comf	___aldiv@divisor+1,f
  2650  01AB  09F2               	comf	___aldiv@divisor+2,f
  2651  01AC  09F3               	comf	___aldiv@divisor+3,f
  2652  01AD  0AF0               	incf	___aldiv@divisor,f
  2653  01AE  1903               	skipnz
  2654  01AF  0AF1               	incf	___aldiv@divisor+1,f
  2655  01B0  1903               	skipnz
  2656  01B1  0AF2               	incf	___aldiv@divisor+2,f
  2657  01B2  1903               	skipnz
  2658  01B3  0AF3               	incf	___aldiv@divisor+3,f
  2659  01B4  01C7               	clrf	___aldiv@sign
  2660  01B5  0AC7               	incf	___aldiv@sign,f
  2661  01B6                     i1l354:	
  2662  01B6  1FF7               	btfss	___aldiv@dividend+3,7
  2663  01B7  29C7               	goto	i1l1063
  2664  01B8  09F4               	comf	___aldiv@dividend,f
  2665  01B9  09F5               	comf	___aldiv@dividend+1,f
  2666  01BA  09F6               	comf	___aldiv@dividend+2,f
  2667  01BB  09F7               	comf	___aldiv@dividend+3,f
  2668  01BC  0AF4               	incf	___aldiv@dividend,f
  2669  01BD  1903               	skipnz
  2670  01BE  0AF5               	incf	___aldiv@dividend+1,f
  2671  01BF  1903               	skipnz
  2672  01C0  0AF6               	incf	___aldiv@dividend+2,f
  2673  01C1  1903               	skipnz
  2674  01C2  0AF7               	incf	___aldiv@dividend+3,f
  2675  01C3  3001               	movlw	1
  2676  01C4  00F8               	movwf	??___aldiv
  2677  01C5  0878               	movf	??___aldiv,w
  2678  01C6  06C7               	xorwf	___aldiv@sign,f
  2679  01C7                     i1l1063:	
  2680  01C7  3000               	movlw	0
  2681  01C8  00CB               	movwf	___aldiv@quotient+3
  2682  01C9  3000               	movlw	0
  2683  01CA  00CA               	movwf	___aldiv@quotient+2
  2684  01CB  3000               	movlw	0
  2685  01CC  00C9               	movwf	___aldiv@quotient+1
  2686  01CD  3000               	movlw	0
  2687  01CE  00C8               	movwf	___aldiv@quotient
  2688  01CF  0873               	movf	___aldiv@divisor+3,w
  2689  01D0  0472               	iorwf	___aldiv@divisor+2,w
  2690  01D1  0471               	iorwf	___aldiv@divisor+1,w
  2691  01D2  0470               	iorwf	___aldiv@divisor,w
  2692  01D3  1903               	skipnz
  2693  01D4  2A1C               	goto	i1l1085
  2694  01D5  01C6               	clrf	___aldiv@counter
  2695  01D6  0AC6               	incf	___aldiv@counter,f
  2696  01D7                     i1l1071:	
  2697  01D7  1BF3               	btfsc	___aldiv@divisor+3,7
  2698  01D8  29E7               	goto	i1l1073
  2699  01D9  3001               	movlw	1
  2700  01DA  00F8               	movwf	??___aldiv
  2701  01DB                     u57_25:	
  2702  01DB  1003               	clrc
  2703  01DC  0DF0               	rlf	___aldiv@divisor,f
  2704  01DD  0DF1               	rlf	___aldiv@divisor+1,f
  2705  01DE  0DF2               	rlf	___aldiv@divisor+2,f
  2706  01DF  0DF3               	rlf	___aldiv@divisor+3,f
  2707  01E0  0BF8               	decfsz	??___aldiv,f
  2708  01E1  29DB               	goto	u57_25
  2709  01E2  3001               	movlw	1
  2710  01E3  00F8               	movwf	??___aldiv
  2711  01E4  0878               	movf	??___aldiv,w
  2712  01E5  07C6               	addwf	___aldiv@counter,f
  2713  01E6  29D7               	goto	i1l1071
  2714  01E7                     i1l1073:	
  2715  01E7  3001               	movlw	1
  2716  01E8  00F8               	movwf	??___aldiv
  2717  01E9                     u59_25:	
  2718  01E9  1003               	clrc
  2719  01EA  0DC8               	rlf	___aldiv@quotient,f
  2720  01EB  0DC9               	rlf	___aldiv@quotient+1,f
  2721  01EC  0DCA               	rlf	___aldiv@quotient+2,f
  2722  01ED  0DCB               	rlf	___aldiv@quotient+3,f
  2723  01EE  0BF8               	decfsz	??___aldiv,f
  2724  01EF  29E9               	goto	u59_25
  2725  01F0  0873               	movf	___aldiv@divisor+3,w
  2726  01F1  0277               	subwf	___aldiv@dividend+3,w
  2727  01F2  1D03               	skipz
  2728  01F3  29FE               	goto	u60_25
  2729  01F4  0872               	movf	___aldiv@divisor+2,w
  2730  01F5  0276               	subwf	___aldiv@dividend+2,w
  2731  01F6  1D03               	skipz
  2732  01F7  29FE               	goto	u60_25
  2733  01F8  0871               	movf	___aldiv@divisor+1,w
  2734  01F9  0275               	subwf	___aldiv@dividend+1,w
  2735  01FA  1D03               	skipz
  2736  01FB  29FE               	goto	u60_25
  2737  01FC  0870               	movf	___aldiv@divisor,w
  2738  01FD  0274               	subwf	___aldiv@dividend,w
  2739  01FE                     u60_25:	
  2740  01FE  1C03               	skipc
  2741  01FF  2A0F               	goto	i1l1081
  2742  0200  0870               	movf	___aldiv@divisor,w
  2743  0201  02F4               	subwf	___aldiv@dividend,f
  2744  0202  0871               	movf	___aldiv@divisor+1,w
  2745  0203  1C03               	skipc
  2746  0204  0F71               	incfsz	___aldiv@divisor+1,w
  2747  0205  02F5               	subwf	___aldiv@dividend+1,f
  2748  0206  0872               	movf	___aldiv@divisor+2,w
  2749  0207  1C03               	skipc
  2750  0208  0F72               	incfsz	___aldiv@divisor+2,w
  2751  0209  02F6               	subwf	___aldiv@dividend+2,f
  2752  020A  0873               	movf	___aldiv@divisor+3,w
  2753  020B  1C03               	skipc
  2754  020C  0F73               	incfsz	___aldiv@divisor+3,w
  2755  020D  02F7               	subwf	___aldiv@dividend+3,f
  2756  020E  1448               	bsf	___aldiv@quotient,0
  2757  020F                     i1l1081:	
  2758  020F  3001               	movlw	1
  2759  0210                     u61_25:	
  2760  0210  1003               	clrc
  2761  0211  0CF3               	rrf	___aldiv@divisor+3,f
  2762  0212  0CF2               	rrf	___aldiv@divisor+2,f
  2763  0213  0CF1               	rrf	___aldiv@divisor+1,f
  2764  0214  0CF0               	rrf	___aldiv@divisor,f
  2765  0215  3EFF               	addlw	-1
  2766  0216  1D03               	skipz
  2767  0217  2A10               	goto	u61_25
  2768  0218  3001               	movlw	1
  2769  0219  02C6               	subwf	___aldiv@counter,f
  2770  021A  1D03               	btfss	3,2
  2771  021B  29E7               	goto	i1l1073
  2772  021C                     i1l1085:	
  2773  021C  0847               	movf	___aldiv@sign,w
  2774  021D  1903               	btfsc	3,2
  2775  021E  2A2A               	goto	i1l1089
  2776  021F  09C8               	comf	___aldiv@quotient,f
  2777  0220  09C9               	comf	___aldiv@quotient+1,f
  2778  0221  09CA               	comf	___aldiv@quotient+2,f
  2779  0222  09CB               	comf	___aldiv@quotient+3,f
  2780  0223  0AC8               	incf	___aldiv@quotient,f
  2781  0224  1903               	skipnz
  2782  0225  0AC9               	incf	___aldiv@quotient+1,f
  2783  0226  1903               	skipnz
  2784  0227  0ACA               	incf	___aldiv@quotient+2,f
  2785  0228  1903               	skipnz
  2786  0229  0ACB               	incf	___aldiv@quotient+3,f
  2787  022A                     i1l1089:	
  2788  022A  084B               	movf	___aldiv@quotient+3,w
  2789  022B  00F3               	movwf	?___aldiv+3
  2790  022C  084A               	movf	___aldiv@quotient+2,w
  2791  022D  00F2               	movwf	?___aldiv+2
  2792  022E  0849               	movf	___aldiv@quotient+1,w
  2793  022F  00F1               	movwf	?___aldiv+1
  2794  0230  0848               	movf	___aldiv@quotient,w
  2795  0231  00F0               	movwf	?___aldiv
  2796  0232  0008               	return
  2797  0233                     __end_of___aldiv:	
  2798  007E                     btemp	set	126	;btemp
  2799  007E                     wtemp0	set	126


Data Sizes:
    Strings     22
    Constant    0
    Data        1
    BSS         42
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9      14
    BANK0            80     23      61
    BANK1            80      2       2
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 10
		 -> STR_3(CODE[10]), STR_2(CODE[6]), STR_1(CODE[6]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___aldiv
    _isr->_lcd_putstr
    i1_lcd_clear->i1_send_lcd_data
    _lcd_putstr->_lcd_putchar
    _lcd_putchar->i1_send_lcd_data
    _lcd_2ndline->i1_send_lcd_data
    _lcd_goto->i1_send_lcd_data
    i1_send_lcd_data->i1_set_lcd_data
    i1_send_lcd_data->i1_set_lcd_e
    i1_send_lcd_data->i1_set_lcd_rs

Critical Paths under _main in BANK0

    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in BANK0

    _isr->___aldiv

Critical Paths under _main in BANK1

    _main->_lcd_initialize

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     934
                            _InitApp
                     _adc_initialize
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0     934
                                              0 BANK1      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     456
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     456
                                             19 BANK0      4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                             18 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                 12    12      0    1476
                                              6 BANK0     12    12      0
                            ___aldiv
                           _lcd_goto
                         _lcd_putstr
                        i1_lcd_clear
 ---------------------------------------------------------------------------------
 (6) i1_lcd_clear                                          0     0      0     214
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (6) _lcd_putstr                                           2     2      0     620
                                              7 COMMON     2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (7) _lcd_putchar                                          2     2      0     236
                                              5 COMMON     2     2      0
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (7) _lcd_2ndline                                          1     1      0     214
                                              5 COMMON     1     1      0
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (6) _lcd_goto                                             2     2      0     236
                                              5 COMMON     2     2      0
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (7) i1_send_lcd_data                                      4     3      1     214
                                              1 COMMON     4     3      1
                     i1_set_lcd_data
                        i1_set_lcd_e
                       i1_set_lcd_rs
 ---------------------------------------------------------------------------------
 (8) i1_set_lcd_rs                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_set_lcd_e                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_set_lcd_data                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (6) ___aldiv                                             15     7      8     406
                                              0 COMMON     9     1      8
                                              0 BANK0      6     6      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _adc_initialize
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e

 _isr (ROOT)
   ___aldiv
   _lcd_goto
     i1_send_lcd_data
       i1_set_lcd_data
       i1_set_lcd_e
       i1_set_lcd_rs
   _lcd_putstr
     _lcd_2ndline
       i1_send_lcd_data
         i1_set_lcd_data
         i1_set_lcd_e
         i1_set_lcd_rs
     _lcd_putchar
       i1_send_lcd_data
         i1_set_lcd_data
         i1_set_lcd_e
         i1_set_lcd_rs
   i1_lcd_clear
     i1_send_lcd_data
       i1_set_lcd_data
       i1_set_lcd_e
       i1_set_lcd_rs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      2       2       7        2.5%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     17      3D       5       76.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      4D      12        0.0%
ABS                  0      0      4D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Tue May 15 15:34:05 2018

                       pc 0002              ?_lcd_putchar 0070               __CFG_CP$OFF 0000  
                      l98 0342                        fsr 0004          ?i1_send_lcd_data 0071  
                     _GIE 005F                       _RB1 0031                       _RB4 0034  
                     _RB5 0035                       _RB6 0036                       _RB7 0037  
                     u430 0384                       u450 0377              __CFG_CPD$OFF 0000  
                     u977 023F                       u987 028E                       u997 029F  
  i1send_lcd_data@uc_data 0071                       _isr 002A                       fsr0 0004  
                     indf 0000              __CFG_FOSC$HS 0000         set_lcd_e@b_output 0058  
            __CFG_LVP$OFF 0000                      _ADFM 04FF                      ?_isr 0070  
                    _ADON 00F8                      _CHS0 00FB                      _CHS1 00FC  
                    _CHS2 00FD                      STR_1 0353                      STR_2 0359  
                    STR_3 0349                      _PEIE 005E                      _INTE 005C  
                    i1l45 0135                      i1l59 0199                      _TMR0 0001  
            __CFG_WRT$OFF 0000                      _main 0319                      _menu 003E  
                    btemp 007E             __CFG_BOREN$ON 0000           ?i1_set_lcd_data 0070  
                    start 0012               i1_lcd_clear 03CD           __end_of_InitApp 03E2  
                   ??_isr 004C           __end_of___aldiv 0233                     _ADCS0 00FE  
                   _ADCS1 00FF                     ?_main 0070             __CFG_WDTE$OFF 0000  
                   _PCFG0 04F8                     _PCFG1 04F9                     _PCFG2 04FA  
                   _PCFG3 04FB                     i1l354 01B6                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   u60_25 01FE                     u61_25 0210                     u70_23 00F2  
                   u47_20 03A5                     u49_20 039A                     u73_23 010A  
                   _TRISA 0085                     _TRISB 0086                     u57_25 01DB  
                   _TRISC 0087                     _TRISD 0088                     u67_20 0071  
                   u67_21 0072                     u67_22 0077                     u75_23 012F  
                   u67_23 0078                     u59_25 01E9                     u68_23 0089  
                   u69_20 00B1                     u69_21 00B2                     u69_22 00B7  
                   u69_23 00B8      send_lcd_data@uc_data 0059             __CFG_PWRTE$ON 0000  
                   _time1 0040                     pclath 000A               i1_set_lcd_e 039E  
                   status 0003                     wtemp0 007E           __initialization 0015  
       send_lcd_data@b_rs 005C              __end_of_main 0343      __size_of_lcd_2ndline 0009  
   __end_of_send_lcd_data 02AE                    ??_main 005D     i1set_lcd_data@uc_data 0070  
                  _ADRESH 001E                    _ADRESL 009E                    u100_27 02FB  
                  u101_27 0309                    i1l1031 02CD                    i1l1033 02D3  
                  i1l1121 010C                    i1l1035 02DF                    i1l1131 0131  
                  i1l1115 00F4                    i1l1107 008B                    i1l1037 02AF  
                  i1l1109 0093                    i1l1071 01D7                    i1l1063 01C7  
                  i1l1135 0149                    i1l1081 020F                    i1l1073 01E7  
                  i1l1161 0180                    i1l1145 015B                    i1l1129 0120  
                  i1l1155 0170                    i1l1085 021C                    i1l1165 0183  
                  i1l1167 0195                    i1l1089 022A                    i1l1397 018A  
   __size_ofi1_set_lcd_rs 000B                    _TMR0IE 005D                    _TMR0IF 005A  
               ??_InitApp 0058          __end_of_lcd_goto 0393                 ??___aldiv 0078  
 __size_of_adc_initialize 000F                    _millis 003A      __size_of_lcd_putchar 000A  
            __pdataCOMMON 007D                    saved_w 007E              i1_set_lcd_rs 0393  
        ??_lcd_initialize 00A0   __end_of__initialization 0026          _lastButtonState1 0042  
          __pcstackCOMMON 0070      i1set_lcd_rs@b_output 0070        __size_of_lcd_clear 0009  
        ??i1_set_lcd_data 0070                __pbssBANK0 0020              ?i1_lcd_clear 0070  
              __pmaintext 0319                __pintentry 0004        __size_of_set_lcd_e 000D  
__size_ofi1_send_lcd_data 0035                _lcd_putstr 02AE                 ?_lcd_goto 0070  
              __stringtab 0343              ?i1_set_lcd_e 0070             ?_set_lcd_data 0070  
                 _InitApp 03E1       i1set_lcd_e@b_output 0070         __end_of_lcd_clear 03BC  
                 ___aldiv 01A4            _adc_initialize 035F                   __ptext1 0233  
                 __ptext2 03B3                   __ptext3 0271                   __ptext4 036E  
                 __ptext5 037B                   __ptext6 03D4                   __ptext7 035F  
                 __ptext8 03E1                   __ptext9 002A                   _current 007B  
            __size_of_isr 017A                   _menusel 0079          ___aldiv@dividend 0074  
                 clrloop0 03C6                ??_lcd_goto 0075      end_of_initialization 0026  
          ??_set_lcd_data 0058         __end_of_set_lcd_e 0388    __end_of_adc_initialize 036E  
              _set_lcd_rs 036E             ??_lcd_2ndline 0075          ___aldiv@quotient 0048  
     i1send_lcd_data@b_rs 0074               ?_lcd_putstr 0070    __size_of_send_lcd_data 003D  
       ??i1_send_lcd_data 0072           ?_adc_initialize 0070      __size_ofi1_lcd_clear 0007  
           ??_lcd_putchar 0075             __pidataCOMMON 03E0         lcd_putchar@c_data 0076  
     __end_of_lcd_2ndline 03C5       start_initialization 0015        set_lcd_rs@b_output 0058  
             __end_of_isr 01A4      lcd_putstr@csz_string 0078       lcd_goto@uc_position 0076  
    __size_ofi1_set_lcd_e 000B               ?_set_lcd_rs 0070       __size_of_lcd_putstr 0036  
           _send_lcd_data 0271      __end_of_set_lcd_data 03DA       __end_of_lcd_putchar 03B3  
             __pbssCOMMON 0079                 ___latbits 0002             __pcstackBANK0 0046  
           __pcstackBANK1 00A0         __size_of_lcd_goto 000B              _buttonState1 0044  
                ?_InitApp 0070   __size_of_lcd_initialize 003E                  ?___aldiv 0070  
             _lcd_2ndline 03BC                 _lcd_clear 03B3            ?_send_lcd_data 0059  
               __pstrings 0343                 _firstTime 002A       __size_of_set_lcd_rs 000D  
     set_lcd_data@uc_data 0058           ___aldiv@divisor 0070         interrupt_function 0004  
         ___aldiv@counter 0046                 _secs_held 0032                 clear_ram0 03C5  
               _set_lcd_e 037B   __size_ofi1_set_lcd_data 0006                  _GO_nDONE 00FA  
             _lcd_putchar 03A9                ?_lcd_clear 0070               __stringbase 0348  
          _prev_secs_held 002E             ?i1_set_lcd_rs 0070           i1_send_lcd_data 02E4  
            ??_lcd_putstr 0077          ??_adc_initialize 0058          __size_of_InitApp 0001  
              ?_set_lcd_e 0070     __size_of_set_lcd_data 0006           ??_send_lcd_data 005A  
        __size_of___aldiv 008F        __end_of_lcd_putstr 02E4        __end_of__stringtab 0349  
          ??i1_set_lcd_rs 0070                  __ptext10 03CD                  __ptext11 02AE  
                __ptext12 03A9                  __ptext13 03BC                  __ptext14 0388  
                __ptext15 02E4                  __ptext16 0393                  __ptext17 039E  
                __ptext18 03DA                  __ptext19 01A4                  _lcd_goto 0388  
           __size_of_main 002A              _set_lcd_data 03D4               _millis_held 0036  
          _lcd_initialize 0233             ??i1_lcd_clear 0075              ??_set_lcd_rs 0058  
                _previous 007D               ??_lcd_clear 005D   __end_ofi1_send_lcd_data 0319  
      __end_of_set_lcd_rs 037B                  intlevel1 0000             ??i1_set_lcd_e 0070  
  __end_of_lcd_initialize 0271                 stringcode 0343            i1_set_lcd_data 03DA  
             ??_set_lcd_e 0058              ?_lcd_2ndline 0070       __end_ofi1_lcd_clear 03D4  
              _OPTION_REG 0081              lcd_bcd@F1134 0020                  stringdir 0343  
                stringtab 0343              ___aldiv@sign 0047           ?_lcd_initialize 0070  
  __end_ofi1_set_lcd_data 03E0      __end_ofi1_set_lcd_rs 039E       __end_ofi1_set_lcd_e 03A9  
