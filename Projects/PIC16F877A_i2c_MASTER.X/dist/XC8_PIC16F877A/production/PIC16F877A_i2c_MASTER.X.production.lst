

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon May 21 04:39:28 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2,group=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	text17,local,class=CODE,merge=1,delta=2
    27                           	psect	text18,local,class=CODE,merge=1,delta=2
    28                           	psect	text19,local,class=CODE,merge=1,delta=2
    29                           	psect	text20,local,class=CODE,merge=1,delta=2
    30                           	psect	text21,local,class=CODE,merge=1,delta=2,group=2
    31                           	psect	text22,local,class=CODE,merge=1,delta=2
    32                           	psect	intentry,global,class=CODE,delta=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  010E                     	;# 
   426  010F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  0081                     	;# 
   465  0085                     	;# 
   466  0086                     	;# 
   467  0087                     	;# 
   468  0088                     	;# 
   469  0089                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0091                     	;# 
   474  0092                     	;# 
   475  0093                     	;# 
   476  0094                     	;# 
   477  0098                     	;# 
   478  0099                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  009F                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489  0013                     _SSPBUF	set	19
   490  0014                     _SSPCON	set	20
   491  0008                     _PORTD	set	8
   492  0007                     _PORTC	set	7
   493  0006                     _PORTB	set	6
   494  0005                     _PORTA	set	5
   495  0063                     _SSPIF	set	99
   496  005E                     _PEIE	set	94
   497  005F                     _GIE	set	95
   498  0034                     _RB4	set	52
   499  0035                     _RB5	set	53
   500  0094                     _SSPSTAT	set	148
   501  0093                     _SSPADD	set	147
   502  0091                     _SSPCON2	set	145
   503  0088                     _TRISD	set	136
   504  0087                     _TRISC	set	135
   505  0086                     _TRISB	set	134
   506  0085                     _TRISA	set	133
   507  048C                     _ACKEN	set	1164
   508  048D                     _ACKDT	set	1165
   509  048B                     _RCEN	set	1163
   510  048A                     _PEN	set	1162
   511  0489                     _RSEN	set	1161
   512  0488                     _SEN	set	1160
   513  0463                     _SSPIE	set	1123
   514  043C                     _TRISC4	set	1084
   515  043B                     _TRISC3	set	1083
   516                           
   517                           	psect	strings
   518  03BE                     __pstrings:	
   519  03BE                     stringtab:	
   520  03BE                     __stringtab:	
   521  03BE                     stringcode:	
   522                           ;	String table - string pointers are 1 byte each
   523                           
   524  03BE                     stringdir:	
   525  03BE  3003               	movlw	high stringdir
   526  03BF  008A               	movwf	10
   527  03C0  0804               	movf	4,w
   528  03C1  0A84               	incf	4,f
   529  03C2  0782               	addwf	2,f
   530  03C3                     __stringbase:	
   531  03C3  3400               	retlw	0
   532  03C4                     __end_of__stringtab:	
   533  03C4                     STR_1:	
   534  03C4  3469               	retlw	105	;'i'
   535  03C5  3432               	retlw	50	;'2'
   536  03C6  3463               	retlw	99	;'c'
   537  03C7  3420               	retlw	32	;' '
   538  03C8  344D               	retlw	77	;'M'
   539  03C9  3441               	retlw	65	;'A'
   540  03CA  3453               	retlw	83	;'S'
   541  03CB  3454               	retlw	84	;'T'
   542  03CC  3445               	retlw	69	;'E'
   543  03CD  3452               	retlw	82	;'R'
   544  03CE  3400               	retlw	0
   545                           
   546                           ; #config settings
   547  0000                     
   548                           	psect	cinit
   549  0015                     start_initialization:	
   550  0015                     __initialization:	
   551                           
   552                           ; Clear objects allocated to BANK0
   553  0015  1283               	bcf	3,5	;RP0=0, select bank0
   554  0016  1303               	bcf	3,6	;RP1=0, select bank0
   555  0017  01B8               	clrf	__pbssBANK0& (0+127)
   556  0018  01B9               	clrf	(__pbssBANK0+1)& (0+127)
   557  0019  01BA               	clrf	(__pbssBANK0+2)& (0+127)
   558  001A  01BB               	clrf	(__pbssBANK0+3)& (0+127)
   559  001B  01BC               	clrf	(__pbssBANK0+4)& (0+127)
   560  001C  01BD               	clrf	(__pbssBANK0+5)& (0+127)
   561  001D  01BE               	clrf	(__pbssBANK0+6)& (0+127)
   562  001E  01BF               	clrf	(__pbssBANK0+7)& (0+127)
   563  001F  01C0               	clrf	(__pbssBANK0+8)& (0+127)
   564  0020  01C1               	clrf	(__pbssBANK0+9)& (0+127)
   565  0021                     end_of_initialization:	
   566                           ;End of C runtime variable initialization code
   567                           
   568  0021                     __end_of__initialization:	
   569  0021  0183               	clrf	3
   570  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   571                           
   572                           	psect	bssBANK0
   573  0038                     __pbssBANK0:	
   574  0038                     lcd_bcd@F1134:	
   575  0038                     	ds	10
   576                           
   577                           	psect	cstackCOMMON
   578  0070                     __pcstackCOMMON:	
   579  0070                     ?_InitApp:	
   580  0070                     ?_lcd_initialize:	
   581                           ; 1 bytes @ 0x0
   582                           
   583  0070                     ?_lcd_goto:	
   584                           ; 1 bytes @ 0x0
   585                           
   586  0070                     ?_lcd_putstr:	
   587                           ; 1 bytes @ 0x0
   588                           
   589  0070                     ?_I2C_Master_Start:	
   590                           ; 1 bytes @ 0x0
   591                           
   592  0070                     ?_I2C_Master_Stop:	
   593                           ; 1 bytes @ 0x0
   594                           
   595  0070                     ?_set_lcd_e:	
   596                           ; 1 bytes @ 0x0
   597                           
   598  0070                     ?_lcd_clear:	
   599                           ; 1 bytes @ 0x0
   600                           
   601  0070                     ?_set_lcd_rs:	
   602                           ; 1 bytes @ 0x0
   603                           
   604  0070                     ?_set_lcd_data:	
   605                           ; 1 bytes @ 0x0
   606                           
   607  0070                     ?_isr:	
   608                           ; 1 bytes @ 0x0
   609                           
   610  0070                     ??_isr:	
   611                           ; 1 bytes @ 0x0
   612                           
   613  0070                     ?_main:	
   614                           ; 1 bytes @ 0x0
   615                           
   616  0070                     ?_lcd_2ndline:	
   617                           ; 1 bytes @ 0x0
   618                           
   619  0070                     ?_lcd_putchar:	
   620                           ; 1 bytes @ 0x0
   621                           
   622  0070                     ?_I2C_Master_Wait:	
   623                           ; 1 bytes @ 0x0
   624                           
   625                           
   626                           ; 1 bytes @ 0x0
   627  0070                     	ds	4
   628  0074                     ??_InitApp:	
   629  0074                     ??_I2C_Master_Start:	
   630                           ; 1 bytes @ 0x4
   631                           
   632  0074                     ?_I2C_Master_Write:	
   633                           ; 1 bytes @ 0x4
   634                           
   635  0074                     ??_I2C_Master_Stop:	
   636                           ; 1 bytes @ 0x4
   637                           
   638  0074                     ??_set_lcd_e:	
   639                           ; 1 bytes @ 0x4
   640                           
   641  0074                     ??_set_lcd_rs:	
   642                           ; 1 bytes @ 0x4
   643                           
   644  0074                     ??_set_lcd_data:	
   645                           ; 1 bytes @ 0x4
   646                           
   647  0074                     ??_I2C_Master_Wait:	
   648                           ; 1 bytes @ 0x4
   649                           
   650  0074                     ??___lldiv:	
   651                           ; 1 bytes @ 0x4
   652                           
   653  0074                     ?_I2C_Master_Read:	
   654                           ; 1 bytes @ 0x4
   655                           
   656  0074                     ?___lwdiv:	
   657                           ; 2 bytes @ 0x4
   658                           
   659  0074                     ?___lwmod:	
   660                           ; 2 bytes @ 0x4
   661                           
   662  0074                     set_lcd_e@b_output:	
   663                           ; 2 bytes @ 0x4
   664                           
   665  0074                     set_lcd_rs@b_output:	
   666                           ; 1 bytes @ 0x4
   667                           
   668  0074                     set_lcd_data@uc_data:	
   669                           ; 1 bytes @ 0x4
   670                           
   671  0074                     I2C_Master_Write@d:	
   672                           ; 1 bytes @ 0x4
   673                           
   674  0074                     I2C_Master_Read@a:	
   675                           ; 2 bytes @ 0x4
   676                           
   677  0074                     ___lwdiv@divisor:	
   678                           ; 2 bytes @ 0x4
   679                           
   680  0074                     ___lwmod@divisor:	
   681                           ; 2 bytes @ 0x4
   682                           
   683                           
   684                           ; 2 bytes @ 0x4
   685  0074                     	ds	1
   686  0075                     ?_send_lcd_data:	
   687  0075                     send_lcd_data@uc_data:	
   688                           ; 1 bytes @ 0x5
   689                           
   690  0075                     ___lldiv@quotient:	
   691                           ; 1 bytes @ 0x5
   692                           
   693                           
   694                           ; 4 bytes @ 0x5
   695  0075                     	ds	1
   696  0076                     ??_I2C_Master_Write:	
   697  0076                     ??_I2C_Master_Read:	
   698                           ; 1 bytes @ 0x6
   699                           
   700  0076                     ??_send_lcd_data:	
   701                           ; 1 bytes @ 0x6
   702                           
   703  0076                     ___lwdiv@dividend:	
   704                           ; 1 bytes @ 0x6
   705                           
   706  0076                     ___lwmod@dividend:	
   707                           ; 2 bytes @ 0x6
   708                           
   709                           
   710                           ; 2 bytes @ 0x6
   711  0076                     	ds	2
   712  0078                     ??___lwdiv:	
   713  0078                     ??___lwmod:	
   714                           ; 1 bytes @ 0x8
   715                           
   716  0078                     send_lcd_data@b_rs:	
   717                           ; 1 bytes @ 0x8
   718                           
   719  0078                     I2C_Master_Read@temp:	
   720                           ; 1 bytes @ 0x8
   721                           
   722                           
   723                           ; 2 bytes @ 0x8
   724  0078                     	ds	1
   725  0079                     ??_lcd_goto:	
   726  0079                     ??_lcd_clear:	
   727                           ; 1 bytes @ 0x9
   728                           
   729  0079                     ??_lcd_2ndline:	
   730                           ; 1 bytes @ 0x9
   731                           
   732  0079                     ??_lcd_putchar:	
   733                           ; 1 bytes @ 0x9
   734                           
   735  0079                     ___lldiv@counter:	
   736                           ; 1 bytes @ 0x9
   737                           
   738  0079                     ___lwmod@counter:	
   739                           ; 1 bytes @ 0x9
   740                           
   741                           
   742                           ; 1 bytes @ 0x9
   743  0079                     	ds	1
   744  007A                     ??_main:	
   745                           
   746                           	psect	cstackBANK0
   747  0020                     __pcstackBANK0:	
   748                           ; 1 bytes @ 0xA
   749                           
   750  0020                     ??_lcd_initialize:	
   751  0020                     ?___lldiv:	
   752                           ; 1 bytes @ 0x0
   753                           
   754  0020                     lcd_goto@uc_position:	
   755                           ; 4 bytes @ 0x0
   756                           
   757  0020                     lcd_putchar@c_data:	
   758                           ; 1 bytes @ 0x0
   759                           
   760  0020                     ___lwdiv@quotient:	
   761                           ; 1 bytes @ 0x0
   762                           
   763  0020                     ___lldiv@divisor:	
   764                           ; 2 bytes @ 0x0
   765                           
   766                           
   767                           ; 4 bytes @ 0x0
   768  0020                     	ds	1
   769  0021                     ??_lcd_putstr:	
   770                           
   771                           ; 1 bytes @ 0x1
   772  0021                     	ds	1
   773  0022                     lcd_putstr@csz_string:	
   774  0022                     ___lwdiv@counter:	
   775                           ; 1 bytes @ 0x2
   776                           
   777                           
   778                           ; 1 bytes @ 0x2
   779  0022                     	ds	1
   780  0023                     ?_lcd_bcd:	
   781  0023                     lcd_bcd@ui_number:	
   782                           ; 1 bytes @ 0x3
   783                           
   784                           
   785                           ; 2 bytes @ 0x3
   786  0023                     	ds	1
   787  0024                     ___lldiv@dividend:	
   788                           
   789                           ; 4 bytes @ 0x4
   790  0024                     	ds	1
   791  0025                     ??_lcd_bcd:	
   792                           
   793                           ; 1 bytes @ 0x5
   794  0025                     	ds	3
   795  0028                     ?_I2C_Master_Init:	
   796  0028                     I2C_Master_Init@c:	
   797                           ; 1 bytes @ 0x8
   798                           
   799                           
   800                           ; 4 bytes @ 0x8
   801  0028                     	ds	1
   802  0029                     lcd_bcd@ui_decimal:	
   803                           
   804                           ; 10 bytes @ 0x9
   805  0029                     	ds	3
   806  002C                     ??_I2C_Master_Init:	
   807                           
   808                           ; 1 bytes @ 0xC
   809  002C                     	ds	7
   810  0033                     lcd_bcd@uc_digit:	
   811                           
   812                           ; 1 bytes @ 0x13
   813  0033                     	ds	1
   814  0034                     main@add1:	
   815                           
   816                           ; 2 bytes @ 0x14
   817  0034                     	ds	2
   818  0036                     main@add2:	
   819                           
   820                           ; 2 bytes @ 0x16
   821  0036                     	ds	2
   822                           
   823                           	psect	maintext
   824  0025                     __pmaintext:	
   825 ;;
   826 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   827 ;;
   828 ;; *************** function _main *****************
   829 ;; Defined at:
   830 ;;		line 20 in file "main.c"
   831 ;; Parameters:    Size  Location     Type
   832 ;;		None
   833 ;; Auto vars:     Size  Location     Type
   834 ;;  add2            2   22[BANK0 ] short 
   835 ;;  add1            2   20[BANK0 ] short 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  1    wreg      void 
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : B00/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         0       4       0       0       0
   847 ;;      Temps:          0       0       0       0       0
   848 ;;      Totals:         0       4       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels required when called:    5
   851 ;; This function calls:
   852 ;;		_I2C_Master_Init
   853 ;;		_I2C_Master_Read
   854 ;;		_I2C_Master_Start
   855 ;;		_I2C_Master_Stop
   856 ;;		_I2C_Master_Write
   857 ;;		_InitApp
   858 ;;		_lcd_bcd
   859 ;;		_lcd_goto
   860 ;;		_lcd_initialize
   861 ;;		_lcd_putstr
   862 ;; This function is called by:
   863 ;;		Startup code after reset
   864 ;; This function uses a non-reentrant model
   865 ;;
   866                           
   867                           
   868                           ;psect for function _main
   869  0025                     _main:	
   870                           
   871                           ;main.c: 23: InitApp();
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   875  0025  120A  118A  243E  120A  118A  	fcall	_InitApp
   876                           
   877                           ;main.c: 25: PORTA = 0;
   878  002A  1283               	bcf	3,5	;RP0=0, select bank0
   879  002B  1303               	bcf	3,6	;RP1=0, select bank0
   880  002C  0185               	clrf	5	;volatile
   881                           
   882                           ;main.c: 26: PORTB = 0;
   883  002D  0186               	clrf	6	;volatile
   884                           
   885                           ;main.c: 27: PORTC = 0;
   886  002E  0187               	clrf	7	;volatile
   887                           
   888                           ;main.c: 28: PORTD = 0;
   889  002F  0188               	clrf	8	;volatile
   890                           
   891                           ;main.c: 30: TRISA = 0b11111111;
   892  0030  30FF               	movlw	255
   893  0031  1683               	bsf	3,5	;RP0=1, select bank1
   894  0032  1303               	bcf	3,6	;RP1=0, select bank1
   895  0033  0085               	movwf	5	;volatile
   896                           
   897                           ;main.c: 31: TRISB = 0b00000011;
   898  0034  3003               	movlw	3
   899  0035  0086               	movwf	6	;volatile
   900                           
   901                           ;main.c: 32: TRISC = 0b00000000;
   902  0036  0187               	clrf	7	;volatile
   903                           
   904                           ;main.c: 33: TRISD = 0b00000000;
   905  0037  0188               	clrf	8	;volatile
   906                           
   907                           ;main.c: 35: lcd_initialize();
   908  0038  120A  118A  22BB  120A  118A  	fcall	_lcd_initialize
   909                           
   910                           ;main.c: 36: I2C_Master_Init(400000);
   911  003D  3000               	movlw	0
   912  003E  1283               	bcf	3,5	;RP0=0, select bank0
   913  003F  1303               	bcf	3,6	;RP1=0, select bank0
   914  0040  00AB               	movwf	I2C_Master_Init@c+3
   915  0041  3006               	movlw	6
   916  0042  00AA               	movwf	I2C_Master_Init@c+2
   917  0043  301A               	movlw	26
   918  0044  00A9               	movwf	I2C_Master_Init@c+1
   919  0045  3080               	movlw	128
   920  0046  00A8               	movwf	I2C_Master_Init@c
   921  0047  120A  118A  22F3  120A  118A  	fcall	_I2C_Master_Init
   922                           
   923                           ;main.c: 38: short add1;
   924                           ;main.c: 39: short add2;
   925                           ;main.c: 41: lcd_goto(0x0);
   926  004C  3000               	movlw	0
   927  004D  120A  118A  23CF  120A  118A  	fcall	_lcd_goto
   928                           
   929                           ;main.c: 42: lcd_putstr("i2c MASTER");
   930  0052  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   931  0053  120A  118A  227F  120A  118A  	fcall	_lcd_putstr
   932  0058                     l1155:	
   933                           ;main.c: 44: while(1)
   934                           
   935                           
   936                           ;main.c: 45: {
   937                           ;main.c: 46: I2C_Master_Start();
   938  0058  120A  118A  2431  120A  118A  	fcall	_I2C_Master_Start
   939                           
   940                           ;main.c: 47: I2C_Master_Write(0x30);
   941  005D  3030               	movlw	48
   942  005E  00F4               	movwf	I2C_Master_Write@d
   943  005F  3000               	movlw	0
   944  0060  00F5               	movwf	I2C_Master_Write@d+1
   945  0061  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
   946                           
   947                           ;main.c: 48: I2C_Master_Write(1);
   948  0066  3001               	movlw	1
   949  0067  00F4               	movwf	I2C_Master_Write@d
   950  0068  3000               	movlw	0
   951  0069  00F5               	movwf	I2C_Master_Write@d+1
   952  006A  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
   953                           
   954                           ;main.c: 49: I2C_Master_Stop();
   955  006F  120A  118A  242A  120A  118A  	fcall	_I2C_Master_Stop
   956                           
   957                           ;main.c: 51: I2C_Master_Start();
   958  0074  120A  118A  2431  120A  118A  	fcall	_I2C_Master_Start
   959                           
   960                           ;main.c: 52: I2C_Master_Write(0x31);
   961  0079  3031               	movlw	49
   962  007A  00F4               	movwf	I2C_Master_Write@d
   963  007B  3000               	movlw	0
   964  007C  00F5               	movwf	I2C_Master_Write@d+1
   965  007D  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
   966                           
   967                           ;main.c: 53: add1 = I2C_Master_Read(0);
   968  0082  3000               	movlw	0
   969  0083  00F4               	movwf	I2C_Master_Read@a
   970  0084  00F5               	movwf	I2C_Master_Read@a+1
   971  0085  120A  118A  2392  120A  118A  	fcall	_I2C_Master_Read
   972  008A  0875               	movf	?_I2C_Master_Read+1,w
   973  008B  1283               	bcf	3,5	;RP0=0, select bank0
   974  008C  1303               	bcf	3,6	;RP1=0, select bank0
   975  008D  00B5               	movwf	main@add1+1
   976  008E  0874               	movf	?_I2C_Master_Read,w
   977  008F  00B4               	movwf	main@add1
   978                           
   979                           ;main.c: 54: I2C_Master_Stop();
   980  0090  120A  118A  242A  120A  118A  	fcall	_I2C_Master_Stop
   981                           
   982                           ;main.c: 56: I2C_Master_Start();
   983  0095  120A  118A  2431  120A  118A  	fcall	_I2C_Master_Start
   984                           
   985                           ;main.c: 57: I2C_Master_Write(0x30);
   986  009A  3030               	movlw	48
   987  009B  00F4               	movwf	I2C_Master_Write@d
   988  009C  3000               	movlw	0
   989  009D  00F5               	movwf	I2C_Master_Write@d+1
   990  009E  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
   991                           
   992                           ;main.c: 58: I2C_Master_Write(2);
   993  00A3  3002               	movlw	2
   994  00A4  00F4               	movwf	I2C_Master_Write@d
   995  00A5  3000               	movlw	0
   996  00A6  00F5               	movwf	I2C_Master_Write@d+1
   997  00A7  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
   998                           
   999                           ;main.c: 59: I2C_Master_Stop();
  1000  00AC  120A  118A  242A  120A  118A  	fcall	_I2C_Master_Stop
  1001                           
  1002                           ;main.c: 61: I2C_Master_Start();
  1003  00B1  120A  118A  2431  120A  118A  	fcall	_I2C_Master_Start
  1004                           
  1005                           ;main.c: 62: I2C_Master_Write(0x31);
  1006  00B6  3031               	movlw	49
  1007  00B7  00F4               	movwf	I2C_Master_Write@d
  1008  00B8  3000               	movlw	0
  1009  00B9  00F5               	movwf	I2C_Master_Write@d+1
  1010  00BA  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
  1011                           
  1012                           ;main.c: 63: add2 = I2C_Master_Read(0);
  1013  00BF  3000               	movlw	0
  1014  00C0  00F4               	movwf	I2C_Master_Read@a
  1015  00C1  00F5               	movwf	I2C_Master_Read@a+1
  1016  00C2  120A  118A  2392  120A  118A  	fcall	_I2C_Master_Read
  1017  00C7  0875               	movf	?_I2C_Master_Read+1,w
  1018  00C8  1283               	bcf	3,5	;RP0=0, select bank0
  1019  00C9  1303               	bcf	3,6	;RP1=0, select bank0
  1020  00CA  00B7               	movwf	main@add2+1
  1021  00CB  0874               	movf	?_I2C_Master_Read,w
  1022  00CC  00B6               	movwf	main@add2
  1023                           
  1024                           ;main.c: 64: I2C_Master_Stop();
  1025  00CD  120A  118A  242A  120A  118A  	fcall	_I2C_Master_Stop
  1026                           
  1027                           ;main.c: 66: lcd_goto(0x40);
  1028  00D2  3040               	movlw	64
  1029  00D3  120A  118A  23CF  120A  118A  	fcall	_lcd_goto
  1030                           
  1031                           ;main.c: 67: lcd_bcd(3, add1);
  1032  00D8  1283               	bcf	3,5	;RP0=0, select bank0
  1033  00D9  1303               	bcf	3,6	;RP1=0, select bank0
  1034  00DA  0835               	movf	main@add1+1,w
  1035  00DB  00A4               	movwf	lcd_bcd@ui_number+1
  1036  00DC  0834               	movf	main@add1,w
  1037  00DD  00A3               	movwf	lcd_bcd@ui_number
  1038  00DE  3003               	movlw	3
  1039  00DF  120A  118A  2113  120A  118A  	fcall	_lcd_bcd
  1040                           
  1041                           ;main.c: 68: lcd_goto(0x45);
  1042  00E4  3045               	movlw	69
  1043  00E5  120A  118A  23CF  120A  118A  	fcall	_lcd_goto
  1044                           
  1045                           ;main.c: 69: lcd_bcd(3, add2);
  1046  00EA  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00EB  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00EC  0837               	movf	main@add2+1,w
  1049  00ED  00A4               	movwf	lcd_bcd@ui_number+1
  1050  00EE  0836               	movf	main@add2,w
  1051  00EF  00A3               	movwf	lcd_bcd@ui_number
  1052  00F0  3003               	movlw	3
  1053  00F1  120A  118A  2113  120A  118A  	fcall	_lcd_bcd
  1054                           
  1055                           ;main.c: 71: I2C_Master_Start();
  1056  00F6  120A  118A  2431  120A  118A  	fcall	_I2C_Master_Start
  1057                           
  1058                           ;main.c: 72: I2C_Master_Write(0x30);
  1059  00FB  3030               	movlw	48
  1060  00FC  00F4               	movwf	I2C_Master_Write@d
  1061  00FD  3000               	movlw	0
  1062  00FE  00F5               	movwf	I2C_Master_Write@d+1
  1063  00FF  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
  1064                           
  1065                           ;main.c: 73: I2C_Master_Write(3);
  1066  0104  3003               	movlw	3
  1067  0105  00F4               	movwf	I2C_Master_Write@d
  1068  0106  3000               	movlw	0
  1069  0107  00F5               	movwf	I2C_Master_Write@d+1
  1070  0108  120A  118A  241B  120A  118A  	fcall	_I2C_Master_Write
  1071                           
  1072                           ;main.c: 74: I2C_Master_Stop();
  1073  010D  120A  118A  242A  120A  118A  	fcall	_I2C_Master_Stop
  1074  0112  2858               	goto	l1155
  1075  0113                     __end_of_main:	
  1076                           
  1077                           	psect	text1
  1078  027F                     __ptext1:	
  1079 ;; *************** function _lcd_putstr *****************
  1080 ;; Defined at:
  1081 ;;		line 241 in file "lcd.c"
  1082 ;; Parameters:    Size  Location     Type
  1083 ;;  csz_string      1    wreg     PTR const unsigned char 
  1084 ;;		 -> STR_1(11), 
  1085 ;; Auto vars:     Size  Location     Type
  1086 ;;  csz_string      1    2[BANK0 ] PTR const unsigned char 
  1087 ;;		 -> STR_1(11), 
  1088 ;; Return value:  Size  Location     Type
  1089 ;;                  1    wreg      void 
  1090 ;; Registers used:
  1091 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1092 ;; Tracked objects:
  1093 ;;		On entry : 0/0
  1094 ;;		On exit  : 0/0
  1095 ;;		Unchanged: 0/0
  1096 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1097 ;;      Params:         0       0       0       0       0
  1098 ;;      Locals:         0       1       0       0       0
  1099 ;;      Temps:          0       1       0       0       0
  1100 ;;      Totals:         0       2       0       0       0
  1101 ;;Total ram usage:        2 bytes
  1102 ;; Hardware stack levels used:    1
  1103 ;; Hardware stack levels required when called:    4
  1104 ;; This function calls:
  1105 ;;		_lcd_2ndline
  1106 ;;		_lcd_putchar
  1107 ;; This function is called by:
  1108 ;;		_main
  1109 ;; This function uses a non-reentrant model
  1110 ;;
  1111                           
  1112                           
  1113                           ;psect for function _lcd_putstr
  1114  027F                     _lcd_putstr:	
  1115                           
  1116                           ;incstack = 0
  1117                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1118                           ;lcd_putstr@csz_string stored from wreg
  1119  027F  1283               	bcf	3,5	;RP0=0, select bank0
  1120  0280  1303               	bcf	3,6	;RP1=0, select bank0
  1121  0281  00A2               	movwf	lcd_putstr@csz_string
  1122  0282                     l1067:	
  1123                           ;lcd.c: 244: while (*csz_string != '\0') {
  1124                           
  1125  0282  0822               	movf	lcd_putstr@csz_string,w
  1126  0283  0084               	movwf	4
  1127  0284  120A  118A  23BE  120A  118A  	fcall	stringdir
  1128  0289  3A00               	xorlw	0
  1129  028A  1903               	btfsc	3,2
  1130  028B  0008               	return
  1131                           
  1132                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1133  028C  0822               	movf	lcd_putstr@csz_string,w
  1134  028D  0084               	movwf	4
  1135  028E  120A  118A  23BE  120A  118A  	fcall	stringdir
  1136  0293  3A0A               	xorlw	10
  1137  0294  1903               	skipnz
  1138  0295  2AA0               	goto	l1061
  1139  0296  0822               	movf	lcd_putstr@csz_string,w
  1140  0297  0084               	movwf	4
  1141  0298  120A  118A  23BE  120A  118A  	fcall	stringdir
  1142  029D  3A0D               	xorlw	13
  1143  029E  1D03               	skipz
  1144  029F  2AA6               	goto	l1063
  1145  02A0                     l1061:	
  1146                           
  1147                           ;lcd.c: 248: lcd_2ndline();
  1148  02A0  120A  118A  2409  120A  118A  	fcall	_lcd_2ndline
  1149                           
  1150                           ;lcd.c: 249: }
  1151  02A5  2AB4               	goto	l1065
  1152  02A6                     l1063:	
  1153                           
  1154                           ;lcd.c: 252: else {
  1155                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1156  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1157  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1158  02A8  0822               	movf	lcd_putstr@csz_string,w
  1159  02A9  0084               	movwf	4
  1160  02AA  120A  118A  23BE  120A  118A  	fcall	stringdir
  1161  02AF  120A  118A  23DC  120A  118A  	fcall	_lcd_putchar
  1162  02B4                     l1065:	
  1163                           
  1164                           ;lcd.c: 254: }
  1165                           ;lcd.c: 257: csz_string++;
  1166  02B4  3001               	movlw	1
  1167  02B5  1283               	bcf	3,5	;RP0=0, select bank0
  1168  02B6  1303               	bcf	3,6	;RP1=0, select bank0
  1169  02B7  00A1               	movwf	??_lcd_putstr
  1170  02B8  0821               	movf	??_lcd_putstr,w
  1171  02B9  07A2               	addwf	lcd_putstr@csz_string,f
  1172  02BA  2A82               	goto	l1067
  1173  02BB                     __end_of_lcd_putstr:	
  1174                           
  1175                           	psect	text2
  1176  0409                     __ptext2:	
  1177 ;; *************** function _lcd_2ndline *****************
  1178 ;; Defined at:
  1179 ;;		line 178 in file "lcd.c"
  1180 ;; Parameters:    Size  Location     Type
  1181 ;;		None
  1182 ;; Auto vars:     Size  Location     Type
  1183 ;;		None
  1184 ;; Return value:  Size  Location     Type
  1185 ;;                  1    wreg      void 
  1186 ;; Registers used:
  1187 ;;		wreg, status,2, status,0, pclath, cstack
  1188 ;; Tracked objects:
  1189 ;;		On entry : 0/0
  1190 ;;		On exit  : 0/0
  1191 ;;		Unchanged: 0/0
  1192 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1193 ;;      Params:         0       0       0       0       0
  1194 ;;      Locals:         0       0       0       0       0
  1195 ;;      Temps:          1       0       0       0       0
  1196 ;;      Totals:         1       0       0       0       0
  1197 ;;Total ram usage:        1 bytes
  1198 ;; Hardware stack levels used:    1
  1199 ;; Hardware stack levels required when called:    3
  1200 ;; This function calls:
  1201 ;;		_send_lcd_data
  1202 ;; This function is called by:
  1203 ;;		_lcd_putstr
  1204 ;; This function uses a non-reentrant model
  1205 ;;
  1206                           
  1207                           
  1208                           ;psect for function _lcd_2ndline
  1209  0409                     _lcd_2ndline:	
  1210                           
  1211                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1212                           
  1213                           ;incstack = 0
  1214                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1215  0409  30C0               	movlw	192
  1216  040A  00F9               	movwf	??_lcd_2ndline
  1217  040B  0879               	movf	??_lcd_2ndline,w
  1218  040C  00F5               	movwf	send_lcd_data@uc_data
  1219  040D  3000               	movlw	0
  1220  040E  120A  118A  232B   	fcall	_send_lcd_data
  1221  0411  0008               	return
  1222  0412                     __end_of_lcd_2ndline:	
  1223                           
  1224                           	psect	text3
  1225  02BB                     __ptext3:	
  1226 ;; *************** function _lcd_initialize *****************
  1227 ;; Defined at:
  1228 ;;		line 100 in file "lcd.c"
  1229 ;; Parameters:    Size  Location     Type
  1230 ;;		None
  1231 ;; Auto vars:     Size  Location     Type
  1232 ;;		None
  1233 ;; Return value:  Size  Location     Type
  1234 ;;                  1    wreg      void 
  1235 ;; Registers used:
  1236 ;;		wreg, status,2, status,0, pclath, cstack
  1237 ;; Tracked objects:
  1238 ;;		On entry : 0/0
  1239 ;;		On exit  : 0/0
  1240 ;;		Unchanged: 0/0
  1241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1242 ;;      Params:         0       0       0       0       0
  1243 ;;      Locals:         0       0       0       0       0
  1244 ;;      Temps:          0       2       0       0       0
  1245 ;;      Totals:         0       2       0       0       0
  1246 ;;Total ram usage:        2 bytes
  1247 ;; Hardware stack levels used:    1
  1248 ;; Hardware stack levels required when called:    4
  1249 ;; This function calls:
  1250 ;;		_lcd_clear
  1251 ;;		_send_lcd_data
  1252 ;;		_set_lcd_e
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           
  1259                           ;psect for function _lcd_initialize
  1260  02BB                     _lcd_initialize:	
  1261                           
  1262                           ;lcd.c: 104: set_lcd_e(1);
  1263                           
  1264                           ;incstack = 0
  1265                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1266  02BB  3001               	movlw	1
  1267  02BC  120A  118A  23F3  120A  118A  	fcall	_set_lcd_e
  1268                           
  1269                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1270  02C1  3062               	movlw	98
  1271  02C2  1283               	bcf	3,5	;RP0=0, select bank0
  1272  02C3  1303               	bcf	3,6	;RP1=0, select bank0
  1273  02C4  00A1               	movwf	??_lcd_initialize+1
  1274  02C5  3065               	movlw	101
  1275  02C6  00A0               	movwf	??_lcd_initialize
  1276  02C7                     u737:	
  1277  02C7  0BA0               	decfsz	??_lcd_initialize,f
  1278  02C8  2AC7               	goto	u737
  1279  02C9  0BA1               	decfsz	??_lcd_initialize+1,f
  1280  02CA  2AC7               	goto	u737
  1281                           
  1282                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1283  02CB  3038               	movlw	56
  1284  02CC  1283               	bcf	3,5	;RP0=0, select bank0
  1285  02CD  1303               	bcf	3,6	;RP1=0, select bank0
  1286  02CE  00A0               	movwf	??_lcd_initialize
  1287  02CF  0820               	movf	??_lcd_initialize,w
  1288  02D0  00F5               	movwf	send_lcd_data@uc_data
  1289  02D1  3000               	movlw	0
  1290  02D2  120A  118A  232B  120A  118A  	fcall	_send_lcd_data
  1291                           
  1292                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1293  02D7  3006               	movlw	6
  1294  02D8  1283               	bcf	3,5	;RP0=0, select bank0
  1295  02D9  1303               	bcf	3,6	;RP1=0, select bank0
  1296  02DA  00A0               	movwf	??_lcd_initialize
  1297  02DB  0820               	movf	??_lcd_initialize,w
  1298  02DC  00F5               	movwf	send_lcd_data@uc_data
  1299  02DD  3000               	movlw	0
  1300  02DE  120A  118A  232B  120A  118A  	fcall	_send_lcd_data
  1301                           
  1302                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1303  02E3  300C               	movlw	12
  1304  02E4  1283               	bcf	3,5	;RP0=0, select bank0
  1305  02E5  1303               	bcf	3,6	;RP1=0, select bank0
  1306  02E6  00A0               	movwf	??_lcd_initialize
  1307  02E7  0820               	movf	??_lcd_initialize,w
  1308  02E8  00F5               	movwf	send_lcd_data@uc_data
  1309  02E9  3000               	movlw	0
  1310  02EA  120A  118A  232B  120A  118A  	fcall	_send_lcd_data
  1311                           
  1312                           ;lcd.c: 118: lcd_clear();
  1313  02EF  120A  118A  2423   	fcall	_lcd_clear
  1314  02F2  0008               	return
  1315  02F3                     __end_of_lcd_initialize:	
  1316                           
  1317                           	psect	text4
  1318  0423                     __ptext4:	
  1319 ;; *************** function _lcd_clear *****************
  1320 ;; Defined at:
  1321 ;;		line 136 in file "lcd.c"
  1322 ;; Parameters:    Size  Location     Type
  1323 ;;		None
  1324 ;; Auto vars:     Size  Location     Type
  1325 ;;		None
  1326 ;; Return value:  Size  Location     Type
  1327 ;;                  1    wreg      void 
  1328 ;; Registers used:
  1329 ;;		wreg, status,2, status,0, pclath, cstack
  1330 ;; Tracked objects:
  1331 ;;		On entry : 0/0
  1332 ;;		On exit  : 0/0
  1333 ;;		Unchanged: 0/0
  1334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1335 ;;      Params:         0       0       0       0       0
  1336 ;;      Locals:         0       0       0       0       0
  1337 ;;      Temps:          0       0       0       0       0
  1338 ;;      Totals:         0       0       0       0       0
  1339 ;;Total ram usage:        0 bytes
  1340 ;; Hardware stack levels used:    1
  1341 ;; Hardware stack levels required when called:    3
  1342 ;; This function calls:
  1343 ;;		_send_lcd_data
  1344 ;; This function is called by:
  1345 ;;		_lcd_initialize
  1346 ;; This function uses a non-reentrant model
  1347 ;;
  1348                           
  1349                           
  1350                           ;psect for function _lcd_clear
  1351  0423                     _lcd_clear:	
  1352                           
  1353                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1354                           
  1355                           ;incstack = 0
  1356                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1357  0423  01F5               	clrf	send_lcd_data@uc_data
  1358  0424  0AF5               	incf	send_lcd_data@uc_data,f
  1359  0425  3000               	movlw	0
  1360  0426  120A  118A  232B   	fcall	_send_lcd_data
  1361  0429  0008               	return
  1362  042A                     __end_of_lcd_clear:	
  1363                           
  1364                           	psect	text5
  1365  03CF                     __ptext5:	
  1366 ;; *************** function _lcd_goto *****************
  1367 ;; Defined at:
  1368 ;;		line 199 in file "lcd.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  uc_position     1    wreg     unsigned char 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  uc_position     1    0[BANK0 ] unsigned char 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  1    wreg      void 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         0       0       0       0       0
  1383 ;;      Locals:         0       1       0       0       0
  1384 ;;      Temps:          1       0       0       0       0
  1385 ;;      Totals:         1       1       0       0       0
  1386 ;;Total ram usage:        2 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    3
  1389 ;; This function calls:
  1390 ;;		_send_lcd_data
  1391 ;; This function is called by:
  1392 ;;		_main
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _lcd_goto
  1398  03CF                     _lcd_goto:	
  1399                           
  1400                           ;incstack = 0
  1401                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1402                           ;lcd_goto@uc_position stored from wreg
  1403  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1404  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1405  03D1  00A0               	movwf	lcd_goto@uc_position
  1406                           
  1407                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1408  03D2  0820               	movf	lcd_goto@uc_position,w
  1409  03D3  3880               	iorlw	128
  1410  03D4  00F9               	movwf	??_lcd_goto
  1411  03D5  0879               	movf	??_lcd_goto,w
  1412  03D6  00F5               	movwf	send_lcd_data@uc_data
  1413  03D7  3000               	movlw	0
  1414  03D8  120A  118A  232B   	fcall	_send_lcd_data
  1415  03DB  0008               	return
  1416  03DC                     __end_of_lcd_goto:	
  1417                           
  1418                           	psect	text6
  1419  0113                     __ptext6:	
  1420 ;; *************** function _lcd_bcd *****************
  1421 ;; Defined at:
  1422 ;;		line 274 in file "lcd.c"
  1423 ;; Parameters:    Size  Location     Type
  1424 ;;  uc_digit        1    wreg     unsigned char 
  1425 ;;  ui_number       2    3[BANK0 ] unsigned int 
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;  uc_digit        1   19[BANK0 ] unsigned char 
  1428 ;;  ui_decimal     10    9[BANK0 ] unsigned int [5]
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       2       0       0       0
  1439 ;;      Locals:         0      11       0       0       0
  1440 ;;      Temps:          0       4       0       0       0
  1441 ;;      Totals:         0      17       0       0       0
  1442 ;;Total ram usage:       17 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    4
  1445 ;; This function calls:
  1446 ;;		___lwdiv
  1447 ;;		___lwmod
  1448 ;;		_lcd_putchar
  1449 ;; This function is called by:
  1450 ;;		_main
  1451 ;; This function uses a non-reentrant model
  1452 ;;
  1453                           
  1454                           
  1455                           ;psect for function _lcd_bcd
  1456  0113                     _lcd_bcd:	
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1460                           ;lcd_bcd@uc_digit stored from wreg
  1461  0113  1283               	bcf	3,5	;RP0=0, select bank0
  1462  0114  1303               	bcf	3,6	;RP1=0, select bank0
  1463  0115  00B3               	movwf	lcd_bcd@uc_digit
  1464                           
  1465                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1466  0116  3029               	movlw	lcd_bcd@ui_decimal& (0+255)
  1467  0117  0084               	movwf	4
  1468  0118  3038               	movlw	low lcd_bcd@F1134
  1469  0119  00A5               	movwf	??_lcd_bcd
  1470  011A  0804               	movf	4,w
  1471  011B  00A6               	movwf	??_lcd_bcd+1
  1472  011C  300A               	movlw	10
  1473  011D  00A7               	movwf	??_lcd_bcd+2
  1474  011E                     u690:	
  1475  011E  0825               	movf	??_lcd_bcd,w
  1476  011F  0084               	movwf	4
  1477  0120  1383               	bcf	3,7	;select IRP bank0
  1478  0121  0800               	movf	0,w
  1479  0122  00A8               	movwf	??_lcd_bcd+3
  1480  0123  0AA5               	incf	??_lcd_bcd,f
  1481  0124  0826               	movf	??_lcd_bcd+1,w
  1482  0125  0084               	movwf	4
  1483  0126  0828               	movf	??_lcd_bcd+3,w
  1484  0127  0080               	movwf	0
  1485  0128  0AA6               	incf	??_lcd_bcd+1,f
  1486  0129  0BA7               	decfsz	??_lcd_bcd+2,f
  1487  012A  291E               	goto	u690
  1488                           
  1489                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1490  012B  3010               	movlw	16
  1491  012C  00F4               	movwf	___lwdiv@divisor
  1492  012D  3027               	movlw	39
  1493  012E  00F5               	movwf	___lwdiv@divisor+1
  1494  012F  0824               	movf	lcd_bcd@ui_number+1,w
  1495  0130  00F7               	movwf	___lwdiv@dividend+1
  1496  0131  0823               	movf	lcd_bcd@ui_number,w
  1497  0132  00F6               	movwf	___lwdiv@dividend
  1498  0133  120A  118A  2241  120A  118A  	fcall	___lwdiv
  1499  0138  0875               	movf	?___lwdiv+1,w
  1500  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1501  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1502  013B  00B2               	movwf	lcd_bcd@ui_decimal+9
  1503  013C  0874               	movf	?___lwdiv,w
  1504  013D  00B1               	movwf	lcd_bcd@ui_decimal+8
  1505                           
  1506                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1507  013E  3010               	movlw	16
  1508  013F  00F4               	movwf	___lwmod@divisor
  1509  0140  3027               	movlw	39
  1510  0141  00F5               	movwf	___lwmod@divisor+1
  1511  0142  0824               	movf	lcd_bcd@ui_number+1,w
  1512  0143  00F7               	movwf	___lwmod@dividend+1
  1513  0144  0823               	movf	lcd_bcd@ui_number,w
  1514  0145  00F6               	movwf	___lwmod@dividend
  1515  0146  120A  118A  2360  120A  118A  	fcall	___lwmod
  1516  014B  0875               	movf	?___lwmod+1,w
  1517  014C  1283               	bcf	3,5	;RP0=0, select bank0
  1518  014D  1303               	bcf	3,6	;RP1=0, select bank0
  1519  014E  00B0               	movwf	lcd_bcd@ui_decimal+7
  1520  014F  0874               	movf	?___lwmod,w
  1521  0150  00AF               	movwf	lcd_bcd@ui_decimal+6
  1522                           
  1523                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1524  0151  30E8               	movlw	232
  1525  0152  00F4               	movwf	___lwmod@divisor
  1526  0153  3003               	movlw	3
  1527  0154  00F5               	movwf	___lwmod@divisor+1
  1528  0155  0830               	movf	lcd_bcd@ui_decimal+7,w
  1529  0156  00F7               	movwf	___lwmod@dividend+1
  1530  0157  082F               	movf	lcd_bcd@ui_decimal+6,w
  1531  0158  00F6               	movwf	___lwmod@dividend
  1532  0159  120A  118A  2360  120A  118A  	fcall	___lwmod
  1533  015E  0875               	movf	?___lwmod+1,w
  1534  015F  1283               	bcf	3,5	;RP0=0, select bank0
  1535  0160  1303               	bcf	3,6	;RP1=0, select bank0
  1536  0161  00AE               	movwf	lcd_bcd@ui_decimal+5
  1537  0162  0874               	movf	?___lwmod,w
  1538  0163  00AD               	movwf	lcd_bcd@ui_decimal+4
  1539                           
  1540                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1541  0164  30E8               	movlw	232
  1542  0165  00F4               	movwf	___lwdiv@divisor
  1543  0166  3003               	movlw	3
  1544  0167  00F5               	movwf	___lwdiv@divisor+1
  1545  0168  0830               	movf	lcd_bcd@ui_decimal+7,w
  1546  0169  00F7               	movwf	___lwdiv@dividend+1
  1547  016A  082F               	movf	lcd_bcd@ui_decimal+6,w
  1548  016B  00F6               	movwf	___lwdiv@dividend
  1549  016C  120A  118A  2241  120A  118A  	fcall	___lwdiv
  1550  0171  0875               	movf	?___lwdiv+1,w
  1551  0172  1283               	bcf	3,5	;RP0=0, select bank0
  1552  0173  1303               	bcf	3,6	;RP1=0, select bank0
  1553  0174  00B0               	movwf	lcd_bcd@ui_decimal+7
  1554  0175  0874               	movf	?___lwdiv,w
  1555  0176  00AF               	movwf	lcd_bcd@ui_decimal+6
  1556                           
  1557                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1558  0177  3064               	movlw	100
  1559  0178  00F4               	movwf	___lwmod@divisor
  1560  0179  3000               	movlw	0
  1561  017A  00F5               	movwf	___lwmod@divisor+1
  1562  017B  082E               	movf	lcd_bcd@ui_decimal+5,w
  1563  017C  00F7               	movwf	___lwmod@dividend+1
  1564  017D  082D               	movf	lcd_bcd@ui_decimal+4,w
  1565  017E  00F6               	movwf	___lwmod@dividend
  1566  017F  120A  118A  2360  120A  118A  	fcall	___lwmod
  1567  0184  0875               	movf	?___lwmod+1,w
  1568  0185  1283               	bcf	3,5	;RP0=0, select bank0
  1569  0186  1303               	bcf	3,6	;RP1=0, select bank0
  1570  0187  00AC               	movwf	lcd_bcd@ui_decimal+3
  1571  0188  0874               	movf	?___lwmod,w
  1572  0189  00AB               	movwf	lcd_bcd@ui_decimal+2
  1573                           
  1574                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1575  018A  3064               	movlw	100
  1576  018B  00F4               	movwf	___lwdiv@divisor
  1577  018C  3000               	movlw	0
  1578  018D  00F5               	movwf	___lwdiv@divisor+1
  1579  018E  082E               	movf	lcd_bcd@ui_decimal+5,w
  1580  018F  00F7               	movwf	___lwdiv@dividend+1
  1581  0190  082D               	movf	lcd_bcd@ui_decimal+4,w
  1582  0191  00F6               	movwf	___lwdiv@dividend
  1583  0192  120A  118A  2241  120A  118A  	fcall	___lwdiv
  1584  0197  0875               	movf	?___lwdiv+1,w
  1585  0198  1283               	bcf	3,5	;RP0=0, select bank0
  1586  0199  1303               	bcf	3,6	;RP1=0, select bank0
  1587  019A  00AE               	movwf	lcd_bcd@ui_decimal+5
  1588  019B  0874               	movf	?___lwdiv,w
  1589  019C  00AD               	movwf	lcd_bcd@ui_decimal+4
  1590                           
  1591                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1592  019D  300A               	movlw	10
  1593  019E  00F4               	movwf	___lwmod@divisor
  1594  019F  3000               	movlw	0
  1595  01A0  00F5               	movwf	___lwmod@divisor+1
  1596  01A1  082C               	movf	lcd_bcd@ui_decimal+3,w
  1597  01A2  00F7               	movwf	___lwmod@dividend+1
  1598  01A3  082B               	movf	lcd_bcd@ui_decimal+2,w
  1599  01A4  00F6               	movwf	___lwmod@dividend
  1600  01A5  120A  118A  2360  120A  118A  	fcall	___lwmod
  1601  01AA  0875               	movf	?___lwmod+1,w
  1602  01AB  1283               	bcf	3,5	;RP0=0, select bank0
  1603  01AC  1303               	bcf	3,6	;RP1=0, select bank0
  1604  01AD  00AA               	movwf	lcd_bcd@ui_decimal+1
  1605  01AE  0874               	movf	?___lwmod,w
  1606  01AF  00A9               	movwf	lcd_bcd@ui_decimal
  1607                           
  1608                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1609  01B0  300A               	movlw	10
  1610  01B1  00F4               	movwf	___lwdiv@divisor
  1611  01B2  3000               	movlw	0
  1612  01B3  00F5               	movwf	___lwdiv@divisor+1
  1613  01B4  082C               	movf	lcd_bcd@ui_decimal+3,w
  1614  01B5  00F7               	movwf	___lwdiv@dividend+1
  1615  01B6  082B               	movf	lcd_bcd@ui_decimal+2,w
  1616  01B7  00F6               	movwf	___lwdiv@dividend
  1617  01B8  120A  118A  2241  120A  118A  	fcall	___lwdiv
  1618  01BD  0875               	movf	?___lwdiv+1,w
  1619  01BE  1283               	bcf	3,5	;RP0=0, select bank0
  1620  01BF  1303               	bcf	3,6	;RP1=0, select bank0
  1621  01C0  00AC               	movwf	lcd_bcd@ui_decimal+3
  1622  01C1  0874               	movf	?___lwdiv,w
  1623  01C2  00AB               	movwf	lcd_bcd@ui_decimal+2
  1624                           
  1625                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1626  01C3  3006               	movlw	6
  1627  01C4  0233               	subwf	lcd_bcd@uc_digit,w
  1628  01C5  1C03               	skipc
  1629  01C6  29CB               	goto	l1119
  1630  01C7  3005               	movlw	5
  1631  01C8  00A5               	movwf	??_lcd_bcd
  1632  01C9  0825               	movf	??_lcd_bcd,w
  1633  01CA  00B3               	movwf	lcd_bcd@uc_digit
  1634  01CB                     l1119:	
  1635                           
  1636                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1637  01CB  0833               	movf	lcd_bcd@uc_digit,w
  1638  01CC  1903               	btfsc	3,2
  1639  01CD  0008               	return
  1640                           
  1641                           ;lcd.c: 289: {
  1642                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1643  01CE  0833               	movf	lcd_bcd@uc_digit,w
  1644  01CF  00A5               	movwf	??_lcd_bcd
  1645  01D0  0725               	addwf	??_lcd_bcd,w
  1646  01D1  3EFE               	addlw	254
  1647  01D2  3E29               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  1648  01D3  0084               	movwf	4
  1649  01D4  1383               	bcf	3,7	;select IRP bank0
  1650  01D5  0800               	movf	0,w
  1651  01D6  3E30               	addlw	48
  1652  01D7  120A  118A  23DC  120A  118A  	fcall	_lcd_putchar
  1653  01DC  3001               	movlw	1
  1654  01DD  1283               	bcf	3,5	;RP0=0, select bank0
  1655  01DE  1303               	bcf	3,6	;RP1=0, select bank0
  1656  01DF  02B3               	subwf	lcd_bcd@uc_digit,f
  1657  01E0  29CB               	goto	l1119
  1658  01E1                     __end_of_lcd_bcd:	
  1659                           
  1660                           	psect	text7
  1661  03DC                     __ptext7:	
  1662 ;; *************** function _lcd_putchar *****************
  1663 ;; Defined at:
  1664 ;;		line 220 in file "lcd.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  c_data          1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  c_data          1    0[BANK0 ] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      void 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2, status,0, pclath, cstack
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1678 ;;      Params:         0       0       0       0       0
  1679 ;;      Locals:         0       1       0       0       0
  1680 ;;      Temps:          1       0       0       0       0
  1681 ;;      Totals:         1       1       0       0       0
  1682 ;;Total ram usage:        2 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; Hardware stack levels required when called:    3
  1685 ;; This function calls:
  1686 ;;		_send_lcd_data
  1687 ;; This function is called by:
  1688 ;;		_lcd_putstr
  1689 ;;		_lcd_bcd
  1690 ;; This function uses a non-reentrant model
  1691 ;;
  1692                           
  1693                           
  1694                           ;psect for function _lcd_putchar
  1695  03DC                     _lcd_putchar:	
  1696                           
  1697                           ;incstack = 0
  1698                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  1699                           ;lcd_putchar@c_data stored from wreg
  1700  03DC  1283               	bcf	3,5	;RP0=0, select bank0
  1701  03DD  1303               	bcf	3,6	;RP1=0, select bank0
  1702  03DE  00A0               	movwf	lcd_putchar@c_data
  1703                           
  1704                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  1705  03DF  0820               	movf	lcd_putchar@c_data,w
  1706  03E0  00F9               	movwf	??_lcd_putchar
  1707  03E1  0879               	movf	??_lcd_putchar,w
  1708  03E2  00F5               	movwf	send_lcd_data@uc_data
  1709  03E3  3001               	movlw	1
  1710  03E4  120A  118A  232B   	fcall	_send_lcd_data
  1711  03E7  0008               	return
  1712  03E8                     __end_of_lcd_putchar:	
  1713                           
  1714                           	psect	text8
  1715  032B                     __ptext8:	
  1716 ;; *************** function _send_lcd_data *****************
  1717 ;; Defined at:
  1718 ;;		line 308 in file "lcd.c"
  1719 ;; Parameters:    Size  Location     Type
  1720 ;;  b_rs            1    wreg     unsigned char 
  1721 ;;  uc_data         1    5[COMMON] unsigned char 
  1722 ;; Auto vars:     Size  Location     Type
  1723 ;;  b_rs            1    8[COMMON] unsigned char 
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         1       0       0       0       0
  1734 ;;      Locals:         1       0       0       0       0
  1735 ;;      Temps:          2       0       0       0       0
  1736 ;;      Totals:         4       0       0       0       0
  1737 ;;Total ram usage:        4 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    2
  1740 ;; This function calls:
  1741 ;;		_set_lcd_data
  1742 ;;		_set_lcd_e
  1743 ;;		_set_lcd_rs
  1744 ;; This function is called by:
  1745 ;;		_lcd_initialize
  1746 ;;		_lcd_clear
  1747 ;;		_lcd_2ndline
  1748 ;;		_lcd_goto
  1749 ;;		_lcd_putchar
  1750 ;;		_lcd_home
  1751 ;; This function uses a non-reentrant model
  1752 ;;
  1753                           
  1754                           
  1755                           ;psect for function _send_lcd_data
  1756  032B                     _send_lcd_data:	
  1757                           
  1758                           ;incstack = 0
  1759                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1760                           ;send_lcd_data@b_rs stored from wreg
  1761  032B  00F8               	movwf	send_lcd_data@b_rs
  1762                           
  1763                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1764  032C  0878               	movf	send_lcd_data@b_rs,w
  1765  032D  120A  118A  23E8  120A  118A  	fcall	_set_lcd_rs
  1766                           
  1767                           ;lcd.c: 312: set_lcd_data(uc_data);
  1768  0332  0875               	movf	send_lcd_data@uc_data,w
  1769  0333  120A  118A  2438  120A  118A  	fcall	_set_lcd_data
  1770                           
  1771                           ;lcd.c: 315: set_lcd_e(1);
  1772  0338  3001               	movlw	1
  1773  0339  120A  118A  23F3  120A  118A  	fcall	_set_lcd_e
  1774                           
  1775                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1776  033E  3007               	movlw	7
  1777  033F  00F7               	movwf	??_send_lcd_data+1
  1778  0340  307D               	movlw	125
  1779  0341  00F6               	movwf	??_send_lcd_data
  1780  0342                     u747:	
  1781  0342  0BF6               	decfsz	??_send_lcd_data,f
  1782  0343  2B42               	goto	u747
  1783  0344  0BF7               	decfsz	??_send_lcd_data+1,f
  1784  0345  2B42               	goto	u747
  1785                           
  1786                           ;lcd.c: 317: set_lcd_e(0);
  1787  0346  3000               	movlw	0
  1788  0347  120A  118A  23F3  120A  118A  	fcall	_set_lcd_e
  1789                           
  1790                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1791  034C  300D               	movlw	13
  1792  034D  00F7               	movwf	??_send_lcd_data+1
  1793  034E  30FB               	movlw	251
  1794  034F  00F6               	movwf	??_send_lcd_data
  1795  0350                     u757:	
  1796  0350  0BF6               	decfsz	??_send_lcd_data,f
  1797  0351  2B50               	goto	u757
  1798  0352  0BF7               	decfsz	??_send_lcd_data+1,f
  1799  0353  2B50               	goto	u757
  1800  0354  2B55               	nop2
  1801                           
  1802                           ;lcd.c: 321: set_lcd_rs(0);
  1803  0355  3000               	movlw	0
  1804  0356  120A  118A  23E8  120A  118A  	fcall	_set_lcd_rs
  1805                           
  1806                           ;lcd.c: 322: set_lcd_data(0);
  1807  035B  3000               	movlw	0
  1808  035C  120A  118A  2438   	fcall	_set_lcd_data
  1809  035F  0008               	return
  1810  0360                     __end_of_send_lcd_data:	
  1811                           
  1812                           	psect	text9
  1813  03E8                     __ptext9:	
  1814 ;; *************** function _set_lcd_rs *****************
  1815 ;; Defined at:
  1816 ;;		line 360 in file "lcd.c"
  1817 ;; Parameters:    Size  Location     Type
  1818 ;;  b_output        1    wreg     unsigned char 
  1819 ;; Auto vars:     Size  Location     Type
  1820 ;;  b_output        1    4[COMMON] unsigned char 
  1821 ;; Return value:  Size  Location     Type
  1822 ;;                  1    wreg      void 
  1823 ;; Registers used:
  1824 ;;		wreg
  1825 ;; Tracked objects:
  1826 ;;		On entry : 0/0
  1827 ;;		On exit  : 0/0
  1828 ;;		Unchanged: 0/0
  1829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1830 ;;      Params:         0       0       0       0       0
  1831 ;;      Locals:         1       0       0       0       0
  1832 ;;      Temps:          0       0       0       0       0
  1833 ;;      Totals:         1       0       0       0       0
  1834 ;;Total ram usage:        1 bytes
  1835 ;; Hardware stack levels used:    1
  1836 ;; Hardware stack levels required when called:    1
  1837 ;; This function calls:
  1838 ;;		Nothing
  1839 ;; This function is called by:
  1840 ;;		_send_lcd_data
  1841 ;; This function uses a non-reentrant model
  1842 ;;
  1843                           
  1844                           
  1845                           ;psect for function _set_lcd_rs
  1846  03E8                     _set_lcd_rs:	
  1847                           
  1848                           ;incstack = 0
  1849                           ; Regs used in _set_lcd_rs: [wreg]
  1850                           ;set_lcd_rs@b_output stored from wreg
  1851  03E8  00F4               	movwf	set_lcd_rs@b_output
  1852                           
  1853                           ;lcd.c: 362: RB4 = b_output;
  1854  03E9  1C74               	btfss	set_lcd_rs@b_output,0
  1855  03EA  2BEF               	goto	u390
  1856  03EB  1283               	bcf	3,5	;RP0=0, select bank0
  1857  03EC  1303               	bcf	3,6	;RP1=0, select bank0
  1858  03ED  1606               	bsf	6,4	;volatile
  1859  03EE  0008               	return
  1860  03EF                     u390:	
  1861  03EF  1283               	bcf	3,5	;RP0=0, select bank0
  1862  03F0  1303               	bcf	3,6	;RP1=0, select bank0
  1863  03F1  1206               	bcf	6,4	;volatile
  1864  03F2  0008               	return
  1865  03F3                     __end_of_set_lcd_rs:	
  1866                           
  1867                           	psect	text10
  1868  03F3                     __ptext10:	
  1869 ;; *************** function _set_lcd_e *****************
  1870 ;; Defined at:
  1871 ;;		line 340 in file "lcd.c"
  1872 ;; Parameters:    Size  Location     Type
  1873 ;;  b_output        1    wreg     unsigned char 
  1874 ;; Auto vars:     Size  Location     Type
  1875 ;;  b_output        1    4[COMMON] unsigned char 
  1876 ;; Return value:  Size  Location     Type
  1877 ;;                  1    wreg      void 
  1878 ;; Registers used:
  1879 ;;		wreg
  1880 ;; Tracked objects:
  1881 ;;		On entry : 0/0
  1882 ;;		On exit  : 0/0
  1883 ;;		Unchanged: 0/0
  1884 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1885 ;;      Params:         0       0       0       0       0
  1886 ;;      Locals:         1       0       0       0       0
  1887 ;;      Temps:          0       0       0       0       0
  1888 ;;      Totals:         1       0       0       0       0
  1889 ;;Total ram usage:        1 bytes
  1890 ;; Hardware stack levels used:    1
  1891 ;; Hardware stack levels required when called:    1
  1892 ;; This function calls:
  1893 ;;		Nothing
  1894 ;; This function is called by:
  1895 ;;		_lcd_initialize
  1896 ;;		_send_lcd_data
  1897 ;; This function uses a non-reentrant model
  1898 ;;
  1899                           
  1900                           
  1901                           ;psect for function _set_lcd_e
  1902  03F3                     _set_lcd_e:	
  1903                           
  1904                           ;incstack = 0
  1905                           ; Regs used in _set_lcd_e: [wreg]
  1906                           ;set_lcd_e@b_output stored from wreg
  1907  03F3  00F4               	movwf	set_lcd_e@b_output
  1908                           
  1909                           ;lcd.c: 342: RB5 = b_output;
  1910  03F4  1C74               	btfss	set_lcd_e@b_output,0
  1911  03F5  2BFA               	goto	u370
  1912  03F6  1283               	bcf	3,5	;RP0=0, select bank0
  1913  03F7  1303               	bcf	3,6	;RP1=0, select bank0
  1914  03F8  1686               	bsf	6,5	;volatile
  1915  03F9  0008               	return
  1916  03FA                     u370:	
  1917  03FA  1283               	bcf	3,5	;RP0=0, select bank0
  1918  03FB  1303               	bcf	3,6	;RP1=0, select bank0
  1919  03FC  1286               	bcf	6,5	;volatile
  1920  03FD  0008               	return
  1921  03FE                     __end_of_set_lcd_e:	
  1922                           
  1923                           	psect	text11
  1924  0438                     __ptext11:	
  1925 ;; *************** function _set_lcd_data *****************
  1926 ;; Defined at:
  1927 ;;		line 380 in file "lcd.c"
  1928 ;; Parameters:    Size  Location     Type
  1929 ;;  uc_data         1    wreg     unsigned char 
  1930 ;; Auto vars:     Size  Location     Type
  1931 ;;  uc_data         1    4[COMMON] unsigned char 
  1932 ;; Return value:  Size  Location     Type
  1933 ;;                  1    wreg      void 
  1934 ;; Registers used:
  1935 ;;		wreg
  1936 ;; Tracked objects:
  1937 ;;		On entry : 0/0
  1938 ;;		On exit  : 0/0
  1939 ;;		Unchanged: 0/0
  1940 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1941 ;;      Params:         0       0       0       0       0
  1942 ;;      Locals:         1       0       0       0       0
  1943 ;;      Temps:          0       0       0       0       0
  1944 ;;      Totals:         1       0       0       0       0
  1945 ;;Total ram usage:        1 bytes
  1946 ;; Hardware stack levels used:    1
  1947 ;; Hardware stack levels required when called:    1
  1948 ;; This function calls:
  1949 ;;		Nothing
  1950 ;; This function is called by:
  1951 ;;		_send_lcd_data
  1952 ;; This function uses a non-reentrant model
  1953 ;;
  1954                           
  1955                           
  1956                           ;psect for function _set_lcd_data
  1957  0438                     _set_lcd_data:	
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _set_lcd_data: [wreg]
  1961                           ;set_lcd_data@uc_data stored from wreg
  1962  0438  00F4               	movwf	set_lcd_data@uc_data
  1963                           
  1964                           ;lcd.c: 382: PORTD = uc_data;
  1965  0439  0874               	movf	set_lcd_data@uc_data,w
  1966  043A  1283               	bcf	3,5	;RP0=0, select bank0
  1967  043B  1303               	bcf	3,6	;RP1=0, select bank0
  1968  043C  0088               	movwf	8	;volatile
  1969  043D  0008               	return
  1970  043E                     __end_of_set_lcd_data:	
  1971                           
  1972                           	psect	text12
  1973  0360                     __ptext12:	
  1974 ;; *************** function ___lwmod *****************
  1975 ;; Defined at:
  1976 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1977 ;; Parameters:    Size  Location     Type
  1978 ;;  divisor         2    4[COMMON] unsigned int 
  1979 ;;  dividend        2    6[COMMON] unsigned int 
  1980 ;; Auto vars:     Size  Location     Type
  1981 ;;  counter         1    9[COMMON] unsigned char 
  1982 ;; Return value:  Size  Location     Type
  1983 ;;                  2    4[COMMON] unsigned int 
  1984 ;; Registers used:
  1985 ;;		wreg, status,2, status,0
  1986 ;; Tracked objects:
  1987 ;;		On entry : 0/0
  1988 ;;		On exit  : 0/0
  1989 ;;		Unchanged: 0/0
  1990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1991 ;;      Params:         4       0       0       0       0
  1992 ;;      Locals:         1       0       0       0       0
  1993 ;;      Temps:          1       0       0       0       0
  1994 ;;      Totals:         6       0       0       0       0
  1995 ;;Total ram usage:        6 bytes
  1996 ;; Hardware stack levels used:    1
  1997 ;; Hardware stack levels required when called:    1
  1998 ;; This function calls:
  1999 ;;		Nothing
  2000 ;; This function is called by:
  2001 ;;		_lcd_bcd
  2002 ;; This function uses a non-reentrant model
  2003 ;;
  2004                           
  2005                           
  2006                           ;psect for function ___lwmod
  2007  0360                     ___lwmod:	
  2008                           
  2009                           ;incstack = 0
  2010                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2011  0360  0874               	movf	___lwmod@divisor,w
  2012  0361  0475               	iorwf	___lwmod@divisor+1,w
  2013  0362  1903               	btfsc	3,2
  2014  0363  2B8D               	goto	l1025
  2015  0364  01F9               	clrf	___lwmod@counter
  2016  0365  0AF9               	incf	___lwmod@counter,f
  2017  0366                     l1015:	
  2018  0366  1BF5               	btfsc	___lwmod@divisor+1,7
  2019  0367  2B74               	goto	l1017
  2020  0368  3001               	movlw	1
  2021  0369                     u585:	
  2022  0369  1003               	clrc
  2023  036A  0DF4               	rlf	___lwmod@divisor,f
  2024  036B  0DF5               	rlf	___lwmod@divisor+1,f
  2025  036C  3EFF               	addlw	-1
  2026  036D  1D03               	skipz
  2027  036E  2B69               	goto	u585
  2028  036F  3001               	movlw	1
  2029  0370  00F8               	movwf	??___lwmod
  2030  0371  0878               	movf	??___lwmod,w
  2031  0372  07F9               	addwf	___lwmod@counter,f
  2032  0373  2B66               	goto	l1015
  2033  0374                     l1017:	
  2034  0374  0875               	movf	___lwmod@divisor+1,w
  2035  0375  0277               	subwf	___lwmod@dividend+1,w
  2036  0376  1D03               	skipz
  2037  0377  2B7A               	goto	u605
  2038  0378  0874               	movf	___lwmod@divisor,w
  2039  0379  0276               	subwf	___lwmod@dividend,w
  2040  037A                     u605:	
  2041  037A  1C03               	skipc
  2042  037B  2B82               	goto	l1021
  2043  037C  0874               	movf	___lwmod@divisor,w
  2044  037D  02F6               	subwf	___lwmod@dividend,f
  2045  037E  0875               	movf	___lwmod@divisor+1,w
  2046  037F  1C03               	skipc
  2047  0380  03F7               	decf	___lwmod@dividend+1,f
  2048  0381  02F7               	subwf	___lwmod@dividend+1,f
  2049  0382                     l1021:	
  2050  0382  3001               	movlw	1
  2051  0383                     u615:	
  2052  0383  1003               	clrc
  2053  0384  0CF5               	rrf	___lwmod@divisor+1,f
  2054  0385  0CF4               	rrf	___lwmod@divisor,f
  2055  0386  3EFF               	addlw	-1
  2056  0387  1D03               	skipz
  2057  0388  2B83               	goto	u615
  2058  0389  3001               	movlw	1
  2059  038A  02F9               	subwf	___lwmod@counter,f
  2060  038B  1D03               	btfss	3,2
  2061  038C  2B74               	goto	l1017
  2062  038D                     l1025:	
  2063  038D  0877               	movf	___lwmod@dividend+1,w
  2064  038E  00F5               	movwf	?___lwmod+1
  2065  038F  0876               	movf	___lwmod@dividend,w
  2066  0390  00F4               	movwf	?___lwmod
  2067  0391  0008               	return
  2068  0392                     __end_of___lwmod:	
  2069                           
  2070                           	psect	text13
  2071  0241                     __ptext13:	
  2072 ;; *************** function ___lwdiv *****************
  2073 ;; Defined at:
  2074 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2075 ;; Parameters:    Size  Location     Type
  2076 ;;  divisor         2    4[COMMON] unsigned int 
  2077 ;;  dividend        2    6[COMMON] unsigned int 
  2078 ;; Auto vars:     Size  Location     Type
  2079 ;;  quotient        2    0[BANK0 ] unsigned int 
  2080 ;;  counter         1    2[BANK0 ] unsigned char 
  2081 ;; Return value:  Size  Location     Type
  2082 ;;                  2    4[COMMON] unsigned int 
  2083 ;; Registers used:
  2084 ;;		wreg, status,2, status,0
  2085 ;; Tracked objects:
  2086 ;;		On entry : 0/0
  2087 ;;		On exit  : 0/0
  2088 ;;		Unchanged: 0/0
  2089 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2090 ;;      Params:         4       0       0       0       0
  2091 ;;      Locals:         0       3       0       0       0
  2092 ;;      Temps:          1       0       0       0       0
  2093 ;;      Totals:         5       3       0       0       0
  2094 ;;Total ram usage:        8 bytes
  2095 ;; Hardware stack levels used:    1
  2096 ;; Hardware stack levels required when called:    1
  2097 ;; This function calls:
  2098 ;;		Nothing
  2099 ;; This function is called by:
  2100 ;;		_lcd_bcd
  2101 ;; This function uses a non-reentrant model
  2102 ;;
  2103                           
  2104                           
  2105                           ;psect for function ___lwdiv
  2106  0241                     ___lwdiv:	
  2107                           
  2108                           ;incstack = 0
  2109                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2110  0241  1283               	bcf	3,5	;RP0=0, select bank0
  2111  0242  1303               	bcf	3,6	;RP1=0, select bank0
  2112  0243  01A0               	clrf	___lwdiv@quotient
  2113  0244  01A1               	clrf	___lwdiv@quotient+1
  2114  0245  0874               	movf	___lwdiv@divisor,w
  2115  0246  0475               	iorwf	___lwdiv@divisor+1,w
  2116  0247  1903               	btfsc	3,2
  2117  0248  2A7A               	goto	l1003
  2118  0249  01A2               	clrf	___lwdiv@counter
  2119  024A  0AA2               	incf	___lwdiv@counter,f
  2120  024B                     l991:	
  2121  024B  1BF5               	btfsc	___lwdiv@divisor+1,7
  2122  024C  2A59               	goto	l993
  2123  024D  3001               	movlw	1
  2124  024E                     u515:	
  2125  024E  1003               	clrc
  2126  024F  0DF4               	rlf	___lwdiv@divisor,f
  2127  0250  0DF5               	rlf	___lwdiv@divisor+1,f
  2128  0251  3EFF               	addlw	-1
  2129  0252  1D03               	skipz
  2130  0253  2A4E               	goto	u515
  2131  0254  3001               	movlw	1
  2132  0255  00F8               	movwf	??___lwdiv
  2133  0256  0878               	movf	??___lwdiv,w
  2134  0257  07A2               	addwf	___lwdiv@counter,f
  2135  0258  2A4B               	goto	l991
  2136  0259                     l993:	
  2137  0259  3001               	movlw	1
  2138  025A                     u535:	
  2139  025A  1003               	clrc
  2140  025B  0DA0               	rlf	___lwdiv@quotient,f
  2141  025C  0DA1               	rlf	___lwdiv@quotient+1,f
  2142  025D  3EFF               	addlw	-1
  2143  025E  1D03               	skipz
  2144  025F  2A5A               	goto	u535
  2145  0260  0875               	movf	___lwdiv@divisor+1,w
  2146  0261  0277               	subwf	___lwdiv@dividend+1,w
  2147  0262  1D03               	skipz
  2148  0263  2A66               	goto	u545
  2149  0264  0874               	movf	___lwdiv@divisor,w
  2150  0265  0276               	subwf	___lwdiv@dividend,w
  2151  0266                     u545:	
  2152  0266  1C03               	skipc
  2153  0267  2A6F               	goto	l999
  2154  0268  0874               	movf	___lwdiv@divisor,w
  2155  0269  02F6               	subwf	___lwdiv@dividend,f
  2156  026A  0875               	movf	___lwdiv@divisor+1,w
  2157  026B  1C03               	skipc
  2158  026C  03F7               	decf	___lwdiv@dividend+1,f
  2159  026D  02F7               	subwf	___lwdiv@dividend+1,f
  2160  026E  1420               	bsf	___lwdiv@quotient,0
  2161  026F                     l999:	
  2162  026F  3001               	movlw	1
  2163  0270                     u555:	
  2164  0270  1003               	clrc
  2165  0271  0CF5               	rrf	___lwdiv@divisor+1,f
  2166  0272  0CF4               	rrf	___lwdiv@divisor,f
  2167  0273  3EFF               	addlw	-1
  2168  0274  1D03               	skipz
  2169  0275  2A70               	goto	u555
  2170  0276  3001               	movlw	1
  2171  0277  02A2               	subwf	___lwdiv@counter,f
  2172  0278  1D03               	btfss	3,2
  2173  0279  2A59               	goto	l993
  2174  027A                     l1003:	
  2175  027A  0821               	movf	___lwdiv@quotient+1,w
  2176  027B  00F5               	movwf	?___lwdiv+1
  2177  027C  0820               	movf	___lwdiv@quotient,w
  2178  027D  00F4               	movwf	?___lwdiv
  2179  027E  0008               	return
  2180  027F                     __end_of___lwdiv:	
  2181                           
  2182                           	psect	text14
  2183  043E                     __ptext14:	
  2184 ;; *************** function _InitApp *****************
  2185 ;; Defined at:
  2186 ;;		line 22 in file "user.c"
  2187 ;; Parameters:    Size  Location     Type
  2188 ;;		None
  2189 ;; Auto vars:     Size  Location     Type
  2190 ;;		None
  2191 ;; Return value:  Size  Location     Type
  2192 ;;                  1    wreg      void 
  2193 ;; Registers used:
  2194 ;;		None
  2195 ;; Tracked objects:
  2196 ;;		On entry : 0/0
  2197 ;;		On exit  : 0/0
  2198 ;;		Unchanged: 0/0
  2199 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2200 ;;      Params:         0       0       0       0       0
  2201 ;;      Locals:         0       0       0       0       0
  2202 ;;      Temps:          0       0       0       0       0
  2203 ;;      Totals:         0       0       0       0       0
  2204 ;;Total ram usage:        0 bytes
  2205 ;; Hardware stack levels used:    1
  2206 ;; Hardware stack levels required when called:    1
  2207 ;; This function calls:
  2208 ;;		Nothing
  2209 ;; This function is called by:
  2210 ;;		_main
  2211 ;; This function uses a non-reentrant model
  2212 ;;
  2213                           
  2214                           
  2215                           ;psect for function _InitApp
  2216  043E                     _InitApp:	
  2217                           
  2218                           ;incstack = 0
  2219                           ; Regs used in _InitApp: []
  2220  043E  0008               	return
  2221  043F                     __end_of_InitApp:	
  2222                           
  2223                           	psect	text15
  2224  041B                     __ptext15:	
  2225 ;; *************** function _I2C_Master_Write *****************
  2226 ;; Defined at:
  2227 ;;		line 52 in file "i2c.c"
  2228 ;; Parameters:    Size  Location     Type
  2229 ;;  d               2    4[COMMON] unsigned int 
  2230 ;; Auto vars:     Size  Location     Type
  2231 ;;		None
  2232 ;; Return value:  Size  Location     Type
  2233 ;;                  1    wreg      void 
  2234 ;; Registers used:
  2235 ;;		wreg, status,2, status,0, pclath, cstack
  2236 ;; Tracked objects:
  2237 ;;		On entry : 0/0
  2238 ;;		On exit  : 0/0
  2239 ;;		Unchanged: 0/0
  2240 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2241 ;;      Params:         2       0       0       0       0
  2242 ;;      Locals:         0       0       0       0       0
  2243 ;;      Temps:          0       0       0       0       0
  2244 ;;      Totals:         2       0       0       0       0
  2245 ;;Total ram usage:        2 bytes
  2246 ;; Hardware stack levels used:    1
  2247 ;; Hardware stack levels required when called:    2
  2248 ;; This function calls:
  2249 ;;		_I2C_Master_Wait
  2250 ;; This function is called by:
  2251 ;;		_main
  2252 ;; This function uses a non-reentrant model
  2253 ;;
  2254                           
  2255                           
  2256                           ;psect for function _I2C_Master_Write
  2257  041B                     _I2C_Master_Write:	
  2258                           
  2259                           ;i2c.c: 54: I2C_Master_Wait();
  2260                           
  2261                           ;incstack = 0
  2262                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  2263  041B  120A  118A  2412   	fcall	_I2C_Master_Wait
  2264                           
  2265                           ;i2c.c: 55: SSPBUF = d;
  2266  041E  0874               	movf	I2C_Master_Write@d,w
  2267  041F  1283               	bcf	3,5	;RP0=0, select bank0
  2268  0420  1303               	bcf	3,6	;RP1=0, select bank0
  2269  0421  0093               	movwf	19	;volatile
  2270  0422  0008               	return
  2271  0423                     __end_of_I2C_Master_Write:	
  2272                           
  2273                           	psect	text16
  2274  042A                     __ptext16:	
  2275 ;; *************** function _I2C_Master_Stop *****************
  2276 ;; Defined at:
  2277 ;;		line 46 in file "i2c.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;		None
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;		None
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, status,0, pclath, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2291 ;;      Params:         0       0       0       0       0
  2292 ;;      Locals:         0       0       0       0       0
  2293 ;;      Temps:          0       0       0       0       0
  2294 ;;      Totals:         0       0       0       0       0
  2295 ;;Total ram usage:        0 bytes
  2296 ;; Hardware stack levels used:    1
  2297 ;; Hardware stack levels required when called:    2
  2298 ;; This function calls:
  2299 ;;		_I2C_Master_Wait
  2300 ;; This function is called by:
  2301 ;;		_main
  2302 ;; This function uses a non-reentrant model
  2303 ;;
  2304                           
  2305                           
  2306                           ;psect for function _I2C_Master_Stop
  2307  042A                     _I2C_Master_Stop:	
  2308                           
  2309                           ;i2c.c: 48: I2C_Master_Wait();
  2310                           
  2311                           ;incstack = 0
  2312                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  2313  042A  120A  118A  2412   	fcall	_I2C_Master_Wait
  2314                           
  2315                           ;i2c.c: 49: PEN = 1;
  2316  042D  1683               	bsf	3,5	;RP0=1, select bank1
  2317  042E  1303               	bcf	3,6	;RP1=0, select bank1
  2318  042F  1511               	bsf	17,2	;volatile
  2319  0430  0008               	return
  2320  0431                     __end_of_I2C_Master_Stop:	
  2321                           
  2322                           	psect	text17
  2323  0431                     __ptext17:	
  2324 ;; *************** function _I2C_Master_Start *****************
  2325 ;; Defined at:
  2326 ;;		line 34 in file "i2c.c"
  2327 ;; Parameters:    Size  Location     Type
  2328 ;;		None
  2329 ;; Auto vars:     Size  Location     Type
  2330 ;;		None
  2331 ;; Return value:  Size  Location     Type
  2332 ;;                  1    wreg      void 
  2333 ;; Registers used:
  2334 ;;		wreg, status,2, status,0, pclath, cstack
  2335 ;; Tracked objects:
  2336 ;;		On entry : 0/0
  2337 ;;		On exit  : 0/0
  2338 ;;		Unchanged: 0/0
  2339 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2340 ;;      Params:         0       0       0       0       0
  2341 ;;      Locals:         0       0       0       0       0
  2342 ;;      Temps:          0       0       0       0       0
  2343 ;;      Totals:         0       0       0       0       0
  2344 ;;Total ram usage:        0 bytes
  2345 ;; Hardware stack levels used:    1
  2346 ;; Hardware stack levels required when called:    2
  2347 ;; This function calls:
  2348 ;;		_I2C_Master_Wait
  2349 ;; This function is called by:
  2350 ;;		_main
  2351 ;; This function uses a non-reentrant model
  2352 ;;
  2353                           
  2354                           
  2355                           ;psect for function _I2C_Master_Start
  2356  0431                     _I2C_Master_Start:	
  2357                           
  2358                           ;i2c.c: 36: I2C_Master_Wait();
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  2362  0431  120A  118A  2412   	fcall	_I2C_Master_Wait
  2363                           
  2364                           ;i2c.c: 37: SEN = 1;
  2365  0434  1683               	bsf	3,5	;RP0=1, select bank1
  2366  0435  1303               	bcf	3,6	;RP1=0, select bank1
  2367  0436  1411               	bsf	17,0	;volatile
  2368  0437  0008               	return
  2369  0438                     __end_of_I2C_Master_Start:	
  2370                           
  2371                           	psect	text18
  2372  0392                     __ptext18:	
  2373 ;; *************** function _I2C_Master_Read *****************
  2374 ;; Defined at:
  2375 ;;		line 58 in file "i2c.c"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  a               2    4[COMMON] unsigned short 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  temp            2    8[COMMON] unsigned short 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  2    4[COMMON] unsigned short 
  2382 ;; Registers used:
  2383 ;;		wreg, status,2, status,0, pclath, cstack
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2389 ;;      Params:         2       0       0       0       0
  2390 ;;      Locals:         2       0       0       0       0
  2391 ;;      Temps:          2       0       0       0       0
  2392 ;;      Totals:         6       0       0       0       0
  2393 ;;Total ram usage:        6 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; Hardware stack levels required when called:    2
  2396 ;; This function calls:
  2397 ;;		_I2C_Master_Wait
  2398 ;; This function is called by:
  2399 ;;		_main
  2400 ;; This function uses a non-reentrant model
  2401 ;;
  2402                           
  2403                           
  2404                           ;psect for function _I2C_Master_Read
  2405  0392                     _I2C_Master_Read:	
  2406                           
  2407                           ;i2c.c: 60: unsigned short temp;
  2408                           ;i2c.c: 61: I2C_Master_Wait();
  2409                           
  2410                           ;incstack = 0
  2411                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  2412  0392  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2413                           
  2414                           ;i2c.c: 62: RCEN = 1;
  2415  0397  1683               	bsf	3,5	;RP0=1, select bank1
  2416  0398  1303               	bcf	3,6	;RP1=0, select bank1
  2417  0399  1591               	bsf	17,3	;volatile
  2418                           
  2419                           ;i2c.c: 63: I2C_Master_Wait();
  2420  039A  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2421                           
  2422                           ;i2c.c: 64: temp = SSPBUF;
  2423  039F  1283               	bcf	3,5	;RP0=0, select bank0
  2424  03A0  1303               	bcf	3,6	;RP1=0, select bank0
  2425  03A1  0813               	movf	19,w	;volatile
  2426  03A2  00F6               	movwf	??_I2C_Master_Read
  2427  03A3  01F7               	clrf	??_I2C_Master_Read+1
  2428  03A4  0876               	movf	??_I2C_Master_Read,w
  2429  03A5  00F8               	movwf	I2C_Master_Read@temp
  2430  03A6  0877               	movf	??_I2C_Master_Read+1,w
  2431  03A7  00F9               	movwf	I2C_Master_Read@temp+1
  2432                           
  2433                           ;i2c.c: 65: I2C_Master_Wait();
  2434  03A8  120A  118A  2412  120A  118A  	fcall	_I2C_Master_Wait
  2435                           
  2436                           ;i2c.c: 66: ACKDT = (a)?0:1;
  2437  03AD  0874               	movf	I2C_Master_Read@a,w
  2438  03AE  0475               	iorwf	I2C_Master_Read@a+1,w
  2439  03AF  1D03               	btfss	3,2
  2440  03B0  2BB5               	goto	u670
  2441  03B1  1683               	bsf	3,5	;RP0=1, select bank1
  2442  03B2  1303               	bcf	3,6	;RP1=0, select bank1
  2443  03B3  1691               	bsf	17,5	;volatile
  2444  03B4  2BB8               	goto	l1091
  2445  03B5                     u670:	
  2446  03B5  1683               	bsf	3,5	;RP0=1, select bank1
  2447  03B6  1303               	bcf	3,6	;RP1=0, select bank1
  2448  03B7  1291               	bcf	17,5	;volatile
  2449  03B8                     l1091:	
  2450                           
  2451                           ;i2c.c: 67: ACKEN = 1;
  2452  03B8  1611               	bsf	17,4	;volatile
  2453                           
  2454                           ;i2c.c: 68: return temp;
  2455  03B9  0879               	movf	I2C_Master_Read@temp+1,w
  2456  03BA  00F5               	movwf	?_I2C_Master_Read+1
  2457  03BB  0878               	movf	I2C_Master_Read@temp,w
  2458  03BC  00F4               	movwf	?_I2C_Master_Read
  2459  03BD  0008               	return
  2460  03BE                     __end_of_I2C_Master_Read:	
  2461                           
  2462                           	psect	text19
  2463  0412                     __ptext19:	
  2464 ;; *************** function _I2C_Master_Wait *****************
  2465 ;; Defined at:
  2466 ;;		line 29 in file "i2c.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;		None
  2469 ;; Auto vars:     Size  Location     Type
  2470 ;;		None
  2471 ;; Return value:  Size  Location     Type
  2472 ;;                  1    wreg      void 
  2473 ;; Registers used:
  2474 ;;		wreg, status,2
  2475 ;; Tracked objects:
  2476 ;;		On entry : 0/0
  2477 ;;		On exit  : 0/0
  2478 ;;		Unchanged: 0/0
  2479 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2480 ;;      Params:         0       0       0       0       0
  2481 ;;      Locals:         0       0       0       0       0
  2482 ;;      Temps:          0       0       0       0       0
  2483 ;;      Totals:         0       0       0       0       0
  2484 ;;Total ram usage:        0 bytes
  2485 ;; Hardware stack levels used:    1
  2486 ;; Hardware stack levels required when called:    1
  2487 ;; This function calls:
  2488 ;;		Nothing
  2489 ;; This function is called by:
  2490 ;;		_I2C_Master_Start
  2491 ;;		_I2C_Master_Stop
  2492 ;;		_I2C_Master_Write
  2493 ;;		_I2C_Master_Read
  2494 ;;		_I2C_Master_RepeatedStart
  2495 ;; This function uses a non-reentrant model
  2496 ;;
  2497                           
  2498                           
  2499                           ;psect for function _I2C_Master_Wait
  2500  0412                     _I2C_Master_Wait:	
  2501  0412                     l161:	
  2502                           ;i2c.c: 31: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  2503                           
  2504                           ;incstack = 0
  2505                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  2506                           
  2507  0412  1683               	bsf	3,5	;RP0=1, select bank1
  2508  0413  1303               	bcf	3,6	;RP1=0, select bank1
  2509  0414  1914               	btfsc	20,2	;volatile
  2510  0415  2C12               	goto	l161
  2511  0416  0811               	movf	17,w	;volatile
  2512  0417  391F               	andlw	31
  2513  0418  1903               	btfsc	3,2
  2514  0419  0008               	return
  2515  041A  2C12               	goto	l161
  2516  041B                     __end_of_I2C_Master_Wait:	
  2517                           
  2518                           	psect	text20
  2519  02F3                     __ptext20:	
  2520 ;; *************** function _I2C_Master_Init *****************
  2521 ;; Defined at:
  2522 ;;		line 5 in file "i2c.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;  c               4    8[BANK0 ] const unsigned long 
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		wreg, status,2, status,0, pclath, cstack
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       4       0       0       0
  2537 ;;      Locals:         0       0       0       0       0
  2538 ;;      Temps:          0       4       0       0       0
  2539 ;;      Totals:         0       8       0       0       0
  2540 ;;Total ram usage:        8 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; Hardware stack levels required when called:    2
  2543 ;; This function calls:
  2544 ;;		___lldiv
  2545 ;; This function is called by:
  2546 ;;		_main
  2547 ;; This function uses a non-reentrant model
  2548 ;;
  2549                           
  2550                           
  2551                           ;psect for function _I2C_Master_Init
  2552  02F3                     _I2C_Master_Init:	
  2553                           
  2554                           ;i2c.c: 7: SSPCON = 0b00101000;
  2555                           
  2556                           ;incstack = 0
  2557                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2558  02F3  3028               	movlw	40
  2559  02F4  1283               	bcf	3,5	;RP0=0, select bank0
  2560  02F5  1303               	bcf	3,6	;RP1=0, select bank0
  2561  02F6  0094               	movwf	20	;volatile
  2562                           
  2563                           ;i2c.c: 8: SSPCON2 = 0;
  2564  02F7  1683               	bsf	3,5	;RP0=1, select bank1
  2565  02F8  1303               	bcf	3,6	;RP1=0, select bank1
  2566  02F9  0191               	clrf	17	;volatile
  2567                           
  2568                           ;i2c.c: 9: SSPADD = (20000000/(4*c))-1;
  2569  02FA  1283               	bcf	3,5	;RP0=0, select bank0
  2570  02FB  1303               	bcf	3,6	;RP1=0, select bank0
  2571  02FC  0828               	movf	I2C_Master_Init@c,w
  2572  02FD  00AC               	movwf	??_I2C_Master_Init
  2573  02FE  0829               	movf	I2C_Master_Init@c+1,w
  2574  02FF  00AD               	movwf	??_I2C_Master_Init+1
  2575  0300  082A               	movf	I2C_Master_Init@c+2,w
  2576  0301  00AE               	movwf	??_I2C_Master_Init+2
  2577  0302  082B               	movf	I2C_Master_Init@c+3,w
  2578  0303  00AF               	movwf	??_I2C_Master_Init+3
  2579  0304  3002               	movlw	2
  2580  0305                     u635:	
  2581  0305  1003               	clrc
  2582  0306  0DAC               	rlf	??_I2C_Master_Init,f
  2583  0307  0DAD               	rlf	??_I2C_Master_Init+1,f
  2584  0308  0DAE               	rlf	??_I2C_Master_Init+2,f
  2585  0309  0DAF               	rlf	??_I2C_Master_Init+3,f
  2586  030A  3EFF               	addlw	-1
  2587  030B  1D03               	skipz
  2588  030C  2B05               	goto	u635
  2589  030D  082F               	movf	??_I2C_Master_Init+3,w
  2590  030E  00A3               	movwf	___lldiv@divisor+3
  2591  030F  082E               	movf	??_I2C_Master_Init+2,w
  2592  0310  00A2               	movwf	___lldiv@divisor+2
  2593  0311  082D               	movf	??_I2C_Master_Init+1,w
  2594  0312  00A1               	movwf	___lldiv@divisor+1
  2595  0313  082C               	movf	??_I2C_Master_Init,w
  2596  0314  00A0               	movwf	___lldiv@divisor
  2597  0315  3001               	movlw	1
  2598  0316  00A7               	movwf	___lldiv@dividend+3
  2599  0317  3031               	movlw	49
  2600  0318  00A6               	movwf	___lldiv@dividend+2
  2601  0319  302D               	movlw	45
  2602  031A  00A5               	movwf	___lldiv@dividend+1
  2603  031B  3000               	movlw	0
  2604  031C  00A4               	movwf	___lldiv@dividend
  2605  031D  120A  118A  21E1   	fcall	___lldiv
  2606  0320  1283               	bcf	3,5	;RP0=0, select bank0
  2607  0321  1303               	bcf	3,6	;RP1=0, select bank0
  2608  0322  0820               	movf	?___lldiv,w
  2609  0323  3EFF               	addlw	255
  2610  0324  1683               	bsf	3,5	;RP0=1, select bank1
  2611  0325  1303               	bcf	3,6	;RP1=0, select bank1
  2612  0326  0093               	movwf	19	;volatile
  2613                           
  2614                           ;i2c.c: 10: SSPSTAT = 0;
  2615  0327  0194               	clrf	20	;volatile
  2616                           
  2617                           ;i2c.c: 11: TRISC3 = 1;
  2618  0328  1587               	bsf	7,3	;volatile
  2619                           
  2620                           ;i2c.c: 12: TRISC4 = 1;
  2621  0329  1607               	bsf	7,4	;volatile
  2622  032A  0008               	return
  2623  032B                     __end_of_I2C_Master_Init:	
  2624                           
  2625                           	psect	text21
  2626  01E1                     __ptext21:	
  2627 ;; *************** function ___lldiv *****************
  2628 ;; Defined at:
  2629 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  2630 ;; Parameters:    Size  Location     Type
  2631 ;;  divisor         4    0[BANK0 ] unsigned long 
  2632 ;;  dividend        4    4[BANK0 ] unsigned long 
  2633 ;; Auto vars:     Size  Location     Type
  2634 ;;  quotient        4    5[COMMON] unsigned long 
  2635 ;;  counter         1    9[COMMON] unsigned char 
  2636 ;; Return value:  Size  Location     Type
  2637 ;;                  4    0[BANK0 ] unsigned long 
  2638 ;; Registers used:
  2639 ;;		wreg, status,2, status,0
  2640 ;; Tracked objects:
  2641 ;;		On entry : 0/0
  2642 ;;		On exit  : 0/0
  2643 ;;		Unchanged: 0/0
  2644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2645 ;;      Params:         0       8       0       0       0
  2646 ;;      Locals:         5       0       0       0       0
  2647 ;;      Temps:          1       0       0       0       0
  2648 ;;      Totals:         6       8       0       0       0
  2649 ;;Total ram usage:       14 bytes
  2650 ;; Hardware stack levels used:    1
  2651 ;; Hardware stack levels required when called:    1
  2652 ;; This function calls:
  2653 ;;		Nothing
  2654 ;; This function is called by:
  2655 ;;		_I2C_Master_Init
  2656 ;; This function uses a non-reentrant model
  2657 ;;
  2658                           
  2659                           
  2660                           ;psect for function ___lldiv
  2661  01E1                     ___lldiv:	
  2662                           
  2663                           ;incstack = 0
  2664                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2665  01E1  3000               	movlw	0
  2666  01E2  00F8               	movwf	___lldiv@quotient+3
  2667  01E3  3000               	movlw	0
  2668  01E4  00F7               	movwf	___lldiv@quotient+2
  2669  01E5  3000               	movlw	0
  2670  01E6  00F6               	movwf	___lldiv@quotient+1
  2671  01E7  3000               	movlw	0
  2672  01E8  00F5               	movwf	___lldiv@quotient
  2673  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  2674  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  2675  01EB  0823               	movf	___lldiv@divisor+3,w
  2676  01EC  0422               	iorwf	___lldiv@divisor+2,w
  2677  01ED  0421               	iorwf	___lldiv@divisor+1,w
  2678  01EE  0420               	iorwf	___lldiv@divisor,w
  2679  01EF  1903               	skipnz
  2680  01F0  2A38               	goto	l977
  2681  01F1  01F9               	clrf	___lldiv@counter
  2682  01F2  0AF9               	incf	___lldiv@counter,f
  2683  01F3                     l963:	
  2684  01F3  1BA3               	btfsc	___lldiv@divisor+3,7
  2685  01F4  2A03               	goto	l965
  2686  01F5  3001               	movlw	1
  2687  01F6  00F4               	movwf	??___lldiv
  2688  01F7                     u445:	
  2689  01F7  1003               	clrc
  2690  01F8  0DA0               	rlf	___lldiv@divisor,f
  2691  01F9  0DA1               	rlf	___lldiv@divisor+1,f
  2692  01FA  0DA2               	rlf	___lldiv@divisor+2,f
  2693  01FB  0DA3               	rlf	___lldiv@divisor+3,f
  2694  01FC  0BF4               	decfsz	??___lldiv,f
  2695  01FD  29F7               	goto	u445
  2696  01FE  3001               	movlw	1
  2697  01FF  00F4               	movwf	??___lldiv
  2698  0200  0874               	movf	??___lldiv,w
  2699  0201  07F9               	addwf	___lldiv@counter,f
  2700  0202  29F3               	goto	l963
  2701  0203                     l965:	
  2702  0203  3001               	movlw	1
  2703  0204  00F4               	movwf	??___lldiv
  2704  0205                     u465:	
  2705  0205  1003               	clrc
  2706  0206  0DF5               	rlf	___lldiv@quotient,f
  2707  0207  0DF6               	rlf	___lldiv@quotient+1,f
  2708  0208  0DF7               	rlf	___lldiv@quotient+2,f
  2709  0209  0DF8               	rlf	___lldiv@quotient+3,f
  2710  020A  0BF4               	decfsz	??___lldiv,f
  2711  020B  2A05               	goto	u465
  2712  020C  0823               	movf	___lldiv@divisor+3,w
  2713  020D  0227               	subwf	___lldiv@dividend+3,w
  2714  020E  1D03               	skipz
  2715  020F  2A1A               	goto	u475
  2716  0210  0822               	movf	___lldiv@divisor+2,w
  2717  0211  0226               	subwf	___lldiv@dividend+2,w
  2718  0212  1D03               	skipz
  2719  0213  2A1A               	goto	u475
  2720  0214  0821               	movf	___lldiv@divisor+1,w
  2721  0215  0225               	subwf	___lldiv@dividend+1,w
  2722  0216  1D03               	skipz
  2723  0217  2A1A               	goto	u475
  2724  0218  0820               	movf	___lldiv@divisor,w
  2725  0219  0224               	subwf	___lldiv@dividend,w
  2726  021A                     u475:	
  2727  021A  1C03               	skipc
  2728  021B  2A2B               	goto	l973
  2729  021C  0820               	movf	___lldiv@divisor,w
  2730  021D  02A4               	subwf	___lldiv@dividend,f
  2731  021E  0821               	movf	___lldiv@divisor+1,w
  2732  021F  1C03               	skipc
  2733  0220  0F21               	incfsz	___lldiv@divisor+1,w
  2734  0221  02A5               	subwf	___lldiv@dividend+1,f
  2735  0222  0822               	movf	___lldiv@divisor+2,w
  2736  0223  1C03               	skipc
  2737  0224  0F22               	incfsz	___lldiv@divisor+2,w
  2738  0225  02A6               	subwf	___lldiv@dividend+2,f
  2739  0226  0823               	movf	___lldiv@divisor+3,w
  2740  0227  1C03               	skipc
  2741  0228  0F23               	incfsz	___lldiv@divisor+3,w
  2742  0229  02A7               	subwf	___lldiv@dividend+3,f
  2743  022A  1475               	bsf	___lldiv@quotient,0
  2744  022B                     l973:	
  2745  022B  3001               	movlw	1
  2746  022C                     u485:	
  2747  022C  1003               	clrc
  2748  022D  0CA3               	rrf	___lldiv@divisor+3,f
  2749  022E  0CA2               	rrf	___lldiv@divisor+2,f
  2750  022F  0CA1               	rrf	___lldiv@divisor+1,f
  2751  0230  0CA0               	rrf	___lldiv@divisor,f
  2752  0231  3EFF               	addlw	-1
  2753  0232  1D03               	skipz
  2754  0233  2A2C               	goto	u485
  2755  0234  3001               	movlw	1
  2756  0235  02F9               	subwf	___lldiv@counter,f
  2757  0236  1D03               	btfss	3,2
  2758  0237  2A03               	goto	l965
  2759  0238                     l977:	
  2760  0238  0878               	movf	___lldiv@quotient+3,w
  2761  0239  00A3               	movwf	?___lldiv+3
  2762  023A  0877               	movf	___lldiv@quotient+2,w
  2763  023B  00A2               	movwf	?___lldiv+2
  2764  023C  0876               	movf	___lldiv@quotient+1,w
  2765  023D  00A1               	movwf	?___lldiv+1
  2766  023E  0875               	movf	___lldiv@quotient,w
  2767  023F  00A0               	movwf	?___lldiv
  2768  0240  0008               	return
  2769  0241                     __end_of___lldiv:	
  2770                           
  2771                           	psect	text22
  2772  03FE                     __ptext22:	
  2773 ;; *************** function _isr *****************
  2774 ;; Defined at:
  2775 ;;		line 23 in file "interrupts.c"
  2776 ;; Parameters:    Size  Location     Type
  2777 ;;		None
  2778 ;; Auto vars:     Size  Location     Type
  2779 ;;		None
  2780 ;; Return value:  Size  Location     Type
  2781 ;;                  1    wreg      void 
  2782 ;; Registers used:
  2783 ;;		None
  2784 ;; Tracked objects:
  2785 ;;		On entry : 0/0
  2786 ;;		On exit  : 0/0
  2787 ;;		Unchanged: 0/0
  2788 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2789 ;;      Params:         0       0       0       0       0
  2790 ;;      Locals:         0       0       0       0       0
  2791 ;;      Temps:          4       0       0       0       0
  2792 ;;      Totals:         4       0       0       0       0
  2793 ;;Total ram usage:        4 bytes
  2794 ;; Hardware stack levels used:    1
  2795 ;; This function calls:
  2796 ;;		Nothing
  2797 ;; This function is called by:
  2798 ;;		Interrupt level 1
  2799 ;; This function uses a non-reentrant model
  2800 ;;
  2801                           
  2802                           
  2803                           ;psect for function _isr
  2804  03FE                     _isr:	
  2805  03FE  0873               	movf	??_isr+3,w
  2806  03FF  00FF               	movwf	127
  2807  0400  0872               	movf	??_isr+2,w
  2808  0401  008A               	movwf	10
  2809  0402  0871               	movf	??_isr+1,w
  2810  0403  0084               	movwf	4
  2811  0404  0E70               	swapf	??_isr^(0+-128),w
  2812  0405  0083               	movwf	3
  2813  0406  0EFE               	swapf	126,f
  2814  0407  0E7E               	swapf	126,w
  2815  0408  0009               	retfie
  2816  0409                     __end_of_isr:	
  2817  007E                     btemp	set	126	;btemp
  2818  007E                     wtemp0	set	126
  2819                           
  2820                           	psect	intentry
  2821  0004                     __pintentry:	
  2822                           ;incstack = 0
  2823                           ; Regs used in _isr: []
  2824                           
  2825  0004                     interrupt_function:	
  2826  007E                     saved_w	set	btemp
  2827  0004  00FE               	movwf	btemp
  2828  0005  0E03               	swapf	3,w
  2829  0006  00F0               	movwf	??_isr
  2830  0007  0804               	movf	4,w
  2831  0008  00F1               	movwf	??_isr+1
  2832  0009  080A               	movf	10,w
  2833  000A  00F2               	movwf	??_isr+2
  2834  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2835  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2836  000D  087F               	movf	btemp+1,w
  2837  000E  00F3               	movwf	??_isr+3
  2838  000F  120A  118A  2BFE   	ljmp	_isr


Data Sizes:
    Strings     11
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     24      34
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_I2C_Master_Read
    _main->_lcd_goto
    _lcd_putstr->_lcd_2ndline
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwmod
    _lcd_bcd->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_putstr->_lcd_putchar
    _lcd_bcd->___lwdiv
    _I2C_Master_Init->___lldiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0    6134
                                             20 BANK0      4     4      0
                    _I2C_Master_Init
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
                            _InitApp
                            _lcd_bcd
                           _lcd_goto
                     _lcd_initialize
                         _lcd_putstr
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    1206
                                              1 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2296
                                              3 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (4) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     583
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Write                                     2     0      2     446
                                              4 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Read                                      6     4      2     151
                                              4 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                              8 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              4 COMMON     6     6      0
                                              0 BANK0      8     0      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _I2C_Master_Read
     _I2C_Master_Wait
   _I2C_Master_Start
     _I2C_Master_Wait
   _I2C_Master_Stop
     _I2C_Master_Wait
   _I2C_Master_Write
     _I2C_Master_Wait
   _InitApp
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2C       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     18      22       5       42.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2C      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon May 21 04:39:28 2018

                        pc 0002               ?_lcd_putchar 0070                __CFG_CP$OFF 0000  
                       fsr 0004                        l161 0412                        l963 01F3  
                      l973 022B                        l965 0203                        l991 024B  
                      l977 0238                        l993 0259                        _GIE 005F  
                      l999 026F                        _RB4 0034                        _RB5 0035  
                      _PEN 048A                        u370 03FA               __CFG_CPD$OFF 0000  
                      u515 024E                        u445 01F7                        u605 037A  
                      u390 03EF                        u535 025A                        u615 0383  
                      u465 0205                        u545 0266                        u475 021A  
                      u635 0305                        u555 0270                        _SEN 0488  
                      u485 022C                        u670 03B5                        u585 0369  
                      u737 02C7                        u690 011E                        u747 0342  
                      u757 0350                        _isr 03FE                        fsr0 0004  
                      indf 0000               __CFG_FOSC$HS 0000          set_lcd_e@b_output 0074  
             __CFG_LVP$OFF 0000                       l1003 027A                       l1021 0382  
                     l1015 0366                       l1017 0374                       l1025 038D  
                     l1061 02A0                       l1119 01CB                       l1063 02A6  
                     l1065 02B4                       l1091 03B8                       l1067 0282  
                     l1155 0058                       ?_isr 0070                       STR_1 03C4  
                     _PEIE 005E                       _RCEN 048B                       _RSEN 0489  
             __CFG_WRT$OFF 0000                       _main 0025                       btemp 007E  
            __CFG_BOREN$ON 0000                       start 0012            __end_of_InitApp 043F  
                    ??_isr 0070           ?_I2C_Master_Init 0028           ?_I2C_Master_Read 0074  
         ?_I2C_Master_Wait 0070           ?_I2C_Master_Stop 0070                      ?_main 0070  
                    _ACKEN 048C                      _ACKDT 048D              __CFG_WDTE$OFF 0000  
          __end_of___lldiv 0241            __end_of___lwdiv 027F            __end_of___lwmod 0392  
                    _PORTA 0005                      _PORTB 0006                      _PORTC 0007  
                    _PORTD 0008                      _TRISA 0085                      _TRISB 0086  
                    _TRISC 0087                      _TRISD 0088                      _SSPIE 0463  
                    _SSPIF 0063       send_lcd_data@uc_data 0075              __CFG_PWRTE$ON 0000  
          __end_of_lcd_bcd 01E1                      pclath 000A                      status 0003  
                    wtemp0 007E            __initialization 0015          send_lcd_data@b_rs 0078  
             __end_of_main 0113       __size_of_lcd_2ndline 0009      __end_of_send_lcd_data 0360  
                   ??_main 007A          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0074  
       ??_I2C_Master_Start 0074         ??_I2C_Master_Write 0076                     _SSPADD 0093  
                   _TRISC3 043B                     _TRISC4 043C                     _SSPCON 0014  
                   _SSPBUF 0013                  ??_InitApp 0074           __end_of_lcd_goto 03DC  
                ??___lldiv 0074                  ??___lwdiv 0078                  ??___lwmod 0078  
                ??_lcd_bcd 0025       __size_of_lcd_putchar 000C                     saved_w 007E  
         ??_lcd_initialize 0020    __end_of__initialization 0021             __pcstackCOMMON 0070  
       __size_of_lcd_clear 0007                 __pbssBANK0 0038                 __pmaintext 0025  
               __pintentry 0004         __size_of_set_lcd_e 000B                    _SSPCON2 0091  
               _lcd_putstr 027F                  ?_lcd_goto 0070                    _SSPSTAT 0094  
               __stringtab 03BE              ?_set_lcd_data 0070                    _InitApp 043E  
        __end_of_lcd_clear 042A                    ___lldiv 01E1                    ___lwdiv 0241  
                  ___lwmod 0360                    __ptext1 027F                    __ptext2 0409  
                  __ptext3 02BB                    __ptext4 0423                    __ptext5 03CF  
                  __ptext6 0113                    __ptext7 03DC                    __ptext8 032B  
                  __ptext9 03E8                    _lcd_bcd 0113               __size_of_isr 000B  
 __size_of_I2C_Master_Init 0038   __size_of_I2C_Master_Read 002C   __size_of_I2C_Master_Wait 0009  
 __size_of_I2C_Master_Stop 0007                 ??_lcd_goto 0079       end_of_initialization 0021  
        lcd_bcd@ui_decimal 0029             ??_set_lcd_data 0074          __end_of_set_lcd_e 03FE  
__size_of_I2C_Master_Start 0007  __size_of_I2C_Master_Write 0008            ___lldiv@divisor 0020  
          ___lldiv@counter 0079                 _set_lcd_rs 03E8              ??_lcd_2ndline 0079  
         I2C_Master_Init@c 0028           I2C_Master_Read@a 0074                ?_lcd_putstr 0070  
   __size_of_send_lcd_data 0035              ??_lcd_putchar 0079          lcd_putchar@c_data 0020  
      __end_of_lcd_2ndline 0412        start_initialization 0015         set_lcd_rs@b_output 0074  
              __end_of_isr 0409       lcd_putstr@csz_string 0022        lcd_goto@uc_position 0020  
        ??_I2C_Master_Init 002C          ??_I2C_Master_Read 0076          ??_I2C_Master_Wait 0074  
        ??_I2C_Master_Stop 0074                ?_set_lcd_rs 0070        __size_of_lcd_putstr 003C  
            _send_lcd_data 032B       __end_of_set_lcd_data 043E        __end_of_lcd_putchar 03E8  
                ___latbits 0002              __pcstackBANK0 0020          __size_of_lcd_goto 000D  
                 ?_InitApp 0070           _I2C_Master_Start 0431           _I2C_Master_Write 041B  
  __size_of_lcd_initialize 0038           ___lwdiv@dividend 0076                _lcd_2ndline 0409  
                 ?___lldiv 0020                   ?___lwdiv 0074                   ?___lwmod 0074  
                _lcd_clear 0423             ?_send_lcd_data 0075                  __pstrings 03BE  
                 ?_lcd_bcd 0023        __size_of_set_lcd_rs 000B           ___lwdiv@quotient 0020  
      set_lcd_data@uc_data 0074          interrupt_function 0004                  _set_lcd_e 03F3  
         lcd_bcd@ui_number 0023                _lcd_putchar 03DC                 ?_lcd_clear 0070  
              __stringbase 03C3               ??_lcd_putstr 0021        I2C_Master_Read@temp 0078  
         __size_of_InitApp 0001                 ?_set_lcd_e 0070      __size_of_set_lcd_data 0006  
          ??_send_lcd_data 0076           __size_of___lldiv 0060           __size_of___lwdiv 003E  
       __end_of_lcd_putstr 02BB           __size_of___lwmod 0032         __end_of__stringtab 03C4  
         __size_of_lcd_bcd 00CE            _I2C_Master_Init 02F3            _I2C_Master_Read 0392  
          _I2C_Master_Wait 0412            _I2C_Master_Stop 042A            ___lwdiv@divisor 0074  
          ___lwdiv@counter 0022                   __ptext10 03F3                   __ptext11 0438  
                 __ptext20 02F3                   __ptext12 0360                   __ptext21 01E1  
                 __ptext13 0241                   __ptext22 03FE                   __ptext14 043E  
                 __ptext15 041B                   __ptext16 042A                   __ptext17 0431  
                 __ptext18 0392                   __ptext19 0412                   _lcd_goto 03CF  
            __size_of_main 00EE            lcd_bcd@uc_digit 0033               _set_lcd_data 0438  
           _lcd_initialize 02BB               ??_set_lcd_rs 0074                   main@add1 0034  
                 main@add2 0036                ??_lcd_clear 0079   __end_of_I2C_Master_Start 0438  
 __end_of_I2C_Master_Write 0423         __end_of_set_lcd_rs 03F3                   intlevel1 0000  
         ___lwmod@dividend 0076     __end_of_lcd_initialize 02F3           ___lldiv@dividend 0024  
                stringcode 03BE                ??_set_lcd_e 0074               ?_lcd_2ndline 0070  
  __end_of_I2C_Master_Init 032B    __end_of_I2C_Master_Read 03BE    __end_of_I2C_Master_Wait 041B  
  __end_of_I2C_Master_Stop 0431               lcd_bcd@F1134 0038           ___lldiv@quotient 0075  
        I2C_Master_Write@d 0074            ___lwmod@divisor 0074            ___lwmod@counter 0079  
                 stringdir 03BE                   stringtab 03BE            ?_lcd_initialize 0070  
