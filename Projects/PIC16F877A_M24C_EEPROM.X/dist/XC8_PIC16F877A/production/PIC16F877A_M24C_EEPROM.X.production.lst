

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri May 04 15:16:45 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2,group=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2,group=2
    26                           	psect	text18,local,class=CODE,merge=1,delta=2
    27                           	psect	text19,local,class=CODE,merge=1,delta=2
    28                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    29                           	dabs	1,0x7E,2
    30  0000                     
    31                           ; Version 1.45
    32                           ; Generated 16/11/2017 GMT
    33                           ; 
    34                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    35                           ; All rights reserved.
    36                           ; 
    37                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    38                           ; 
    39                           ; Redistribution and use in source and binary forms, with or without modification, are
    40                           ; permitted provided that the following conditions are met:
    41                           ; 
    42                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    43                           ;        conditions and the following disclaimer.
    44                           ; 
    45                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    46                           ;        of conditions and the following disclaimer in the documentation and/or other
    47                           ;        materials provided with the distribution.
    48                           ; 
    49                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    50                           ;        software without specific prior written permission.
    51                           ; 
    52                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    53                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    54                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    55                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    56                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    57                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    58                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    59                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    60                           ; 
    61                           ; 
    62                           ; Code-generator required, PIC16F877A Definitions
    63                           ; 
    64                           ; SFR Addresses
    65  0000                     	;# 
    66  0001                     	;# 
    67  0002                     	;# 
    68  0003                     	;# 
    69  0004                     	;# 
    70  0005                     	;# 
    71  0006                     	;# 
    72  0007                     	;# 
    73  0008                     	;# 
    74  0009                     	;# 
    75  000A                     	;# 
    76  000B                     	;# 
    77  000C                     	;# 
    78  000D                     	;# 
    79  000E                     	;# 
    80  000E                     	;# 
    81  000F                     	;# 
    82  0010                     	;# 
    83  0011                     	;# 
    84  0012                     	;# 
    85  0013                     	;# 
    86  0014                     	;# 
    87  0015                     	;# 
    88  0015                     	;# 
    89  0016                     	;# 
    90  0017                     	;# 
    91  0018                     	;# 
    92  0019                     	;# 
    93  001A                     	;# 
    94  001B                     	;# 
    95  001B                     	;# 
    96  001C                     	;# 
    97  001D                     	;# 
    98  001E                     	;# 
    99  001F                     	;# 
   100  0081                     	;# 
   101  0085                     	;# 
   102  0086                     	;# 
   103  0087                     	;# 
   104  0088                     	;# 
   105  0089                     	;# 
   106  008C                     	;# 
   107  008D                     	;# 
   108  008E                     	;# 
   109  0091                     	;# 
   110  0092                     	;# 
   111  0093                     	;# 
   112  0094                     	;# 
   113  0098                     	;# 
   114  0099                     	;# 
   115  009C                     	;# 
   116  009D                     	;# 
   117  009E                     	;# 
   118  009F                     	;# 
   119  010C                     	;# 
   120  010D                     	;# 
   121  010E                     	;# 
   122  010F                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  0091                     	;# 
   170  0092                     	;# 
   171  0093                     	;# 
   172  0094                     	;# 
   173  0098                     	;# 
   174  0099                     	;# 
   175  009C                     	;# 
   176  009D                     	;# 
   177  009E                     	;# 
   178  009F                     	;# 
   179  010C                     	;# 
   180  010D                     	;# 
   181  010E                     	;# 
   182  010F                     	;# 
   183  018C                     	;# 
   184  018D                     	;# 
   185  0000                     	;# 
   186  0001                     	;# 
   187  0002                     	;# 
   188  0003                     	;# 
   189  0004                     	;# 
   190  0005                     	;# 
   191  0006                     	;# 
   192  0007                     	;# 
   193  0008                     	;# 
   194  0009                     	;# 
   195  000A                     	;# 
   196  000B                     	;# 
   197  000C                     	;# 
   198  000D                     	;# 
   199  000E                     	;# 
   200  000E                     	;# 
   201  000F                     	;# 
   202  0010                     	;# 
   203  0011                     	;# 
   204  0012                     	;# 
   205  0013                     	;# 
   206  0014                     	;# 
   207  0015                     	;# 
   208  0015                     	;# 
   209  0016                     	;# 
   210  0017                     	;# 
   211  0018                     	;# 
   212  0019                     	;# 
   213  001A                     	;# 
   214  001B                     	;# 
   215  001B                     	;# 
   216  001C                     	;# 
   217  001D                     	;# 
   218  001E                     	;# 
   219  001F                     	;# 
   220  0081                     	;# 
   221  0085                     	;# 
   222  0086                     	;# 
   223  0087                     	;# 
   224  0088                     	;# 
   225  0089                     	;# 
   226  008C                     	;# 
   227  008D                     	;# 
   228  008E                     	;# 
   229  0091                     	;# 
   230  0092                     	;# 
   231  0093                     	;# 
   232  0094                     	;# 
   233  0098                     	;# 
   234  0099                     	;# 
   235  009C                     	;# 
   236  009D                     	;# 
   237  009E                     	;# 
   238  009F                     	;# 
   239  010C                     	;# 
   240  010D                     	;# 
   241  010E                     	;# 
   242  010F                     	;# 
   243  018C                     	;# 
   244  018D                     	;# 
   245  0000                     	;# 
   246  0001                     	;# 
   247  0002                     	;# 
   248  0003                     	;# 
   249  0004                     	;# 
   250  0005                     	;# 
   251  0006                     	;# 
   252  0007                     	;# 
   253  0008                     	;# 
   254  0009                     	;# 
   255  000A                     	;# 
   256  000B                     	;# 
   257  000C                     	;# 
   258  000D                     	;# 
   259  000E                     	;# 
   260  000E                     	;# 
   261  000F                     	;# 
   262  0010                     	;# 
   263  0011                     	;# 
   264  0012                     	;# 
   265  0013                     	;# 
   266  0014                     	;# 
   267  0015                     	;# 
   268  0015                     	;# 
   269  0016                     	;# 
   270  0017                     	;# 
   271  0018                     	;# 
   272  0019                     	;# 
   273  001A                     	;# 
   274  001B                     	;# 
   275  001B                     	;# 
   276  001C                     	;# 
   277  001D                     	;# 
   278  001E                     	;# 
   279  001F                     	;# 
   280  0081                     	;# 
   281  0085                     	;# 
   282  0086                     	;# 
   283  0087                     	;# 
   284  0088                     	;# 
   285  0089                     	;# 
   286  008C                     	;# 
   287  008D                     	;# 
   288  008E                     	;# 
   289  0091                     	;# 
   290  0092                     	;# 
   291  0093                     	;# 
   292  0094                     	;# 
   293  0098                     	;# 
   294  0099                     	;# 
   295  009C                     	;# 
   296  009D                     	;# 
   297  009E                     	;# 
   298  009F                     	;# 
   299  010C                     	;# 
   300  010D                     	;# 
   301  010E                     	;# 
   302  010F                     	;# 
   303  018C                     	;# 
   304  018D                     	;# 
   305  0000                     	;# 
   306  0001                     	;# 
   307  0002                     	;# 
   308  0003                     	;# 
   309  0004                     	;# 
   310  0005                     	;# 
   311  0006                     	;# 
   312  0007                     	;# 
   313  0008                     	;# 
   314  0009                     	;# 
   315  000A                     	;# 
   316  000B                     	;# 
   317  000C                     	;# 
   318  000D                     	;# 
   319  000E                     	;# 
   320  000E                     	;# 
   321  000F                     	;# 
   322  0010                     	;# 
   323  0011                     	;# 
   324  0012                     	;# 
   325  0013                     	;# 
   326  0014                     	;# 
   327  0015                     	;# 
   328  0015                     	;# 
   329  0016                     	;# 
   330  0017                     	;# 
   331  0018                     	;# 
   332  0019                     	;# 
   333  001A                     	;# 
   334  001B                     	;# 
   335  001B                     	;# 
   336  001C                     	;# 
   337  001D                     	;# 
   338  001E                     	;# 
   339  001F                     	;# 
   340  0081                     	;# 
   341  0085                     	;# 
   342  0086                     	;# 
   343  0087                     	;# 
   344  0088                     	;# 
   345  0089                     	;# 
   346  008C                     	;# 
   347  008D                     	;# 
   348  008E                     	;# 
   349  0091                     	;# 
   350  0092                     	;# 
   351  0093                     	;# 
   352  0094                     	;# 
   353  0098                     	;# 
   354  0099                     	;# 
   355  009C                     	;# 
   356  009D                     	;# 
   357  009E                     	;# 
   358  009F                     	;# 
   359  010C                     	;# 
   360  010D                     	;# 
   361  010E                     	;# 
   362  010F                     	;# 
   363  018C                     	;# 
   364  018D                     	;# 
   365  0000                     	;# 
   366  0001                     	;# 
   367  0002                     	;# 
   368  0003                     	;# 
   369  0004                     	;# 
   370  0005                     	;# 
   371  0006                     	;# 
   372  0007                     	;# 
   373  0008                     	;# 
   374  0009                     	;# 
   375  000A                     	;# 
   376  000B                     	;# 
   377  000C                     	;# 
   378  000D                     	;# 
   379  000E                     	;# 
   380  000E                     	;# 
   381  000F                     	;# 
   382  0010                     	;# 
   383  0011                     	;# 
   384  0012                     	;# 
   385  0013                     	;# 
   386  0014                     	;# 
   387  0015                     	;# 
   388  0015                     	;# 
   389  0016                     	;# 
   390  0017                     	;# 
   391  0018                     	;# 
   392  0019                     	;# 
   393  001A                     	;# 
   394  001B                     	;# 
   395  001B                     	;# 
   396  001C                     	;# 
   397  001D                     	;# 
   398  001E                     	;# 
   399  001F                     	;# 
   400  0081                     	;# 
   401  0085                     	;# 
   402  0086                     	;# 
   403  0087                     	;# 
   404  0088                     	;# 
   405  0089                     	;# 
   406  008C                     	;# 
   407  008D                     	;# 
   408  008E                     	;# 
   409  0091                     	;# 
   410  0092                     	;# 
   411  0093                     	;# 
   412  0094                     	;# 
   413  0098                     	;# 
   414  0099                     	;# 
   415  009C                     	;# 
   416  009D                     	;# 
   417  009E                     	;# 
   418  009F                     	;# 
   419  010C                     	;# 
   420  010D                     	;# 
   421  010E                     	;# 
   422  010F                     	;# 
   423  018C                     	;# 
   424  018D                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000D                     	;# 
   439  000E                     	;# 
   440  000E                     	;# 
   441  000F                     	;# 
   442  0010                     	;# 
   443  0011                     	;# 
   444  0012                     	;# 
   445  0013                     	;# 
   446  0014                     	;# 
   447  0015                     	;# 
   448  0015                     	;# 
   449  0016                     	;# 
   450  0017                     	;# 
   451  0018                     	;# 
   452  0019                     	;# 
   453  001A                     	;# 
   454  001B                     	;# 
   455  001B                     	;# 
   456  001C                     	;# 
   457  001D                     	;# 
   458  001E                     	;# 
   459  001F                     	;# 
   460  0081                     	;# 
   461  0085                     	;# 
   462  0086                     	;# 
   463  0087                     	;# 
   464  0088                     	;# 
   465  0089                     	;# 
   466  008C                     	;# 
   467  008D                     	;# 
   468  008E                     	;# 
   469  0091                     	;# 
   470  0092                     	;# 
   471  0093                     	;# 
   472  0094                     	;# 
   473  0098                     	;# 
   474  0099                     	;# 
   475  009C                     	;# 
   476  009D                     	;# 
   477  009E                     	;# 
   478  009F                     	;# 
   479  010C                     	;# 
   480  010D                     	;# 
   481  010E                     	;# 
   482  010F                     	;# 
   483  018C                     	;# 
   484  018D                     	;# 
   485  0000                     	;# 
   486  0001                     	;# 
   487  0002                     	;# 
   488  0003                     	;# 
   489  0004                     	;# 
   490  0005                     	;# 
   491  0006                     	;# 
   492  0007                     	;# 
   493  0008                     	;# 
   494  0009                     	;# 
   495  000A                     	;# 
   496  000B                     	;# 
   497  000C                     	;# 
   498  000D                     	;# 
   499  000E                     	;# 
   500  000E                     	;# 
   501  000F                     	;# 
   502  0010                     	;# 
   503  0011                     	;# 
   504  0012                     	;# 
   505  0013                     	;# 
   506  0014                     	;# 
   507  0015                     	;# 
   508  0015                     	;# 
   509  0016                     	;# 
   510  0017                     	;# 
   511  0018                     	;# 
   512  0019                     	;# 
   513  001A                     	;# 
   514  001B                     	;# 
   515  001B                     	;# 
   516  001C                     	;# 
   517  001D                     	;# 
   518  001E                     	;# 
   519  001F                     	;# 
   520  0081                     	;# 
   521  0085                     	;# 
   522  0086                     	;# 
   523  0087                     	;# 
   524  0088                     	;# 
   525  0089                     	;# 
   526  008C                     	;# 
   527  008D                     	;# 
   528  008E                     	;# 
   529  0091                     	;# 
   530  0092                     	;# 
   531  0093                     	;# 
   532  0094                     	;# 
   533  0098                     	;# 
   534  0099                     	;# 
   535  009C                     	;# 
   536  009D                     	;# 
   537  009E                     	;# 
   538  009F                     	;# 
   539  010C                     	;# 
   540  010D                     	;# 
   541  010E                     	;# 
   542  010F                     	;# 
   543  018C                     	;# 
   544  018D                     	;# 
   545  0000                     	;# 
   546  0001                     	;# 
   547  0002                     	;# 
   548  0003                     	;# 
   549  0004                     	;# 
   550  0005                     	;# 
   551  0006                     	;# 
   552  0007                     	;# 
   553  0008                     	;# 
   554  0009                     	;# 
   555  000A                     	;# 
   556  000B                     	;# 
   557  000C                     	;# 
   558  000D                     	;# 
   559  000E                     	;# 
   560  000E                     	;# 
   561  000F                     	;# 
   562  0010                     	;# 
   563  0011                     	;# 
   564  0012                     	;# 
   565  0013                     	;# 
   566  0014                     	;# 
   567  0015                     	;# 
   568  0015                     	;# 
   569  0016                     	;# 
   570  0017                     	;# 
   571  0018                     	;# 
   572  0019                     	;# 
   573  001A                     	;# 
   574  001B                     	;# 
   575  001B                     	;# 
   576  001C                     	;# 
   577  001D                     	;# 
   578  001E                     	;# 
   579  001F                     	;# 
   580  0081                     	;# 
   581  0085                     	;# 
   582  0086                     	;# 
   583  0087                     	;# 
   584  0088                     	;# 
   585  0089                     	;# 
   586  008C                     	;# 
   587  008D                     	;# 
   588  008E                     	;# 
   589  0091                     	;# 
   590  0092                     	;# 
   591  0093                     	;# 
   592  0094                     	;# 
   593  0098                     	;# 
   594  0099                     	;# 
   595  009C                     	;# 
   596  009D                     	;# 
   597  009E                     	;# 
   598  009F                     	;# 
   599  010C                     	;# 
   600  010D                     	;# 
   601  010E                     	;# 
   602  010F                     	;# 
   603  018C                     	;# 
   604  018D                     	;# 
   605  0013                     _SSPBUF	set	19
   606  0014                     _SSPCON	set	20
   607  001E                     _ADRESH	set	30
   608  0008                     _PORTD	set	8
   609  0006                     _PORTB	set	6
   610  0005                     _PORTA	set	5
   611  0034                     _RB4	set	52
   612  0035                     _RB5	set	53
   613  00FA                     _GO_nDONE	set	250
   614  00FB                     _CHS0	set	251
   615  00FC                     _CHS1	set	252
   616  00FD                     _CHS2	set	253
   617  00F8                     _ADON	set	248
   618  00FE                     _ADCS0	set	254
   619  00FF                     _ADCS1	set	255
   620  0094                     _SSPSTAT	set	148
   621  0093                     _SSPADD	set	147
   622  0091                     _SSPCON2	set	145
   623  009E                     _ADRESL	set	158
   624  0088                     _TRISD	set	136
   625  0086                     _TRISB	set	134
   626  0085                     _TRISA	set	133
   627  048C                     _ACKEN	set	1164
   628  048D                     _ACKDT	set	1165
   629  048B                     _RCEN	set	1163
   630  048A                     _PEN	set	1162
   631  0489                     _RSEN	set	1161
   632  0488                     _SEN	set	1160
   633  043C                     _TRISC4	set	1084
   634  043B                     _TRISC3	set	1083
   635  04F8                     _PCFG0	set	1272
   636  04F9                     _PCFG1	set	1273
   637  04FA                     _PCFG2	set	1274
   638  04FB                     _PCFG3	set	1275
   639  04FF                     _ADFM	set	1279
   640                           
   641                           ; #config settings
   642  0000                     
   643                           	psect	cinit
   644  07F0                     start_initialization:	
   645  07F0                     __initialization:	
   646                           
   647                           ; Clear objects allocated to BANK0
   648  07F0  1283               	bcf	3,5	;RP0=0, select bank0
   649  07F1  1303               	bcf	3,6	;RP1=0, select bank0
   650  07F2  01B3               	clrf	__pbssBANK0& (0+127)
   651  07F3  01B4               	clrf	(__pbssBANK0+1)& (0+127)
   652  07F4  01B5               	clrf	(__pbssBANK0+2)& (0+127)
   653  07F5  01B6               	clrf	(__pbssBANK0+3)& (0+127)
   654  07F6  01B7               	clrf	(__pbssBANK0+4)& (0+127)
   655  07F7  01B8               	clrf	(__pbssBANK0+5)& (0+127)
   656  07F8  01B9               	clrf	(__pbssBANK0+6)& (0+127)
   657  07F9  01BA               	clrf	(__pbssBANK0+7)& (0+127)
   658  07FA  01BB               	clrf	(__pbssBANK0+8)& (0+127)
   659  07FB  01BC               	clrf	(__pbssBANK0+9)& (0+127)
   660  07FC                     end_of_initialization:	
   661                           ;End of C runtime variable initialization code
   662                           
   663  07FC                     __end_of__initialization:	
   664  07FC  0183               	clrf	3
   665  07FD  120A  118A  2E0D   	ljmp	_main	;jump to C main() function
   666                           
   667                           	psect	bssBANK0
   668  0033                     __pbssBANK0:	
   669  0033                     lcd_bcd@F1134:	
   670  0033                     	ds	10
   671                           
   672                           	psect	cstackCOMMON
   673  0070                     __pcstackCOMMON:	
   674  0070                     ?_InitApp:	
   675  0070                     ??_InitApp:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?_lcd_initialize:	
   679                           ; 1 bytes @ 0x0
   680                           
   681  0070                     ?_lcd_goto:	
   682                           ; 1 bytes @ 0x0
   683                           
   684  0070                     ?_set_lcd_e:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     ??_set_lcd_e:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ?_lcd_clear:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ?_set_lcd_rs:	
   694                           ; 1 bytes @ 0x0
   695                           
   696  0070                     ??_set_lcd_rs:	
   697                           ; 1 bytes @ 0x0
   698                           
   699  0070                     ?_set_lcd_data:	
   700                           ; 1 bytes @ 0x0
   701                           
   702  0070                     ??_set_lcd_data:	
   703                           ; 1 bytes @ 0x0
   704                           
   705  0070                     ?_main:	
   706                           ; 1 bytes @ 0x0
   707                           
   708  0070                     ?_lcd_putchar:	
   709                           ; 1 bytes @ 0x0
   710                           
   711  0070                     ?_I2C_Master_Wait:	
   712                           ; 1 bytes @ 0x0
   713                           
   714  0070                     ??_I2C_Master_Wait:	
   715                           ; 1 bytes @ 0x0
   716                           
   717  0070                     ?_I2C_Master_Start:	
   718                           ; 1 bytes @ 0x0
   719                           
   720  0070                     ??_I2C_Master_Start:	
   721                           ; 1 bytes @ 0x0
   722                           
   723  0070                     ?_I2C_Master_Stop:	
   724                           ; 1 bytes @ 0x0
   725                           
   726  0070                     ??_I2C_Master_Stop:	
   727                           ; 1 bytes @ 0x0
   728                           
   729  0070                     ?_I2C_Master_Write:	
   730                           ; 1 bytes @ 0x0
   731                           
   732  0070                     ?_I2C_Master_Read:	
   733                           ; 1 bytes @ 0x0
   734                           
   735  0070                     ?___lwdiv:	
   736                           ; 2 bytes @ 0x0
   737                           
   738  0070                     ?___lwmod:	
   739                           ; 2 bytes @ 0x0
   740                           
   741  0070                     ?___lldiv:	
   742                           ; 2 bytes @ 0x0
   743                           
   744  0070                     set_lcd_e@b_output:	
   745                           ; 4 bytes @ 0x0
   746                           
   747  0070                     set_lcd_rs@b_output:	
   748                           ; 1 bytes @ 0x0
   749                           
   750  0070                     set_lcd_data@uc_data:	
   751                           ; 1 bytes @ 0x0
   752                           
   753  0070                     I2C_Master_Write@d:	
   754                           ; 1 bytes @ 0x0
   755                           
   756  0070                     I2C_Master_Read@a:	
   757                           ; 2 bytes @ 0x0
   758                           
   759  0070                     ___lwdiv@divisor:	
   760                           ; 2 bytes @ 0x0
   761                           
   762  0070                     ___lwmod@divisor:	
   763                           ; 2 bytes @ 0x0
   764                           
   765  0070                     ___lldiv@divisor:	
   766                           ; 2 bytes @ 0x0
   767                           
   768                           
   769                           ; 4 bytes @ 0x0
   770  0070                     	ds	1
   771  0071                     ?_send_lcd_data:	
   772  0071                     send_lcd_data@uc_data:	
   773                           ; 1 bytes @ 0x1
   774                           
   775                           
   776                           ; 1 bytes @ 0x1
   777  0071                     	ds	1
   778  0072                     ??_send_lcd_data:	
   779  0072                     ??_I2C_Master_Write:	
   780                           ; 1 bytes @ 0x2
   781                           
   782  0072                     ??_I2C_Master_Read:	
   783                           ; 1 bytes @ 0x2
   784                           
   785  0072                     ___lwdiv@dividend:	
   786                           ; 1 bytes @ 0x2
   787                           
   788  0072                     ___lwmod@dividend:	
   789                           ; 2 bytes @ 0x2
   790                           
   791                           
   792                           ; 2 bytes @ 0x2
   793  0072                     	ds	2
   794  0074                     ??___lwdiv:	
   795  0074                     ??___lwmod:	
   796                           ; 1 bytes @ 0x4
   797                           
   798  0074                     send_lcd_data@b_rs:	
   799                           ; 1 bytes @ 0x4
   800                           
   801  0074                     I2C_Master_Read@temp:	
   802                           ; 1 bytes @ 0x4
   803                           
   804  0074                     ___lldiv@dividend:	
   805                           ; 2 bytes @ 0x4
   806                           
   807                           
   808                           ; 4 bytes @ 0x4
   809  0074                     	ds	1
   810  0075                     ??_lcd_initialize:	
   811  0075                     ??_lcd_goto:	
   812                           ; 1 bytes @ 0x5
   813                           
   814  0075                     ??_lcd_clear:	
   815                           ; 1 bytes @ 0x5
   816                           
   817  0075                     ??_lcd_putchar:	
   818                           ; 1 bytes @ 0x5
   819                           
   820  0075                     ___lwmod@counter:	
   821                           ; 1 bytes @ 0x5
   822                           
   823  0075                     ___lwdiv@quotient:	
   824                           ; 1 bytes @ 0x5
   825                           
   826                           
   827                           ; 2 bytes @ 0x5
   828  0075                     	ds	1
   829  0076                     ?_romRead:	
   830  0076                     lcd_goto@uc_position:	
   831                           ; 2 bytes @ 0x6
   832                           
   833  0076                     lcd_putchar@c_data:	
   834                           ; 1 bytes @ 0x6
   835                           
   836  0076                     romRead@addr:	
   837                           ; 1 bytes @ 0x6
   838                           
   839                           
   840                           ; 2 bytes @ 0x6
   841  0076                     	ds	1
   842  0077                     ___lwdiv@counter:	
   843                           
   844                           ; 1 bytes @ 0x7
   845  0077                     	ds	1
   846  0078                     ??_romRead:	
   847  0078                     ??___lldiv:	
   848                           ; 1 bytes @ 0x8
   849                           
   850                           
   851                           ; 1 bytes @ 0x8
   852  0078                     	ds	1
   853  0079                     ___lldiv@quotient:	
   854                           
   855                           ; 4 bytes @ 0x9
   856  0079                     	ds	1
   857  007A                     romRead@temp:	
   858                           
   859                           ; 1 bytes @ 0xA
   860  007A                     	ds	1
   861  007B                     romRead@opcode:	
   862                           
   863                           ; 1 bytes @ 0xB
   864  007B                     	ds	1
   865  007C                     romRead@opcodeRead:	
   866                           
   867                           ; 1 bytes @ 0xC
   868  007C                     	ds	1
   869  007D                     romRead@addrLSB:	
   870  007D                     ___lldiv@counter:	
   871                           ; 1 bytes @ 0xD
   872                           
   873                           
   874                           ; 1 bytes @ 0xD
   875  007D                     	ds	1
   876  007E                     ??_main:	
   877                           
   878                           	psect	cstackBANK0
   879  0020                     __pcstackBANK0:	
   880                           ; 1 bytes @ 0xE
   881                           
   882  0020                     ?_I2C_Master_Init:	
   883  0020                     ?_lcd_bcd:	
   884                           ; 1 bytes @ 0x0
   885                           
   886  0020                     lcd_bcd@ui_number:	
   887                           ; 1 bytes @ 0x0
   888                           
   889  0020                     I2C_Master_Init@c:	
   890                           ; 2 bytes @ 0x0
   891                           
   892                           
   893                           ; 4 bytes @ 0x0
   894  0020                     	ds	2
   895  0022                     ??_lcd_bcd:	
   896                           
   897                           ; 1 bytes @ 0x2
   898  0022                     	ds	2
   899  0024                     ??_I2C_Master_Init:	
   900                           
   901                           ; 1 bytes @ 0x4
   902  0024                     	ds	2
   903  0026                     lcd_bcd@ui_decimal:	
   904                           
   905                           ; 10 bytes @ 0x6
   906  0026                     	ds	10
   907  0030                     lcd_bcd@uc_digit:	
   908                           
   909                           ; 1 bytes @ 0x10
   910  0030                     	ds	1
   911  0031                     main@add:	
   912                           
   913                           ; 2 bytes @ 0x11
   914  0031                     	ds	2
   915                           
   916                           	psect	maintext
   917  060D                     __pmaintext:	
   918 ;;
   919 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   920 ;;
   921 ;; *************** function _main *****************
   922 ;; Defined at:
   923 ;;		line 22 in file "main.c"
   924 ;; Parameters:    Size  Location     Type
   925 ;;		None
   926 ;; Auto vars:     Size  Location     Type
   927 ;;  add             2   17[BANK0 ] unsigned int 
   928 ;; Return value:  Size  Location     Type
   929 ;;                  1    wreg      void 
   930 ;; Registers used:
   931 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   932 ;; Tracked objects:
   933 ;;		On entry : B00/0
   934 ;;		On exit  : 0/0
   935 ;;		Unchanged: 0/0
   936 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   937 ;;      Params:         0       0       0       0       0
   938 ;;      Locals:         0       2       0       0       0
   939 ;;      Temps:          0       0       0       0       0
   940 ;;      Totals:         0       2       0       0       0
   941 ;;Total ram usage:        2 bytes
   942 ;; Hardware stack levels required when called:    4
   943 ;; This function calls:
   944 ;;		_I2C_Master_Init
   945 ;;		_InitApp
   946 ;;		_lcd_bcd
   947 ;;		_lcd_goto
   948 ;;		_lcd_initialize
   949 ;;		_romRead
   950 ;; This function is called by:
   951 ;;		Startup code after reset
   952 ;; This function uses a non-reentrant model
   953 ;;
   954                           
   955                           
   956                           ;psect for function _main
   957  060D                     _main:	
   958                           
   959                           ;main.c: 25: InitApp();
   960                           
   961                           ;incstack = 0
   962                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   963  060D  120A  118A  247F  120A  118A  	fcall	_InitApp
   964                           
   965                           ;main.c: 27: PORTA = 0;
   966  0612  1283               	bcf	3,5	;RP0=0, select bank0
   967  0613  1303               	bcf	3,6	;RP1=0, select bank0
   968  0614  0185               	clrf	5	;volatile
   969                           
   970                           ;main.c: 28: PORTB = 0;
   971  0615  0186               	clrf	6	;volatile
   972                           
   973                           ;main.c: 30: PORTD = 0;
   974  0616  0188               	clrf	8	;volatile
   975                           
   976                           ;main.c: 32: TRISA = 0b11111111;
   977  0617  30FF               	movlw	255
   978  0618  1683               	bsf	3,5	;RP0=1, select bank1
   979  0619  1303               	bcf	3,6	;RP1=0, select bank1
   980  061A  0085               	movwf	5	;volatile
   981                           
   982                           ;main.c: 33: TRISB = 0b00000011;
   983  061B  3003               	movlw	3
   984  061C  0086               	movwf	6	;volatile
   985                           
   986                           ;main.c: 35: TRISD = 0b00000000;
   987  061D  0188               	clrf	8	;volatile
   988                           
   989                           ;main.c: 37: lcd_initialize();
   990  061E  120A  118A  2503  120A  118A  	fcall	_lcd_initialize
   991                           
   992                           ;main.c: 40: I2C_Master_Init(400000);
   993  0623  3000               	movlw	0
   994  0624  1283               	bcf	3,5	;RP0=0, select bank0
   995  0625  1303               	bcf	3,6	;RP1=0, select bank0
   996  0626  00A3               	movwf	I2C_Master_Init@c+3
   997  0627  3006               	movlw	6
   998  0628  00A2               	movwf	I2C_Master_Init@c+2
   999  0629  301A               	movlw	26
  1000  062A  00A1               	movwf	I2C_Master_Init@c+1
  1001  062B  3080               	movlw	128
  1002  062C  00A0               	movwf	I2C_Master_Init@c
  1003  062D  120A  118A  259B  120A  118A  	fcall	_I2C_Master_Init
  1004                           
  1005                           ;main.c: 42: unsigned int add = 0;
  1006  0632  1283               	bcf	3,5	;RP0=0, select bank0
  1007  0633  1303               	bcf	3,6	;RP1=0, select bank0
  1008  0634  01B1               	clrf	main@add
  1009  0635  01B2               	clrf	main@add+1
  1010  0636                     l1218:	
  1011                           ;main.c: 50: while(1)
  1012                           
  1013                           
  1014                           ;main.c: 51: {
  1015                           ;main.c: 52: lcd_goto(0x00);
  1016  0636  3000               	movlw	0
  1017  0637  120A  118A  24CC  120A  118A  	fcall	_lcd_goto
  1018                           
  1019                           ;main.c: 53: lcd_bcd(3,romRead(169));
  1020  063C  30A9               	movlw	169
  1021  063D  00F6               	movwf	romRead@addr
  1022  063E  3000               	movlw	0
  1023  063F  00F7               	movwf	romRead@addr+1
  1024  0640  120A  118A  26B0  120A  118A  	fcall	_romRead
  1025  0645  0877               	movf	?_romRead+1,w
  1026  0646  1283               	bcf	3,5	;RP0=0, select bank0
  1027  0647  1303               	bcf	3,6	;RP1=0, select bank0
  1028  0648  00A1               	movwf	lcd_bcd@ui_number+1
  1029  0649  0876               	movf	?_romRead,w
  1030  064A  00A0               	movwf	lcd_bcd@ui_number
  1031  064B  3003               	movlw	3
  1032  064C  120A  118A  2722  120A  118A  	fcall	_lcd_bcd
  1033  0651  2E36               	goto	l1218
  1034  0652                     __end_of_main:	
  1035                           
  1036                           	psect	text1
  1037  06B0                     __ptext1:	
  1038 ;; *************** function _romRead *****************
  1039 ;; Defined at:
  1040 ;;		line 30 in file "M24C04.c"
  1041 ;; Parameters:    Size  Location     Type
  1042 ;;  addr            2    6[COMMON] unsigned short 
  1043 ;; Auto vars:     Size  Location     Type
  1044 ;;  addrLSB         1   13[COMMON] unsigned char 
  1045 ;;  opcodeRead      1   12[COMMON] unsigned char 
  1046 ;;  opcode          1   11[COMMON] unsigned char 
  1047 ;;  temp            1   10[COMMON] unsigned char 
  1048 ;; Return value:  Size  Location     Type
  1049 ;;                  2    6[COMMON] unsigned short 
  1050 ;; Registers used:
  1051 ;;		wreg, status,2, status,0, pclath, cstack
  1052 ;; Tracked objects:
  1053 ;;		On entry : 0/0
  1054 ;;		On exit  : 0/0
  1055 ;;		Unchanged: 0/0
  1056 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1057 ;;      Params:         2       0       0       0       0
  1058 ;;      Locals:         4       0       0       0       0
  1059 ;;      Temps:          2       0       0       0       0
  1060 ;;      Totals:         8       0       0       0       0
  1061 ;;Total ram usage:        8 bytes
  1062 ;; Hardware stack levels used:    1
  1063 ;; Hardware stack levels required when called:    2
  1064 ;; This function calls:
  1065 ;;		_I2C_Master_Read
  1066 ;;		_I2C_Master_Start
  1067 ;;		_I2C_Master_Stop
  1068 ;;		_I2C_Master_Write
  1069 ;; This function is called by:
  1070 ;;		_main
  1071 ;; This function uses a non-reentrant model
  1072 ;;
  1073                           
  1074                           
  1075                           ;psect for function _romRead
  1076  06B0                     _romRead:	
  1077                           
  1078                           ;M24C04.c: 32: unsigned char addrLSB = 0;
  1079                           
  1080                           ;incstack = 0
  1081                           ; Regs used in _romRead: [wreg+status,2+status,0+pclath+cstack]
  1082  06B0  01FD               	clrf	romRead@addrLSB
  1083                           
  1084                           ;M24C04.c: 33: unsigned char opcode;
  1085                           ;M24C04.c: 34: unsigned char opcodeRead;
  1086                           ;M24C04.c: 35: unsigned char temp;
  1087                           ;M24C04.c: 37: if(addr >= 256 && addr <= 511)
  1088  06B1  3001               	movlw	1
  1089  06B2  0277               	subwf	romRead@addr+1,w
  1090  06B3  3000               	movlw	0
  1091  06B4  1903               	skipnz
  1092  06B5  0276               	subwf	romRead@addr,w
  1093  06B6  1C03               	skipc
  1094  06B7  2EC5               	goto	l1142
  1095  06B8  3002               	movlw	2
  1096  06B9  0277               	subwf	romRead@addr+1,w
  1097  06BA  3000               	movlw	0
  1098  06BB  1903               	skipnz
  1099  06BC  0276               	subwf	romRead@addr,w
  1100  06BD  1803               	skipnc
  1101  06BE  2EC5               	goto	l1142
  1102                           
  1103                           ;M24C04.c: 38: {
  1104                           ;M24C04.c: 39: opcode = 0b10100010;
  1105  06BF  30A2               	movlw	162
  1106  06C0  00F8               	movwf	??_romRead
  1107  06C1  0878               	movf	??_romRead,w
  1108  06C2  00FB               	movwf	romRead@opcode
  1109                           
  1110                           ;M24C04.c: 40: opcodeRead = 0b10100011;
  1111  06C3  30A3               	movlw	163
  1112  06C4  2ED1               	goto	L1
  1113  06C5                     l1142:	
  1114                           ;M24C04.c: 42: }
  1115                           
  1116                           ;M24C04.c: 41: addrLSB = (addr - 256);
  1117                           
  1118                           
  1119                           ;M24C04.c: 43: else if(addr <= 255 && addr >= 0)
  1120  06C5  3001               	movlw	1
  1121  06C6  0277               	subwf	romRead@addr+1,w
  1122  06C7  3000               	movlw	0
  1123  06C8  1903               	skipnz
  1124  06C9  0276               	subwf	romRead@addr,w
  1125  06CA  1803               	skipnc
  1126  06CB  2ED8               	goto	l1146
  1127                           
  1128                           ;M24C04.c: 44: {
  1129                           ;M24C04.c: 45: opcode = 0b10100000;
  1130  06CC  30A0               	movlw	160
  1131  06CD  00F8               	movwf	??_romRead
  1132  06CE  0878               	movf	??_romRead,w
  1133  06CF  00FB               	movwf	romRead@opcode
  1134                           
  1135                           ;M24C04.c: 46: opcodeRead = 0b10100001;
  1136  06D0  30A1               	movlw	161
  1137  06D1                     L1:	
  1138  06D1  00F8               	movwf	??_romRead
  1139  06D2  0878               	movf	??_romRead,w
  1140  06D3  00FC               	movwf	romRead@opcodeRead
  1141                           
  1142                           ;M24C04.c: 47: addrLSB = addr;
  1143  06D4  0876               	movf	romRead@addr,w
  1144  06D5  00F8               	movwf	??_romRead
  1145  06D6  0878               	movf	??_romRead,w
  1146  06D7  00FD               	movwf	romRead@addrLSB
  1147  06D8                     l1146:	
  1148                           
  1149                           ;M24C04.c: 48: }
  1150                           ;M24C04.c: 50: I2C_Master_Start();
  1151  06D8  120A  118A  248D  120A  118A  	fcall	_I2C_Master_Start
  1152                           
  1153                           ;M24C04.c: 51: I2C_Master_Write(opcode);
  1154  06DD  087B               	movf	romRead@opcode,w
  1155  06DE  00F8               	movwf	??_romRead
  1156  06DF  01F9               	clrf	??_romRead+1
  1157  06E0  0878               	movf	??_romRead,w
  1158  06E1  00F0               	movwf	I2C_Master_Write@d
  1159  06E2  0879               	movf	??_romRead+1,w
  1160  06E3  00F1               	movwf	I2C_Master_Write@d+1
  1161  06E4  120A  118A  249B  120A  118A  	fcall	_I2C_Master_Write
  1162                           
  1163                           ;M24C04.c: 52: I2C_Master_Write(addrLSB);
  1164  06E9  087D               	movf	romRead@addrLSB,w
  1165  06EA  00F8               	movwf	??_romRead
  1166  06EB  01F9               	clrf	??_romRead+1
  1167  06EC  0878               	movf	??_romRead,w
  1168  06ED  00F0               	movwf	I2C_Master_Write@d
  1169  06EE  0879               	movf	??_romRead+1,w
  1170  06EF  00F1               	movwf	I2C_Master_Write@d+1
  1171  06F0  120A  118A  249B  120A  118A  	fcall	_I2C_Master_Write
  1172                           
  1173                           ;M24C04.c: 53: I2C_Master_Stop();
  1174  06F5  120A  118A  2494  120A  118A  	fcall	_I2C_Master_Stop
  1175                           
  1176                           ;M24C04.c: 55: I2C_Master_Start();
  1177  06FA  120A  118A  248D  120A  118A  	fcall	_I2C_Master_Start
  1178                           
  1179                           ;M24C04.c: 56: I2C_Master_Write(opcodeRead);
  1180  06FF  087C               	movf	romRead@opcodeRead,w
  1181  0700  00F8               	movwf	??_romRead
  1182  0701  01F9               	clrf	??_romRead+1
  1183  0702  0878               	movf	??_romRead,w
  1184  0703  00F0               	movwf	I2C_Master_Write@d
  1185  0704  0879               	movf	??_romRead+1,w
  1186  0705  00F1               	movwf	I2C_Master_Write@d+1
  1187  0706  120A  118A  249B  120A  118A  	fcall	_I2C_Master_Write
  1188                           
  1189                           ;M24C04.c: 57: temp = I2C_Master_Read(0);
  1190  070B  3000               	movlw	0
  1191  070C  00F0               	movwf	I2C_Master_Read@a
  1192  070D  00F1               	movwf	I2C_Master_Read@a+1
  1193  070E  120A  118A  24D7  120A  118A  	fcall	_I2C_Master_Read
  1194  0713  0870               	movf	?_I2C_Master_Read,w
  1195  0714  00F8               	movwf	??_romRead
  1196  0715  0878               	movf	??_romRead,w
  1197  0716  00FA               	movwf	romRead@temp
  1198                           
  1199                           ;M24C04.c: 58: I2C_Master_Stop();
  1200  0717  120A  118A  2494   	fcall	_I2C_Master_Stop
  1201                           
  1202                           ;M24C04.c: 59: return temp;
  1203  071A  087A               	movf	romRead@temp,w
  1204  071B  00F8               	movwf	??_romRead
  1205  071C  01F9               	clrf	??_romRead+1
  1206  071D  0878               	movf	??_romRead,w
  1207  071E  00F6               	movwf	?_romRead
  1208  071F  0879               	movf	??_romRead+1,w
  1209  0720  00F7               	movwf	?_romRead+1
  1210  0721  0008               	return
  1211  0722                     __end_of_romRead:	
  1212                           
  1213                           	psect	text2
  1214  049B                     __ptext2:	
  1215 ;; *************** function _I2C_Master_Write *****************
  1216 ;; Defined at:
  1217 ;;		line 38 in file "i2c.c"
  1218 ;; Parameters:    Size  Location     Type
  1219 ;;  d               2    0[COMMON] unsigned int 
  1220 ;; Auto vars:     Size  Location     Type
  1221 ;;		None
  1222 ;; Return value:  Size  Location     Type
  1223 ;;                  1    wreg      void 
  1224 ;; Registers used:
  1225 ;;		wreg, status,2, status,0, pclath, cstack
  1226 ;; Tracked objects:
  1227 ;;		On entry : 0/0
  1228 ;;		On exit  : 0/0
  1229 ;;		Unchanged: 0/0
  1230 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1231 ;;      Params:         2       0       0       0       0
  1232 ;;      Locals:         0       0       0       0       0
  1233 ;;      Temps:          0       0       0       0       0
  1234 ;;      Totals:         2       0       0       0       0
  1235 ;;Total ram usage:        2 bytes
  1236 ;; Hardware stack levels used:    1
  1237 ;; Hardware stack levels required when called:    1
  1238 ;; This function calls:
  1239 ;;		_I2C_Master_Wait
  1240 ;; This function is called by:
  1241 ;;		_romRead
  1242 ;;		_romWrite
  1243 ;; This function uses a non-reentrant model
  1244 ;;
  1245                           
  1246                           
  1247                           ;psect for function _I2C_Master_Write
  1248  049B                     _I2C_Master_Write:	
  1249                           
  1250                           ;i2c.c: 40: I2C_Master_Wait();
  1251                           
  1252                           ;incstack = 0
  1253                           ; Regs used in _I2C_Master_Write: [wreg+status,2+status,0+pclath+cstack]
  1254  049B  120A  118A  24A3   	fcall	_I2C_Master_Wait
  1255                           
  1256                           ;i2c.c: 41: SSPBUF = d;
  1257  049E  0870               	movf	I2C_Master_Write@d,w
  1258  049F  1283               	bcf	3,5	;RP0=0, select bank0
  1259  04A0  1303               	bcf	3,6	;RP1=0, select bank0
  1260  04A1  0093               	movwf	19	;volatile
  1261  04A2  0008               	return
  1262  04A3                     __end_of_I2C_Master_Write:	
  1263                           
  1264                           	psect	text3
  1265  0494                     __ptext3:	
  1266 ;; *************** function _I2C_Master_Stop *****************
  1267 ;; Defined at:
  1268 ;;		line 32 in file "i2c.c"
  1269 ;; Parameters:    Size  Location     Type
  1270 ;;		None
  1271 ;; Auto vars:     Size  Location     Type
  1272 ;;		None
  1273 ;; Return value:  Size  Location     Type
  1274 ;;                  1    wreg      void 
  1275 ;; Registers used:
  1276 ;;		wreg, status,2, status,0, pclath, cstack
  1277 ;; Tracked objects:
  1278 ;;		On entry : 0/0
  1279 ;;		On exit  : 0/0
  1280 ;;		Unchanged: 0/0
  1281 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1282 ;;      Params:         0       0       0       0       0
  1283 ;;      Locals:         0       0       0       0       0
  1284 ;;      Temps:          0       0       0       0       0
  1285 ;;      Totals:         0       0       0       0       0
  1286 ;;Total ram usage:        0 bytes
  1287 ;; Hardware stack levels used:    1
  1288 ;; Hardware stack levels required when called:    1
  1289 ;; This function calls:
  1290 ;;		_I2C_Master_Wait
  1291 ;; This function is called by:
  1292 ;;		_romRead
  1293 ;;		_romWrite
  1294 ;; This function uses a non-reentrant model
  1295 ;;
  1296                           
  1297                           
  1298                           ;psect for function _I2C_Master_Stop
  1299  0494                     _I2C_Master_Stop:	
  1300                           
  1301                           ;i2c.c: 34: I2C_Master_Wait();
  1302                           
  1303                           ;incstack = 0
  1304                           ; Regs used in _I2C_Master_Stop: [wreg+status,2+status,0+pclath+cstack]
  1305  0494  120A  118A  24A3   	fcall	_I2C_Master_Wait
  1306                           
  1307                           ;i2c.c: 35: PEN = 1;
  1308  0497  1683               	bsf	3,5	;RP0=1, select bank1
  1309  0498  1303               	bcf	3,6	;RP1=0, select bank1
  1310  0499  1511               	bsf	17,2	;volatile
  1311  049A  0008               	return
  1312  049B                     __end_of_I2C_Master_Stop:	
  1313                           
  1314                           	psect	text4
  1315  048D                     __ptext4:	
  1316 ;; *************** function _I2C_Master_Start *****************
  1317 ;; Defined at:
  1318 ;;		line 20 in file "i2c.c"
  1319 ;; Parameters:    Size  Location     Type
  1320 ;;		None
  1321 ;; Auto vars:     Size  Location     Type
  1322 ;;		None
  1323 ;; Return value:  Size  Location     Type
  1324 ;;                  1    wreg      void 
  1325 ;; Registers used:
  1326 ;;		wreg, status,2, status,0, pclath, cstack
  1327 ;; Tracked objects:
  1328 ;;		On entry : 0/0
  1329 ;;		On exit  : 0/0
  1330 ;;		Unchanged: 0/0
  1331 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1332 ;;      Params:         0       0       0       0       0
  1333 ;;      Locals:         0       0       0       0       0
  1334 ;;      Temps:          0       0       0       0       0
  1335 ;;      Totals:         0       0       0       0       0
  1336 ;;Total ram usage:        0 bytes
  1337 ;; Hardware stack levels used:    1
  1338 ;; Hardware stack levels required when called:    1
  1339 ;; This function calls:
  1340 ;;		_I2C_Master_Wait
  1341 ;; This function is called by:
  1342 ;;		_romRead
  1343 ;;		_romWrite
  1344 ;; This function uses a non-reentrant model
  1345 ;;
  1346                           
  1347                           
  1348                           ;psect for function _I2C_Master_Start
  1349  048D                     _I2C_Master_Start:	
  1350                           
  1351                           ;i2c.c: 22: I2C_Master_Wait();
  1352                           
  1353                           ;incstack = 0
  1354                           ; Regs used in _I2C_Master_Start: [wreg+status,2+status,0+pclath+cstack]
  1355  048D  120A  118A  24A3   	fcall	_I2C_Master_Wait
  1356                           
  1357                           ;i2c.c: 23: SEN = 1;
  1358  0490  1683               	bsf	3,5	;RP0=1, select bank1
  1359  0491  1303               	bcf	3,6	;RP1=0, select bank1
  1360  0492  1411               	bsf	17,0	;volatile
  1361  0493  0008               	return
  1362  0494                     __end_of_I2C_Master_Start:	
  1363                           
  1364                           	psect	text5
  1365  04D7                     __ptext5:	
  1366 ;; *************** function _I2C_Master_Read *****************
  1367 ;; Defined at:
  1368 ;;		line 44 in file "i2c.c"
  1369 ;; Parameters:    Size  Location     Type
  1370 ;;  a               2    0[COMMON] unsigned short 
  1371 ;; Auto vars:     Size  Location     Type
  1372 ;;  temp            2    4[COMMON] unsigned short 
  1373 ;; Return value:  Size  Location     Type
  1374 ;;                  2    0[COMMON] unsigned short 
  1375 ;; Registers used:
  1376 ;;		wreg, status,2, status,0, pclath, cstack
  1377 ;; Tracked objects:
  1378 ;;		On entry : 0/0
  1379 ;;		On exit  : 0/0
  1380 ;;		Unchanged: 0/0
  1381 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1382 ;;      Params:         2       0       0       0       0
  1383 ;;      Locals:         2       0       0       0       0
  1384 ;;      Temps:          2       0       0       0       0
  1385 ;;      Totals:         6       0       0       0       0
  1386 ;;Total ram usage:        6 bytes
  1387 ;; Hardware stack levels used:    1
  1388 ;; Hardware stack levels required when called:    1
  1389 ;; This function calls:
  1390 ;;		_I2C_Master_Wait
  1391 ;; This function is called by:
  1392 ;;		_romRead
  1393 ;; This function uses a non-reentrant model
  1394 ;;
  1395                           
  1396                           
  1397                           ;psect for function _I2C_Master_Read
  1398  04D7                     _I2C_Master_Read:	
  1399                           
  1400                           ;i2c.c: 46: unsigned short temp;
  1401                           ;i2c.c: 47: I2C_Master_Wait();
  1402                           
  1403                           ;incstack = 0
  1404                           ; Regs used in _I2C_Master_Read: [wreg+status,2+status,0+pclath+cstack]
  1405  04D7  120A  118A  24A3  120A  118A  	fcall	_I2C_Master_Wait
  1406                           
  1407                           ;i2c.c: 48: RCEN = 1;
  1408  04DC  1683               	bsf	3,5	;RP0=1, select bank1
  1409  04DD  1303               	bcf	3,6	;RP1=0, select bank1
  1410  04DE  1591               	bsf	17,3	;volatile
  1411                           
  1412                           ;i2c.c: 49: I2C_Master_Wait();
  1413  04DF  120A  118A  24A3  120A  118A  	fcall	_I2C_Master_Wait
  1414                           
  1415                           ;i2c.c: 50: temp = SSPBUF;
  1416  04E4  1283               	bcf	3,5	;RP0=0, select bank0
  1417  04E5  1303               	bcf	3,6	;RP1=0, select bank0
  1418  04E6  0813               	movf	19,w	;volatile
  1419  04E7  00F2               	movwf	??_I2C_Master_Read
  1420  04E8  01F3               	clrf	??_I2C_Master_Read+1
  1421  04E9  0872               	movf	??_I2C_Master_Read,w
  1422  04EA  00F4               	movwf	I2C_Master_Read@temp
  1423  04EB  0873               	movf	??_I2C_Master_Read+1,w
  1424  04EC  00F5               	movwf	I2C_Master_Read@temp+1
  1425                           
  1426                           ;i2c.c: 51: I2C_Master_Wait();
  1427  04ED  120A  118A  24A3  120A  118A  	fcall	_I2C_Master_Wait
  1428                           
  1429                           ;i2c.c: 52: ACKDT = (a)?0:1;
  1430  04F2  0870               	movf	I2C_Master_Read@a,w
  1431  04F3  0471               	iorwf	I2C_Master_Read@a+1,w
  1432  04F4  1D03               	btfss	3,2
  1433  04F5  2CFA               	goto	u500
  1434  04F6  1683               	bsf	3,5	;RP0=1, select bank1
  1435  04F7  1303               	bcf	3,6	;RP1=0, select bank1
  1436  04F8  1691               	bsf	17,5	;volatile
  1437  04F9  2CFD               	goto	l1030
  1438  04FA                     u500:	
  1439  04FA  1683               	bsf	3,5	;RP0=1, select bank1
  1440  04FB  1303               	bcf	3,6	;RP1=0, select bank1
  1441  04FC  1291               	bcf	17,5	;volatile
  1442  04FD                     l1030:	
  1443                           
  1444                           ;i2c.c: 53: ACKEN = 1;
  1445  04FD  1611               	bsf	17,4	;volatile
  1446                           
  1447                           ;i2c.c: 54: return temp;
  1448  04FE  0875               	movf	I2C_Master_Read@temp+1,w
  1449  04FF  00F1               	movwf	?_I2C_Master_Read+1
  1450  0500  0874               	movf	I2C_Master_Read@temp,w
  1451  0501  00F0               	movwf	?_I2C_Master_Read
  1452  0502  0008               	return
  1453  0503                     __end_of_I2C_Master_Read:	
  1454                           
  1455                           	psect	text6
  1456  04A3                     __ptext6:	
  1457 ;; *************** function _I2C_Master_Wait *****************
  1458 ;; Defined at:
  1459 ;;		line 15 in file "i2c.c"
  1460 ;; Parameters:    Size  Location     Type
  1461 ;;		None
  1462 ;; Auto vars:     Size  Location     Type
  1463 ;;		None
  1464 ;; Return value:  Size  Location     Type
  1465 ;;                  1    wreg      void 
  1466 ;; Registers used:
  1467 ;;		wreg, status,2
  1468 ;; Tracked objects:
  1469 ;;		On entry : 0/0
  1470 ;;		On exit  : 0/0
  1471 ;;		Unchanged: 0/0
  1472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1473 ;;      Params:         0       0       0       0       0
  1474 ;;      Locals:         0       0       0       0       0
  1475 ;;      Temps:          0       0       0       0       0
  1476 ;;      Totals:         0       0       0       0       0
  1477 ;;Total ram usage:        0 bytes
  1478 ;; Hardware stack levels used:    1
  1479 ;; This function calls:
  1480 ;;		Nothing
  1481 ;; This function is called by:
  1482 ;;		_I2C_Master_Start
  1483 ;;		_I2C_Master_Stop
  1484 ;;		_I2C_Master_Write
  1485 ;;		_I2C_Master_Read
  1486 ;;		_I2C_Master_RepeatedStart
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _I2C_Master_Wait
  1492  04A3                     _I2C_Master_Wait:	
  1493  04A3                     l178:	
  1494                           ;i2c.c: 17: while ((SSPSTAT & 0x04) || (SSPCON2 & 0x1F));
  1495                           
  1496                           ;incstack = 0
  1497                           ; Regs used in _I2C_Master_Wait: [wreg+status,2]
  1498                           
  1499  04A3  1683               	bsf	3,5	;RP0=1, select bank1
  1500  04A4  1303               	bcf	3,6	;RP1=0, select bank1
  1501  04A5  1914               	btfsc	20,2	;volatile
  1502  04A6  2CA3               	goto	l178
  1503  04A7  0811               	movf	17,w	;volatile
  1504  04A8  391F               	andlw	31
  1505  04A9  1903               	btfsc	3,2
  1506  04AA  0008               	return
  1507  04AB  2CA3               	goto	l178
  1508  04AC                     __end_of_I2C_Master_Wait:	
  1509                           
  1510                           	psect	text7
  1511  0503                     __ptext7:	
  1512 ;; *************** function _lcd_initialize *****************
  1513 ;; Defined at:
  1514 ;;		line 100 in file "lcd.c"
  1515 ;; Parameters:    Size  Location     Type
  1516 ;;		None
  1517 ;; Auto vars:     Size  Location     Type
  1518 ;;		None
  1519 ;; Return value:  Size  Location     Type
  1520 ;;                  1    wreg      void 
  1521 ;; Registers used:
  1522 ;;		wreg, status,2, status,0, pclath, cstack
  1523 ;; Tracked objects:
  1524 ;;		On entry : 0/0
  1525 ;;		On exit  : 0/0
  1526 ;;		Unchanged: 0/0
  1527 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1528 ;;      Params:         0       0       0       0       0
  1529 ;;      Locals:         0       0       0       0       0
  1530 ;;      Temps:          2       0       0       0       0
  1531 ;;      Totals:         2       0       0       0       0
  1532 ;;Total ram usage:        2 bytes
  1533 ;; Hardware stack levels used:    1
  1534 ;; Hardware stack levels required when called:    3
  1535 ;; This function calls:
  1536 ;;		_lcd_clear
  1537 ;;		_send_lcd_data
  1538 ;;		_set_lcd_e
  1539 ;; This function is called by:
  1540 ;;		_main
  1541 ;; This function uses a non-reentrant model
  1542 ;;
  1543                           
  1544                           
  1545                           ;psect for function _lcd_initialize
  1546  0503                     _lcd_initialize:	
  1547                           
  1548                           ;lcd.c: 104: set_lcd_e(1);
  1549                           
  1550                           ;incstack = 0
  1551                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1552  0503  3001               	movlw	1
  1553  0504  120A  118A  24B6  120A  118A  	fcall	_set_lcd_e
  1554                           
  1555                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1556  0509  3062               	movlw	98
  1557  050A  00F6               	movwf	??_lcd_initialize+1
  1558  050B  3065               	movlw	101
  1559  050C  00F5               	movwf	??_lcd_initialize
  1560  050D                     u867:	
  1561  050D  0BF5               	decfsz	??_lcd_initialize,f
  1562  050E  2D0D               	goto	u867
  1563  050F  0BF6               	decfsz	??_lcd_initialize+1,f
  1564  0510  2D0D               	goto	u867
  1565  0511  2D12               	nop2
  1566                           
  1567                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1568  0512  3038               	movlw	56
  1569  0513  00F5               	movwf	??_lcd_initialize
  1570  0514  0875               	movf	??_lcd_initialize,w
  1571  0515  00F1               	movwf	send_lcd_data@uc_data
  1572  0516  3000               	movlw	0
  1573  0517  120A  118A  2566  120A  118A  	fcall	_send_lcd_data
  1574                           
  1575                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1576  051C  3006               	movlw	6
  1577  051D  00F5               	movwf	??_lcd_initialize
  1578  051E  0875               	movf	??_lcd_initialize,w
  1579  051F  00F1               	movwf	send_lcd_data@uc_data
  1580  0520  3000               	movlw	0
  1581  0521  120A  118A  2566  120A  118A  	fcall	_send_lcd_data
  1582                           
  1583                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1584  0526  300C               	movlw	12
  1585  0527  00F5               	movwf	??_lcd_initialize
  1586  0528  0875               	movf	??_lcd_initialize,w
  1587  0529  00F1               	movwf	send_lcd_data@uc_data
  1588  052A  3000               	movlw	0
  1589  052B  120A  118A  2566  120A  118A  	fcall	_send_lcd_data
  1590                           
  1591                           ;lcd.c: 118: lcd_clear();
  1592  0530  120A  118A  2486   	fcall	_lcd_clear
  1593  0533  0008               	return
  1594  0534                     __end_of_lcd_initialize:	
  1595                           
  1596                           	psect	text8
  1597  0486                     __ptext8:	
  1598 ;; *************** function _lcd_clear *****************
  1599 ;; Defined at:
  1600 ;;		line 136 in file "lcd.c"
  1601 ;; Parameters:    Size  Location     Type
  1602 ;;		None
  1603 ;; Auto vars:     Size  Location     Type
  1604 ;;		None
  1605 ;; Return value:  Size  Location     Type
  1606 ;;                  1    wreg      void 
  1607 ;; Registers used:
  1608 ;;		wreg, status,2, status,0, pclath, cstack
  1609 ;; Tracked objects:
  1610 ;;		On entry : 0/0
  1611 ;;		On exit  : 0/0
  1612 ;;		Unchanged: 0/0
  1613 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1614 ;;      Params:         0       0       0       0       0
  1615 ;;      Locals:         0       0       0       0       0
  1616 ;;      Temps:          0       0       0       0       0
  1617 ;;      Totals:         0       0       0       0       0
  1618 ;;Total ram usage:        0 bytes
  1619 ;; Hardware stack levels used:    1
  1620 ;; Hardware stack levels required when called:    2
  1621 ;; This function calls:
  1622 ;;		_send_lcd_data
  1623 ;; This function is called by:
  1624 ;;		_lcd_initialize
  1625 ;; This function uses a non-reentrant model
  1626 ;;
  1627                           
  1628                           
  1629                           ;psect for function _lcd_clear
  1630  0486                     _lcd_clear:	
  1631                           
  1632                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1633                           
  1634                           ;incstack = 0
  1635                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1636  0486  01F1               	clrf	send_lcd_data@uc_data
  1637  0487  0AF1               	incf	send_lcd_data@uc_data,f
  1638  0488  3000               	movlw	0
  1639  0489  120A  118A  2566   	fcall	_send_lcd_data
  1640  048C  0008               	return
  1641  048D                     __end_of_lcd_clear:	
  1642                           
  1643                           	psect	text9
  1644  04CC                     __ptext9:	
  1645 ;; *************** function _lcd_goto *****************
  1646 ;; Defined at:
  1647 ;;		line 199 in file "lcd.c"
  1648 ;; Parameters:    Size  Location     Type
  1649 ;;  uc_position     1    wreg     unsigned char 
  1650 ;; Auto vars:     Size  Location     Type
  1651 ;;  uc_position     1    6[COMMON] unsigned char 
  1652 ;; Return value:  Size  Location     Type
  1653 ;;                  1    wreg      void 
  1654 ;; Registers used:
  1655 ;;		wreg, status,2, status,0, pclath, cstack
  1656 ;; Tracked objects:
  1657 ;;		On entry : 0/0
  1658 ;;		On exit  : 0/0
  1659 ;;		Unchanged: 0/0
  1660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1661 ;;      Params:         0       0       0       0       0
  1662 ;;      Locals:         1       0       0       0       0
  1663 ;;      Temps:          1       0       0       0       0
  1664 ;;      Totals:         2       0       0       0       0
  1665 ;;Total ram usage:        2 bytes
  1666 ;; Hardware stack levels used:    1
  1667 ;; Hardware stack levels required when called:    2
  1668 ;; This function calls:
  1669 ;;		_send_lcd_data
  1670 ;; This function is called by:
  1671 ;;		_main
  1672 ;; This function uses a non-reentrant model
  1673 ;;
  1674                           
  1675                           
  1676                           ;psect for function _lcd_goto
  1677  04CC                     _lcd_goto:	
  1678                           
  1679                           ;incstack = 0
  1680                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1681                           ;lcd_goto@uc_position stored from wreg
  1682  04CC  00F6               	movwf	lcd_goto@uc_position
  1683                           
  1684                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1685  04CD  0876               	movf	lcd_goto@uc_position,w
  1686  04CE  3880               	iorlw	128
  1687  04CF  00F5               	movwf	??_lcd_goto
  1688  04D0  0875               	movf	??_lcd_goto,w
  1689  04D1  00F1               	movwf	send_lcd_data@uc_data
  1690  04D2  3000               	movlw	0
  1691  04D3  120A  118A  2566   	fcall	_send_lcd_data
  1692  04D6  0008               	return
  1693  04D7                     __end_of_lcd_goto:	
  1694                           
  1695                           	psect	text10
  1696  0722                     __ptext10:	
  1697 ;; *************** function _lcd_bcd *****************
  1698 ;; Defined at:
  1699 ;;		line 274 in file "lcd.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;  uc_digit        1    wreg     unsigned char 
  1702 ;;  ui_number       2    0[BANK0 ] unsigned int 
  1703 ;; Auto vars:     Size  Location     Type
  1704 ;;  uc_digit        1   16[BANK0 ] unsigned char 
  1705 ;;  ui_decimal     10    6[BANK0 ] unsigned int [5]
  1706 ;; Return value:  Size  Location     Type
  1707 ;;                  1    wreg      void 
  1708 ;; Registers used:
  1709 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1710 ;; Tracked objects:
  1711 ;;		On entry : 0/0
  1712 ;;		On exit  : 0/0
  1713 ;;		Unchanged: 0/0
  1714 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1715 ;;      Params:         0       2       0       0       0
  1716 ;;      Locals:         0      11       0       0       0
  1717 ;;      Temps:          0       4       0       0       0
  1718 ;;      Totals:         0      17       0       0       0
  1719 ;;Total ram usage:       17 bytes
  1720 ;; Hardware stack levels used:    1
  1721 ;; Hardware stack levels required when called:    3
  1722 ;; This function calls:
  1723 ;;		___lwdiv
  1724 ;;		___lwmod
  1725 ;;		_lcd_putchar
  1726 ;; This function is called by:
  1727 ;;		_main
  1728 ;; This function uses a non-reentrant model
  1729 ;;
  1730                           
  1731                           
  1732                           ;psect for function _lcd_bcd
  1733  0722                     _lcd_bcd:	
  1734                           
  1735                           ;incstack = 0
  1736                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1737                           ;lcd_bcd@uc_digit stored from wreg
  1738  0722  1283               	bcf	3,5	;RP0=0, select bank0
  1739  0723  1303               	bcf	3,6	;RP1=0, select bank0
  1740  0724  00B0               	movwf	lcd_bcd@uc_digit
  1741                           
  1742                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1743  0725  3026               	movlw	lcd_bcd@ui_decimal& (0+255)
  1744  0726  0084               	movwf	4
  1745  0727  3033               	movlw	low lcd_bcd@F1134
  1746  0728  00A2               	movwf	??_lcd_bcd
  1747  0729  0804               	movf	4,w
  1748  072A  00A3               	movwf	??_lcd_bcd+1
  1749  072B  300A               	movlw	10
  1750  072C  00A4               	movwf	??_lcd_bcd+2
  1751  072D                     u760:	
  1752  072D  0822               	movf	??_lcd_bcd,w
  1753  072E  0084               	movwf	4
  1754  072F  1383               	bcf	3,7	;select IRP bank0
  1755  0730  0800               	movf	0,w
  1756  0731  00A5               	movwf	??_lcd_bcd+3
  1757  0732  0AA2               	incf	??_lcd_bcd,f
  1758  0733  0823               	movf	??_lcd_bcd+1,w
  1759  0734  0084               	movwf	4
  1760  0735  0825               	movf	??_lcd_bcd+3,w
  1761  0736  0080               	movwf	0
  1762  0737  0AA3               	incf	??_lcd_bcd+1,f
  1763  0738  0BA4               	decfsz	??_lcd_bcd+2,f
  1764  0739  2F2D               	goto	u760
  1765                           
  1766                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1767  073A  3010               	movlw	16
  1768  073B  00F0               	movwf	___lwdiv@divisor
  1769  073C  3027               	movlw	39
  1770  073D  00F1               	movwf	___lwdiv@divisor+1
  1771  073E  0821               	movf	lcd_bcd@ui_number+1,w
  1772  073F  00F3               	movwf	___lwdiv@dividend+1
  1773  0740  0820               	movf	lcd_bcd@ui_number,w
  1774  0741  00F2               	movwf	___lwdiv@dividend
  1775  0742  120A  118A  25D1  120A  118A  	fcall	___lwdiv
  1776  0747  0871               	movf	?___lwdiv+1,w
  1777  0748  1283               	bcf	3,5	;RP0=0, select bank0
  1778  0749  1303               	bcf	3,6	;RP1=0, select bank0
  1779  074A  00AF               	movwf	lcd_bcd@ui_decimal+9
  1780  074B  0870               	movf	?___lwdiv,w
  1781  074C  00AE               	movwf	lcd_bcd@ui_decimal+8
  1782                           
  1783                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1784  074D  3010               	movlw	16
  1785  074E  00F0               	movwf	___lwmod@divisor
  1786  074F  3027               	movlw	39
  1787  0750  00F1               	movwf	___lwmod@divisor+1
  1788  0751  0821               	movf	lcd_bcd@ui_number+1,w
  1789  0752  00F3               	movwf	___lwmod@dividend+1
  1790  0753  0820               	movf	lcd_bcd@ui_number,w
  1791  0754  00F2               	movwf	___lwmod@dividend
  1792  0755  120A  118A  2534  120A  118A  	fcall	___lwmod
  1793  075A  0871               	movf	?___lwmod+1,w
  1794  075B  1283               	bcf	3,5	;RP0=0, select bank0
  1795  075C  1303               	bcf	3,6	;RP1=0, select bank0
  1796  075D  00AD               	movwf	lcd_bcd@ui_decimal+7
  1797  075E  0870               	movf	?___lwmod,w
  1798  075F  00AC               	movwf	lcd_bcd@ui_decimal+6
  1799                           
  1800                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1801  0760  30E8               	movlw	232
  1802  0761  00F0               	movwf	___lwmod@divisor
  1803  0762  3003               	movlw	3
  1804  0763  00F1               	movwf	___lwmod@divisor+1
  1805  0764  082D               	movf	lcd_bcd@ui_decimal+7,w
  1806  0765  00F3               	movwf	___lwmod@dividend+1
  1807  0766  082C               	movf	lcd_bcd@ui_decimal+6,w
  1808  0767  00F2               	movwf	___lwmod@dividend
  1809  0768  120A  118A  2534  120A  118A  	fcall	___lwmod
  1810  076D  0871               	movf	?___lwmod+1,w
  1811  076E  1283               	bcf	3,5	;RP0=0, select bank0
  1812  076F  1303               	bcf	3,6	;RP1=0, select bank0
  1813  0770  00AB               	movwf	lcd_bcd@ui_decimal+5
  1814  0771  0870               	movf	?___lwmod,w
  1815  0772  00AA               	movwf	lcd_bcd@ui_decimal+4
  1816                           
  1817                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1818  0773  30E8               	movlw	232
  1819  0774  00F0               	movwf	___lwdiv@divisor
  1820  0775  3003               	movlw	3
  1821  0776  00F1               	movwf	___lwdiv@divisor+1
  1822  0777  082D               	movf	lcd_bcd@ui_decimal+7,w
  1823  0778  00F3               	movwf	___lwdiv@dividend+1
  1824  0779  082C               	movf	lcd_bcd@ui_decimal+6,w
  1825  077A  00F2               	movwf	___lwdiv@dividend
  1826  077B  120A  118A  25D1  120A  118A  	fcall	___lwdiv
  1827  0780  0871               	movf	?___lwdiv+1,w
  1828  0781  1283               	bcf	3,5	;RP0=0, select bank0
  1829  0782  1303               	bcf	3,6	;RP1=0, select bank0
  1830  0783  00AD               	movwf	lcd_bcd@ui_decimal+7
  1831  0784  0870               	movf	?___lwdiv,w
  1832  0785  00AC               	movwf	lcd_bcd@ui_decimal+6
  1833                           
  1834                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1835  0786  3064               	movlw	100
  1836  0787  00F0               	movwf	___lwmod@divisor
  1837  0788  3000               	movlw	0
  1838  0789  00F1               	movwf	___lwmod@divisor+1
  1839  078A  082B               	movf	lcd_bcd@ui_decimal+5,w
  1840  078B  00F3               	movwf	___lwmod@dividend+1
  1841  078C  082A               	movf	lcd_bcd@ui_decimal+4,w
  1842  078D  00F2               	movwf	___lwmod@dividend
  1843  078E  120A  118A  2534  120A  118A  	fcall	___lwmod
  1844  0793  0871               	movf	?___lwmod+1,w
  1845  0794  1283               	bcf	3,5	;RP0=0, select bank0
  1846  0795  1303               	bcf	3,6	;RP1=0, select bank0
  1847  0796  00A9               	movwf	lcd_bcd@ui_decimal+3
  1848  0797  0870               	movf	?___lwmod,w
  1849  0798  00A8               	movwf	lcd_bcd@ui_decimal+2
  1850                           
  1851                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1852  0799  3064               	movlw	100
  1853  079A  00F0               	movwf	___lwdiv@divisor
  1854  079B  3000               	movlw	0
  1855  079C  00F1               	movwf	___lwdiv@divisor+1
  1856  079D  082B               	movf	lcd_bcd@ui_decimal+5,w
  1857  079E  00F3               	movwf	___lwdiv@dividend+1
  1858  079F  082A               	movf	lcd_bcd@ui_decimal+4,w
  1859  07A0  00F2               	movwf	___lwdiv@dividend
  1860  07A1  120A  118A  25D1  120A  118A  	fcall	___lwdiv
  1861  07A6  0871               	movf	?___lwdiv+1,w
  1862  07A7  1283               	bcf	3,5	;RP0=0, select bank0
  1863  07A8  1303               	bcf	3,6	;RP1=0, select bank0
  1864  07A9  00AB               	movwf	lcd_bcd@ui_decimal+5
  1865  07AA  0870               	movf	?___lwdiv,w
  1866  07AB  00AA               	movwf	lcd_bcd@ui_decimal+4
  1867                           
  1868                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1869  07AC  300A               	movlw	10
  1870  07AD  00F0               	movwf	___lwmod@divisor
  1871  07AE  3000               	movlw	0
  1872  07AF  00F1               	movwf	___lwmod@divisor+1
  1873  07B0  0829               	movf	lcd_bcd@ui_decimal+3,w
  1874  07B1  00F3               	movwf	___lwmod@dividend+1
  1875  07B2  0828               	movf	lcd_bcd@ui_decimal+2,w
  1876  07B3  00F2               	movwf	___lwmod@dividend
  1877  07B4  120A  118A  2534  120A  118A  	fcall	___lwmod
  1878  07B9  0871               	movf	?___lwmod+1,w
  1879  07BA  1283               	bcf	3,5	;RP0=0, select bank0
  1880  07BB  1303               	bcf	3,6	;RP1=0, select bank0
  1881  07BC  00A7               	movwf	lcd_bcd@ui_decimal+1
  1882  07BD  0870               	movf	?___lwmod,w
  1883  07BE  00A6               	movwf	lcd_bcd@ui_decimal
  1884                           
  1885                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1886  07BF  300A               	movlw	10
  1887  07C0  00F0               	movwf	___lwdiv@divisor
  1888  07C1  3000               	movlw	0
  1889  07C2  00F1               	movwf	___lwdiv@divisor+1
  1890  07C3  0829               	movf	lcd_bcd@ui_decimal+3,w
  1891  07C4  00F3               	movwf	___lwdiv@dividend+1
  1892  07C5  0828               	movf	lcd_bcd@ui_decimal+2,w
  1893  07C6  00F2               	movwf	___lwdiv@dividend
  1894  07C7  120A  118A  25D1  120A  118A  	fcall	___lwdiv
  1895  07CC  0871               	movf	?___lwdiv+1,w
  1896  07CD  1283               	bcf	3,5	;RP0=0, select bank0
  1897  07CE  1303               	bcf	3,6	;RP1=0, select bank0
  1898  07CF  00A9               	movwf	lcd_bcd@ui_decimal+3
  1899  07D0  0870               	movf	?___lwdiv,w
  1900  07D1  00A8               	movwf	lcd_bcd@ui_decimal+2
  1901                           
  1902                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1903  07D2  3006               	movlw	6
  1904  07D3  0230               	subwf	lcd_bcd@uc_digit,w
  1905  07D4  1C03               	skipc
  1906  07D5  2FDA               	goto	l1186
  1907  07D6  3005               	movlw	5
  1908  07D7  00A2               	movwf	??_lcd_bcd
  1909  07D8  0822               	movf	??_lcd_bcd,w
  1910  07D9  00B0               	movwf	lcd_bcd@uc_digit
  1911  07DA                     l1186:	
  1912                           
  1913                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1914  07DA  0830               	movf	lcd_bcd@uc_digit,w
  1915  07DB  1903               	btfsc	3,2
  1916  07DC  0008               	return
  1917                           
  1918                           ;lcd.c: 289: {
  1919                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1920  07DD  0830               	movf	lcd_bcd@uc_digit,w
  1921  07DE  00A2               	movwf	??_lcd_bcd
  1922  07DF  0722               	addwf	??_lcd_bcd,w
  1923  07E0  3EFE               	addlw	254
  1924  07E1  3E26               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  1925  07E2  0084               	movwf	4
  1926  07E3  1383               	bcf	3,7	;select IRP bank0
  1927  07E4  0800               	movf	0,w
  1928  07E5  3E30               	addlw	48
  1929  07E6  120A  118A  24AC  120A  118A  	fcall	_lcd_putchar
  1930  07EB  3001               	movlw	1
  1931  07EC  1283               	bcf	3,5	;RP0=0, select bank0
  1932  07ED  1303               	bcf	3,6	;RP1=0, select bank0
  1933  07EE  02B0               	subwf	lcd_bcd@uc_digit,f
  1934  07EF  2FDA               	goto	l1186
  1935  07F0                     __end_of_lcd_bcd:	
  1936                           
  1937                           	psect	text11
  1938  04AC                     __ptext11:	
  1939 ;; *************** function _lcd_putchar *****************
  1940 ;; Defined at:
  1941 ;;		line 220 in file "lcd.c"
  1942 ;; Parameters:    Size  Location     Type
  1943 ;;  c_data          1    wreg     unsigned char 
  1944 ;; Auto vars:     Size  Location     Type
  1945 ;;  c_data          1    6[COMMON] unsigned char 
  1946 ;; Return value:  Size  Location     Type
  1947 ;;                  1    wreg      void 
  1948 ;; Registers used:
  1949 ;;		wreg, status,2, status,0, pclath, cstack
  1950 ;; Tracked objects:
  1951 ;;		On entry : 0/0
  1952 ;;		On exit  : 0/0
  1953 ;;		Unchanged: 0/0
  1954 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1955 ;;      Params:         0       0       0       0       0
  1956 ;;      Locals:         1       0       0       0       0
  1957 ;;      Temps:          1       0       0       0       0
  1958 ;;      Totals:         2       0       0       0       0
  1959 ;;Total ram usage:        2 bytes
  1960 ;; Hardware stack levels used:    1
  1961 ;; Hardware stack levels required when called:    2
  1962 ;; This function calls:
  1963 ;;		_send_lcd_data
  1964 ;; This function is called by:
  1965 ;;		_lcd_bcd
  1966 ;;		_lcd_putstr
  1967 ;; This function uses a non-reentrant model
  1968 ;;
  1969                           
  1970                           
  1971                           ;psect for function _lcd_putchar
  1972  04AC                     _lcd_putchar:	
  1973                           
  1974                           ;incstack = 0
  1975                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  1976                           ;lcd_putchar@c_data stored from wreg
  1977  04AC  00F6               	movwf	lcd_putchar@c_data
  1978                           
  1979                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  1980  04AD  0876               	movf	lcd_putchar@c_data,w
  1981  04AE  00F5               	movwf	??_lcd_putchar
  1982  04AF  0875               	movf	??_lcd_putchar,w
  1983  04B0  00F1               	movwf	send_lcd_data@uc_data
  1984  04B1  3001               	movlw	1
  1985  04B2  120A  118A  2566   	fcall	_send_lcd_data
  1986  04B5  0008               	return
  1987  04B6                     __end_of_lcd_putchar:	
  1988                           
  1989                           	psect	text12
  1990  0566                     __ptext12:	
  1991 ;; *************** function _send_lcd_data *****************
  1992 ;; Defined at:
  1993 ;;		line 308 in file "lcd.c"
  1994 ;; Parameters:    Size  Location     Type
  1995 ;;  b_rs            1    wreg     unsigned char 
  1996 ;;  uc_data         1    1[COMMON] unsigned char 
  1997 ;; Auto vars:     Size  Location     Type
  1998 ;;  b_rs            1    4[COMMON] unsigned char 
  1999 ;; Return value:  Size  Location     Type
  2000 ;;                  1    wreg      void 
  2001 ;; Registers used:
  2002 ;;		wreg, status,2, status,0, pclath, cstack
  2003 ;; Tracked objects:
  2004 ;;		On entry : 0/0
  2005 ;;		On exit  : 0/0
  2006 ;;		Unchanged: 0/0
  2007 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2008 ;;      Params:         1       0       0       0       0
  2009 ;;      Locals:         1       0       0       0       0
  2010 ;;      Temps:          2       0       0       0       0
  2011 ;;      Totals:         4       0       0       0       0
  2012 ;;Total ram usage:        4 bytes
  2013 ;; Hardware stack levels used:    1
  2014 ;; Hardware stack levels required when called:    1
  2015 ;; This function calls:
  2016 ;;		_set_lcd_data
  2017 ;;		_set_lcd_e
  2018 ;;		_set_lcd_rs
  2019 ;; This function is called by:
  2020 ;;		_lcd_initialize
  2021 ;;		_lcd_clear
  2022 ;;		_lcd_goto
  2023 ;;		_lcd_putchar
  2024 ;;		_lcd_home
  2025 ;;		_lcd_2ndline
  2026 ;; This function uses a non-reentrant model
  2027 ;;
  2028                           
  2029                           
  2030                           ;psect for function _send_lcd_data
  2031  0566                     _send_lcd_data:	
  2032                           
  2033                           ;incstack = 0
  2034                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2035                           ;send_lcd_data@b_rs stored from wreg
  2036  0566  00F4               	movwf	send_lcd_data@b_rs
  2037                           
  2038                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2039  0567  0874               	movf	send_lcd_data@b_rs,w
  2040  0568  120A  118A  24C1  120A  118A  	fcall	_set_lcd_rs
  2041                           
  2042                           ;lcd.c: 312: set_lcd_data(uc_data);
  2043  056D  0871               	movf	send_lcd_data@uc_data,w
  2044  056E  120A  118A  2480  120A  118A  	fcall	_set_lcd_data
  2045                           
  2046                           ;lcd.c: 315: set_lcd_e(1);
  2047  0573  3001               	movlw	1
  2048  0574  120A  118A  24B6  120A  118A  	fcall	_set_lcd_e
  2049                           
  2050                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2051  0579  3007               	movlw	7
  2052  057A  00F3               	movwf	??_send_lcd_data+1
  2053  057B  307D               	movlw	125
  2054  057C  00F2               	movwf	??_send_lcd_data
  2055  057D                     u877:	
  2056  057D  0BF2               	decfsz	??_send_lcd_data,f
  2057  057E  2D7D               	goto	u877
  2058  057F  0BF3               	decfsz	??_send_lcd_data+1,f
  2059  0580  2D7D               	goto	u877
  2060                           
  2061                           ;lcd.c: 317: set_lcd_e(0);
  2062  0581  3000               	movlw	0
  2063  0582  120A  118A  24B6  120A  118A  	fcall	_set_lcd_e
  2064                           
  2065                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2066  0587  300D               	movlw	13
  2067  0588  00F3               	movwf	??_send_lcd_data+1
  2068  0589  30FB               	movlw	251
  2069  058A  00F2               	movwf	??_send_lcd_data
  2070  058B                     u887:	
  2071  058B  0BF2               	decfsz	??_send_lcd_data,f
  2072  058C  2D8B               	goto	u887
  2073  058D  0BF3               	decfsz	??_send_lcd_data+1,f
  2074  058E  2D8B               	goto	u887
  2075  058F  2D90               	nop2
  2076                           
  2077                           ;lcd.c: 321: set_lcd_rs(0);
  2078  0590  3000               	movlw	0
  2079  0591  120A  118A  24C1  120A  118A  	fcall	_set_lcd_rs
  2080                           
  2081                           ;lcd.c: 322: set_lcd_data(0);
  2082  0596  3000               	movlw	0
  2083  0597  120A  118A  2480   	fcall	_set_lcd_data
  2084  059A  0008               	return
  2085  059B                     __end_of_send_lcd_data:	
  2086                           
  2087                           	psect	text13
  2088  04C1                     __ptext13:	
  2089 ;; *************** function _set_lcd_rs *****************
  2090 ;; Defined at:
  2091 ;;		line 360 in file "lcd.c"
  2092 ;; Parameters:    Size  Location     Type
  2093 ;;  b_output        1    wreg     unsigned char 
  2094 ;; Auto vars:     Size  Location     Type
  2095 ;;  b_output        1    0[COMMON] unsigned char 
  2096 ;; Return value:  Size  Location     Type
  2097 ;;                  1    wreg      void 
  2098 ;; Registers used:
  2099 ;;		wreg
  2100 ;; Tracked objects:
  2101 ;;		On entry : 0/0
  2102 ;;		On exit  : 0/0
  2103 ;;		Unchanged: 0/0
  2104 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2105 ;;      Params:         0       0       0       0       0
  2106 ;;      Locals:         1       0       0       0       0
  2107 ;;      Temps:          0       0       0       0       0
  2108 ;;      Totals:         1       0       0       0       0
  2109 ;;Total ram usage:        1 bytes
  2110 ;; Hardware stack levels used:    1
  2111 ;; This function calls:
  2112 ;;		Nothing
  2113 ;; This function is called by:
  2114 ;;		_send_lcd_data
  2115 ;; This function uses a non-reentrant model
  2116 ;;
  2117                           
  2118                           
  2119                           ;psect for function _set_lcd_rs
  2120  04C1                     _set_lcd_rs:	
  2121                           
  2122                           ;incstack = 0
  2123                           ; Regs used in _set_lcd_rs: [wreg]
  2124                           ;set_lcd_rs@b_output stored from wreg
  2125  04C1  00F0               	movwf	set_lcd_rs@b_output
  2126                           
  2127                           ;lcd.c: 362: RB4 = b_output;
  2128  04C2  1C70               	btfss	set_lcd_rs@b_output,0
  2129  04C3  2CC8               	goto	u460
  2130  04C4  1283               	bcf	3,5	;RP0=0, select bank0
  2131  04C5  1303               	bcf	3,6	;RP1=0, select bank0
  2132  04C6  1606               	bsf	6,4	;volatile
  2133  04C7  0008               	return
  2134  04C8                     u460:	
  2135  04C8  1283               	bcf	3,5	;RP0=0, select bank0
  2136  04C9  1303               	bcf	3,6	;RP1=0, select bank0
  2137  04CA  1206               	bcf	6,4	;volatile
  2138  04CB  0008               	return
  2139  04CC                     __end_of_set_lcd_rs:	
  2140                           
  2141                           	psect	text14
  2142  04B6                     __ptext14:	
  2143 ;; *************** function _set_lcd_e *****************
  2144 ;; Defined at:
  2145 ;;		line 340 in file "lcd.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  b_output        1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  b_output        1    0[COMMON] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;                  1    wreg      void 
  2152 ;; Registers used:
  2153 ;;		wreg
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2159 ;;      Params:         0       0       0       0       0
  2160 ;;      Locals:         1       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0
  2162 ;;      Totals:         1       0       0       0       0
  2163 ;;Total ram usage:        1 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; This function calls:
  2166 ;;		Nothing
  2167 ;; This function is called by:
  2168 ;;		_lcd_initialize
  2169 ;;		_send_lcd_data
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           
  2174                           ;psect for function _set_lcd_e
  2175  04B6                     _set_lcd_e:	
  2176                           
  2177                           ;incstack = 0
  2178                           ; Regs used in _set_lcd_e: [wreg]
  2179                           ;set_lcd_e@b_output stored from wreg
  2180  04B6  00F0               	movwf	set_lcd_e@b_output
  2181                           
  2182                           ;lcd.c: 342: RB5 = b_output;
  2183  04B7  1C70               	btfss	set_lcd_e@b_output,0
  2184  04B8  2CBD               	goto	u440
  2185  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2186  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2187  04BB  1686               	bsf	6,5	;volatile
  2188  04BC  0008               	return
  2189  04BD                     u440:	
  2190  04BD  1283               	bcf	3,5	;RP0=0, select bank0
  2191  04BE  1303               	bcf	3,6	;RP1=0, select bank0
  2192  04BF  1286               	bcf	6,5	;volatile
  2193  04C0  0008               	return
  2194  04C1                     __end_of_set_lcd_e:	
  2195                           
  2196                           	psect	text15
  2197  0480                     __ptext15:	
  2198 ;; *************** function _set_lcd_data *****************
  2199 ;; Defined at:
  2200 ;;		line 380 in file "lcd.c"
  2201 ;; Parameters:    Size  Location     Type
  2202 ;;  uc_data         1    wreg     unsigned char 
  2203 ;; Auto vars:     Size  Location     Type
  2204 ;;  uc_data         1    0[COMMON] unsigned char 
  2205 ;; Return value:  Size  Location     Type
  2206 ;;                  1    wreg      void 
  2207 ;; Registers used:
  2208 ;;		wreg
  2209 ;; Tracked objects:
  2210 ;;		On entry : 0/0
  2211 ;;		On exit  : 0/0
  2212 ;;		Unchanged: 0/0
  2213 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2214 ;;      Params:         0       0       0       0       0
  2215 ;;      Locals:         1       0       0       0       0
  2216 ;;      Temps:          0       0       0       0       0
  2217 ;;      Totals:         1       0       0       0       0
  2218 ;;Total ram usage:        1 bytes
  2219 ;; Hardware stack levels used:    1
  2220 ;; This function calls:
  2221 ;;		Nothing
  2222 ;; This function is called by:
  2223 ;;		_send_lcd_data
  2224 ;; This function uses a non-reentrant model
  2225 ;;
  2226                           
  2227                           
  2228                           ;psect for function _set_lcd_data
  2229  0480                     _set_lcd_data:	
  2230                           
  2231                           ;incstack = 0
  2232                           ; Regs used in _set_lcd_data: [wreg]
  2233                           ;set_lcd_data@uc_data stored from wreg
  2234  0480  00F0               	movwf	set_lcd_data@uc_data
  2235                           
  2236                           ;lcd.c: 382: PORTD = uc_data;
  2237  0481  0870               	movf	set_lcd_data@uc_data,w
  2238  0482  1283               	bcf	3,5	;RP0=0, select bank0
  2239  0483  1303               	bcf	3,6	;RP1=0, select bank0
  2240  0484  0088               	movwf	8	;volatile
  2241  0485  0008               	return
  2242  0486                     __end_of_set_lcd_data:	
  2243                           
  2244                           	psect	text16
  2245  0534                     __ptext16:	
  2246 ;; *************** function ___lwmod *****************
  2247 ;; Defined at:
  2248 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  divisor         2    0[COMMON] unsigned int 
  2251 ;;  dividend        2    2[COMMON] unsigned int 
  2252 ;; Auto vars:     Size  Location     Type
  2253 ;;  counter         1    5[COMMON] unsigned char 
  2254 ;; Return value:  Size  Location     Type
  2255 ;;                  2    0[COMMON] unsigned int 
  2256 ;; Registers used:
  2257 ;;		wreg, status,2, status,0
  2258 ;; Tracked objects:
  2259 ;;		On entry : 0/0
  2260 ;;		On exit  : 0/0
  2261 ;;		Unchanged: 0/0
  2262 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2263 ;;      Params:         4       0       0       0       0
  2264 ;;      Locals:         1       0       0       0       0
  2265 ;;      Temps:          1       0       0       0       0
  2266 ;;      Totals:         6       0       0       0       0
  2267 ;;Total ram usage:        6 bytes
  2268 ;; Hardware stack levels used:    1
  2269 ;; This function calls:
  2270 ;;		Nothing
  2271 ;; This function is called by:
  2272 ;;		_lcd_bcd
  2273 ;; This function uses a non-reentrant model
  2274 ;;
  2275                           
  2276                           
  2277                           ;psect for function ___lwmod
  2278  0534                     ___lwmod:	
  2279                           
  2280                           ;incstack = 0
  2281                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2282  0534  0870               	movf	___lwmod@divisor,w
  2283  0535  0471               	iorwf	___lwmod@divisor+1,w
  2284  0536  1903               	btfsc	3,2
  2285  0537  2D61               	goto	l1104
  2286  0538  01F5               	clrf	___lwmod@counter
  2287  0539  0AF5               	incf	___lwmod@counter,f
  2288  053A                     l1094:	
  2289  053A  1BF1               	btfsc	___lwmod@divisor+1,7
  2290  053B  2D48               	goto	l1096
  2291  053C  3001               	movlw	1
  2292  053D                     u675:	
  2293  053D  1003               	clrc
  2294  053E  0DF0               	rlf	___lwmod@divisor,f
  2295  053F  0DF1               	rlf	___lwmod@divisor+1,f
  2296  0540  3EFF               	addlw	-1
  2297  0541  1D03               	skipz
  2298  0542  2D3D               	goto	u675
  2299  0543  3001               	movlw	1
  2300  0544  00F4               	movwf	??___lwmod
  2301  0545  0874               	movf	??___lwmod,w
  2302  0546  07F5               	addwf	___lwmod@counter,f
  2303  0547  2D3A               	goto	l1094
  2304  0548                     l1096:	
  2305  0548  0871               	movf	___lwmod@divisor+1,w
  2306  0549  0273               	subwf	___lwmod@dividend+1,w
  2307  054A  1D03               	skipz
  2308  054B  2D4E               	goto	u695
  2309  054C  0870               	movf	___lwmod@divisor,w
  2310  054D  0272               	subwf	___lwmod@dividend,w
  2311  054E                     u695:	
  2312  054E  1C03               	skipc
  2313  054F  2D56               	goto	l1100
  2314  0550  0870               	movf	___lwmod@divisor,w
  2315  0551  02F2               	subwf	___lwmod@dividend,f
  2316  0552  0871               	movf	___lwmod@divisor+1,w
  2317  0553  1C03               	skipc
  2318  0554  03F3               	decf	___lwmod@dividend+1,f
  2319  0555  02F3               	subwf	___lwmod@dividend+1,f
  2320  0556                     l1100:	
  2321  0556  3001               	movlw	1
  2322  0557                     u705:	
  2323  0557  1003               	clrc
  2324  0558  0CF1               	rrf	___lwmod@divisor+1,f
  2325  0559  0CF0               	rrf	___lwmod@divisor,f
  2326  055A  3EFF               	addlw	-1
  2327  055B  1D03               	skipz
  2328  055C  2D57               	goto	u705
  2329  055D  3001               	movlw	1
  2330  055E  02F5               	subwf	___lwmod@counter,f
  2331  055F  1D03               	btfss	3,2
  2332  0560  2D48               	goto	l1096
  2333  0561                     l1104:	
  2334  0561  0873               	movf	___lwmod@dividend+1,w
  2335  0562  00F1               	movwf	?___lwmod+1
  2336  0563  0872               	movf	___lwmod@dividend,w
  2337  0564  00F0               	movwf	?___lwmod
  2338  0565  0008               	return
  2339  0566                     __end_of___lwmod:	
  2340                           
  2341                           	psect	text17
  2342  05D1                     __ptext17:	
  2343 ;; *************** function ___lwdiv *****************
  2344 ;; Defined at:
  2345 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;  divisor         2    0[COMMON] unsigned int 
  2348 ;;  dividend        2    2[COMMON] unsigned int 
  2349 ;; Auto vars:     Size  Location     Type
  2350 ;;  quotient        2    5[COMMON] unsigned int 
  2351 ;;  counter         1    7[COMMON] unsigned char 
  2352 ;; Return value:  Size  Location     Type
  2353 ;;                  2    0[COMMON] unsigned int 
  2354 ;; Registers used:
  2355 ;;		wreg, status,2, status,0
  2356 ;; Tracked objects:
  2357 ;;		On entry : 0/0
  2358 ;;		On exit  : 0/0
  2359 ;;		Unchanged: 0/0
  2360 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2361 ;;      Params:         4       0       0       0       0
  2362 ;;      Locals:         3       0       0       0       0
  2363 ;;      Temps:          1       0       0       0       0
  2364 ;;      Totals:         8       0       0       0       0
  2365 ;;Total ram usage:        8 bytes
  2366 ;; Hardware stack levels used:    1
  2367 ;; This function calls:
  2368 ;;		Nothing
  2369 ;; This function is called by:
  2370 ;;		_lcd_bcd
  2371 ;; This function uses a non-reentrant model
  2372 ;;
  2373                           
  2374                           
  2375                           ;psect for function ___lwdiv
  2376  05D1                     ___lwdiv:	
  2377                           
  2378                           ;incstack = 0
  2379                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2380  05D1  01F5               	clrf	___lwdiv@quotient
  2381  05D2  01F6               	clrf	___lwdiv@quotient+1
  2382  05D3  0870               	movf	___lwdiv@divisor,w
  2383  05D4  0471               	iorwf	___lwdiv@divisor+1,w
  2384  05D5  1903               	btfsc	3,2
  2385  05D6  2E08               	goto	l1082
  2386  05D7  01F7               	clrf	___lwdiv@counter
  2387  05D8  0AF7               	incf	___lwdiv@counter,f
  2388  05D9                     l1070:	
  2389  05D9  1BF1               	btfsc	___lwdiv@divisor+1,7
  2390  05DA  2DE7               	goto	l1072
  2391  05DB  3001               	movlw	1
  2392  05DC                     u605:	
  2393  05DC  1003               	clrc
  2394  05DD  0DF0               	rlf	___lwdiv@divisor,f
  2395  05DE  0DF1               	rlf	___lwdiv@divisor+1,f
  2396  05DF  3EFF               	addlw	-1
  2397  05E0  1D03               	skipz
  2398  05E1  2DDC               	goto	u605
  2399  05E2  3001               	movlw	1
  2400  05E3  00F4               	movwf	??___lwdiv
  2401  05E4  0874               	movf	??___lwdiv,w
  2402  05E5  07F7               	addwf	___lwdiv@counter,f
  2403  05E6  2DD9               	goto	l1070
  2404  05E7                     l1072:	
  2405  05E7  3001               	movlw	1
  2406  05E8                     u625:	
  2407  05E8  1003               	clrc
  2408  05E9  0DF5               	rlf	___lwdiv@quotient,f
  2409  05EA  0DF6               	rlf	___lwdiv@quotient+1,f
  2410  05EB  3EFF               	addlw	-1
  2411  05EC  1D03               	skipz
  2412  05ED  2DE8               	goto	u625
  2413  05EE  0871               	movf	___lwdiv@divisor+1,w
  2414  05EF  0273               	subwf	___lwdiv@dividend+1,w
  2415  05F0  1D03               	skipz
  2416  05F1  2DF4               	goto	u635
  2417  05F2  0870               	movf	___lwdiv@divisor,w
  2418  05F3  0272               	subwf	___lwdiv@dividend,w
  2419  05F4                     u635:	
  2420  05F4  1C03               	skipc
  2421  05F5  2DFD               	goto	l1078
  2422  05F6  0870               	movf	___lwdiv@divisor,w
  2423  05F7  02F2               	subwf	___lwdiv@dividend,f
  2424  05F8  0871               	movf	___lwdiv@divisor+1,w
  2425  05F9  1C03               	skipc
  2426  05FA  03F3               	decf	___lwdiv@dividend+1,f
  2427  05FB  02F3               	subwf	___lwdiv@dividend+1,f
  2428  05FC  1475               	bsf	___lwdiv@quotient,0
  2429  05FD                     l1078:	
  2430  05FD  3001               	movlw	1
  2431  05FE                     u645:	
  2432  05FE  1003               	clrc
  2433  05FF  0CF1               	rrf	___lwdiv@divisor+1,f
  2434  0600  0CF0               	rrf	___lwdiv@divisor,f
  2435  0601  3EFF               	addlw	-1
  2436  0602  1D03               	skipz
  2437  0603  2DFE               	goto	u645
  2438  0604  3001               	movlw	1
  2439  0605  02F7               	subwf	___lwdiv@counter,f
  2440  0606  1D03               	btfss	3,2
  2441  0607  2DE7               	goto	l1072
  2442  0608                     l1082:	
  2443  0608  0876               	movf	___lwdiv@quotient+1,w
  2444  0609  00F1               	movwf	?___lwdiv+1
  2445  060A  0875               	movf	___lwdiv@quotient,w
  2446  060B  00F0               	movwf	?___lwdiv
  2447  060C  0008               	return
  2448  060D                     __end_of___lwdiv:	
  2449                           
  2450                           	psect	text18
  2451  047F                     __ptext18:	
  2452 ;; *************** function _InitApp *****************
  2453 ;; Defined at:
  2454 ;;		line 22 in file "user.c"
  2455 ;; Parameters:    Size  Location     Type
  2456 ;;		None
  2457 ;; Auto vars:     Size  Location     Type
  2458 ;;		None
  2459 ;; Return value:  Size  Location     Type
  2460 ;;                  1    wreg      void 
  2461 ;; Registers used:
  2462 ;;		None
  2463 ;; Tracked objects:
  2464 ;;		On entry : 0/0
  2465 ;;		On exit  : 0/0
  2466 ;;		Unchanged: 0/0
  2467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2468 ;;      Params:         0       0       0       0       0
  2469 ;;      Locals:         0       0       0       0       0
  2470 ;;      Temps:          0       0       0       0       0
  2471 ;;      Totals:         0       0       0       0       0
  2472 ;;Total ram usage:        0 bytes
  2473 ;; Hardware stack levels used:    1
  2474 ;; This function calls:
  2475 ;;		Nothing
  2476 ;; This function is called by:
  2477 ;;		_main
  2478 ;; This function uses a non-reentrant model
  2479 ;;
  2480                           
  2481                           
  2482                           ;psect for function _InitApp
  2483  047F                     _InitApp:	
  2484                           
  2485                           ;incstack = 0
  2486                           ; Regs used in _InitApp: []
  2487  047F  0008               	return
  2488  0480                     __end_of_InitApp:	
  2489                           
  2490                           	psect	text19
  2491  059B                     __ptext19:	
  2492 ;; *************** function _I2C_Master_Init *****************
  2493 ;; Defined at:
  2494 ;;		line 5 in file "i2c.c"
  2495 ;; Parameters:    Size  Location     Type
  2496 ;;  c               4    0[BANK0 ] const unsigned long 
  2497 ;; Auto vars:     Size  Location     Type
  2498 ;;		None
  2499 ;; Return value:  Size  Location     Type
  2500 ;;                  1    wreg      void 
  2501 ;; Registers used:
  2502 ;;		wreg, status,2, status,0, pclath, cstack
  2503 ;; Tracked objects:
  2504 ;;		On entry : 0/0
  2505 ;;		On exit  : 0/0
  2506 ;;		Unchanged: 0/0
  2507 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2508 ;;      Params:         0       4       0       0       0
  2509 ;;      Locals:         0       0       0       0       0
  2510 ;;      Temps:          0       4       0       0       0
  2511 ;;      Totals:         0       8       0       0       0
  2512 ;;Total ram usage:        8 bytes
  2513 ;; Hardware stack levels used:    1
  2514 ;; Hardware stack levels required when called:    1
  2515 ;; This function calls:
  2516 ;;		___lldiv
  2517 ;; This function is called by:
  2518 ;;		_main
  2519 ;; This function uses a non-reentrant model
  2520 ;;
  2521                           
  2522                           
  2523                           ;psect for function _I2C_Master_Init
  2524  059B                     _I2C_Master_Init:	
  2525                           
  2526                           ;i2c.c: 7: SSPCON = 0b00101000;
  2527                           
  2528                           ;incstack = 0
  2529                           ; Regs used in _I2C_Master_Init: [wreg+status,2+status,0+pclath+cstack]
  2530  059B  3028               	movlw	40
  2531  059C  1283               	bcf	3,5	;RP0=0, select bank0
  2532  059D  1303               	bcf	3,6	;RP1=0, select bank0
  2533  059E  0094               	movwf	20	;volatile
  2534                           
  2535                           ;i2c.c: 8: SSPCON2 = 0;
  2536  059F  1683               	bsf	3,5	;RP0=1, select bank1
  2537  05A0  1303               	bcf	3,6	;RP1=0, select bank1
  2538  05A1  0191               	clrf	17	;volatile
  2539                           
  2540                           ;i2c.c: 9: SSPADD = (20000000/(4*c))-1;
  2541  05A2  1283               	bcf	3,5	;RP0=0, select bank0
  2542  05A3  1303               	bcf	3,6	;RP1=0, select bank0
  2543  05A4  0820               	movf	I2C_Master_Init@c,w
  2544  05A5  00A4               	movwf	??_I2C_Master_Init
  2545  05A6  0821               	movf	I2C_Master_Init@c+1,w
  2546  05A7  00A5               	movwf	??_I2C_Master_Init+1
  2547  05A8  0822               	movf	I2C_Master_Init@c+2,w
  2548  05A9  00A6               	movwf	??_I2C_Master_Init+2
  2549  05AA  0823               	movf	I2C_Master_Init@c+3,w
  2550  05AB  00A7               	movwf	??_I2C_Master_Init+3
  2551  05AC  3002               	movlw	2
  2552  05AD                     u725:	
  2553  05AD  1003               	clrc
  2554  05AE  0DA4               	rlf	??_I2C_Master_Init,f
  2555  05AF  0DA5               	rlf	??_I2C_Master_Init+1,f
  2556  05B0  0DA6               	rlf	??_I2C_Master_Init+2,f
  2557  05B1  0DA7               	rlf	??_I2C_Master_Init+3,f
  2558  05B2  3EFF               	addlw	-1
  2559  05B3  1D03               	skipz
  2560  05B4  2DAD               	goto	u725
  2561  05B5  0827               	movf	??_I2C_Master_Init+3,w
  2562  05B6  00F3               	movwf	___lldiv@divisor+3
  2563  05B7  0826               	movf	??_I2C_Master_Init+2,w
  2564  05B8  00F2               	movwf	___lldiv@divisor+2
  2565  05B9  0825               	movf	??_I2C_Master_Init+1,w
  2566  05BA  00F1               	movwf	___lldiv@divisor+1
  2567  05BB  0824               	movf	??_I2C_Master_Init,w
  2568  05BC  00F0               	movwf	___lldiv@divisor
  2569  05BD  3001               	movlw	1
  2570  05BE  00F7               	movwf	___lldiv@dividend+3
  2571  05BF  3031               	movlw	49
  2572  05C0  00F6               	movwf	___lldiv@dividend+2
  2573  05C1  302D               	movlw	45
  2574  05C2  00F5               	movwf	___lldiv@dividend+1
  2575  05C3  3000               	movlw	0
  2576  05C4  00F4               	movwf	___lldiv@dividend
  2577  05C5  120A  118A  2652   	fcall	___lldiv
  2578  05C8  0870               	movf	?___lldiv,w
  2579  05C9  3EFF               	addlw	255
  2580  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  2581  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  2582  05CC  0093               	movwf	19	;volatile
  2583                           
  2584                           ;i2c.c: 10: SSPSTAT = 0;
  2585  05CD  0194               	clrf	20	;volatile
  2586                           
  2587                           ;i2c.c: 11: TRISC3 = 1;
  2588  05CE  1587               	bsf	7,3	;volatile
  2589                           
  2590                           ;i2c.c: 12: TRISC4 = 1;
  2591  05CF  1607               	bsf	7,4	;volatile
  2592  05D0  0008               	return
  2593  05D1                     __end_of_I2C_Master_Init:	
  2594                           
  2595                           	psect	text20
  2596  0652                     __ptext20:	
  2597 ;; *************** function ___lldiv *****************
  2598 ;; Defined at:
  2599 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lldiv.c"
  2600 ;; Parameters:    Size  Location     Type
  2601 ;;  divisor         4    0[COMMON] unsigned long 
  2602 ;;  dividend        4    4[COMMON] unsigned long 
  2603 ;; Auto vars:     Size  Location     Type
  2604 ;;  quotient        4    9[COMMON] unsigned long 
  2605 ;;  counter         1   13[COMMON] unsigned char 
  2606 ;; Return value:  Size  Location     Type
  2607 ;;                  4    0[COMMON] unsigned long 
  2608 ;; Registers used:
  2609 ;;		wreg, status,2, status,0
  2610 ;; Tracked objects:
  2611 ;;		On entry : 0/0
  2612 ;;		On exit  : 0/0
  2613 ;;		Unchanged: 0/0
  2614 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2615 ;;      Params:         8       0       0       0       0
  2616 ;;      Locals:         5       0       0       0       0
  2617 ;;      Temps:          1       0       0       0       0
  2618 ;;      Totals:        14       0       0       0       0
  2619 ;;Total ram usage:       14 bytes
  2620 ;; Hardware stack levels used:    1
  2621 ;; This function calls:
  2622 ;;		Nothing
  2623 ;; This function is called by:
  2624 ;;		_I2C_Master_Init
  2625 ;; This function uses a non-reentrant model
  2626 ;;
  2627                           
  2628                           
  2629                           ;psect for function ___lldiv
  2630  0652                     ___lldiv:	
  2631                           
  2632                           ;incstack = 0
  2633                           ; Regs used in ___lldiv: [wreg+status,2+status,0]
  2634  0652  3000               	movlw	0
  2635  0653  00FC               	movwf	___lldiv@quotient+3
  2636  0654  3000               	movlw	0
  2637  0655  00FB               	movwf	___lldiv@quotient+2
  2638  0656  3000               	movlw	0
  2639  0657  00FA               	movwf	___lldiv@quotient+1
  2640  0658  3000               	movlw	0
  2641  0659  00F9               	movwf	___lldiv@quotient
  2642  065A  0873               	movf	___lldiv@divisor+3,w
  2643  065B  0472               	iorwf	___lldiv@divisor+2,w
  2644  065C  0471               	iorwf	___lldiv@divisor+1,w
  2645  065D  0470               	iorwf	___lldiv@divisor,w
  2646  065E  1903               	skipnz
  2647  065F  2EA7               	goto	l1056
  2648  0660  01FD               	clrf	___lldiv@counter
  2649  0661  0AFD               	incf	___lldiv@counter,f
  2650  0662                     l1042:	
  2651  0662  1BF3               	btfsc	___lldiv@divisor+3,7
  2652  0663  2E72               	goto	l1044
  2653  0664  3001               	movlw	1
  2654  0665  00F8               	movwf	??___lldiv
  2655  0666                     u535:	
  2656  0666  1003               	clrc
  2657  0667  0DF0               	rlf	___lldiv@divisor,f
  2658  0668  0DF1               	rlf	___lldiv@divisor+1,f
  2659  0669  0DF2               	rlf	___lldiv@divisor+2,f
  2660  066A  0DF3               	rlf	___lldiv@divisor+3,f
  2661  066B  0BF8               	decfsz	??___lldiv,f
  2662  066C  2E66               	goto	u535
  2663  066D  3001               	movlw	1
  2664  066E  00F8               	movwf	??___lldiv
  2665  066F  0878               	movf	??___lldiv,w
  2666  0670  07FD               	addwf	___lldiv@counter,f
  2667  0671  2E62               	goto	l1042
  2668  0672                     l1044:	
  2669  0672  3001               	movlw	1
  2670  0673  00F8               	movwf	??___lldiv
  2671  0674                     u555:	
  2672  0674  1003               	clrc
  2673  0675  0DF9               	rlf	___lldiv@quotient,f
  2674  0676  0DFA               	rlf	___lldiv@quotient+1,f
  2675  0677  0DFB               	rlf	___lldiv@quotient+2,f
  2676  0678  0DFC               	rlf	___lldiv@quotient+3,f
  2677  0679  0BF8               	decfsz	??___lldiv,f
  2678  067A  2E74               	goto	u555
  2679  067B  0873               	movf	___lldiv@divisor+3,w
  2680  067C  0277               	subwf	___lldiv@dividend+3,w
  2681  067D  1D03               	skipz
  2682  067E  2E89               	goto	u565
  2683  067F  0872               	movf	___lldiv@divisor+2,w
  2684  0680  0276               	subwf	___lldiv@dividend+2,w
  2685  0681  1D03               	skipz
  2686  0682  2E89               	goto	u565
  2687  0683  0871               	movf	___lldiv@divisor+1,w
  2688  0684  0275               	subwf	___lldiv@dividend+1,w
  2689  0685  1D03               	skipz
  2690  0686  2E89               	goto	u565
  2691  0687  0870               	movf	___lldiv@divisor,w
  2692  0688  0274               	subwf	___lldiv@dividend,w
  2693  0689                     u565:	
  2694  0689  1C03               	skipc
  2695  068A  2E9A               	goto	l1052
  2696  068B  0870               	movf	___lldiv@divisor,w
  2697  068C  02F4               	subwf	___lldiv@dividend,f
  2698  068D  0871               	movf	___lldiv@divisor+1,w
  2699  068E  1C03               	skipc
  2700  068F  0F71               	incfsz	___lldiv@divisor+1,w
  2701  0690  02F5               	subwf	___lldiv@dividend+1,f
  2702  0691  0872               	movf	___lldiv@divisor+2,w
  2703  0692  1C03               	skipc
  2704  0693  0F72               	incfsz	___lldiv@divisor+2,w
  2705  0694  02F6               	subwf	___lldiv@dividend+2,f
  2706  0695  0873               	movf	___lldiv@divisor+3,w
  2707  0696  1C03               	skipc
  2708  0697  0F73               	incfsz	___lldiv@divisor+3,w
  2709  0698  02F7               	subwf	___lldiv@dividend+3,f
  2710  0699  1479               	bsf	___lldiv@quotient,0
  2711  069A                     l1052:	
  2712  069A  3001               	movlw	1
  2713  069B                     u575:	
  2714  069B  1003               	clrc
  2715  069C  0CF3               	rrf	___lldiv@divisor+3,f
  2716  069D  0CF2               	rrf	___lldiv@divisor+2,f
  2717  069E  0CF1               	rrf	___lldiv@divisor+1,f
  2718  069F  0CF0               	rrf	___lldiv@divisor,f
  2719  06A0  3EFF               	addlw	-1
  2720  06A1  1D03               	skipz
  2721  06A2  2E9B               	goto	u575
  2722  06A3  3001               	movlw	1
  2723  06A4  02FD               	subwf	___lldiv@counter,f
  2724  06A5  1D03               	btfss	3,2
  2725  06A6  2E72               	goto	l1044
  2726  06A7                     l1056:	
  2727  06A7  087C               	movf	___lldiv@quotient+3,w
  2728  06A8  00F3               	movwf	?___lldiv+3
  2729  06A9  087B               	movf	___lldiv@quotient+2,w
  2730  06AA  00F2               	movwf	?___lldiv+2
  2731  06AB  087A               	movf	___lldiv@quotient+1,w
  2732  06AC  00F1               	movwf	?___lldiv+1
  2733  06AD  0879               	movf	___lldiv@quotient,w
  2734  06AE  00F0               	movwf	?___lldiv
  2735  06AF  0008               	return
  2736  06B0                     __end_of___lldiv:	
  2737  007E                     btemp	set	126	;btemp
  2738  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     19      29
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_romRead
    _romRead->_I2C_Master_Read
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->_romRead
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    _I2C_Master_Init->___lldiv

Critical Paths under _main in BANK0

    _main->_lcd_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0    4930
                                             17 BANK0      2     2      0
                    _I2C_Master_Init
                            _InitApp
                            _lcd_bcd
                           _lcd_goto
                     _lcd_initialize
                            _romRead
 ---------------------------------------------------------------------------------
 (1) _romRead                                              8     6      2     697
                                              6 COMMON     8     6      2
                    _I2C_Master_Read
                   _I2C_Master_Start
                    _I2C_Master_Stop
                   _I2C_Master_Write
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Write                                     2     0      2     340
                                              0 COMMON     2     0      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Stop                                      0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Start                                     0     0      0       0
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (2) _I2C_Master_Read                                      6     4      2      98
                                              0 COMMON     6     4      2
                    _I2C_Master_Wait
 ---------------------------------------------------------------------------------
 (3) _I2C_Master_Wait                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              5 COMMON     2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     556
                                              5 COMMON     2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2243
                                              0 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
                            _romRead (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              5 COMMON     2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     534
                                              1 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     583
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _I2C_Master_Init                                      8     4      4     343
                                              0 BANK0      8     4      4
                            ___lldiv
 ---------------------------------------------------------------------------------
 (2) ___lldiv                                             14     6      8     268
                                              0 COMMON    14     6      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _I2C_Master_Init
     ___lldiv
   _InitApp
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _romRead (ARG)
       _I2C_Master_Read
         _I2C_Master_Wait
       _I2C_Master_Start
         _I2C_Master_Wait
       _I2C_Master_Stop
         _I2C_Master_Wait
       _I2C_Master_Write
         _I2C_Master_Wait
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _romRead
     _I2C_Master_Read
       _I2C_Master_Wait
     _I2C_Master_Start
       _I2C_Master_Wait
     _I2C_Master_Stop
       _I2C_Master_Wait
     _I2C_Master_Write
       _I2C_Master_Wait

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      E       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     13      1D       5       36.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri May 04 15:16:45 2018

             ?_lcd_putchar 0070                __CFG_CP$OFF 0000                        l178 04A3  
                      _RB4 0034                        _RB5 0035                        u500 04FA  
                      u440 04BD                        _PEN 048A               __CFG_CPD$OFF 0000  
                      u460 04C8                        u605 05DC                        u535 0666  
                      u625 05E8                        u705 0557                        u555 0674  
                      u635 05F4                        _SEN 0488                        u565 0689  
                      u725 05AD                        u645 05FE                        u575 069B  
                      u760 072D                        u675 053D                        u695 054E  
                      u867 050D                        u877 057D                        u887 058B  
                      fsr0 0004                        indf 0000               __CFG_FOSC$HS 0000  
        set_lcd_e@b_output 0070               __CFG_LVP$OFF 0000                       l1100 0556  
                     l1030 04FD                       l1104 0561                       l1042 0662  
                     l1052 069A                       l1044 0672                       l1070 05D9  
                     l1142 06C5                       l1056 06A7                       l1072 05E7  
                     l1082 0608                       l1146 06D8                       l1218 0636  
                     l1078 05FD                       l1094 053A                       l1096 0548  
                     l1186 07DA                       _ADFM 04FF                       _ADON 00F8  
                     _CHS0 00FB                       _CHS1 00FC                       _CHS2 00FD  
                     _RCEN 048B                       _RSEN 0489               __CFG_WRT$OFF 0000  
                     _main 060D                       btemp 007E              __CFG_BOREN$ON 0000  
                     start 0000            __end_of_InitApp 0480          romRead@opcodeRead 007C  
         ?_I2C_Master_Init 0020           ?_I2C_Master_Read 0070           ?_I2C_Master_Wait 0070  
         ?_I2C_Master_Stop 0070                      _ADCS0 00FE                      _ADCS1 00FF  
                    ?_main 0070                      _ACKEN 048C                      _ACKDT 048D  
            __CFG_WDTE$OFF 0000            __end_of___lldiv 06B0                      _PCFG0 04F8  
                    _PCFG1 04F9                      _PCFG2 04FA                      _PCFG3 04FB  
          __end_of___lwdiv 060D            __end_of___lwmod 0566                      _PORTA 0005  
                    _PORTB 0006                      _PORTD 0008                      _TRISA 0085  
                    _TRISB 0086                      _TRISD 0088       send_lcd_data@uc_data 0071  
            __CFG_PWRTE$ON 0000            __end_of_lcd_bcd 07F0            __end_of_romRead 0722  
                    status 0003                      wtemp0 007E            __initialization 07F0  
        send_lcd_data@b_rs 0074               __end_of_main 0652      __end_of_send_lcd_data 059B  
                   ??_main 007E          ?_I2C_Master_Start 0070          ?_I2C_Master_Write 0070  
       ??_I2C_Master_Start 0070         ??_I2C_Master_Write 0072                     _ADRESH 001E  
                   _ADRESL 009E                     _SSPADD 0093                     _TRISC3 043B  
                   _TRISC4 043C                     _SSPCON 0014                     _SSPBUF 0013  
                ??_InitApp 0070           __end_of_lcd_goto 04D7                  ??___lldiv 0078  
                ??___lwdiv 0074                  ??___lwmod 0074                  ??_lcd_bcd 0022  
     __size_of_lcd_putchar 000A                  ??_romRead 0078           ??_lcd_initialize 0075  
  __end_of__initialization 07FC             __pcstackCOMMON 0070         __size_of_lcd_clear 0007  
               __pbssBANK0 0033                 __pmaintext 060D         __size_of_set_lcd_e 000B  
           romRead@addrLSB 007D                    _SSPCON2 0091                  ?_lcd_goto 0070  
                  _SSPSTAT 0094              ?_set_lcd_data 0070                    _InitApp 047F  
        __end_of_lcd_clear 048D                    ___lldiv 0652                    ___lwdiv 05D1  
                  ___lwmod 0534                    __ptext1 06B0                    __ptext2 049B  
                  __ptext3 0494                    __ptext4 048D                    __ptext5 04D7  
                  __ptext6 04A3                    __ptext7 0503                    __ptext8 0486  
                  __ptext9 04CC                    _lcd_bcd 0722                romRead@addr 0076  
              romRead@temp 007A   __size_of_I2C_Master_Init 0036   __size_of_I2C_Master_Read 002C  
                  _romRead 06B0   __size_of_I2C_Master_Wait 0009   __size_of_I2C_Master_Stop 0007  
                  main@add 0031                 ??_lcd_goto 0075       end_of_initialization 07FC  
        lcd_bcd@ui_decimal 0026             ??_set_lcd_data 0070          __end_of_set_lcd_e 04C1  
__size_of_I2C_Master_Start 0007  __size_of_I2C_Master_Write 0008            ___lldiv@divisor 0070  
          ___lldiv@counter 007D                 _set_lcd_rs 04C1           I2C_Master_Init@c 0020  
         I2C_Master_Read@a 0070     __size_of_send_lcd_data 0035              ??_lcd_putchar 0075  
        lcd_putchar@c_data 0076        start_initialization 07F0         set_lcd_rs@b_output 0070  
      lcd_goto@uc_position 0076          ??_I2C_Master_Init 0024          ??_I2C_Master_Read 0072  
        ??_I2C_Master_Wait 0070          ??_I2C_Master_Stop 0070                ?_set_lcd_rs 0070  
            _send_lcd_data 0566       __end_of_set_lcd_data 0486        __end_of_lcd_putchar 04B6  
                ___latbits 0002              __pcstackBANK0 0020          __size_of_lcd_goto 000B  
                 ?_InitApp 0070           _I2C_Master_Start 048D           _I2C_Master_Write 049B  
  __size_of_lcd_initialize 0031           ___lwdiv@dividend 0072                   ?___lldiv 0070  
                 ?___lwdiv 0070                   ?___lwmod 0070                  _lcd_clear 0486  
           ?_send_lcd_data 0071                   ?_lcd_bcd 0020              romRead@opcode 007B  
                 ?_romRead 0076        __size_of_set_lcd_rs 000B           ___lwdiv@quotient 0075  
      set_lcd_data@uc_data 0070                  _set_lcd_e 04B6                   _GO_nDONE 00FA  
         lcd_bcd@ui_number 0020                _lcd_putchar 04AC                 ?_lcd_clear 0070  
      I2C_Master_Read@temp 0074           __size_of_InitApp 0001                 ?_set_lcd_e 0070  
    __size_of_set_lcd_data 0006            ??_send_lcd_data 0072           __size_of___lldiv 005E  
         __size_of___lwdiv 003C           __size_of___lwmod 0032           __size_of_lcd_bcd 00CE  
          _I2C_Master_Init 059B            _I2C_Master_Read 04D7            _I2C_Master_Wait 04A3  
          _I2C_Master_Stop 0494            ___lwdiv@divisor 0070            ___lwdiv@counter 0077  
                 __ptext10 0722                   __ptext11 04AC                   __ptext20 0652  
                 __ptext12 0566                   __ptext13 04C1                   __ptext14 04B6  
                 __ptext15 0480                   __ptext16 0534                   __ptext17 05D1  
                 __ptext18 047F                   __ptext19 059B           __size_of_romRead 0072  
                 _lcd_goto 04CC              __size_of_main 0045            lcd_bcd@uc_digit 0030  
             _set_lcd_data 0480             _lcd_initialize 0503               ??_set_lcd_rs 0070  
              ??_lcd_clear 0075   __end_of_I2C_Master_Start 0494   __end_of_I2C_Master_Write 04A3  
       __end_of_set_lcd_rs 04CC           ___lwmod@dividend 0072     __end_of_lcd_initialize 0534  
         ___lldiv@dividend 0074                ??_set_lcd_e 0070    __end_of_I2C_Master_Init 05D1  
  __end_of_I2C_Master_Read 0503    __end_of_I2C_Master_Wait 04AC    __end_of_I2C_Master_Stop 049B  
             lcd_bcd@F1134 0033           ___lldiv@quotient 0079          I2C_Master_Write@d 0070  
          ___lwmod@divisor 0070            ___lwmod@counter 0075            ?_lcd_initialize 0070  
