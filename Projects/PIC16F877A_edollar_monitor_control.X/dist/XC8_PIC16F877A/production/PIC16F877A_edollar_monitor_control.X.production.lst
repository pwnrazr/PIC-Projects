

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Fri Apr 16 03:45:44 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og9 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	intentry,global,class=CODE,delta=2
    22                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    23                           	dabs	1,0x7E,2
    24  0000                     
    25                           ; Version 2.32
    26                           ; Generated 02/02/2021 GMT
    27                           ; 
    28                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC16F877A Definitions
    58                           ; 
    59                           ; SFR Addresses
    60  0000                     	;# 
    61  0001                     	;# 
    62  0002                     	;# 
    63  0003                     	;# 
    64  0004                     	;# 
    65  0005                     	;# 
    66  0006                     	;# 
    67  0007                     	;# 
    68  0008                     	;# 
    69  0009                     	;# 
    70  000A                     	;# 
    71  000B                     	;# 
    72  000C                     	;# 
    73  000D                     	;# 
    74  000E                     	;# 
    75  000E                     	;# 
    76  000F                     	;# 
    77  0010                     	;# 
    78  0011                     	;# 
    79  0012                     	;# 
    80  0013                     	;# 
    81  0014                     	;# 
    82  0015                     	;# 
    83  0015                     	;# 
    84  0016                     	;# 
    85  0017                     	;# 
    86  0018                     	;# 
    87  0019                     	;# 
    88  001A                     	;# 
    89  001B                     	;# 
    90  001B                     	;# 
    91  001C                     	;# 
    92  001D                     	;# 
    93  001E                     	;# 
    94  001F                     	;# 
    95  0081                     	;# 
    96  0085                     	;# 
    97  0086                     	;# 
    98  0087                     	;# 
    99  0088                     	;# 
   100  0089                     	;# 
   101  008C                     	;# 
   102  008D                     	;# 
   103  008E                     	;# 
   104  0091                     	;# 
   105  0092                     	;# 
   106  0093                     	;# 
   107  0094                     	;# 
   108  0098                     	;# 
   109  0099                     	;# 
   110  009C                     	;# 
   111  009D                     	;# 
   112  009E                     	;# 
   113  009F                     	;# 
   114  010C                     	;# 
   115  010D                     	;# 
   116  010E                     	;# 
   117  010F                     	;# 
   118  018C                     	;# 
   119  018D                     	;# 
   120  0000                     	;# 
   121  0001                     	;# 
   122  0002                     	;# 
   123  0003                     	;# 
   124  0004                     	;# 
   125  0005                     	;# 
   126  0006                     	;# 
   127  0007                     	;# 
   128  0008                     	;# 
   129  0009                     	;# 
   130  000A                     	;# 
   131  000B                     	;# 
   132  000C                     	;# 
   133  000D                     	;# 
   134  000E                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0015                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  001A                     	;# 
   149  001B                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0081                     	;# 
   156  0085                     	;# 
   157  0086                     	;# 
   158  0087                     	;# 
   159  0088                     	;# 
   160  0089                     	;# 
   161  008C                     	;# 
   162  008D                     	;# 
   163  008E                     	;# 
   164  0091                     	;# 
   165  0092                     	;# 
   166  0093                     	;# 
   167  0094                     	;# 
   168  0098                     	;# 
   169  0099                     	;# 
   170  009C                     	;# 
   171  009D                     	;# 
   172  009E                     	;# 
   173  009F                     	;# 
   174  010C                     	;# 
   175  010D                     	;# 
   176  010E                     	;# 
   177  010F                     	;# 
   178  018C                     	;# 
   179  018D                     	;# 
   180  0000                     	;# 
   181  0001                     	;# 
   182  0002                     	;# 
   183  0003                     	;# 
   184  0004                     	;# 
   185  0005                     	;# 
   186  0006                     	;# 
   187  0007                     	;# 
   188  0008                     	;# 
   189  0009                     	;# 
   190  000A                     	;# 
   191  000B                     	;# 
   192  000C                     	;# 
   193  000D                     	;# 
   194  000E                     	;# 
   195  000E                     	;# 
   196  000F                     	;# 
   197  0010                     	;# 
   198  0011                     	;# 
   199  0012                     	;# 
   200  0013                     	;# 
   201  0014                     	;# 
   202  0015                     	;# 
   203  0015                     	;# 
   204  0016                     	;# 
   205  0017                     	;# 
   206  0018                     	;# 
   207  0019                     	;# 
   208  001A                     	;# 
   209  001B                     	;# 
   210  001B                     	;# 
   211  001C                     	;# 
   212  001D                     	;# 
   213  001E                     	;# 
   214  001F                     	;# 
   215  0081                     	;# 
   216  0085                     	;# 
   217  0086                     	;# 
   218  0087                     	;# 
   219  0088                     	;# 
   220  0089                     	;# 
   221  008C                     	;# 
   222  008D                     	;# 
   223  008E                     	;# 
   224  0091                     	;# 
   225  0092                     	;# 
   226  0093                     	;# 
   227  0094                     	;# 
   228  0098                     	;# 
   229  0099                     	;# 
   230  009C                     	;# 
   231  009D                     	;# 
   232  009E                     	;# 
   233  009F                     	;# 
   234  010C                     	;# 
   235  010D                     	;# 
   236  010E                     	;# 
   237  010F                     	;# 
   238  018C                     	;# 
   239  018D                     	;# 
   240  0000                     	;# 
   241  0001                     	;# 
   242  0002                     	;# 
   243  0003                     	;# 
   244  0004                     	;# 
   245  0005                     	;# 
   246  0006                     	;# 
   247  0007                     	;# 
   248  0008                     	;# 
   249  0009                     	;# 
   250  000A                     	;# 
   251  000B                     	;# 
   252  000C                     	;# 
   253  000D                     	;# 
   254  000E                     	;# 
   255  000E                     	;# 
   256  000F                     	;# 
   257  0010                     	;# 
   258  0011                     	;# 
   259  0012                     	;# 
   260  0013                     	;# 
   261  0014                     	;# 
   262  0015                     	;# 
   263  0015                     	;# 
   264  0016                     	;# 
   265  0017                     	;# 
   266  0018                     	;# 
   267  0019                     	;# 
   268  001A                     	;# 
   269  001B                     	;# 
   270  001B                     	;# 
   271  001C                     	;# 
   272  001D                     	;# 
   273  001E                     	;# 
   274  001F                     	;# 
   275  0081                     	;# 
   276  0085                     	;# 
   277  0086                     	;# 
   278  0087                     	;# 
   279  0088                     	;# 
   280  0089                     	;# 
   281  008C                     	;# 
   282  008D                     	;# 
   283  008E                     	;# 
   284  0091                     	;# 
   285  0092                     	;# 
   286  0093                     	;# 
   287  0094                     	;# 
   288  0098                     	;# 
   289  0099                     	;# 
   290  009C                     	;# 
   291  009D                     	;# 
   292  009E                     	;# 
   293  009F                     	;# 
   294  010C                     	;# 
   295  010D                     	;# 
   296  010E                     	;# 
   297  010F                     	;# 
   298  018C                     	;# 
   299  018D                     	;# 
   300  0000                     	;# 
   301  0001                     	;# 
   302  0002                     	;# 
   303  0003                     	;# 
   304  0004                     	;# 
   305  0005                     	;# 
   306  0006                     	;# 
   307  0007                     	;# 
   308  0008                     	;# 
   309  0009                     	;# 
   310  000A                     	;# 
   311  000B                     	;# 
   312  000C                     	;# 
   313  000D                     	;# 
   314  000E                     	;# 
   315  000E                     	;# 
   316  000F                     	;# 
   317  0010                     	;# 
   318  0011                     	;# 
   319  0012                     	;# 
   320  0013                     	;# 
   321  0014                     	;# 
   322  0015                     	;# 
   323  0015                     	;# 
   324  0016                     	;# 
   325  0017                     	;# 
   326  0018                     	;# 
   327  0019                     	;# 
   328  001A                     	;# 
   329  001B                     	;# 
   330  001B                     	;# 
   331  001C                     	;# 
   332  001D                     	;# 
   333  001E                     	;# 
   334  001F                     	;# 
   335  0081                     	;# 
   336  0085                     	;# 
   337  0086                     	;# 
   338  0087                     	;# 
   339  0088                     	;# 
   340  0089                     	;# 
   341  008C                     	;# 
   342  008D                     	;# 
   343  008E                     	;# 
   344  0091                     	;# 
   345  0092                     	;# 
   346  0093                     	;# 
   347  0094                     	;# 
   348  0098                     	;# 
   349  0099                     	;# 
   350  009C                     	;# 
   351  009D                     	;# 
   352  009E                     	;# 
   353  009F                     	;# 
   354  010C                     	;# 
   355  010D                     	;# 
   356  010E                     	;# 
   357  010F                     	;# 
   358  018C                     	;# 
   359  018D                     	;# 
   360  0000                     	;# 
   361  0001                     	;# 
   362  0002                     	;# 
   363  0003                     	;# 
   364  0004                     	;# 
   365  0005                     	;# 
   366  0006                     	;# 
   367  0007                     	;# 
   368  0008                     	;# 
   369  0009                     	;# 
   370  000A                     	;# 
   371  000B                     	;# 
   372  000C                     	;# 
   373  000D                     	;# 
   374  000E                     	;# 
   375  000E                     	;# 
   376  000F                     	;# 
   377  0010                     	;# 
   378  0011                     	;# 
   379  0012                     	;# 
   380  0013                     	;# 
   381  0014                     	;# 
   382  0015                     	;# 
   383  0015                     	;# 
   384  0016                     	;# 
   385  0017                     	;# 
   386  0018                     	;# 
   387  0019                     	;# 
   388  001A                     	;# 
   389  001B                     	;# 
   390  001B                     	;# 
   391  001C                     	;# 
   392  001D                     	;# 
   393  001E                     	;# 
   394  001F                     	;# 
   395  0081                     	;# 
   396  0085                     	;# 
   397  0086                     	;# 
   398  0087                     	;# 
   399  0088                     	;# 
   400  0089                     	;# 
   401  008C                     	;# 
   402  008D                     	;# 
   403  008E                     	;# 
   404  0091                     	;# 
   405  0092                     	;# 
   406  0093                     	;# 
   407  0094                     	;# 
   408  0098                     	;# 
   409  0099                     	;# 
   410  009C                     	;# 
   411  009D                     	;# 
   412  009E                     	;# 
   413  009F                     	;# 
   414  010C                     	;# 
   415  010D                     	;# 
   416  010E                     	;# 
   417  010F                     	;# 
   418  018C                     	;# 
   419  018D                     	;# 
   420  0000                     	;# 
   421  0001                     	;# 
   422  0002                     	;# 
   423  0003                     	;# 
   424  0004                     	;# 
   425  0005                     	;# 
   426  0006                     	;# 
   427  0007                     	;# 
   428  0008                     	;# 
   429  0009                     	;# 
   430  000A                     	;# 
   431  000B                     	;# 
   432  000C                     	;# 
   433  000D                     	;# 
   434  000E                     	;# 
   435  000E                     	;# 
   436  000F                     	;# 
   437  0010                     	;# 
   438  0011                     	;# 
   439  0012                     	;# 
   440  0013                     	;# 
   441  0014                     	;# 
   442  0015                     	;# 
   443  0015                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001B                     	;# 
   451  001C                     	;# 
   452  001D                     	;# 
   453  001E                     	;# 
   454  001F                     	;# 
   455  0081                     	;# 
   456  0085                     	;# 
   457  0086                     	;# 
   458  0087                     	;# 
   459  0088                     	;# 
   460  0089                     	;# 
   461  008C                     	;# 
   462  008D                     	;# 
   463  008E                     	;# 
   464  0091                     	;# 
   465  0092                     	;# 
   466  0093                     	;# 
   467  0094                     	;# 
   468  0098                     	;# 
   469  0099                     	;# 
   470  009C                     	;# 
   471  009D                     	;# 
   472  009E                     	;# 
   473  009F                     	;# 
   474  010C                     	;# 
   475  010D                     	;# 
   476  010E                     	;# 
   477  010F                     	;# 
   478  018C                     	;# 
   479  018D                     	;# 
   480  0000                     	;# 
   481  0001                     	;# 
   482  0002                     	;# 
   483  0003                     	;# 
   484  0004                     	;# 
   485  0005                     	;# 
   486  0006                     	;# 
   487  0007                     	;# 
   488  0008                     	;# 
   489  0009                     	;# 
   490  000A                     	;# 
   491  000B                     	;# 
   492  000C                     	;# 
   493  000D                     	;# 
   494  000E                     	;# 
   495  000E                     	;# 
   496  000F                     	;# 
   497  0010                     	;# 
   498  0011                     	;# 
   499  0012                     	;# 
   500  0013                     	;# 
   501  0014                     	;# 
   502  0015                     	;# 
   503  0015                     	;# 
   504  0016                     	;# 
   505  0017                     	;# 
   506  0018                     	;# 
   507  0019                     	;# 
   508  001A                     	;# 
   509  001B                     	;# 
   510  001B                     	;# 
   511  001C                     	;# 
   512  001D                     	;# 
   513  001E                     	;# 
   514  001F                     	;# 
   515  0081                     	;# 
   516  0085                     	;# 
   517  0086                     	;# 
   518  0087                     	;# 
   519  0088                     	;# 
   520  0089                     	;# 
   521  008C                     	;# 
   522  008D                     	;# 
   523  008E                     	;# 
   524  0091                     	;# 
   525  0092                     	;# 
   526  0093                     	;# 
   527  0094                     	;# 
   528  0098                     	;# 
   529  0099                     	;# 
   530  009C                     	;# 
   531  009D                     	;# 
   532  009E                     	;# 
   533  009F                     	;# 
   534  010C                     	;# 
   535  010D                     	;# 
   536  010E                     	;# 
   537  010F                     	;# 
   538  018C                     	;# 
   539  018D                     	;# 
   540  0008                     _PORTD	set	8
   541  0007                     _PORTC	set	7
   542  0006                     _PORTB	set	6
   543  0005                     _PORTA	set	5
   544  0034                     _RB4	set	52
   545  0035                     _RB5	set	53
   546  0088                     _TRISD	set	136
   547  0087                     _TRISC	set	135
   548  0086                     _TRISB	set	134
   549  0085                     _TRISA	set	133
   550                           
   551                           	psect	strings
   552  0100                     __pstrings:
   553  0100                     stringtab:
   554  0100                     __stringtab:
   555  0100                     stringcode:	
   556                           ;	String table - string pointers are 1 byte each
   557                           
   558  0100                     stringdir:
   559  0100  3001               	movlw	high stringdir
   560  0101  008A               	movwf	10
   561  0102  0804               	movf	4,w
   562  0103  0A84               	incf	4,f
   563  0104  0782               	addwf	2,f
   564  0105                     __stringbase:
   565  0105  3400               	retlw	0
   566  0106                     __end_of__stringtab:
   567  0106                     STR_1:
   568  0106  3454               	retlw	84	;'T'
   569  0107  3465               	retlw	101	;'e'
   570  0108  3473               	retlw	115	;'s'
   571  0109  3474               	retlw	116	;'t'
   572  010A  3420               	retlw	32	;' '
   573  010B  346C               	retlw	108	;'l'
   574  010C  3469               	retlw	105	;'i'
   575  010D  346E               	retlw	110	;'n'
   576  010E  3465               	retlw	101	;'e'
   577  010F  3420               	retlw	32	;' '
   578  0110  3431               	retlw	49	;'1'
   579  0111  3400               	retlw	0
   580  0112                     STR_2:
   581  0112  3454               	retlw	84	;'T'
   582  0113  3465               	retlw	101	;'e'
   583  0114  3473               	retlw	115	;'s'
   584  0115  3474               	retlw	116	;'t'
   585  0116  3420               	retlw	32	;' '
   586  0117  346C               	retlw	108	;'l'
   587  0118  3469               	retlw	105	;'i'
   588  0119  346E               	retlw	110	;'n'
   589  011A  3465               	retlw	101	;'e'
   590  011B  3420               	retlw	32	;' '
   591  011C  3432               	retlw	50	;'2'
   592  011D  3400               	retlw	0
   593                           
   594                           	psect	cinit
   595  000F                     start_initialization:	
   596                           ; #config settings
   597                           
   598  000F                     __initialization:
   599                           
   600                           ; Clear objects allocated to BANK0
   601  000F  1283               	bcf	3,5	;RP0=0, select bank0
   602  0010  1303               	bcf	3,6	;RP1=0, select bank0
   603  0011  01A0               	clrf	__pbssBANK0& (0+127)
   604  0012  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   605  0013  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   606  0014  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   607  0015  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   608  0016  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   609  0017  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   610  0018  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   611  0019  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   612  001A  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   613  001B                     end_of_initialization:	
   614                           ;End of C runtime variable initialization code
   615                           
   616  001B                     __end_of__initialization:
   617  001B  0183               	clrf	3
   618  001C  120A  118A  28BB   	ljmp	_main	;jump to C main() function
   619                           
   620                           	psect	bssBANK0
   621  0020                     __pbssBANK0:
   622  0020                     lcd_bcd@F917:
   623  0020                     	ds	10
   624                           
   625                           	psect	cstackCOMMON
   626  0070                     __pcstackCOMMON:
   627  0070                     ?_InitApp:
   628  0070                     ?_lcd_initialize:	
   629                           ; 1 bytes @ 0x0
   630                           
   631  0070                     ?_lcd_home:	
   632                           ; 1 bytes @ 0x0
   633                           
   634  0070                     ?_lcd_putstr:	
   635                           ; 1 bytes @ 0x0
   636                           
   637  0070                     ?_lcd_2ndline:	
   638                           ; 1 bytes @ 0x0
   639                           
   640  0070                     ?_set_lcd_e:	
   641                           ; 1 bytes @ 0x0
   642                           
   643  0070                     ?_lcd_clear:	
   644                           ; 1 bytes @ 0x0
   645                           
   646  0070                     ?_set_lcd_rs:	
   647                           ; 1 bytes @ 0x0
   648                           
   649  0070                     ?_set_lcd_data:	
   650                           ; 1 bytes @ 0x0
   651                           
   652  0070                     ?_isr:	
   653                           ; 1 bytes @ 0x0
   654                           
   655  0070                     ??_isr:	
   656                           ; 1 bytes @ 0x0
   657                           
   658  0070                     ?_main:	
   659                           ; 1 bytes @ 0x0
   660                           
   661  0070                     ?_lcd_putchar:	
   662                           ; 1 bytes @ 0x0
   663                           
   664                           
   665                           ; 1 bytes @ 0x0
   666  0070                     	ds	2
   667  0072                     ??_InitApp:
   668  0072                     ??_set_lcd_e:	
   669                           ; 1 bytes @ 0x2
   670                           
   671  0072                     ??_set_lcd_rs:	
   672                           ; 1 bytes @ 0x2
   673                           
   674  0072                     ??_set_lcd_data:	
   675                           ; 1 bytes @ 0x2
   676                           
   677  0072                     set_lcd_e@b_output:	
   678                           ; 1 bytes @ 0x2
   679                           
   680  0072                     set_lcd_rs@b_output:	
   681                           ; 1 bytes @ 0x2
   682                           
   683  0072                     set_lcd_data@uc_data:	
   684                           ; 1 bytes @ 0x2
   685                           
   686                           
   687                           ; 1 bytes @ 0x2
   688  0072                     	ds	1
   689  0073                     ?_send_lcd_data:
   690  0073                     send_lcd_data@uc_data:	
   691                           ; 1 bytes @ 0x3
   692                           
   693                           
   694                           ; 1 bytes @ 0x3
   695  0073                     	ds	1
   696  0074                     ??_send_lcd_data:
   697                           
   698                           ; 1 bytes @ 0x4
   699  0074                     	ds	2
   700  0076                     send_lcd_data@b_rs:
   701                           
   702                           ; 1 bytes @ 0x6
   703  0076                     	ds	1
   704  0077                     ??_lcd_initialize:
   705  0077                     ??_lcd_home:	
   706                           ; 1 bytes @ 0x7
   707                           
   708  0077                     ??_lcd_2ndline:	
   709                           ; 1 bytes @ 0x7
   710                           
   711  0077                     ??_lcd_clear:	
   712                           ; 1 bytes @ 0x7
   713                           
   714  0077                     ??_lcd_putchar:	
   715                           ; 1 bytes @ 0x7
   716                           
   717                           
   718                           ; 1 bytes @ 0x7
   719  0077                     	ds	1
   720  0078                     lcd_putchar@c_data:
   721                           
   722                           ; 1 bytes @ 0x8
   723  0078                     	ds	1
   724  0079                     ??_lcd_putstr:
   725                           
   726                           ; 1 bytes @ 0x9
   727  0079                     	ds	1
   728  007A                     lcd_putstr@csz_string:
   729                           
   730                           ; 1 bytes @ 0xA
   731  007A                     	ds	1
   732  007B                     ??_main:
   733                           
   734                           	psect	maintext
   735  00BB                     __pmaintext:	
   736                           ; 1 bytes @ 0xB
   737 ;;
   738 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   739 ;;
   740 ;; *************** function _main *****************
   741 ;; Defined at:
   742 ;;		line 20 in file "main.c"
   743 ;; Parameters:    Size  Location     Type
   744 ;;		None
   745 ;; Auto vars:     Size  Location     Type
   746 ;;		None
   747 ;; Return value:  Size  Location     Type
   748 ;;                  1    wreg      void 
   749 ;; Registers used:
   750 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   751 ;; Tracked objects:
   752 ;;		On entry : B00/0
   753 ;;		On exit  : 300/0
   754 ;;		Unchanged: 0/0
   755 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   756 ;;      Params:         0       0       0       0       0
   757 ;;      Locals:         0       0       0       0       0
   758 ;;      Temps:          0       0       0       0       0
   759 ;;      Totals:         0       0       0       0       0
   760 ;;Total ram usage:        0 bytes
   761 ;; Hardware stack levels required when called: 5
   762 ;; This function calls:
   763 ;;		_InitApp
   764 ;;		_lcd_2ndline
   765 ;;		_lcd_home
   766 ;;		_lcd_initialize
   767 ;;		_lcd_putstr
   768 ;; This function is called by:
   769 ;;		Startup code after reset
   770 ;; This function uses a non-reentrant model
   771 ;;
   772                           
   773                           
   774                           ;psect for function _main
   775  00BB                     _main:
   776                           
   777                           ;main.c: 23: InitApp();
   778                           
   779                           ;incstack = 0
   780                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   781  00BB  120A  118A  2162  120A  118A  	fcall	_InitApp
   782                           
   783                           ;main.c: 25: PORTA = 0;
   784  00C0  0185               	clrf	5	;volatile
   785                           
   786                           ;main.c: 26: PORTB = 0;
   787  00C1  0186               	clrf	6	;volatile
   788                           
   789                           ;main.c: 27: PORTC = 0;
   790  00C2  0187               	clrf	7	;volatile
   791                           
   792                           ;main.c: 28: PORTD = 0;
   793  00C3  0188               	clrf	8	;volatile
   794                           
   795                           ;main.c: 30: TRISA = 0b11111111;
   796  00C4  30FF               	movlw	255
   797  00C5  1683               	bsf	3,5	;RP0=1, select bank1
   798  00C6  0085               	movwf	5	;volatile
   799                           
   800                           ;main.c: 31: TRISB = 0b00000011;
   801  00C7  3003               	movlw	3
   802  00C8  0086               	movwf	6	;volatile
   803                           
   804                           ;main.c: 32: TRISC = 0b00000000;
   805  00C9  0187               	clrf	7	;volatile
   806                           
   807                           ;main.c: 33: TRISD = 0b00000000;
   808  00CA  0188               	clrf	8	;volatile
   809                           
   810                           ;main.c: 35: lcd_initialize();
   811  00CB  120A  118A  208A  120A  118A  	fcall	_lcd_initialize
   812  00D0                     l826:
   813                           
   814                           ;main.c: 38: {;main.c: 39: lcd_home();
   815  00D0  120A  118A  2147  120A  118A  	fcall	_lcd_home
   816                           
   817                           ;main.c: 40: lcd_putstr("Test line 1");
   818  00D5  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   819  00D6  120A  118A  201F  120A  118A  	fcall	_lcd_putstr
   820                           
   821                           ;main.c: 41: lcd_2ndline();
   822  00DB  120A  118A  213E  120A  118A  	fcall	_lcd_2ndline
   823                           
   824                           ;main.c: 42: lcd_putstr("Test line 2");
   825  00E0  300D               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   826  00E1  120A  118A  201F  120A  118A  	fcall	_lcd_putstr
   827  00E6  28D0               	goto	l826
   828  00E7                     __end_of_main:
   829                           
   830                           	psect	text1
   831  001F                     __ptext1:	
   832 ;; *************** function _lcd_putstr *****************
   833 ;; Defined at:
   834 ;;		line 241 in file "lcd.c"
   835 ;; Parameters:    Size  Location     Type
   836 ;;  csz_string      1    wreg     PTR const unsigned char 
   837 ;;		 -> STR_2(12), STR_1(12), 
   838 ;; Auto vars:     Size  Location     Type
   839 ;;  csz_string      1   10[COMMON] PTR const unsigned char 
   840 ;;		 -> STR_2(12), STR_1(12), 
   841 ;; Return value:  Size  Location     Type
   842 ;;                  1    wreg      void 
   843 ;; Registers used:
   844 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   845 ;; Tracked objects:
   846 ;;		On entry : 300/0
   847 ;;		On exit  : 300/0
   848 ;;		Unchanged: 0/0
   849 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   850 ;;      Params:         0       0       0       0       0
   851 ;;      Locals:         1       0       0       0       0
   852 ;;      Temps:          1       0       0       0       0
   853 ;;      Totals:         2       0       0       0       0
   854 ;;Total ram usage:        2 bytes
   855 ;; Hardware stack levels used: 1
   856 ;; Hardware stack levels required when called: 4
   857 ;; This function calls:
   858 ;;		_lcd_2ndline
   859 ;;		_lcd_putchar
   860 ;; This function is called by:
   861 ;;		_main
   862 ;; This function uses a non-reentrant model
   863 ;;
   864                           
   865                           
   866                           ;psect for function _lcd_putstr
   867  001F                     _lcd_putstr:
   868                           
   869                           ;incstack = 0
   870                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   871                           ;lcd_putstr@csz_string stored from wreg
   872  001F  00FA               	movwf	lcd_putstr@csz_string
   873  0020                     l804:	
   874                           ;lcd.c: 244: while (*csz_string != '\0') {
   875                           
   876  0020  087A               	movf	lcd_putstr@csz_string,w
   877  0021  0084               	movwf	4
   878  0022  120A  118A  2100  120A  118A  	fcall	stringdir
   879  0027  3A00               	xorlw	0
   880  0028  1903               	btfsc	3,2
   881  0029  0008               	return
   882                           
   883                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
   884  002A  087A               	movf	lcd_putstr@csz_string,w
   885  002B  0084               	movwf	4
   886  002C  120A  118A  2100  120A  118A  	fcall	stringdir
   887  0031  3A0A               	xorlw	10
   888  0032  1903               	skipnz
   889  0033  283E               	goto	l798
   890  0034  087A               	movf	lcd_putstr@csz_string,w
   891  0035  0084               	movwf	4
   892  0036  120A  118A  2100  120A  118A  	fcall	stringdir
   893  003B  3A0D               	xorlw	13
   894  003C  1D03               	skipz
   895  003D  2844               	goto	l800
   896  003E                     l798:
   897                           
   898                           ;lcd.c: 248: lcd_2ndline();
   899  003E  120A  118A  213E  120A  118A  	fcall	_lcd_2ndline
   900                           
   901                           ;lcd.c: 249: }
   902  0043  2850               	goto	l802
   903  0044                     l800:
   904                           
   905                           ;lcd.c: 252: else {;lcd.c: 253: lcd_putchar(*csz_string);
   906  0044  087A               	movf	lcd_putstr@csz_string,w
   907  0045  0084               	movwf	4
   908  0046  120A  118A  2100  120A  118A  	fcall	stringdir
   909  004B  120A  118A  2134  120A  118A  	fcall	_lcd_putchar
   910  0050                     l802:
   911                           
   912                           ;lcd.c: 254: };lcd.c: 257: csz_string++;
   913  0050  3001               	movlw	1
   914  0051  00F9               	movwf	??_lcd_putstr
   915  0052  0879               	movf	??_lcd_putstr,w
   916  0053  07FA               	addwf	lcd_putstr@csz_string,f
   917  0054  2820               	goto	l804
   918  0055                     __end_of_lcd_putstr:
   919                           
   920                           	psect	text2
   921  0134                     __ptext2:	
   922 ;; *************** function _lcd_putchar *****************
   923 ;; Defined at:
   924 ;;		line 220 in file "lcd.c"
   925 ;; Parameters:    Size  Location     Type
   926 ;;  c_data          1    wreg     unsigned char 
   927 ;; Auto vars:     Size  Location     Type
   928 ;;  c_data          1    8[COMMON] unsigned char 
   929 ;; Return value:  Size  Location     Type
   930 ;;                  1    wreg      void 
   931 ;; Registers used:
   932 ;;		wreg, status,2, status,0, pclath, cstack
   933 ;; Tracked objects:
   934 ;;		On entry : 300/0
   935 ;;		On exit  : 300/0
   936 ;;		Unchanged: 0/0
   937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   938 ;;      Params:         0       0       0       0       0
   939 ;;      Locals:         1       0       0       0       0
   940 ;;      Temps:          1       0       0       0       0
   941 ;;      Totals:         2       0       0       0       0
   942 ;;Total ram usage:        2 bytes
   943 ;; Hardware stack levels used: 1
   944 ;; Hardware stack levels required when called: 3
   945 ;; This function calls:
   946 ;;		_send_lcd_data
   947 ;; This function is called by:
   948 ;;		_lcd_putstr
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _lcd_putchar
   954  0134                     _lcd_putchar:
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
   958                           ;lcd_putchar@c_data stored from wreg
   959  0134  00F8               	movwf	lcd_putchar@c_data
   960                           
   961                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
   962  0135  0878               	movf	lcd_putchar@c_data,w
   963  0136  00F7               	movwf	??_lcd_putchar
   964  0137  0877               	movf	??_lcd_putchar,w
   965  0138  00F3               	movwf	send_lcd_data@uc_data
   966  0139  3001               	movlw	1
   967  013A  120A  118A  2055   	fcall	_send_lcd_data
   968  013D  0008               	return
   969  013E                     __end_of_lcd_putchar:
   970                           
   971                           	psect	text3
   972  013E                     __ptext3:	
   973 ;; *************** function _lcd_2ndline *****************
   974 ;; Defined at:
   975 ;;		line 178 in file "lcd.c"
   976 ;; Parameters:    Size  Location     Type
   977 ;;		None
   978 ;; Auto vars:     Size  Location     Type
   979 ;;		None
   980 ;; Return value:  Size  Location     Type
   981 ;;                  1    wreg      void 
   982 ;; Registers used:
   983 ;;		wreg, status,2, status,0, pclath, cstack
   984 ;; Tracked objects:
   985 ;;		On entry : 300/0
   986 ;;		On exit  : 300/0
   987 ;;		Unchanged: 0/0
   988 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   989 ;;      Params:         0       0       0       0       0
   990 ;;      Locals:         0       0       0       0       0
   991 ;;      Temps:          1       0       0       0       0
   992 ;;      Totals:         1       0       0       0       0
   993 ;;Total ram usage:        1 bytes
   994 ;; Hardware stack levels used: 1
   995 ;; Hardware stack levels required when called: 3
   996 ;; This function calls:
   997 ;;		_send_lcd_data
   998 ;; This function is called by:
   999 ;;		_main
  1000 ;;		_lcd_putstr
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           
  1005                           ;psect for function _lcd_2ndline
  1006  013E                     _lcd_2ndline:
  1007                           
  1008                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1009                           
  1010                           ;incstack = 0
  1011                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1012  013E  30C0               	movlw	192
  1013  013F  00F7               	movwf	??_lcd_2ndline
  1014  0140  0877               	movf	??_lcd_2ndline,w
  1015  0141  00F3               	movwf	send_lcd_data@uc_data
  1016  0142  3000               	movlw	0
  1017  0143  120A  118A  2055   	fcall	_send_lcd_data
  1018  0146  0008               	return
  1019  0147                     __end_of_lcd_2ndline:
  1020                           
  1021                           	psect	text4
  1022  008A                     __ptext4:	
  1023 ;; *************** function _lcd_initialize *****************
  1024 ;; Defined at:
  1025 ;;		line 100 in file "lcd.c"
  1026 ;; Parameters:    Size  Location     Type
  1027 ;;		None
  1028 ;; Auto vars:     Size  Location     Type
  1029 ;;		None
  1030 ;; Return value:  Size  Location     Type
  1031 ;;                  1    wreg      void 
  1032 ;; Registers used:
  1033 ;;		wreg, status,2, status,0, pclath, cstack
  1034 ;; Tracked objects:
  1035 ;;		On entry : B00/100
  1036 ;;		On exit  : 300/0
  1037 ;;		Unchanged: 0/0
  1038 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1039 ;;      Params:         0       0       0       0       0
  1040 ;;      Locals:         0       0       0       0       0
  1041 ;;      Temps:          2       0       0       0       0
  1042 ;;      Totals:         2       0       0       0       0
  1043 ;;Total ram usage:        2 bytes
  1044 ;; Hardware stack levels used: 1
  1045 ;; Hardware stack levels required when called: 4
  1046 ;; This function calls:
  1047 ;;		_lcd_clear
  1048 ;;		_send_lcd_data
  1049 ;;		_set_lcd_e
  1050 ;; This function is called by:
  1051 ;;		_main
  1052 ;; This function uses a non-reentrant model
  1053 ;;
  1054                           
  1055                           
  1056                           ;psect for function _lcd_initialize
  1057  008A                     _lcd_initialize:
  1058                           
  1059                           ;lcd.c: 104: set_lcd_e(1);
  1060                           
  1061                           ;incstack = 0
  1062                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1063  008A  3001               	movlw	1
  1064  008B  120A  118A  2129  120A  118A  	fcall	_set_lcd_e
  1065                           
  1066                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1067  0090  3062               	movlw	98
  1068  0091  00F8               	movwf	??_lcd_initialize+1
  1069  0092  3065               	movlw	101
  1070  0093  00F7               	movwf	??_lcd_initialize
  1071  0094                     u117:
  1072  0094  0BF7               	decfsz	??_lcd_initialize,f
  1073  0095  2894               	goto	u117
  1074  0096  0BF8               	decfsz	??_lcd_initialize+1,f
  1075  0097  2894               	goto	u117
  1076  0098  2899               	nop2
  1077                           
  1078                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1079  0099  3038               	movlw	56
  1080  009A  00F7               	movwf	??_lcd_initialize
  1081  009B  0877               	movf	??_lcd_initialize,w
  1082  009C  00F3               	movwf	send_lcd_data@uc_data
  1083  009D  3000               	movlw	0
  1084  009E  120A  118A  2055  120A  118A  	fcall	_send_lcd_data
  1085                           
  1086                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1087  00A3  3006               	movlw	6
  1088  00A4  00F7               	movwf	??_lcd_initialize
  1089  00A5  0877               	movf	??_lcd_initialize,w
  1090  00A6  00F3               	movwf	send_lcd_data@uc_data
  1091  00A7  3000               	movlw	0
  1092  00A8  120A  118A  2055  120A  118A  	fcall	_send_lcd_data
  1093                           
  1094                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1095  00AD  300C               	movlw	12
  1096  00AE  00F7               	movwf	??_lcd_initialize
  1097  00AF  0877               	movf	??_lcd_initialize,w
  1098  00B0  00F3               	movwf	send_lcd_data@uc_data
  1099  00B1  3000               	movlw	0
  1100  00B2  120A  118A  2055  120A  118A  	fcall	_send_lcd_data
  1101                           
  1102                           ;lcd.c: 118: lcd_clear();
  1103  00B7  120A  118A  2150   	fcall	_lcd_clear
  1104  00BA  0008               	return
  1105  00BB                     __end_of_lcd_initialize:
  1106                           
  1107                           	psect	text5
  1108  0150                     __ptext5:	
  1109 ;; *************** function _lcd_clear *****************
  1110 ;; Defined at:
  1111 ;;		line 136 in file "lcd.c"
  1112 ;; Parameters:    Size  Location     Type
  1113 ;;		None
  1114 ;; Auto vars:     Size  Location     Type
  1115 ;;		None
  1116 ;; Return value:  Size  Location     Type
  1117 ;;                  1    wreg      void 
  1118 ;; Registers used:
  1119 ;;		wreg, status,2, status,0, pclath, cstack
  1120 ;; Tracked objects:
  1121 ;;		On entry : 300/0
  1122 ;;		On exit  : 300/0
  1123 ;;		Unchanged: 0/0
  1124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1125 ;;      Params:         0       0       0       0       0
  1126 ;;      Locals:         0       0       0       0       0
  1127 ;;      Temps:          0       0       0       0       0
  1128 ;;      Totals:         0       0       0       0       0
  1129 ;;Total ram usage:        0 bytes
  1130 ;; Hardware stack levels used: 1
  1131 ;; Hardware stack levels required when called: 3
  1132 ;; This function calls:
  1133 ;;		_send_lcd_data
  1134 ;; This function is called by:
  1135 ;;		_lcd_initialize
  1136 ;; This function uses a non-reentrant model
  1137 ;;
  1138                           
  1139                           
  1140                           ;psect for function _lcd_clear
  1141  0150                     _lcd_clear:
  1142                           
  1143                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1144                           
  1145                           ;incstack = 0
  1146                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1147  0150  01F3               	clrf	send_lcd_data@uc_data
  1148  0151  0AF3               	incf	send_lcd_data@uc_data,f
  1149  0152  3000               	movlw	0
  1150  0153  120A  118A  2055   	fcall	_send_lcd_data
  1151  0156  0008               	return
  1152  0157                     __end_of_lcd_clear:
  1153                           
  1154                           	psect	text6
  1155  0147                     __ptext6:	
  1156 ;; *************** function _lcd_home *****************
  1157 ;; Defined at:
  1158 ;;		line 157 in file "lcd.c"
  1159 ;; Parameters:    Size  Location     Type
  1160 ;;		None
  1161 ;; Auto vars:     Size  Location     Type
  1162 ;;		None
  1163 ;; Return value:  Size  Location     Type
  1164 ;;                  1    wreg      void 
  1165 ;; Registers used:
  1166 ;;		wreg, status,2, status,0, pclath, cstack
  1167 ;; Tracked objects:
  1168 ;;		On entry : 300/0
  1169 ;;		On exit  : 300/0
  1170 ;;		Unchanged: 0/0
  1171 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1172 ;;      Params:         0       0       0       0       0
  1173 ;;      Locals:         0       0       0       0       0
  1174 ;;      Temps:          1       0       0       0       0
  1175 ;;      Totals:         1       0       0       0       0
  1176 ;;Total ram usage:        1 bytes
  1177 ;; Hardware stack levels used: 1
  1178 ;; Hardware stack levels required when called: 3
  1179 ;; This function calls:
  1180 ;;		_send_lcd_data
  1181 ;; This function is called by:
  1182 ;;		_main
  1183 ;; This function uses a non-reentrant model
  1184 ;;
  1185                           
  1186                           
  1187                           ;psect for function _lcd_home
  1188  0147                     _lcd_home:
  1189                           
  1190                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1191                           
  1192                           ;incstack = 0
  1193                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1194  0147  3002               	movlw	2
  1195  0148  00F7               	movwf	??_lcd_home
  1196  0149  0877               	movf	??_lcd_home,w
  1197  014A  00F3               	movwf	send_lcd_data@uc_data
  1198  014B  3000               	movlw	0
  1199  014C  120A  118A  2055   	fcall	_send_lcd_data
  1200  014F  0008               	return
  1201  0150                     __end_of_lcd_home:
  1202                           
  1203                           	psect	text7
  1204  0055                     __ptext7:	
  1205 ;; *************** function _send_lcd_data *****************
  1206 ;; Defined at:
  1207 ;;		line 308 in file "lcd.c"
  1208 ;; Parameters:    Size  Location     Type
  1209 ;;  b_rs            1    wreg     unsigned char 
  1210 ;;  uc_data         1    3[COMMON] unsigned char 
  1211 ;; Auto vars:     Size  Location     Type
  1212 ;;  b_rs            1    6[COMMON] unsigned char 
  1213 ;; Return value:  Size  Location     Type
  1214 ;;                  1    wreg      void 
  1215 ;; Registers used:
  1216 ;;		wreg, status,2, status,0, pclath, cstack
  1217 ;; Tracked objects:
  1218 ;;		On entry : 0/0
  1219 ;;		On exit  : 300/0
  1220 ;;		Unchanged: 0/0
  1221 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1222 ;;      Params:         1       0       0       0       0
  1223 ;;      Locals:         1       0       0       0       0
  1224 ;;      Temps:          2       0       0       0       0
  1225 ;;      Totals:         4       0       0       0       0
  1226 ;;Total ram usage:        4 bytes
  1227 ;; Hardware stack levels used: 1
  1228 ;; Hardware stack levels required when called: 2
  1229 ;; This function calls:
  1230 ;;		_set_lcd_data
  1231 ;;		_set_lcd_e
  1232 ;;		_set_lcd_rs
  1233 ;; This function is called by:
  1234 ;;		_lcd_initialize
  1235 ;;		_lcd_clear
  1236 ;;		_lcd_home
  1237 ;;		_lcd_2ndline
  1238 ;;		_lcd_putchar
  1239 ;; This function uses a non-reentrant model
  1240 ;;
  1241                           
  1242                           
  1243                           ;psect for function _send_lcd_data
  1244  0055                     _send_lcd_data:
  1245                           
  1246                           ;incstack = 0
  1247                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1248                           ;send_lcd_data@b_rs stored from wreg
  1249  0055  00F6               	movwf	send_lcd_data@b_rs
  1250                           
  1251                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1252  0056  0876               	movf	send_lcd_data@b_rs,w
  1253  0057  120A  118A  211E  120A  118A  	fcall	_set_lcd_rs
  1254                           
  1255                           ;lcd.c: 312: set_lcd_data(uc_data);
  1256  005C  0873               	movf	send_lcd_data@uc_data,w
  1257  005D  120A  118A  215E  120A  118A  	fcall	_set_lcd_data
  1258                           
  1259                           ;lcd.c: 315: set_lcd_e(1);
  1260  0062  3001               	movlw	1
  1261  0063  120A  118A  2129  120A  118A  	fcall	_set_lcd_e
  1262                           
  1263                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1264  0068  3007               	movlw	7
  1265  0069  00F5               	movwf	??_send_lcd_data+1
  1266  006A  307D               	movlw	125
  1267  006B  00F4               	movwf	??_send_lcd_data
  1268  006C                     u127:
  1269  006C  0BF4               	decfsz	??_send_lcd_data,f
  1270  006D  286C               	goto	u127
  1271  006E  0BF5               	decfsz	??_send_lcd_data+1,f
  1272  006F  286C               	goto	u127
  1273                           
  1274                           ;lcd.c: 317: set_lcd_e(0);
  1275  0070  3000               	movlw	0
  1276  0071  120A  118A  2129  120A  118A  	fcall	_set_lcd_e
  1277                           
  1278                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1279  0076  300D               	movlw	13
  1280  0077  00F5               	movwf	??_send_lcd_data+1
  1281  0078  30FB               	movlw	251
  1282  0079  00F4               	movwf	??_send_lcd_data
  1283  007A                     u137:
  1284  007A  0BF4               	decfsz	??_send_lcd_data,f
  1285  007B  287A               	goto	u137
  1286  007C  0BF5               	decfsz	??_send_lcd_data+1,f
  1287  007D  287A               	goto	u137
  1288  007E  287F               	nop2
  1289                           
  1290                           ;lcd.c: 321: set_lcd_rs(0);
  1291  007F  3000               	movlw	0
  1292  0080  120A  118A  211E  120A  118A  	fcall	_set_lcd_rs
  1293                           
  1294                           ;lcd.c: 322: set_lcd_data(0);
  1295  0085  3000               	movlw	0
  1296  0086  120A  118A  215E   	fcall	_set_lcd_data
  1297  0089  0008               	return
  1298  008A                     __end_of_send_lcd_data:
  1299                           
  1300                           	psect	text8
  1301  011E                     __ptext8:	
  1302 ;; *************** function _set_lcd_rs *****************
  1303 ;; Defined at:
  1304 ;;		line 360 in file "lcd.c"
  1305 ;; Parameters:    Size  Location     Type
  1306 ;;  b_output        1    wreg     unsigned char 
  1307 ;; Auto vars:     Size  Location     Type
  1308 ;;  b_output        1    2[COMMON] unsigned char 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 300/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1318 ;;      Params:         0       0       0       0       0
  1319 ;;      Locals:         1       0       0       0       0
  1320 ;;      Temps:          0       0       0       0       0
  1321 ;;      Totals:         1       0       0       0       0
  1322 ;;Total ram usage:        1 bytes
  1323 ;; Hardware stack levels used: 1
  1324 ;; Hardware stack levels required when called: 1
  1325 ;; This function calls:
  1326 ;;		Nothing
  1327 ;; This function is called by:
  1328 ;;		_send_lcd_data
  1329 ;; This function uses a non-reentrant model
  1330 ;;
  1331                           
  1332                           
  1333                           ;psect for function _set_lcd_rs
  1334  011E                     _set_lcd_rs:
  1335                           
  1336                           ;incstack = 0
  1337                           ; Regs used in _set_lcd_rs: [wreg]
  1338                           ;set_lcd_rs@b_output stored from wreg
  1339  011E  00F2               	movwf	set_lcd_rs@b_output
  1340                           
  1341                           ;lcd.c: 362: RB4 = b_output;
  1342  011F  1C72               	btfss	set_lcd_rs@b_output,0
  1343  0120  2925               	goto	u30
  1344  0121  1283               	bcf	3,5	;RP0=0, select bank0
  1345  0122  1303               	bcf	3,6	;RP1=0, select bank0
  1346  0123  1606               	bsf	6,4	;volatile
  1347  0124  0008               	return
  1348  0125                     u30:
  1349  0125  1283               	bcf	3,5	;RP0=0, select bank0
  1350  0126  1303               	bcf	3,6	;RP1=0, select bank0
  1351  0127  1206               	bcf	6,4	;volatile
  1352  0128  0008               	return
  1353  0129                     __end_of_set_lcd_rs:
  1354                           
  1355                           	psect	text9
  1356  0129                     __ptext9:	
  1357 ;; *************** function _set_lcd_e *****************
  1358 ;; Defined at:
  1359 ;;		line 340 in file "lcd.c"
  1360 ;; Parameters:    Size  Location     Type
  1361 ;;  b_output        1    wreg     unsigned char 
  1362 ;; Auto vars:     Size  Location     Type
  1363 ;;  b_output        1    2[COMMON] unsigned char 
  1364 ;; Return value:  Size  Location     Type
  1365 ;;                  1    wreg      void 
  1366 ;; Registers used:
  1367 ;;		wreg
  1368 ;; Tracked objects:
  1369 ;;		On entry : 0/100
  1370 ;;		On exit  : 300/0
  1371 ;;		Unchanged: 0/0
  1372 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1373 ;;      Params:         0       0       0       0       0
  1374 ;;      Locals:         1       0       0       0       0
  1375 ;;      Temps:          0       0       0       0       0
  1376 ;;      Totals:         1       0       0       0       0
  1377 ;;Total ram usage:        1 bytes
  1378 ;; Hardware stack levels used: 1
  1379 ;; Hardware stack levels required when called: 1
  1380 ;; This function calls:
  1381 ;;		Nothing
  1382 ;; This function is called by:
  1383 ;;		_lcd_initialize
  1384 ;;		_send_lcd_data
  1385 ;; This function uses a non-reentrant model
  1386 ;;
  1387                           
  1388                           
  1389                           ;psect for function _set_lcd_e
  1390  0129                     _set_lcd_e:
  1391                           
  1392                           ;incstack = 0
  1393                           ; Regs used in _set_lcd_e: [wreg]
  1394                           ;set_lcd_e@b_output stored from wreg
  1395  0129  00F2               	movwf	set_lcd_e@b_output
  1396                           
  1397                           ;lcd.c: 342: RB5 = b_output;
  1398  012A  1C72               	btfss	set_lcd_e@b_output,0
  1399  012B  2930               	goto	u10
  1400  012C  1283               	bcf	3,5	;RP0=0, select bank0
  1401  012D  1303               	bcf	3,6	;RP1=0, select bank0
  1402  012E  1686               	bsf	6,5	;volatile
  1403  012F  0008               	return
  1404  0130                     u10:
  1405  0130  1283               	bcf	3,5	;RP0=0, select bank0
  1406  0131  1303               	bcf	3,6	;RP1=0, select bank0
  1407  0132  1286               	bcf	6,5	;volatile
  1408  0133  0008               	return
  1409  0134                     __end_of_set_lcd_e:
  1410                           
  1411                           	psect	text10
  1412  015E                     __ptext10:	
  1413 ;; *************** function _set_lcd_data *****************
  1414 ;; Defined at:
  1415 ;;		line 380 in file "lcd.c"
  1416 ;; Parameters:    Size  Location     Type
  1417 ;;  uc_data         1    wreg     unsigned char 
  1418 ;; Auto vars:     Size  Location     Type
  1419 ;;  uc_data         1    2[COMMON] unsigned char 
  1420 ;; Return value:  Size  Location     Type
  1421 ;;                  1    wreg      void 
  1422 ;; Registers used:
  1423 ;;		wreg
  1424 ;; Tracked objects:
  1425 ;;		On entry : 300/0
  1426 ;;		On exit  : 300/0
  1427 ;;		Unchanged: 0/0
  1428 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1429 ;;      Params:         0       0       0       0       0
  1430 ;;      Locals:         1       0       0       0       0
  1431 ;;      Temps:          0       0       0       0       0
  1432 ;;      Totals:         1       0       0       0       0
  1433 ;;Total ram usage:        1 bytes
  1434 ;; Hardware stack levels used: 1
  1435 ;; Hardware stack levels required when called: 1
  1436 ;; This function calls:
  1437 ;;		Nothing
  1438 ;; This function is called by:
  1439 ;;		_send_lcd_data
  1440 ;; This function uses a non-reentrant model
  1441 ;;
  1442                           
  1443                           
  1444                           ;psect for function _set_lcd_data
  1445  015E                     _set_lcd_data:
  1446                           
  1447                           ;incstack = 0
  1448                           ; Regs used in _set_lcd_data: [wreg]
  1449                           ;set_lcd_data@uc_data stored from wreg
  1450  015E  00F2               	movwf	set_lcd_data@uc_data
  1451                           
  1452                           ;lcd.c: 382: PORTD = uc_data;
  1453  015F  0872               	movf	set_lcd_data@uc_data,w
  1454  0160  0088               	movwf	8	;volatile
  1455  0161  0008               	return
  1456  0162                     __end_of_set_lcd_data:
  1457                           
  1458                           	psect	text11
  1459  0162                     __ptext11:	
  1460 ;; *************** function _InitApp *****************
  1461 ;; Defined at:
  1462 ;;		line 22 in file "user.c"
  1463 ;; Parameters:    Size  Location     Type
  1464 ;;		None
  1465 ;; Auto vars:     Size  Location     Type
  1466 ;;		None
  1467 ;; Return value:  Size  Location     Type
  1468 ;;                  1    wreg      void 
  1469 ;; Registers used:
  1470 ;;		None
  1471 ;; Tracked objects:
  1472 ;;		On entry : B00/0
  1473 ;;		On exit  : B00/0
  1474 ;;		Unchanged: B00/0
  1475 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1476 ;;      Params:         0       0       0       0       0
  1477 ;;      Locals:         0       0       0       0       0
  1478 ;;      Temps:          0       0       0       0       0
  1479 ;;      Totals:         0       0       0       0       0
  1480 ;;Total ram usage:        0 bytes
  1481 ;; Hardware stack levels used: 1
  1482 ;; Hardware stack levels required when called: 1
  1483 ;; This function calls:
  1484 ;;		Nothing
  1485 ;; This function is called by:
  1486 ;;		_main
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           
  1491                           ;psect for function _InitApp
  1492  0162                     _InitApp:
  1493                           
  1494                           ;incstack = 0
  1495                           ; Regs used in _InitApp: []
  1496  0162  0008               	return
  1497  0163                     __end_of_InitApp:
  1498                           
  1499                           	psect	text12
  1500  0157                     __ptext12:	
  1501 ;; *************** function _isr *****************
  1502 ;; Defined at:
  1503 ;;		line 23 in file "interrupts.c"
  1504 ;; Parameters:    Size  Location     Type
  1505 ;;		None
  1506 ;; Auto vars:     Size  Location     Type
  1507 ;;		None
  1508 ;; Return value:  Size  Location     Type
  1509 ;;                  1    wreg      void 
  1510 ;; Registers used:
  1511 ;;		None
  1512 ;; Tracked objects:
  1513 ;;		On entry : 0/0
  1514 ;;		On exit  : 0/0
  1515 ;;		Unchanged: 0/0
  1516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1517 ;;      Params:         0       0       0       0       0
  1518 ;;      Locals:         0       0       0       0       0
  1519 ;;      Temps:          2       0       0       0       0
  1520 ;;      Totals:         2       0       0       0       0
  1521 ;;Total ram usage:        2 bytes
  1522 ;; Hardware stack levels used: 1
  1523 ;; This function calls:
  1524 ;;		Nothing
  1525 ;; This function is called by:
  1526 ;;		Interrupt level 1
  1527 ;; This function uses a non-reentrant model
  1528 ;;
  1529                           
  1530                           
  1531                           ;psect for function _isr
  1532  0157                     _isr:
  1533  0157  0871               	movf	??_isr+1,w
  1534  0158  008A               	movwf	10
  1535  0159  0E70               	swapf	??_isr,w
  1536  015A  0083               	movwf	3
  1537  015B  0EFE               	swapf	126,f
  1538  015C  0E7E               	swapf	126,w
  1539  015D  0009               	retfie
  1540  015E                     __end_of_isr:
  1541  007E                     btemp	set	126	;btemp
  1542  007E                     wtemp0	set	126
  1543                           
  1544                           	psect	intentry
  1545  0004                     __pintentry:	
  1546                           ;incstack = 0
  1547                           ; Regs used in _isr: []
  1548                           
  1549  0004                     interrupt_function:
  1550  007E                     saved_w	set	btemp
  1551  0004  00FE               	movwf	btemp
  1552  0005  0E03               	swapf	3,w
  1553  0006  00F0               	movwf	??_isr
  1554  0007  080A               	movf	10,w
  1555  0008  00F1               	movwf	??_isr+1
  1556  0009  120A  118A  2957   	ljmp	_isr
  1557                           
  1558                           	psect	config
  1559                           
  1560                           ;Config register CONFIG @ 0x2007
  1561                           ;	Oscillator Selection bits
  1562                           ;	FOSC = HS, HS oscillator
  1563                           ;	Watchdog Timer Enable bit
  1564                           ;	WDTE = OFF, WDT disabled
  1565                           ;	Power-up Timer Enable bit
  1566                           ;	PWRTE = ON, PWRT enabled
  1567                           ;	Brown-out Reset Enable bit
  1568                           ;	BOREN = ON, BOR enabled
  1569                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1570                           ;	LVP = OFF, RB3 is digital I/O, HV on MCLR must be used for programming
  1571                           ;	Data EEPROM Memory Code Protection bit
  1572                           ;	CPD = OFF, Data EEPROM code protection off
  1573                           ;	Flash Program Memory Write Enable bits
  1574                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1575                           ;	In-Circuit Debugger Mode bit
  1576                           ;	DEBUG = 0x1, unprogrammed default
  1577                           ;	Flash Program Memory Code Protection bit
  1578                           ;	CP = OFF, Code protection off
  1579  2007                     	org	8199
  1580  2007  3F72               	dw	16242

Data Sizes:
    Strings     24
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     11      11
    BANK0            80      0      10
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 12
		 -> STR_2(CODE[12]), STR_1(CODE[12]), 


Critical Paths under _main in COMMON

    _main->_lcd_putstr
    _lcd_putstr->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    3180
                            _InitApp
                        _lcd_2ndline
                           _lcd_home
                     _lcd_initialize
                         _lcd_putstr
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    1165
                                              9 COMMON     2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     522
                                              7 COMMON     2     2      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     500
                                              7 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1015
                                              7 COMMON     2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     500
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     500
                                              7 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data                                        4     3      1     500
                                              3 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (4) _set_lcd_rs                                           1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_e                                            1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_data                                         1     1      0      15
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _lcd_2ndline
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_home
     _send_lcd_data
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
     _send_lcd_data
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
     _lcd_putchar
       _send_lcd_data

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      B       B       1       78.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      15       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       A       5       12.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      15      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Fri Apr 16 03:45:44 2021

                      pc 0002             ?_lcd_putchar 0070                       u10 0130  
                     u30 0125                       fsr 0004                      l800 0044  
                    l802 0050                      l804 0020                      l826 00D0  
                    l798 003E                      _RB4 0034                      _RB5 0035  
                    u117 0094                      u127 006C                      u137 007A  
                    _isr 0157                      fsr0 0004        set_lcd_e@b_output 0072  
                   ?_isr 0070                     STR_1 0106                     STR_2 0112  
                   _main 00BB                     btemp 007E                     start 000C  
        __end_of_InitApp 0163                    ??_isr 0070                    ?_main 0070  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088     send_lcd_data@uc_data 0073  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 000F        send_lcd_data@b_rs 0076             __end_of_main 00E7  
   __size_of_lcd_2ndline 0009    __end_of_send_lcd_data 008A                   ??_main 007B  
              ??_InitApp 0072         __end_of_lcd_home 0150     __size_of_lcd_putchar 000A  
                 saved_w 007E         ??_lcd_initialize 0077  __end_of__initialization 001B  
         __pcstackCOMMON 0070       __size_of_lcd_clear 0007               __pbssBANK0 0020  
             __pmaintext 00BB               __pintentry 0004       __size_of_set_lcd_e 000B  
             _lcd_putstr 001F                ?_lcd_home 0070               __stringtab 0100  
          ?_set_lcd_data 0070                  _InitApp 0162        __end_of_lcd_clear 0157  
                __ptext1 001F                  __ptext2 0134                  __ptext3 013E  
                __ptext4 008A                  __ptext5 0150                  __ptext6 0147  
                __ptext7 0055                  __ptext8 011E                  __ptext9 0129  
           __size_of_isr 0007               ??_lcd_home 0077     end_of_initialization 001B  
         ??_set_lcd_data 0072        __end_of_set_lcd_e 0134               _set_lcd_rs 011E  
          ??_lcd_2ndline 0077              ?_lcd_putstr 0070   __size_of_send_lcd_data 0035  
          ??_lcd_putchar 0077        lcd_putchar@c_data 0078      __end_of_lcd_2ndline 0147  
    start_initialization 000F       set_lcd_rs@b_output 0072              __end_of_isr 015E  
   lcd_putstr@csz_string 007A              ?_set_lcd_rs 0070      __size_of_lcd_putstr 0036  
          _send_lcd_data 0055     __end_of_set_lcd_data 0162      __end_of_lcd_putchar 013E  
              ___latbits 0002        __size_of_lcd_home 0009                 ?_InitApp 0070  
__size_of_lcd_initialize 0031              _lcd_2ndline 013E                _lcd_clear 0150  
         ?_send_lcd_data 0073                __pstrings 0100      __size_of_set_lcd_rs 000B  
    set_lcd_data@uc_data 0072        interrupt_function 0004                _set_lcd_e 0129  
            _lcd_putchar 0134               ?_lcd_clear 0070              __stringbase 0105  
           ??_lcd_putstr 0079         __size_of_InitApp 0001               ?_set_lcd_e 0070  
  __size_of_set_lcd_data 0004          ??_send_lcd_data 0074       __end_of_lcd_putstr 0055  
     __end_of__stringtab 0106                 __ptext10 015E                 __ptext11 0162  
               __ptext12 0157                 _lcd_home 0147            __size_of_main 002C  
           _set_lcd_data 015E           _lcd_initialize 008A             ??_set_lcd_rs 0072  
            ??_lcd_clear 0077       __end_of_set_lcd_rs 0129                 intlevel1 0000  
 __end_of_lcd_initialize 00BB                stringcode 0100              ??_set_lcd_e 0072  
           ?_lcd_2ndline 0070                 stringdir 0100                 stringtab 0100  
            lcd_bcd@F917 0020          ?_lcd_initialize 0070  
