

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu May 17 15:56:31 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	intentry,global,class=CODE,delta=2
    19                           	dabs	1,0x7E,2
    20  0000                     
    21                           ; Version 1.45
    22                           ; Generated 16/11/2017 GMT
    23                           ; 
    24                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    25                           ; All rights reserved.
    26                           ; 
    27                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    28                           ; 
    29                           ; Redistribution and use in source and binary forms, with or without modification, are
    30                           ; permitted provided that the following conditions are met:
    31                           ; 
    32                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    33                           ;        conditions and the following disclaimer.
    34                           ; 
    35                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    36                           ;        of conditions and the following disclaimer in the documentation and/or other
    37                           ;        materials provided with the distribution.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175  0000                     	;# 
   176  0001                     	;# 
   177  0002                     	;# 
   178  0003                     	;# 
   179  0004                     	;# 
   180  0005                     	;# 
   181  0006                     	;# 
   182  0007                     	;# 
   183  0008                     	;# 
   184  0009                     	;# 
   185  000A                     	;# 
   186  000B                     	;# 
   187  000C                     	;# 
   188  000D                     	;# 
   189  000E                     	;# 
   190  000E                     	;# 
   191  000F                     	;# 
   192  0010                     	;# 
   193  0011                     	;# 
   194  0012                     	;# 
   195  0013                     	;# 
   196  0014                     	;# 
   197  0015                     	;# 
   198  0015                     	;# 
   199  0016                     	;# 
   200  0017                     	;# 
   201  0018                     	;# 
   202  0019                     	;# 
   203  001A                     	;# 
   204  001B                     	;# 
   205  001B                     	;# 
   206  001C                     	;# 
   207  001D                     	;# 
   208  001E                     	;# 
   209  001F                     	;# 
   210  0081                     	;# 
   211  0085                     	;# 
   212  0086                     	;# 
   213  0087                     	;# 
   214  0088                     	;# 
   215  0089                     	;# 
   216  008C                     	;# 
   217  008D                     	;# 
   218  008E                     	;# 
   219  0091                     	;# 
   220  0092                     	;# 
   221  0093                     	;# 
   222  0094                     	;# 
   223  0098                     	;# 
   224  0099                     	;# 
   225  009C                     	;# 
   226  009D                     	;# 
   227  009E                     	;# 
   228  009F                     	;# 
   229  010C                     	;# 
   230  010D                     	;# 
   231  010E                     	;# 
   232  010F                     	;# 
   233  018C                     	;# 
   234  018D                     	;# 
   235  0000                     	;# 
   236  0001                     	;# 
   237  0002                     	;# 
   238  0003                     	;# 
   239  0004                     	;# 
   240  0005                     	;# 
   241  0006                     	;# 
   242  0007                     	;# 
   243  0008                     	;# 
   244  0009                     	;# 
   245  000A                     	;# 
   246  000B                     	;# 
   247  000C                     	;# 
   248  000D                     	;# 
   249  000E                     	;# 
   250  000E                     	;# 
   251  000F                     	;# 
   252  0010                     	;# 
   253  0011                     	;# 
   254  0012                     	;# 
   255  0013                     	;# 
   256  0014                     	;# 
   257  0015                     	;# 
   258  0015                     	;# 
   259  0016                     	;# 
   260  0017                     	;# 
   261  0018                     	;# 
   262  0019                     	;# 
   263  001A                     	;# 
   264  001B                     	;# 
   265  001B                     	;# 
   266  001C                     	;# 
   267  001D                     	;# 
   268  001E                     	;# 
   269  001F                     	;# 
   270  0081                     	;# 
   271  0085                     	;# 
   272  0086                     	;# 
   273  0087                     	;# 
   274  0088                     	;# 
   275  0089                     	;# 
   276  008C                     	;# 
   277  008D                     	;# 
   278  008E                     	;# 
   279  0091                     	;# 
   280  0092                     	;# 
   281  0093                     	;# 
   282  0094                     	;# 
   283  0098                     	;# 
   284  0099                     	;# 
   285  009C                     	;# 
   286  009D                     	;# 
   287  009E                     	;# 
   288  009F                     	;# 
   289  010C                     	;# 
   290  010D                     	;# 
   291  010E                     	;# 
   292  010F                     	;# 
   293  018C                     	;# 
   294  018D                     	;# 
   295  0000                     	;# 
   296  0001                     	;# 
   297  0002                     	;# 
   298  0003                     	;# 
   299  0004                     	;# 
   300  0005                     	;# 
   301  0006                     	;# 
   302  0007                     	;# 
   303  0008                     	;# 
   304  0009                     	;# 
   305  000A                     	;# 
   306  000B                     	;# 
   307  000C                     	;# 
   308  000D                     	;# 
   309  000E                     	;# 
   310  000E                     	;# 
   311  000F                     	;# 
   312  0010                     	;# 
   313  0011                     	;# 
   314  0012                     	;# 
   315  0013                     	;# 
   316  0014                     	;# 
   317  0015                     	;# 
   318  0015                     	;# 
   319  0016                     	;# 
   320  0017                     	;# 
   321  0018                     	;# 
   322  0019                     	;# 
   323  001A                     	;# 
   324  001B                     	;# 
   325  001B                     	;# 
   326  001C                     	;# 
   327  001D                     	;# 
   328  001E                     	;# 
   329  001F                     	;# 
   330  0081                     	;# 
   331  0085                     	;# 
   332  0086                     	;# 
   333  0087                     	;# 
   334  0088                     	;# 
   335  0089                     	;# 
   336  008C                     	;# 
   337  008D                     	;# 
   338  008E                     	;# 
   339  0091                     	;# 
   340  0092                     	;# 
   341  0093                     	;# 
   342  0094                     	;# 
   343  0098                     	;# 
   344  0099                     	;# 
   345  009C                     	;# 
   346  009D                     	;# 
   347  009E                     	;# 
   348  009F                     	;# 
   349  010C                     	;# 
   350  010D                     	;# 
   351  010E                     	;# 
   352  010F                     	;# 
   353  018C                     	;# 
   354  018D                     	;# 
   355  0000                     	;# 
   356  0001                     	;# 
   357  0002                     	;# 
   358  0003                     	;# 
   359  0004                     	;# 
   360  0005                     	;# 
   361  0006                     	;# 
   362  0007                     	;# 
   363  0008                     	;# 
   364  0009                     	;# 
   365  000A                     	;# 
   366  000B                     	;# 
   367  000C                     	;# 
   368  000D                     	;# 
   369  000E                     	;# 
   370  000E                     	;# 
   371  000F                     	;# 
   372  0010                     	;# 
   373  0011                     	;# 
   374  0012                     	;# 
   375  0013                     	;# 
   376  0014                     	;# 
   377  0015                     	;# 
   378  0015                     	;# 
   379  0016                     	;# 
   380  0017                     	;# 
   381  0018                     	;# 
   382  0019                     	;# 
   383  001A                     	;# 
   384  001B                     	;# 
   385  001B                     	;# 
   386  001C                     	;# 
   387  001D                     	;# 
   388  001E                     	;# 
   389  001F                     	;# 
   390  0081                     	;# 
   391  0085                     	;# 
   392  0086                     	;# 
   393  0087                     	;# 
   394  0088                     	;# 
   395  0089                     	;# 
   396  008C                     	;# 
   397  008D                     	;# 
   398  008E                     	;# 
   399  0091                     	;# 
   400  0092                     	;# 
   401  0093                     	;# 
   402  0094                     	;# 
   403  0098                     	;# 
   404  0099                     	;# 
   405  009C                     	;# 
   406  009D                     	;# 
   407  009E                     	;# 
   408  009F                     	;# 
   409  010C                     	;# 
   410  010D                     	;# 
   411  010E                     	;# 
   412  010F                     	;# 
   413  018C                     	;# 
   414  018D                     	;# 
   415  0008                     _PORTD	set	8
   416  0007                     _PORTC	set	7
   417  0006                     _PORTB	set	6
   418  0005                     _PORTA	set	5
   419  0001                     _TMR0	set	1
   420  0034                     _RB4	set	52
   421  0035                     _RB5	set	53
   422  005E                     _PEIE	set	94
   423  005F                     _GIE	set	95
   424  005D                     _TMR0IE	set	93
   425  005C                     _INTE	set	92
   426  003F                     _RC7	set	63
   427  0036                     _RB6	set	54
   428  0038                     _RC0	set	56
   429  005A                     _TMR0IF	set	90
   430  0081                     _OPTION_REG	set	129
   431  0088                     _TRISD	set	136
   432  0087                     _TRISC	set	135
   433  0086                     _TRISB	set	134
   434  0085                     _TRISA	set	133
   435                           
   436                           ; #config settings
   437  0000                     
   438                           	psect	cinit
   439  0015                     start_initialization:	
   440  0015                     __initialization:	
   441                           
   442                           ; Clear objects allocated to COMMON
   443  0015  01F6               	clrf	__pbssCOMMON& (0+127)
   444  0016  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   445  0017  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   446  0018  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   447                           
   448                           ; Clear objects allocated to BANK0
   449  0019  1283               	bcf	3,5	;RP0=0, select bank0
   450  001A  1303               	bcf	3,6	;RP1=0, select bank0
   451  001B  01A0               	clrf	__pbssBANK0& (0+127)
   452  001C  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   453  001D  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   454  001E  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   455  001F  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   456  0020  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   457  0021  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   458  0022  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   459  0023  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   460  0024  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   461  0025                     end_of_initialization:	
   462                           ;End of C runtime variable initialization code
   463                           
   464  0025                     __end_of__initialization:	
   465  0025  0183               	clrf	3
   466  0026  120A  118A  289C   	ljmp	_main	;jump to C main() function
   467                           
   468                           	psect	bssCOMMON
   469  0076                     __pbssCOMMON:	
   470  0076                     _time:	
   471  0076                     	ds	2
   472  0078                     _ledtime:	
   473  0078                     	ds	2
   474                           
   475                           	psect	bssBANK0
   476  0020                     __pbssBANK0:	
   477  0020                     lcd_bcd@F1134:	
   478  0020                     	ds	10
   479                           
   480                           	psect	cstackCOMMON
   481  0070                     __pcstackCOMMON:	
   482  0070                     ?_InitApp:	
   483  0070                     ?_lcd_initialize:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ?_set_lcd_e:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_lcd_clear:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     ?_set_lcd_rs:	
   493                           ; 1 bytes @ 0x0
   494                           
   495  0070                     ?_set_lcd_data:	
   496                           ; 1 bytes @ 0x0
   497                           
   498  0070                     ?_isr:	
   499                           ; 1 bytes @ 0x0
   500                           
   501  0070                     ??_isr:	
   502                           ; 1 bytes @ 0x0
   503                           
   504  0070                     ?_main:	
   505                           ; 1 bytes @ 0x0
   506                           
   507                           
   508                           ; 1 bytes @ 0x0
   509  0070                     	ds	4
   510  0074                     ??_InitApp:	
   511  0074                     ??_set_lcd_e:	
   512                           ; 1 bytes @ 0x4
   513                           
   514  0074                     ??_set_lcd_rs:	
   515                           ; 1 bytes @ 0x4
   516                           
   517  0074                     ??_set_lcd_data:	
   518                           ; 1 bytes @ 0x4
   519                           
   520  0074                     set_lcd_e@b_output:	
   521                           ; 1 bytes @ 0x4
   522                           
   523  0074                     set_lcd_rs@b_output:	
   524                           ; 1 bytes @ 0x4
   525                           
   526  0074                     set_lcd_data@uc_data:	
   527                           ; 1 bytes @ 0x4
   528                           
   529                           
   530                           ; 1 bytes @ 0x4
   531  0074                     	ds	1
   532  0075                     ?_send_lcd_data:	
   533  0075                     send_lcd_data@uc_data:	
   534                           ; 1 bytes @ 0x5
   535                           
   536                           
   537                           ; 1 bytes @ 0x5
   538  0075                     	ds	1
   539  0076                     ??_lcd_clear:	
   540  0076                     ??_main:	
   541                           ; 1 bytes @ 0x6
   542                           
   543                           
   544                           	psect	cstackBANK0
   545  002A                     __pcstackBANK0:	
   546                           ; 1 bytes @ 0x6
   547                           
   548  002A                     ??_send_lcd_data:	
   549                           
   550                           ; 1 bytes @ 0x0
   551  002A                     	ds	2
   552  002C                     send_lcd_data@b_rs:	
   553                           
   554                           ; 1 bytes @ 0x2
   555  002C                     	ds	1
   556  002D                     ??_lcd_initialize:	
   557                           
   558                           ; 1 bytes @ 0x3
   559  002D                     	ds	2
   560                           
   561                           	psect	maintext
   562  009C                     __pmaintext:	
   563 ;;
   564 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   565 ;;
   566 ;; *************** function _main *****************
   567 ;; Defined at:
   568 ;;		line 20 in file "main.c"
   569 ;; Parameters:    Size  Location     Type
   570 ;;		None
   571 ;; Auto vars:     Size  Location     Type
   572 ;;		None
   573 ;; Return value:  Size  Location     Type
   574 ;;                  1    wreg      void 
   575 ;; Registers used:
   576 ;;		wreg, status,2, status,0, pclath, cstack
   577 ;; Tracked objects:
   578 ;;		On entry : B00/0
   579 ;;		On exit  : 0/0
   580 ;;		Unchanged: 0/0
   581 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   582 ;;      Params:         0       0       0       0       0
   583 ;;      Locals:         0       0       0       0       0
   584 ;;      Temps:          0       0       0       0       0
   585 ;;      Totals:         0       0       0       0       0
   586 ;;Total ram usage:        0 bytes
   587 ;; Hardware stack levels required when called:    5
   588 ;; This function calls:
   589 ;;		_InitApp
   590 ;;		_lcd_initialize
   591 ;; This function is called by:
   592 ;;		Startup code after reset
   593 ;; This function uses a non-reentrant model
   594 ;;
   595                           
   596                           
   597                           ;psect for function _main
   598  009C                     _main:	
   599                           
   600                           ;main.c: 23: InitApp();
   601                           
   602                           ;incstack = 0
   603                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   604  009C  120A  118A  210B  120A  118A  	fcall	_InitApp
   605                           
   606                           ;main.c: 25: PORTA = 0;
   607  00A1  1283               	bcf	3,5	;RP0=0, select bank0
   608  00A2  1303               	bcf	3,6	;RP1=0, select bank0
   609  00A3  0185               	clrf	5	;volatile
   610                           
   611                           ;main.c: 26: PORTB = 0;
   612  00A4  0186               	clrf	6	;volatile
   613                           
   614                           ;main.c: 27: PORTC = 0;
   615  00A5  0187               	clrf	7	;volatile
   616                           
   617                           ;main.c: 28: PORTD = 0;
   618  00A6  0188               	clrf	8	;volatile
   619                           
   620                           ;main.c: 30: TRISA = 0b11111111;
   621  00A7  30FF               	movlw	255
   622  00A8  1683               	bsf	3,5	;RP0=1, select bank1
   623  00A9  1303               	bcf	3,6	;RP1=0, select bank1
   624  00AA  0085               	movwf	5	;volatile
   625                           
   626                           ;main.c: 31: TRISB = 0b00000011;
   627  00AB  3003               	movlw	3
   628  00AC  0086               	movwf	6	;volatile
   629                           
   630                           ;main.c: 32: TRISC = 0b00000001;
   631  00AD  3001               	movlw	1
   632  00AE  0087               	movwf	7	;volatile
   633                           
   634                           ;main.c: 33: TRISD = 0b00000000;
   635  00AF  0188               	clrf	8	;volatile
   636                           
   637                           ;main.c: 35: lcd_initialize();
   638  00B0  120A  118A  2064  120A  118A  	fcall	_lcd_initialize
   639                           
   640                           ;main.c: 39: OPTION_REG = (1<<2);
   641  00B5  3004               	movlw	4
   642  00B6  1683               	bsf	3,5	;RP0=1, select bank1
   643  00B7  1303               	bcf	3,6	;RP1=0, select bank1
   644  00B8  0081               	movwf	1	;volatile
   645                           
   646                           ;main.c: 40: TMR0=100;
   647  00B9  3064               	movlw	100
   648  00BA  1283               	bcf	3,5	;RP0=0, select bank0
   649  00BB  1303               	bcf	3,6	;RP1=0, select bank0
   650  00BC  0081               	movwf	1	;volatile
   651                           
   652                           ;main.c: 42: INTE=1;
   653  00BD  160B               	bsf	11,4	;volatile
   654                           
   655                           ;main.c: 43: TMR0IE=1;
   656  00BE  168B               	bsf	11,5	;volatile
   657                           
   658                           ;main.c: 44: GIE=1;
   659  00BF  178B               	bsf	11,7	;volatile
   660                           
   661                           ;main.c: 45: PEIE=1;
   662  00C0  170B               	bsf	11,6	;volatile
   663  00C1                     l61:	
   664                           ;main.c: 47: while(1)
   665                           
   666                           
   667                           ;main.c: 48: {
   668  00C1  28C1               	goto	l61
   669  00C2                     __end_of_main:	
   670                           
   671                           	psect	text1
   672  0064                     __ptext1:	
   673 ;; *************** function _lcd_initialize *****************
   674 ;; Defined at:
   675 ;;		line 100 in file "lcd.c"
   676 ;; Parameters:    Size  Location     Type
   677 ;;		None
   678 ;; Auto vars:     Size  Location     Type
   679 ;;		None
   680 ;; Return value:  Size  Location     Type
   681 ;;                  1    wreg      void 
   682 ;; Registers used:
   683 ;;		wreg, status,2, status,0, pclath, cstack
   684 ;; Tracked objects:
   685 ;;		On entry : 0/0
   686 ;;		On exit  : 0/0
   687 ;;		Unchanged: 0/0
   688 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   689 ;;      Params:         0       0       0       0       0
   690 ;;      Locals:         0       0       0       0       0
   691 ;;      Temps:          0       2       0       0       0
   692 ;;      Totals:         0       2       0       0       0
   693 ;;Total ram usage:        2 bytes
   694 ;; Hardware stack levels used:    1
   695 ;; Hardware stack levels required when called:    4
   696 ;; This function calls:
   697 ;;		_lcd_clear
   698 ;;		_send_lcd_data
   699 ;;		_set_lcd_e
   700 ;; This function is called by:
   701 ;;		_main
   702 ;; This function uses a non-reentrant model
   703 ;;
   704                           
   705                           
   706                           ;psect for function _lcd_initialize
   707  0064                     _lcd_initialize:	
   708                           
   709                           ;lcd.c: 104: set_lcd_e(1);
   710                           
   711                           ;incstack = 0
   712                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   713  0064  3001               	movlw	1
   714  0065  120A  118A  20F3  120A  118A  	fcall	_set_lcd_e
   715                           
   716                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
   717  006A  3062               	movlw	98
   718  006B  1283               	bcf	3,5	;RP0=0, select bank0
   719  006C  1303               	bcf	3,6	;RP1=0, select bank0
   720  006D  00AE               	movwf	??_lcd_initialize+1
   721  006E  3065               	movlw	101
   722  006F  00AD               	movwf	??_lcd_initialize
   723  0070                     u507:	
   724  0070  0BAD               	decfsz	??_lcd_initialize,f
   725  0071  2870               	goto	u507
   726  0072  0BAE               	decfsz	??_lcd_initialize+1,f
   727  0073  2870               	goto	u507
   728                           
   729                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
   730  0074  3038               	movlw	56
   731  0075  1283               	bcf	3,5	;RP0=0, select bank0
   732  0076  1303               	bcf	3,6	;RP1=0, select bank0
   733  0077  00AD               	movwf	??_lcd_initialize
   734  0078  082D               	movf	??_lcd_initialize,w
   735  0079  00F5               	movwf	send_lcd_data@uc_data
   736  007A  3000               	movlw	0
   737  007B  120A  118A  2029  120A  118A  	fcall	_send_lcd_data
   738                           
   739                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
   740  0080  3006               	movlw	6
   741  0081  1283               	bcf	3,5	;RP0=0, select bank0
   742  0082  1303               	bcf	3,6	;RP1=0, select bank0
   743  0083  00AD               	movwf	??_lcd_initialize
   744  0084  082D               	movf	??_lcd_initialize,w
   745  0085  00F5               	movwf	send_lcd_data@uc_data
   746  0086  3000               	movlw	0
   747  0087  120A  118A  2029  120A  118A  	fcall	_send_lcd_data
   748                           
   749                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
   750  008C  300C               	movlw	12
   751  008D  1283               	bcf	3,5	;RP0=0, select bank0
   752  008E  1303               	bcf	3,6	;RP1=0, select bank0
   753  008F  00AD               	movwf	??_lcd_initialize
   754  0090  082D               	movf	??_lcd_initialize,w
   755  0091  00F5               	movwf	send_lcd_data@uc_data
   756  0092  3000               	movlw	0
   757  0093  120A  118A  2029  120A  118A  	fcall	_send_lcd_data
   758                           
   759                           ;lcd.c: 118: lcd_clear();
   760  0098  120A  118A  20FE   	fcall	_lcd_clear
   761  009B  0008               	return
   762  009C                     __end_of_lcd_initialize:	
   763                           
   764                           	psect	text2
   765  00FE                     __ptext2:	
   766 ;; *************** function _lcd_clear *****************
   767 ;; Defined at:
   768 ;;		line 136 in file "lcd.c"
   769 ;; Parameters:    Size  Location     Type
   770 ;;		None
   771 ;; Auto vars:     Size  Location     Type
   772 ;;		None
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : 0/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0       0       0       0       0
   784 ;;      Temps:          0       0       0       0       0
   785 ;;      Totals:         0       0       0       0       0
   786 ;;Total ram usage:        0 bytes
   787 ;; Hardware stack levels used:    1
   788 ;; Hardware stack levels required when called:    3
   789 ;; This function calls:
   790 ;;		_send_lcd_data
   791 ;; This function is called by:
   792 ;;		_lcd_initialize
   793 ;; This function uses a non-reentrant model
   794 ;;
   795                           
   796                           
   797                           ;psect for function _lcd_clear
   798  00FE                     _lcd_clear:	
   799                           
   800                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
   801                           
   802                           ;incstack = 0
   803                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
   804  00FE  01F5               	clrf	send_lcd_data@uc_data
   805  00FF  0AF5               	incf	send_lcd_data@uc_data,f
   806  0100  3000               	movlw	0
   807  0101  120A  118A  2029   	fcall	_send_lcd_data
   808  0104  0008               	return
   809  0105                     __end_of_lcd_clear:	
   810                           
   811                           	psect	text3
   812  0029                     __ptext3:	
   813 ;; *************** function _send_lcd_data *****************
   814 ;; Defined at:
   815 ;;		line 308 in file "lcd.c"
   816 ;; Parameters:    Size  Location     Type
   817 ;;  b_rs            1    wreg     unsigned char 
   818 ;;  uc_data         1    5[COMMON] unsigned char 
   819 ;; Auto vars:     Size  Location     Type
   820 ;;  b_rs            1    2[BANK0 ] unsigned char 
   821 ;; Return value:  Size  Location     Type
   822 ;;                  1    wreg      void 
   823 ;; Registers used:
   824 ;;		wreg, status,2, status,0, pclath, cstack
   825 ;; Tracked objects:
   826 ;;		On entry : 0/0
   827 ;;		On exit  : 0/0
   828 ;;		Unchanged: 0/0
   829 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   830 ;;      Params:         1       0       0       0       0
   831 ;;      Locals:         0       1       0       0       0
   832 ;;      Temps:          0       2       0       0       0
   833 ;;      Totals:         1       3       0       0       0
   834 ;;Total ram usage:        4 bytes
   835 ;; Hardware stack levels used:    1
   836 ;; Hardware stack levels required when called:    2
   837 ;; This function calls:
   838 ;;		_set_lcd_data
   839 ;;		_set_lcd_e
   840 ;;		_set_lcd_rs
   841 ;; This function is called by:
   842 ;;		_lcd_initialize
   843 ;;		_lcd_clear
   844 ;;		_lcd_home
   845 ;;		_lcd_2ndline
   846 ;;		_lcd_goto
   847 ;;		_lcd_putchar
   848 ;; This function uses a non-reentrant model
   849 ;;
   850                           
   851                           
   852                           ;psect for function _send_lcd_data
   853  0029                     _send_lcd_data:	
   854                           
   855                           ;incstack = 0
   856                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
   857                           ;send_lcd_data@b_rs stored from wreg
   858  0029  1283               	bcf	3,5	;RP0=0, select bank0
   859  002A  1303               	bcf	3,6	;RP1=0, select bank0
   860  002B  00AC               	movwf	send_lcd_data@b_rs
   861                           
   862                           ;lcd.c: 311: set_lcd_rs(b_rs);
   863  002C  082C               	movf	send_lcd_data@b_rs,w
   864  002D  120A  118A  20E8  120A  118A  	fcall	_set_lcd_rs
   865                           
   866                           ;lcd.c: 312: set_lcd_data(uc_data);
   867  0032  0875               	movf	send_lcd_data@uc_data,w
   868  0033  120A  118A  2105  120A  118A  	fcall	_set_lcd_data
   869                           
   870                           ;lcd.c: 315: set_lcd_e(1);
   871  0038  3001               	movlw	1
   872  0039  120A  118A  20F3  120A  118A  	fcall	_set_lcd_e
   873                           
   874                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
   875  003E  3007               	movlw	7
   876  003F  1283               	bcf	3,5	;RP0=0, select bank0
   877  0040  1303               	bcf	3,6	;RP1=0, select bank0
   878  0041  00AB               	movwf	??_send_lcd_data+1
   879  0042  307C               	movlw	124
   880  0043  00AA               	movwf	??_send_lcd_data
   881  0044                     u517:	
   882  0044  0BAA               	decfsz	??_send_lcd_data,f
   883  0045  2844               	goto	u517
   884  0046  0BAB               	decfsz	??_send_lcd_data+1,f
   885  0047  2844               	goto	u517
   886  0048  0000               	nop
   887                           
   888                           ;lcd.c: 317: set_lcd_e(0);
   889  0049  3000               	movlw	0
   890  004A  120A  118A  20F3  120A  118A  	fcall	_set_lcd_e
   891                           
   892                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
   893  004F  300D               	movlw	13
   894  0050  1283               	bcf	3,5	;RP0=0, select bank0
   895  0051  1303               	bcf	3,6	;RP1=0, select bank0
   896  0052  00AB               	movwf	??_send_lcd_data+1
   897  0053  30FB               	movlw	251
   898  0054  00AA               	movwf	??_send_lcd_data
   899  0055                     u527:	
   900  0055  0BAA               	decfsz	??_send_lcd_data,f
   901  0056  2855               	goto	u527
   902  0057  0BAB               	decfsz	??_send_lcd_data+1,f
   903  0058  2855               	goto	u527
   904                           
   905                           ;lcd.c: 321: set_lcd_rs(0);
   906  0059  3000               	movlw	0
   907  005A  120A  118A  20E8  120A  118A  	fcall	_set_lcd_rs
   908                           
   909                           ;lcd.c: 322: set_lcd_data(0);
   910  005F  3000               	movlw	0
   911  0060  120A  118A  2105   	fcall	_set_lcd_data
   912  0063  0008               	return
   913  0064                     __end_of_send_lcd_data:	
   914                           
   915                           	psect	text4
   916  00E8                     __ptext4:	
   917 ;; *************** function _set_lcd_rs *****************
   918 ;; Defined at:
   919 ;;		line 360 in file "lcd.c"
   920 ;; Parameters:    Size  Location     Type
   921 ;;  b_output        1    wreg     unsigned char 
   922 ;; Auto vars:     Size  Location     Type
   923 ;;  b_output        1    4[COMMON] unsigned char 
   924 ;; Return value:  Size  Location     Type
   925 ;;                  1    wreg      void 
   926 ;; Registers used:
   927 ;;		wreg
   928 ;; Tracked objects:
   929 ;;		On entry : 0/0
   930 ;;		On exit  : 0/0
   931 ;;		Unchanged: 0/0
   932 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   933 ;;      Params:         0       0       0       0       0
   934 ;;      Locals:         1       0       0       0       0
   935 ;;      Temps:          0       0       0       0       0
   936 ;;      Totals:         1       0       0       0       0
   937 ;;Total ram usage:        1 bytes
   938 ;; Hardware stack levels used:    1
   939 ;; Hardware stack levels required when called:    1
   940 ;; This function calls:
   941 ;;		Nothing
   942 ;; This function is called by:
   943 ;;		_send_lcd_data
   944 ;; This function uses a non-reentrant model
   945 ;;
   946                           
   947                           
   948                           ;psect for function _set_lcd_rs
   949  00E8                     _set_lcd_rs:	
   950                           
   951                           ;incstack = 0
   952                           ; Regs used in _set_lcd_rs: [wreg]
   953                           ;set_lcd_rs@b_output stored from wreg
   954  00E8  00F4               	movwf	set_lcd_rs@b_output
   955                           
   956                           ;lcd.c: 362: RB4 = b_output;
   957  00E9  1C74               	btfss	set_lcd_rs@b_output,0
   958  00EA  28EF               	goto	u410
   959  00EB  1283               	bcf	3,5	;RP0=0, select bank0
   960  00EC  1303               	bcf	3,6	;RP1=0, select bank0
   961  00ED  1606               	bsf	6,4	;volatile
   962  00EE  0008               	return
   963  00EF                     u410:	
   964  00EF  1283               	bcf	3,5	;RP0=0, select bank0
   965  00F0  1303               	bcf	3,6	;RP1=0, select bank0
   966  00F1  1206               	bcf	6,4	;volatile
   967  00F2  0008               	return
   968  00F3                     __end_of_set_lcd_rs:	
   969                           
   970                           	psect	text5
   971  00F3                     __ptext5:	
   972 ;; *************** function _set_lcd_e *****************
   973 ;; Defined at:
   974 ;;		line 340 in file "lcd.c"
   975 ;; Parameters:    Size  Location     Type
   976 ;;  b_output        1    wreg     unsigned char 
   977 ;; Auto vars:     Size  Location     Type
   978 ;;  b_output        1    4[COMMON] unsigned char 
   979 ;; Return value:  Size  Location     Type
   980 ;;                  1    wreg      void 
   981 ;; Registers used:
   982 ;;		wreg
   983 ;; Tracked objects:
   984 ;;		On entry : 0/0
   985 ;;		On exit  : 0/0
   986 ;;		Unchanged: 0/0
   987 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   988 ;;      Params:         0       0       0       0       0
   989 ;;      Locals:         1       0       0       0       0
   990 ;;      Temps:          0       0       0       0       0
   991 ;;      Totals:         1       0       0       0       0
   992 ;;Total ram usage:        1 bytes
   993 ;; Hardware stack levels used:    1
   994 ;; Hardware stack levels required when called:    1
   995 ;; This function calls:
   996 ;;		Nothing
   997 ;; This function is called by:
   998 ;;		_lcd_initialize
   999 ;;		_send_lcd_data
  1000 ;; This function uses a non-reentrant model
  1001 ;;
  1002                           
  1003                           
  1004                           ;psect for function _set_lcd_e
  1005  00F3                     _set_lcd_e:	
  1006                           
  1007                           ;incstack = 0
  1008                           ; Regs used in _set_lcd_e: [wreg]
  1009                           ;set_lcd_e@b_output stored from wreg
  1010  00F3  00F4               	movwf	set_lcd_e@b_output
  1011                           
  1012                           ;lcd.c: 342: RB5 = b_output;
  1013  00F4  1C74               	btfss	set_lcd_e@b_output,0
  1014  00F5  28FA               	goto	u390
  1015  00F6  1283               	bcf	3,5	;RP0=0, select bank0
  1016  00F7  1303               	bcf	3,6	;RP1=0, select bank0
  1017  00F8  1686               	bsf	6,5	;volatile
  1018  00F9  0008               	return
  1019  00FA                     u390:	
  1020  00FA  1283               	bcf	3,5	;RP0=0, select bank0
  1021  00FB  1303               	bcf	3,6	;RP1=0, select bank0
  1022  00FC  1286               	bcf	6,5	;volatile
  1023  00FD  0008               	return
  1024  00FE                     __end_of_set_lcd_e:	
  1025                           
  1026                           	psect	text6
  1027  0105                     __ptext6:	
  1028 ;; *************** function _set_lcd_data *****************
  1029 ;; Defined at:
  1030 ;;		line 380 in file "lcd.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  uc_data         1    wreg     unsigned char 
  1033 ;; Auto vars:     Size  Location     Type
  1034 ;;  uc_data         1    4[COMMON] unsigned char 
  1035 ;; Return value:  Size  Location     Type
  1036 ;;                  1    wreg      void 
  1037 ;; Registers used:
  1038 ;;		wreg
  1039 ;; Tracked objects:
  1040 ;;		On entry : 0/0
  1041 ;;		On exit  : 0/0
  1042 ;;		Unchanged: 0/0
  1043 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1044 ;;      Params:         0       0       0       0       0
  1045 ;;      Locals:         1       0       0       0       0
  1046 ;;      Temps:          0       0       0       0       0
  1047 ;;      Totals:         1       0       0       0       0
  1048 ;;Total ram usage:        1 bytes
  1049 ;; Hardware stack levels used:    1
  1050 ;; Hardware stack levels required when called:    1
  1051 ;; This function calls:
  1052 ;;		Nothing
  1053 ;; This function is called by:
  1054 ;;		_send_lcd_data
  1055 ;; This function uses a non-reentrant model
  1056 ;;
  1057                           
  1058                           
  1059                           ;psect for function _set_lcd_data
  1060  0105                     _set_lcd_data:	
  1061                           
  1062                           ;incstack = 0
  1063                           ; Regs used in _set_lcd_data: [wreg]
  1064                           ;set_lcd_data@uc_data stored from wreg
  1065  0105  00F4               	movwf	set_lcd_data@uc_data
  1066                           
  1067                           ;lcd.c: 382: PORTD = uc_data;
  1068  0106  0874               	movf	set_lcd_data@uc_data,w
  1069  0107  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0108  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0109  0088               	movwf	8	;volatile
  1072  010A  0008               	return
  1073  010B                     __end_of_set_lcd_data:	
  1074                           
  1075                           	psect	text7
  1076  010B                     __ptext7:	
  1077 ;; *************** function _InitApp *****************
  1078 ;; Defined at:
  1079 ;;		line 22 in file "user.c"
  1080 ;; Parameters:    Size  Location     Type
  1081 ;;		None
  1082 ;; Auto vars:     Size  Location     Type
  1083 ;;		None
  1084 ;; Return value:  Size  Location     Type
  1085 ;;                  1    wreg      void 
  1086 ;; Registers used:
  1087 ;;		None
  1088 ;; Tracked objects:
  1089 ;;		On entry : 0/0
  1090 ;;		On exit  : 0/0
  1091 ;;		Unchanged: 0/0
  1092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1093 ;;      Params:         0       0       0       0       0
  1094 ;;      Locals:         0       0       0       0       0
  1095 ;;      Temps:          0       0       0       0       0
  1096 ;;      Totals:         0       0       0       0       0
  1097 ;;Total ram usage:        0 bytes
  1098 ;; Hardware stack levels used:    1
  1099 ;; Hardware stack levels required when called:    1
  1100 ;; This function calls:
  1101 ;;		Nothing
  1102 ;; This function is called by:
  1103 ;;		_main
  1104 ;; This function uses a non-reentrant model
  1105 ;;
  1106                           
  1107                           
  1108                           ;psect for function _InitApp
  1109  010B                     _InitApp:	
  1110                           
  1111                           ;incstack = 0
  1112                           ; Regs used in _InitApp: []
  1113  010B  0008               	return
  1114  010C                     __end_of_InitApp:	
  1115                           
  1116                           	psect	text8
  1117  00C2                     __ptext8:	
  1118 ;; *************** function _isr *****************
  1119 ;; Defined at:
  1120 ;;		line 7 in file "interrupts.c"
  1121 ;; Parameters:    Size  Location     Type
  1122 ;;		None
  1123 ;; Auto vars:     Size  Location     Type
  1124 ;;		None
  1125 ;; Return value:  Size  Location     Type
  1126 ;;                  1    wreg      void 
  1127 ;; Registers used:
  1128 ;;		wreg, status,2, status,0
  1129 ;; Tracked objects:
  1130 ;;		On entry : 0/0
  1131 ;;		On exit  : 0/0
  1132 ;;		Unchanged: 0/0
  1133 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1134 ;;      Params:         0       0       0       0       0
  1135 ;;      Locals:         0       0       0       0       0
  1136 ;;      Temps:          4       0       0       0       0
  1137 ;;      Totals:         4       0       0       0       0
  1138 ;;Total ram usage:        4 bytes
  1139 ;; Hardware stack levels used:    1
  1140 ;; This function calls:
  1141 ;;		Nothing
  1142 ;; This function is called by:
  1143 ;;		Interrupt level 1
  1144 ;; This function uses a non-reentrant model
  1145 ;;
  1146                           
  1147                           
  1148                           ;psect for function _isr
  1149  00C2                     _isr:	
  1150                           
  1151                           ;interrupts.c: 10: if(TMR0IF==1)
  1152  00C2  1D0B               	btfss	11,2	;volatile
  1153  00C3  28DD               	goto	i1l24
  1154                           
  1155                           ;interrupts.c: 11: {
  1156                           ;interrupts.c: 12: TMR0 = 101;
  1157  00C4  3065               	movlw	101
  1158  00C5  0081               	movwf	1	;volatile
  1159                           
  1160                           ;interrupts.c: 14: TMR0IF=0;
  1161  00C6  110B               	bcf	11,2	;volatile
  1162                           
  1163                           ;interrupts.c: 16: if(RC0==1)
  1164  00C7  1C07               	btfss	7,0	;volatile
  1165  00C8  28CF               	goto	i1l20
  1166                           
  1167                           ;interrupts.c: 17: {
  1168                           ;interrupts.c: 18: ledtime = 1000;
  1169  00C9  30E8               	movlw	232
  1170  00CA  00F8               	movwf	_ledtime
  1171  00CB  3003               	movlw	3
  1172  00CC  00F9               	movwf	_ledtime+1
  1173                           
  1174                           ;interrupts.c: 19: RB6 = 1;
  1175  00CD  1706               	bsf	6,6	;volatile
  1176                           
  1177                           ;interrupts.c: 20: }
  1178  00CE  28D0               	goto	i1l639
  1179  00CF                     i1l20:	
  1180                           
  1181                           ;interrupts.c: 21: else
  1182                           ;interrupts.c: 22: {
  1183                           ;interrupts.c: 23: RB6 = 0;
  1184  00CF  1306               	bcf	6,6	;volatile
  1185  00D0                     i1l639:	
  1186                           
  1187                           ;interrupts.c: 24: }
  1188                           ;interrupts.c: 27: if(ledtime > 0)
  1189  00D0  0878               	movf	_ledtime,w
  1190  00D1  0479               	iorwf	_ledtime+1,w
  1191  00D2  1903               	btfsc	3,2
  1192  00D3  28DC               	goto	i1l22
  1193                           
  1194                           ;interrupts.c: 28: {
  1195                           ;interrupts.c: 29: RC7 = 1;
  1196  00D4  1787               	bsf	7,7	;volatile
  1197                           
  1198                           ;interrupts.c: 30: ledtime--;
  1199  00D5  3001               	movlw	1
  1200  00D6  02F8               	subwf	_ledtime,f
  1201  00D7  3000               	movlw	0
  1202  00D8  1C03               	skipc
  1203  00D9  03F9               	decf	_ledtime+1,f
  1204  00DA  02F9               	subwf	_ledtime+1,f
  1205                           
  1206                           ;interrupts.c: 31: }
  1207  00DB  28DD               	goto	i1l24
  1208  00DC                     i1l22:	
  1209                           
  1210                           ;interrupts.c: 32: else
  1211                           ;interrupts.c: 33: {
  1212                           ;interrupts.c: 34: RC7 = 0;
  1213  00DC  1387               	bcf	7,7	;volatile
  1214  00DD                     i1l24:	
  1215  00DD  0873               	movf	??_isr+3,w
  1216  00DE  00FF               	movwf	127
  1217  00DF  0872               	movf	??_isr+2,w
  1218  00E0  008A               	movwf	10
  1219  00E1  0871               	movf	??_isr+1,w
  1220  00E2  0084               	movwf	4
  1221  00E3  0E70               	swapf	??_isr^(0+-128),w
  1222  00E4  0083               	movwf	3
  1223  00E5  0EFE               	swapf	126,f
  1224  00E6  0E7E               	swapf	126,w
  1225  00E7  0009               	retfie
  1226  00E8                     __end_of_isr:	
  1227  007E                     btemp	set	126	;btemp
  1228  007E                     wtemp0	set	126
  1229                           
  1230                           	psect	intentry
  1231  0004                     __pintentry:	
  1232                           ;incstack = 0
  1233                           ; Regs used in _isr: [wreg+status,2+status,0]
  1234                           
  1235  0004                     interrupt_function:	
  1236  007E                     saved_w	set	btemp
  1237  0004  00FE               	movwf	btemp
  1238  0005  0E03               	swapf	3,w
  1239  0006  00F0               	movwf	??_isr
  1240  0007  0804               	movf	4,w
  1241  0008  00F1               	movwf	??_isr+1
  1242  0009  080A               	movf	10,w
  1243  000A  00F2               	movwf	??_isr+2
  1244  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1245  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1246  000D  087F               	movf	btemp+1,w
  1247  000E  00F3               	movwf	??_isr+3
  1248  000F  120A  118A  28C2   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         14
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80      5      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_initialize
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1381
                            _InitApp
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1381
                                              3 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     675
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     675
                                              5 COMMON     1     0      1
                                              0 BANK0      3     3      0
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      31
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      6       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      19       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      19      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu May 17 15:56:31 2018

            __CFG_CP$OFF 0000                       l61 00C1                      _GIE 005F  
                    _RC0 0038                      _RB4 0034                      _RB5 0035  
                    _RB6 0036                      _RC7 003F                      u410 00EF  
           __CFG_CPD$OFF 0000                      u507 0070                      u517 0044  
                    u390 00FA                      u527 0055                      _isr 00C2  
                    fsr0 0004             __CFG_FOSC$HS 0000        set_lcd_e@b_output 0074  
           __CFG_LVP$OFF 0000                     ?_isr 0070                     _PEIE 005E  
                   i1l20 00CF                     _INTE 005C                     i1l22 00DC  
                   i1l24 00DD                     _TMR0 0001             __CFG_WRT$OFF 0000  
                   _main 009C                     _time 0076                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0012          __end_of_InitApp 010C  
                  ??_isr 0070                    ?_main 0070            __CFG_WDTE$OFF 0000  
                  i1l639 00D0                    _PORTA 0005                    _PORTB 0006  
                  _PORTC 0007                    _PORTD 0008                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
   send_lcd_data@uc_data 0075            __CFG_PWRTE$ON 0000                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
      send_lcd_data@b_rs 002C             __end_of_main 00C2    __end_of_send_lcd_data 0064  
                 ??_main 0076                   _TMR0IE 005D                   _TMR0IF 005A  
              ??_InitApp 0074                   saved_w 007E         ??_lcd_initialize 002D  
__end_of__initialization 0025           __pcstackCOMMON 0070       __size_of_lcd_clear 0007  
             __pbssBANK0 0020               __pmaintext 009C               __pintentry 0004  
     __size_of_set_lcd_e 000B            ?_set_lcd_data 0070                  _InitApp 010B  
      __end_of_lcd_clear 0105                  __ptext1 0064                  __ptext2 00FE  
                __ptext3 0029                  __ptext4 00E8                  __ptext5 00F3  
                __ptext6 0105                  __ptext7 010B                  __ptext8 00C2  
                _ledtime 0078             __size_of_isr 0026     end_of_initialization 0025  
         ??_set_lcd_data 0074        __end_of_set_lcd_e 00FE               _set_lcd_rs 00E8  
 __size_of_send_lcd_data 003B      start_initialization 0015       set_lcd_rs@b_output 0074  
            __end_of_isr 00E8              ?_set_lcd_rs 0070            _send_lcd_data 0029  
   __end_of_set_lcd_data 010B              __pbssCOMMON 0076                ___latbits 0002  
          __pcstackBANK0 002A                 ?_InitApp 0070  __size_of_lcd_initialize 0038  
              _lcd_clear 00FE           ?_send_lcd_data 0075      __size_of_set_lcd_rs 000B  
    set_lcd_data@uc_data 0074        interrupt_function 0004                _set_lcd_e 00F3  
             ?_lcd_clear 0070         __size_of_InitApp 0001               ?_set_lcd_e 0070  
  __size_of_set_lcd_data 0006          ??_send_lcd_data 002A            __size_of_main 0026  
           _set_lcd_data 0105           _lcd_initialize 0064             ??_set_lcd_rs 0074  
            ??_lcd_clear 0076       __end_of_set_lcd_rs 00F3                 intlevel1 0000  
 __end_of_lcd_initialize 009C              ??_set_lcd_e 0074               _OPTION_REG 0081  
           lcd_bcd@F1134 0020          ?_lcd_initialize 0070  
