

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Wed May 09 18:25:22 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 1.45
    24                           ; Generated 16/11/2017 GMT
    25                           ; 
    26                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F877A Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  0091                     	;# 
   102  0092                     	;# 
   103  0093                     	;# 
   104  0094                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009C                     	;# 
   108  009D                     	;# 
   109  009E                     	;# 
   110  009F                     	;# 
   111  010C                     	;# 
   112  010D                     	;# 
   113  010E                     	;# 
   114  010F                     	;# 
   115  018C                     	;# 
   116  018D                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000E                     	;# 
   133  000F                     	;# 
   134  0010                     	;# 
   135  0011                     	;# 
   136  0012                     	;# 
   137  0013                     	;# 
   138  0014                     	;# 
   139  0015                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0017                     	;# 
   143  0018                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001D                     	;# 
   150  001E                     	;# 
   151  001F                     	;# 
   152  0081                     	;# 
   153  0085                     	;# 
   154  0086                     	;# 
   155  0087                     	;# 
   156  0088                     	;# 
   157  0089                     	;# 
   158  008C                     	;# 
   159  008D                     	;# 
   160  008E                     	;# 
   161  0091                     	;# 
   162  0092                     	;# 
   163  0093                     	;# 
   164  0094                     	;# 
   165  0098                     	;# 
   166  0099                     	;# 
   167  009C                     	;# 
   168  009D                     	;# 
   169  009E                     	;# 
   170  009F                     	;# 
   171  010C                     	;# 
   172  010D                     	;# 
   173  010E                     	;# 
   174  010F                     	;# 
   175  018C                     	;# 
   176  018D                     	;# 
   177  0000                     	;# 
   178  0001                     	;# 
   179  0002                     	;# 
   180  0003                     	;# 
   181  0004                     	;# 
   182  0005                     	;# 
   183  0006                     	;# 
   184  0007                     	;# 
   185  0008                     	;# 
   186  0009                     	;# 
   187  000A                     	;# 
   188  000B                     	;# 
   189  000C                     	;# 
   190  000D                     	;# 
   191  000E                     	;# 
   192  000E                     	;# 
   193  000F                     	;# 
   194  0010                     	;# 
   195  0011                     	;# 
   196  0012                     	;# 
   197  0013                     	;# 
   198  0014                     	;# 
   199  0015                     	;# 
   200  0015                     	;# 
   201  0016                     	;# 
   202  0017                     	;# 
   203  0018                     	;# 
   204  0019                     	;# 
   205  001A                     	;# 
   206  001B                     	;# 
   207  001B                     	;# 
   208  001C                     	;# 
   209  001D                     	;# 
   210  001E                     	;# 
   211  001F                     	;# 
   212  0081                     	;# 
   213  0085                     	;# 
   214  0086                     	;# 
   215  0087                     	;# 
   216  0088                     	;# 
   217  0089                     	;# 
   218  008C                     	;# 
   219  008D                     	;# 
   220  008E                     	;# 
   221  0091                     	;# 
   222  0092                     	;# 
   223  0093                     	;# 
   224  0094                     	;# 
   225  0098                     	;# 
   226  0099                     	;# 
   227  009C                     	;# 
   228  009D                     	;# 
   229  009E                     	;# 
   230  009F                     	;# 
   231  010C                     	;# 
   232  010D                     	;# 
   233  010E                     	;# 
   234  010F                     	;# 
   235  018C                     	;# 
   236  018D                     	;# 
   237  0000                     	;# 
   238  0001                     	;# 
   239  0002                     	;# 
   240  0003                     	;# 
   241  0004                     	;# 
   242  0005                     	;# 
   243  0006                     	;# 
   244  0007                     	;# 
   245  0008                     	;# 
   246  0009                     	;# 
   247  000A                     	;# 
   248  000B                     	;# 
   249  000C                     	;# 
   250  000D                     	;# 
   251  000E                     	;# 
   252  000E                     	;# 
   253  000F                     	;# 
   254  0010                     	;# 
   255  0011                     	;# 
   256  0012                     	;# 
   257  0013                     	;# 
   258  0014                     	;# 
   259  0015                     	;# 
   260  0015                     	;# 
   261  0016                     	;# 
   262  0017                     	;# 
   263  0018                     	;# 
   264  0019                     	;# 
   265  001A                     	;# 
   266  001B                     	;# 
   267  001B                     	;# 
   268  001C                     	;# 
   269  001D                     	;# 
   270  001E                     	;# 
   271  001F                     	;# 
   272  0081                     	;# 
   273  0085                     	;# 
   274  0086                     	;# 
   275  0087                     	;# 
   276  0088                     	;# 
   277  0089                     	;# 
   278  008C                     	;# 
   279  008D                     	;# 
   280  008E                     	;# 
   281  0091                     	;# 
   282  0092                     	;# 
   283  0093                     	;# 
   284  0094                     	;# 
   285  0098                     	;# 
   286  0099                     	;# 
   287  009C                     	;# 
   288  009D                     	;# 
   289  009E                     	;# 
   290  009F                     	;# 
   291  010C                     	;# 
   292  010D                     	;# 
   293  010E                     	;# 
   294  010F                     	;# 
   295  018C                     	;# 
   296  018D                     	;# 
   297  0000                     	;# 
   298  0001                     	;# 
   299  0002                     	;# 
   300  0003                     	;# 
   301  0004                     	;# 
   302  0005                     	;# 
   303  0006                     	;# 
   304  0007                     	;# 
   305  0008                     	;# 
   306  0009                     	;# 
   307  000A                     	;# 
   308  000B                     	;# 
   309  000C                     	;# 
   310  000D                     	;# 
   311  000E                     	;# 
   312  000E                     	;# 
   313  000F                     	;# 
   314  0010                     	;# 
   315  0011                     	;# 
   316  0012                     	;# 
   317  0013                     	;# 
   318  0014                     	;# 
   319  0015                     	;# 
   320  0015                     	;# 
   321  0016                     	;# 
   322  0017                     	;# 
   323  0018                     	;# 
   324  0019                     	;# 
   325  001A                     	;# 
   326  001B                     	;# 
   327  001B                     	;# 
   328  001C                     	;# 
   329  001D                     	;# 
   330  001E                     	;# 
   331  001F                     	;# 
   332  0081                     	;# 
   333  0085                     	;# 
   334  0086                     	;# 
   335  0087                     	;# 
   336  0088                     	;# 
   337  0089                     	;# 
   338  008C                     	;# 
   339  008D                     	;# 
   340  008E                     	;# 
   341  0091                     	;# 
   342  0092                     	;# 
   343  0093                     	;# 
   344  0094                     	;# 
   345  0098                     	;# 
   346  0099                     	;# 
   347  009C                     	;# 
   348  009D                     	;# 
   349  009E                     	;# 
   350  009F                     	;# 
   351  010C                     	;# 
   352  010D                     	;# 
   353  010E                     	;# 
   354  010F                     	;# 
   355  018C                     	;# 
   356  018D                     	;# 
   357  0000                     	;# 
   358  0001                     	;# 
   359  0002                     	;# 
   360  0003                     	;# 
   361  0004                     	;# 
   362  0005                     	;# 
   363  0006                     	;# 
   364  0007                     	;# 
   365  0008                     	;# 
   366  0009                     	;# 
   367  000A                     	;# 
   368  000B                     	;# 
   369  000C                     	;# 
   370  000D                     	;# 
   371  000E                     	;# 
   372  000E                     	;# 
   373  000F                     	;# 
   374  0010                     	;# 
   375  0011                     	;# 
   376  0012                     	;# 
   377  0013                     	;# 
   378  0014                     	;# 
   379  0015                     	;# 
   380  0015                     	;# 
   381  0016                     	;# 
   382  0017                     	;# 
   383  0018                     	;# 
   384  0019                     	;# 
   385  001A                     	;# 
   386  001B                     	;# 
   387  001B                     	;# 
   388  001C                     	;# 
   389  001D                     	;# 
   390  001E                     	;# 
   391  001F                     	;# 
   392  0081                     	;# 
   393  0085                     	;# 
   394  0086                     	;# 
   395  0087                     	;# 
   396  0088                     	;# 
   397  0089                     	;# 
   398  008C                     	;# 
   399  008D                     	;# 
   400  008E                     	;# 
   401  0091                     	;# 
   402  0092                     	;# 
   403  0093                     	;# 
   404  0094                     	;# 
   405  0098                     	;# 
   406  0099                     	;# 
   407  009C                     	;# 
   408  009D                     	;# 
   409  009E                     	;# 
   410  009F                     	;# 
   411  010C                     	;# 
   412  010D                     	;# 
   413  010E                     	;# 
   414  010F                     	;# 
   415  018C                     	;# 
   416  018D                     	;# 
   417  0000                     	;# 
   418  0001                     	;# 
   419  0002                     	;# 
   420  0003                     	;# 
   421  0004                     	;# 
   422  0005                     	;# 
   423  0006                     	;# 
   424  0007                     	;# 
   425  0008                     	;# 
   426  0009                     	;# 
   427  000A                     	;# 
   428  000B                     	;# 
   429  000C                     	;# 
   430  000D                     	;# 
   431  000E                     	;# 
   432  000E                     	;# 
   433  000F                     	;# 
   434  0010                     	;# 
   435  0011                     	;# 
   436  0012                     	;# 
   437  0013                     	;# 
   438  0014                     	;# 
   439  0015                     	;# 
   440  0015                     	;# 
   441  0016                     	;# 
   442  0017                     	;# 
   443  0018                     	;# 
   444  0019                     	;# 
   445  001A                     	;# 
   446  001B                     	;# 
   447  001B                     	;# 
   448  001C                     	;# 
   449  001D                     	;# 
   450  001E                     	;# 
   451  001F                     	;# 
   452  0081                     	;# 
   453  0085                     	;# 
   454  0086                     	;# 
   455  0087                     	;# 
   456  0088                     	;# 
   457  0089                     	;# 
   458  008C                     	;# 
   459  008D                     	;# 
   460  008E                     	;# 
   461  0091                     	;# 
   462  0092                     	;# 
   463  0093                     	;# 
   464  0094                     	;# 
   465  0098                     	;# 
   466  0099                     	;# 
   467  009C                     	;# 
   468  009D                     	;# 
   469  009E                     	;# 
   470  009F                     	;# 
   471  010C                     	;# 
   472  010D                     	;# 
   473  010E                     	;# 
   474  010F                     	;# 
   475  018C                     	;# 
   476  018D                     	;# 
   477  001E                     _ADRESH	set	30
   478  0008                     _PORTD	set	8
   479  0007                     _PORTC	set	7
   480  0006                     _PORTB	set	6
   481  0005                     _PORTA	set	5
   482  0034                     _RB4	set	52
   483  0035                     _RB5	set	53
   484  00FA                     _GO_nDONE	set	250
   485  00FB                     _CHS0	set	251
   486  00FC                     _CHS1	set	252
   487  00FD                     _CHS2	set	253
   488  00F8                     _ADON	set	248
   489  00FE                     _ADCS0	set	254
   490  00FF                     _ADCS1	set	255
   491  003B                     _RC3	set	59
   492  009E                     _ADRESL	set	158
   493  0088                     _TRISD	set	136
   494  0087                     _TRISC	set	135
   495  0086                     _TRISB	set	134
   496  0085                     _TRISA	set	133
   497  04F8                     _PCFG0	set	1272
   498  04F9                     _PCFG1	set	1273
   499  04FA                     _PCFG2	set	1274
   500  04FB                     _PCFG3	set	1275
   501  04FF                     _ADFM	set	1279
   502                           
   503                           ; #config settings
   504  0000                     
   505                           	psect	cinit
   506  0015                     start_initialization:	
   507  0015                     __initialization:	
   508                           
   509                           ; Clear objects allocated to BANK0
   510  0015  1283               	bcf	3,5	;RP0=0, select bank0
   511  0016  1303               	bcf	3,6	;RP1=0, select bank0
   512  0017  01A0               	clrf	__pbssBANK0& (0+127)
   513  0018  01A1               	clrf	(__pbssBANK0+1)& (0+127)
   514  0019  01A2               	clrf	(__pbssBANK0+2)& (0+127)
   515  001A  01A3               	clrf	(__pbssBANK0+3)& (0+127)
   516  001B  01A4               	clrf	(__pbssBANK0+4)& (0+127)
   517  001C  01A5               	clrf	(__pbssBANK0+5)& (0+127)
   518  001D  01A6               	clrf	(__pbssBANK0+6)& (0+127)
   519  001E  01A7               	clrf	(__pbssBANK0+7)& (0+127)
   520  001F  01A8               	clrf	(__pbssBANK0+8)& (0+127)
   521  0020  01A9               	clrf	(__pbssBANK0+9)& (0+127)
   522  0021                     end_of_initialization:	
   523                           ;End of C runtime variable initialization code
   524                           
   525  0021                     __end_of__initialization:	
   526  0021  0183               	clrf	3
   527  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   528                           
   529                           	psect	bssBANK0
   530  0020                     __pbssBANK0:	
   531  0020                     lcd_bcd@F1134:	
   532  0020                     	ds	10
   533                           
   534                           	psect	cstackCOMMON
   535  0070                     __pcstackCOMMON:	
   536  0070                     ?_InitApp:	
   537  0070                     ?_lcd_initialize:	
   538                           ; 1 bytes @ 0x0
   539                           
   540  0070                     ?_adc_initialize:	
   541                           ; 1 bytes @ 0x0
   542                           
   543  0070                     ?_set_lcd_e:	
   544                           ; 1 bytes @ 0x0
   545                           
   546  0070                     ?_lcd_clear:	
   547                           ; 1 bytes @ 0x0
   548                           
   549  0070                     ?_set_lcd_rs:	
   550                           ; 1 bytes @ 0x0
   551                           
   552  0070                     ?_set_lcd_data:	
   553                           ; 1 bytes @ 0x0
   554                           
   555  0070                     ?_isr:	
   556                           ; 1 bytes @ 0x0
   557                           
   558  0070                     ??_isr:	
   559                           ; 1 bytes @ 0x0
   560                           
   561  0070                     ?_Rotation0:	
   562                           ; 1 bytes @ 0x0
   563                           
   564  0070                     ?_Rotation180:	
   565                           ; 1 bytes @ 0x0
   566                           
   567  0070                     ?_main:	
   568                           ; 1 bytes @ 0x0
   569                           
   570                           
   571                           ; 1 bytes @ 0x0
   572  0070                     	ds	4
   573  0074                     ??_InitApp:	
   574  0074                     ??_adc_initialize:	
   575                           ; 1 bytes @ 0x4
   576                           
   577  0074                     ??_set_lcd_e:	
   578                           ; 1 bytes @ 0x4
   579                           
   580  0074                     ??_set_lcd_rs:	
   581                           ; 1 bytes @ 0x4
   582                           
   583  0074                     ??_set_lcd_data:	
   584                           ; 1 bytes @ 0x4
   585                           
   586  0074                     ??_Rotation0:	
   587                           ; 1 bytes @ 0x4
   588                           
   589  0074                     ??_Rotation180:	
   590                           ; 1 bytes @ 0x4
   591                           
   592  0074                     set_lcd_e@b_output:	
   593                           ; 1 bytes @ 0x4
   594                           
   595  0074                     set_lcd_rs@b_output:	
   596                           ; 1 bytes @ 0x4
   597                           
   598  0074                     set_lcd_data@uc_data:	
   599                           ; 1 bytes @ 0x4
   600                           
   601                           
   602                           ; 1 bytes @ 0x4
   603  0074                     	ds	1
   604  0075                     ?_send_lcd_data:	
   605  0075                     send_lcd_data@uc_data:	
   606                           ; 1 bytes @ 0x5
   607                           
   608                           
   609                           ; 1 bytes @ 0x5
   610  0075                     	ds	1
   611  0076                     ??_send_lcd_data:	
   612  0076                     Rotation0@i:	
   613                           ; 1 bytes @ 0x6
   614                           
   615  0076                     Rotation180@i:	
   616                           ; 2 bytes @ 0x6
   617                           
   618                           
   619                           ; 2 bytes @ 0x6
   620  0076                     	ds	2
   621  0078                     send_lcd_data@b_rs:	
   622                           
   623                           ; 1 bytes @ 0x8
   624  0078                     	ds	1
   625  0079                     ??_lcd_clear:	
   626                           
   627                           	psect	cstackBANK0
   628  002A                     __pcstackBANK0:	
   629                           ; 1 bytes @ 0x9
   630                           
   631  002A                     ??_lcd_initialize:	
   632                           
   633                           ; 1 bytes @ 0x0
   634  002A                     	ds	2
   635  002C                     ??_main:	
   636                           
   637                           ; 1 bytes @ 0x2
   638  002C                     	ds	3
   639                           
   640                           	psect	maintext
   641  0025                     __pmaintext:	
   642 ;;
   643 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   644 ;;
   645 ;; *************** function _main *****************
   646 ;; Defined at:
   647 ;;		line 58 in file "main.c"
   648 ;; Parameters:    Size  Location     Type
   649 ;;		None
   650 ;; Auto vars:     Size  Location     Type
   651 ;;		None
   652 ;; Return value:  Size  Location     Type
   653 ;;                  1    wreg      void 
   654 ;; Registers used:
   655 ;;		wreg, status,2, status,0, pclath, cstack
   656 ;; Tracked objects:
   657 ;;		On entry : B00/0
   658 ;;		On exit  : 0/0
   659 ;;		Unchanged: 0/0
   660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   661 ;;      Params:         0       0       0       0       0
   662 ;;      Locals:         0       0       0       0       0
   663 ;;      Temps:          0       3       0       0       0
   664 ;;      Totals:         0       3       0       0       0
   665 ;;Total ram usage:        3 bytes
   666 ;; Hardware stack levels required when called:    5
   667 ;; This function calls:
   668 ;;		_InitApp
   669 ;;		_Rotation0
   670 ;;		_Rotation180
   671 ;;		_adc_initialize
   672 ;;		_lcd_initialize
   673 ;; This function is called by:
   674 ;;		Startup code after reset
   675 ;; This function uses a non-reentrant model
   676 ;;
   677                           
   678                           
   679                           ;psect for function _main
   680  0025                     _main:	
   681                           
   682                           ;main.c: 61: InitApp();
   683                           
   684                           ;incstack = 0
   685                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   686  0025  120A  118A  2164  120A  118A  	fcall	_InitApp
   687                           
   688                           ;main.c: 63: PORTA = 0;
   689  002A  1283               	bcf	3,5	;RP0=0, select bank0
   690  002B  1303               	bcf	3,6	;RP1=0, select bank0
   691  002C  0185               	clrf	5	;volatile
   692                           
   693                           ;main.c: 64: PORTB = 0;
   694  002D  0186               	clrf	6	;volatile
   695                           
   696                           ;main.c: 65: PORTC = 0;
   697  002E  0187               	clrf	7	;volatile
   698                           
   699                           ;main.c: 66: PORTD = 0;
   700  002F  0188               	clrf	8	;volatile
   701                           
   702                           ;main.c: 68: TRISA = 0b11111111;
   703  0030  30FF               	movlw	255
   704  0031  1683               	bsf	3,5	;RP0=1, select bank1
   705  0032  1303               	bcf	3,6	;RP1=0, select bank1
   706  0033  0085               	movwf	5	;volatile
   707                           
   708                           ;main.c: 69: TRISB = 0b00000011;
   709  0034  3003               	movlw	3
   710  0035  0086               	movwf	6	;volatile
   711                           
   712                           ;main.c: 70: TRISC = 0b00000000;
   713  0036  0187               	clrf	7	;volatile
   714                           
   715                           ;main.c: 71: TRISD = 0b00000000;
   716  0037  0188               	clrf	8	;volatile
   717                           
   718                           ;main.c: 73: lcd_initialize();
   719  0038  120A  118A  206B  120A  118A  	fcall	_lcd_initialize
   720                           
   721                           ;main.c: 74: adc_initialize();
   722  003D  120A  118A  2127  120A  118A  	fcall	_adc_initialize
   723  0042                     l51:	
   724                           ;main.c: 86: while(1)
   725                           
   726                           
   727                           ;main.c: 87: {
   728                           ;main.c: 88: Rotation0();
   729  0042  120A  118A  20D8  120A  118A  	fcall	_Rotation0
   730                           
   731                           ;main.c: 89: _delay((unsigned long)((1000)*(20000000/4000.0)));
   732  0047  301A               	movlw	26
   733  0048  1283               	bcf	3,5	;RP0=0, select bank0
   734  0049  1303               	bcf	3,6	;RP1=0, select bank0
   735  004A  00AE               	movwf	??_main+2
   736  004B  305E               	movlw	94
   737  004C  00AD               	movwf	??_main+1
   738  004D  306D               	movlw	109
   739  004E  00AC               	movwf	??_main
   740  004F                     u437:	
   741  004F  0BAC               	decfsz	??_main,f
   742  0050  284F               	goto	u437
   743  0051  0BAD               	decfsz	??_main+1,f
   744  0052  284F               	goto	u437
   745  0053  0BAE               	decfsz	??_main+2,f
   746  0054  284F               	goto	u437
   747  0055  2856               	nop2
   748                           
   749                           ;main.c: 94: Rotation180();
   750  0056  120A  118A  2100  120A  118A  	fcall	_Rotation180
   751                           
   752                           ;main.c: 95: _delay((unsigned long)((1000)*(20000000/4000.0)));
   753  005B  301A               	movlw	26
   754  005C  1283               	bcf	3,5	;RP0=0, select bank0
   755  005D  1303               	bcf	3,6	;RP1=0, select bank0
   756  005E  00AE               	movwf	??_main+2
   757  005F  305E               	movlw	94
   758  0060  00AD               	movwf	??_main+1
   759  0061  306D               	movlw	109
   760  0062  00AC               	movwf	??_main
   761  0063                     u447:	
   762  0063  0BAC               	decfsz	??_main,f
   763  0064  2863               	goto	u447
   764  0065  0BAD               	decfsz	??_main+1,f
   765  0066  2863               	goto	u447
   766  0067  0BAE               	decfsz	??_main+2,f
   767  0068  2863               	goto	u447
   768  0069  286A               	nop2
   769  006A  2842               	goto	l51
   770  006B                     __end_of_main:	
   771                           
   772                           	psect	text1
   773  006B                     __ptext1:	
   774 ;; *************** function _lcd_initialize *****************
   775 ;; Defined at:
   776 ;;		line 100 in file "lcd.c"
   777 ;; Parameters:    Size  Location     Type
   778 ;;		None
   779 ;; Auto vars:     Size  Location     Type
   780 ;;		None
   781 ;; Return value:  Size  Location     Type
   782 ;;                  1    wreg      void 
   783 ;; Registers used:
   784 ;;		wreg, status,2, status,0, pclath, cstack
   785 ;; Tracked objects:
   786 ;;		On entry : 0/0
   787 ;;		On exit  : 0/0
   788 ;;		Unchanged: 0/0
   789 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   790 ;;      Params:         0       0       0       0       0
   791 ;;      Locals:         0       0       0       0       0
   792 ;;      Temps:          0       2       0       0       0
   793 ;;      Totals:         0       2       0       0       0
   794 ;;Total ram usage:        2 bytes
   795 ;; Hardware stack levels used:    1
   796 ;; Hardware stack levels required when called:    4
   797 ;; This function calls:
   798 ;;		_lcd_clear
   799 ;;		_send_lcd_data
   800 ;;		_set_lcd_e
   801 ;; This function is called by:
   802 ;;		_main
   803 ;; This function uses a non-reentrant model
   804 ;;
   805                           
   806                           
   807                           ;psect for function _lcd_initialize
   808  006B                     _lcd_initialize:	
   809                           
   810                           ;lcd.c: 104: set_lcd_e(1);
   811                           
   812                           ;incstack = 0
   813                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   814  006B  3001               	movlw	1
   815  006C  120A  118A  2141  120A  118A  	fcall	_set_lcd_e
   816                           
   817                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
   818  0071  3062               	movlw	98
   819  0072  1283               	bcf	3,5	;RP0=0, select bank0
   820  0073  1303               	bcf	3,6	;RP1=0, select bank0
   821  0074  00AB               	movwf	??_lcd_initialize+1
   822  0075  3065               	movlw	101
   823  0076  00AA               	movwf	??_lcd_initialize
   824  0077                     u457:	
   825  0077  0BAA               	decfsz	??_lcd_initialize,f
   826  0078  2877               	goto	u457
   827  0079  0BAB               	decfsz	??_lcd_initialize+1,f
   828  007A  2877               	goto	u457
   829                           
   830                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
   831  007B  3038               	movlw	56
   832  007C  1283               	bcf	3,5	;RP0=0, select bank0
   833  007D  1303               	bcf	3,6	;RP1=0, select bank0
   834  007E  00AA               	movwf	??_lcd_initialize
   835  007F  082A               	movf	??_lcd_initialize,w
   836  0080  00F5               	movwf	send_lcd_data@uc_data
   837  0081  3000               	movlw	0
   838  0082  120A  118A  20A3  120A  118A  	fcall	_send_lcd_data
   839                           
   840                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
   841  0087  3006               	movlw	6
   842  0088  1283               	bcf	3,5	;RP0=0, select bank0
   843  0089  1303               	bcf	3,6	;RP1=0, select bank0
   844  008A  00AA               	movwf	??_lcd_initialize
   845  008B  082A               	movf	??_lcd_initialize,w
   846  008C  00F5               	movwf	send_lcd_data@uc_data
   847  008D  3000               	movlw	0
   848  008E  120A  118A  20A3  120A  118A  	fcall	_send_lcd_data
   849                           
   850                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
   851  0093  300C               	movlw	12
   852  0094  1283               	bcf	3,5	;RP0=0, select bank0
   853  0095  1303               	bcf	3,6	;RP1=0, select bank0
   854  0096  00AA               	movwf	??_lcd_initialize
   855  0097  082A               	movf	??_lcd_initialize,w
   856  0098  00F5               	movwf	send_lcd_data@uc_data
   857  0099  3000               	movlw	0
   858  009A  120A  118A  20A3  120A  118A  	fcall	_send_lcd_data
   859                           
   860                           ;lcd.c: 118: lcd_clear();
   861  009F  120A  118A  2157   	fcall	_lcd_clear
   862  00A2  0008               	return
   863  00A3                     __end_of_lcd_initialize:	
   864                           
   865                           	psect	text2
   866  0157                     __ptext2:	
   867 ;; *************** function _lcd_clear *****************
   868 ;; Defined at:
   869 ;;		line 136 in file "lcd.c"
   870 ;; Parameters:    Size  Location     Type
   871 ;;		None
   872 ;; Auto vars:     Size  Location     Type
   873 ;;		None
   874 ;; Return value:  Size  Location     Type
   875 ;;                  1    wreg      void 
   876 ;; Registers used:
   877 ;;		wreg, status,2, status,0, pclath, cstack
   878 ;; Tracked objects:
   879 ;;		On entry : 0/0
   880 ;;		On exit  : 0/0
   881 ;;		Unchanged: 0/0
   882 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   883 ;;      Params:         0       0       0       0       0
   884 ;;      Locals:         0       0       0       0       0
   885 ;;      Temps:          0       0       0       0       0
   886 ;;      Totals:         0       0       0       0       0
   887 ;;Total ram usage:        0 bytes
   888 ;; Hardware stack levels used:    1
   889 ;; Hardware stack levels required when called:    3
   890 ;; This function calls:
   891 ;;		_send_lcd_data
   892 ;; This function is called by:
   893 ;;		_lcd_initialize
   894 ;; This function uses a non-reentrant model
   895 ;;
   896                           
   897                           
   898                           ;psect for function _lcd_clear
   899  0157                     _lcd_clear:	
   900                           
   901                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
   902                           
   903                           ;incstack = 0
   904                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
   905  0157  01F5               	clrf	send_lcd_data@uc_data
   906  0158  0AF5               	incf	send_lcd_data@uc_data,f
   907  0159  3000               	movlw	0
   908  015A  120A  118A  20A3   	fcall	_send_lcd_data
   909  015D  0008               	return
   910  015E                     __end_of_lcd_clear:	
   911                           
   912                           	psect	text3
   913  00A3                     __ptext3:	
   914 ;; *************** function _send_lcd_data *****************
   915 ;; Defined at:
   916 ;;		line 308 in file "lcd.c"
   917 ;; Parameters:    Size  Location     Type
   918 ;;  b_rs            1    wreg     unsigned char 
   919 ;;  uc_data         1    5[COMMON] unsigned char 
   920 ;; Auto vars:     Size  Location     Type
   921 ;;  b_rs            1    8[COMMON] unsigned char 
   922 ;; Return value:  Size  Location     Type
   923 ;;                  1    wreg      void 
   924 ;; Registers used:
   925 ;;		wreg, status,2, status,0, pclath, cstack
   926 ;; Tracked objects:
   927 ;;		On entry : 0/0
   928 ;;		On exit  : 0/0
   929 ;;		Unchanged: 0/0
   930 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   931 ;;      Params:         1       0       0       0       0
   932 ;;      Locals:         1       0       0       0       0
   933 ;;      Temps:          2       0       0       0       0
   934 ;;      Totals:         4       0       0       0       0
   935 ;;Total ram usage:        4 bytes
   936 ;; Hardware stack levels used:    1
   937 ;; Hardware stack levels required when called:    2
   938 ;; This function calls:
   939 ;;		_set_lcd_data
   940 ;;		_set_lcd_e
   941 ;;		_set_lcd_rs
   942 ;; This function is called by:
   943 ;;		_lcd_initialize
   944 ;;		_lcd_clear
   945 ;;		_lcd_home
   946 ;;		_lcd_2ndline
   947 ;;		_lcd_goto
   948 ;;		_lcd_putchar
   949 ;; This function uses a non-reentrant model
   950 ;;
   951                           
   952                           
   953                           ;psect for function _send_lcd_data
   954  00A3                     _send_lcd_data:	
   955                           
   956                           ;incstack = 0
   957                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
   958                           ;send_lcd_data@b_rs stored from wreg
   959  00A3  00F8               	movwf	send_lcd_data@b_rs
   960                           
   961                           ;lcd.c: 311: set_lcd_rs(b_rs);
   962  00A4  0878               	movf	send_lcd_data@b_rs,w
   963  00A5  120A  118A  2136  120A  118A  	fcall	_set_lcd_rs
   964                           
   965                           ;lcd.c: 312: set_lcd_data(uc_data);
   966  00AA  0875               	movf	send_lcd_data@uc_data,w
   967  00AB  120A  118A  215E  120A  118A  	fcall	_set_lcd_data
   968                           
   969                           ;lcd.c: 315: set_lcd_e(1);
   970  00B0  3001               	movlw	1
   971  00B1  120A  118A  2141  120A  118A  	fcall	_set_lcd_e
   972                           
   973                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
   974  00B6  3007               	movlw	7
   975  00B7  00F7               	movwf	??_send_lcd_data+1
   976  00B8  307D               	movlw	125
   977  00B9  00F6               	movwf	??_send_lcd_data
   978  00BA                     u467:	
   979  00BA  0BF6               	decfsz	??_send_lcd_data,f
   980  00BB  28BA               	goto	u467
   981  00BC  0BF7               	decfsz	??_send_lcd_data+1,f
   982  00BD  28BA               	goto	u467
   983                           
   984                           ;lcd.c: 317: set_lcd_e(0);
   985  00BE  3000               	movlw	0
   986  00BF  120A  118A  2141  120A  118A  	fcall	_set_lcd_e
   987                           
   988                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
   989  00C4  300D               	movlw	13
   990  00C5  00F7               	movwf	??_send_lcd_data+1
   991  00C6  30FB               	movlw	251
   992  00C7  00F6               	movwf	??_send_lcd_data
   993  00C8                     u477:	
   994  00C8  0BF6               	decfsz	??_send_lcd_data,f
   995  00C9  28C8               	goto	u477
   996  00CA  0BF7               	decfsz	??_send_lcd_data+1,f
   997  00CB  28C8               	goto	u477
   998  00CC  28CD               	nop2
   999                           
  1000                           ;lcd.c: 321: set_lcd_rs(0);
  1001  00CD  3000               	movlw	0
  1002  00CE  120A  118A  2136  120A  118A  	fcall	_set_lcd_rs
  1003                           
  1004                           ;lcd.c: 322: set_lcd_data(0);
  1005  00D3  3000               	movlw	0
  1006  00D4  120A  118A  215E   	fcall	_set_lcd_data
  1007  00D7  0008               	return
  1008  00D8                     __end_of_send_lcd_data:	
  1009                           
  1010                           	psect	text4
  1011  0136                     __ptext4:	
  1012 ;; *************** function _set_lcd_rs *****************
  1013 ;; Defined at:
  1014 ;;		line 360 in file "lcd.c"
  1015 ;; Parameters:    Size  Location     Type
  1016 ;;  b_output        1    wreg     unsigned char 
  1017 ;; Auto vars:     Size  Location     Type
  1018 ;;  b_output        1    4[COMMON] unsigned char 
  1019 ;; Return value:  Size  Location     Type
  1020 ;;                  1    wreg      void 
  1021 ;; Registers used:
  1022 ;;		wreg
  1023 ;; Tracked objects:
  1024 ;;		On entry : 0/0
  1025 ;;		On exit  : 0/0
  1026 ;;		Unchanged: 0/0
  1027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1028 ;;      Params:         0       0       0       0       0
  1029 ;;      Locals:         1       0       0       0       0
  1030 ;;      Temps:          0       0       0       0       0
  1031 ;;      Totals:         1       0       0       0       0
  1032 ;;Total ram usage:        1 bytes
  1033 ;; Hardware stack levels used:    1
  1034 ;; Hardware stack levels required when called:    1
  1035 ;; This function calls:
  1036 ;;		Nothing
  1037 ;; This function is called by:
  1038 ;;		_send_lcd_data
  1039 ;; This function uses a non-reentrant model
  1040 ;;
  1041                           
  1042                           
  1043                           ;psect for function _set_lcd_rs
  1044  0136                     _set_lcd_rs:	
  1045                           
  1046                           ;incstack = 0
  1047                           ; Regs used in _set_lcd_rs: [wreg]
  1048                           ;set_lcd_rs@b_output stored from wreg
  1049  0136  00F4               	movwf	set_lcd_rs@b_output
  1050                           
  1051                           ;lcd.c: 362: RB4 = b_output;
  1052  0137  1C74               	btfss	set_lcd_rs@b_output,0
  1053  0138  293D               	goto	u210
  1054  0139  1283               	bcf	3,5	;RP0=0, select bank0
  1055  013A  1303               	bcf	3,6	;RP1=0, select bank0
  1056  013B  1606               	bsf	6,4	;volatile
  1057  013C  0008               	return
  1058  013D                     u210:	
  1059  013D  1283               	bcf	3,5	;RP0=0, select bank0
  1060  013E  1303               	bcf	3,6	;RP1=0, select bank0
  1061  013F  1206               	bcf	6,4	;volatile
  1062  0140  0008               	return
  1063  0141                     __end_of_set_lcd_rs:	
  1064                           
  1065                           	psect	text5
  1066  0141                     __ptext5:	
  1067 ;; *************** function _set_lcd_e *****************
  1068 ;; Defined at:
  1069 ;;		line 340 in file "lcd.c"
  1070 ;; Parameters:    Size  Location     Type
  1071 ;;  b_output        1    wreg     unsigned char 
  1072 ;; Auto vars:     Size  Location     Type
  1073 ;;  b_output        1    4[COMMON] unsigned char 
  1074 ;; Return value:  Size  Location     Type
  1075 ;;                  1    wreg      void 
  1076 ;; Registers used:
  1077 ;;		wreg
  1078 ;; Tracked objects:
  1079 ;;		On entry : 0/0
  1080 ;;		On exit  : 0/0
  1081 ;;		Unchanged: 0/0
  1082 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1083 ;;      Params:         0       0       0       0       0
  1084 ;;      Locals:         1       0       0       0       0
  1085 ;;      Temps:          0       0       0       0       0
  1086 ;;      Totals:         1       0       0       0       0
  1087 ;;Total ram usage:        1 bytes
  1088 ;; Hardware stack levels used:    1
  1089 ;; Hardware stack levels required when called:    1
  1090 ;; This function calls:
  1091 ;;		Nothing
  1092 ;; This function is called by:
  1093 ;;		_lcd_initialize
  1094 ;;		_send_lcd_data
  1095 ;; This function uses a non-reentrant model
  1096 ;;
  1097                           
  1098                           
  1099                           ;psect for function _set_lcd_e
  1100  0141                     _set_lcd_e:	
  1101                           
  1102                           ;incstack = 0
  1103                           ; Regs used in _set_lcd_e: [wreg]
  1104                           ;set_lcd_e@b_output stored from wreg
  1105  0141  00F4               	movwf	set_lcd_e@b_output
  1106                           
  1107                           ;lcd.c: 342: RB5 = b_output;
  1108  0142  1C74               	btfss	set_lcd_e@b_output,0
  1109  0143  2948               	goto	u190
  1110  0144  1283               	bcf	3,5	;RP0=0, select bank0
  1111  0145  1303               	bcf	3,6	;RP1=0, select bank0
  1112  0146  1686               	bsf	6,5	;volatile
  1113  0147  0008               	return
  1114  0148                     u190:	
  1115  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1116  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1117  014A  1286               	bcf	6,5	;volatile
  1118  014B  0008               	return
  1119  014C                     __end_of_set_lcd_e:	
  1120                           
  1121                           	psect	text6
  1122  015E                     __ptext6:	
  1123 ;; *************** function _set_lcd_data *****************
  1124 ;; Defined at:
  1125 ;;		line 380 in file "lcd.c"
  1126 ;; Parameters:    Size  Location     Type
  1127 ;;  uc_data         1    wreg     unsigned char 
  1128 ;; Auto vars:     Size  Location     Type
  1129 ;;  uc_data         1    4[COMMON] unsigned char 
  1130 ;; Return value:  Size  Location     Type
  1131 ;;                  1    wreg      void 
  1132 ;; Registers used:
  1133 ;;		wreg
  1134 ;; Tracked objects:
  1135 ;;		On entry : 0/0
  1136 ;;		On exit  : 0/0
  1137 ;;		Unchanged: 0/0
  1138 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1139 ;;      Params:         0       0       0       0       0
  1140 ;;      Locals:         1       0       0       0       0
  1141 ;;      Temps:          0       0       0       0       0
  1142 ;;      Totals:         1       0       0       0       0
  1143 ;;Total ram usage:        1 bytes
  1144 ;; Hardware stack levels used:    1
  1145 ;; Hardware stack levels required when called:    1
  1146 ;; This function calls:
  1147 ;;		Nothing
  1148 ;; This function is called by:
  1149 ;;		_send_lcd_data
  1150 ;; This function uses a non-reentrant model
  1151 ;;
  1152                           
  1153                           
  1154                           ;psect for function _set_lcd_data
  1155  015E                     _set_lcd_data:	
  1156                           
  1157                           ;incstack = 0
  1158                           ; Regs used in _set_lcd_data: [wreg]
  1159                           ;set_lcd_data@uc_data stored from wreg
  1160  015E  00F4               	movwf	set_lcd_data@uc_data
  1161                           
  1162                           ;lcd.c: 382: PORTD = uc_data;
  1163  015F  0874               	movf	set_lcd_data@uc_data,w
  1164  0160  1283               	bcf	3,5	;RP0=0, select bank0
  1165  0161  1303               	bcf	3,6	;RP1=0, select bank0
  1166  0162  0088               	movwf	8	;volatile
  1167  0163  0008               	return
  1168  0164                     __end_of_set_lcd_data:	
  1169                           
  1170                           	psect	text7
  1171  0127                     __ptext7:	
  1172 ;; *************** function _adc_initialize *****************
  1173 ;; Defined at:
  1174 ;;		line 28 in file "adc.c"
  1175 ;; Parameters:    Size  Location     Type
  1176 ;;		None
  1177 ;; Auto vars:     Size  Location     Type
  1178 ;;		None
  1179 ;; Return value:  Size  Location     Type
  1180 ;;                  1    wreg      void 
  1181 ;; Registers used:
  1182 ;;		None
  1183 ;; Tracked objects:
  1184 ;;		On entry : 0/0
  1185 ;;		On exit  : 0/0
  1186 ;;		Unchanged: 0/0
  1187 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1188 ;;      Params:         0       0       0       0       0
  1189 ;;      Locals:         0       0       0       0       0
  1190 ;;      Temps:          0       0       0       0       0
  1191 ;;      Totals:         0       0       0       0       0
  1192 ;;Total ram usage:        0 bytes
  1193 ;; Hardware stack levels used:    1
  1194 ;; Hardware stack levels required when called:    1
  1195 ;; This function calls:
  1196 ;;		Nothing
  1197 ;; This function is called by:
  1198 ;;		_main
  1199 ;; This function uses a non-reentrant model
  1200 ;;
  1201                           
  1202                           
  1203                           ;psect for function _adc_initialize
  1204  0127                     _adc_initialize:	
  1205                           
  1206                           ;adc.c: 31: ADCS1 = 1;
  1207                           
  1208                           ;incstack = 0
  1209                           ; Regs used in _adc_initialize: []
  1210  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1211  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1212  0129  179F               	bsf	31,7	;volatile
  1213                           
  1214                           ;adc.c: 32: ADCS0 = 0;
  1215  012A  131F               	bcf	31,6	;volatile
  1216                           
  1217                           ;adc.c: 39: ADFM = 1;
  1218  012B  1683               	bsf	3,5	;RP0=1, select bank1
  1219  012C  1303               	bcf	3,6	;RP1=0, select bank1
  1220  012D  179F               	bsf	31,7	;volatile
  1221                           
  1222                           ;adc.c: 41: PCFG3 = 0;
  1223  012E  119F               	bcf	31,3	;volatile
  1224                           
  1225                           ;adc.c: 42: PCFG2 = 0;
  1226  012F  111F               	bcf	31,2	;volatile
  1227                           
  1228                           ;adc.c: 43: PCFG1 = 0;
  1229  0130  109F               	bcf	31,1	;volatile
  1230                           
  1231                           ;adc.c: 44: PCFG0 = 0;
  1232  0131  101F               	bcf	31,0	;volatile
  1233                           
  1234                           ;adc.c: 47: ADON = 0;
  1235  0132  1283               	bcf	3,5	;RP0=0, select bank0
  1236  0133  1303               	bcf	3,6	;RP1=0, select bank0
  1237  0134  101F               	bcf	31,0	;volatile
  1238  0135  0008               	return
  1239  0136                     __end_of_adc_initialize:	
  1240                           
  1241                           	psect	text8
  1242  0100                     __ptext8:	
  1243 ;; *************** function _Rotation180 *****************
  1244 ;; Defined at:
  1245 ;;		line 44 in file "main.c"
  1246 ;; Parameters:    Size  Location     Type
  1247 ;;		None
  1248 ;; Auto vars:     Size  Location     Type
  1249 ;;  i               2    6[COMMON] unsigned int 
  1250 ;; Return value:  Size  Location     Type
  1251 ;;                  1    wreg      void 
  1252 ;; Registers used:
  1253 ;;		wreg, status,2
  1254 ;; Tracked objects:
  1255 ;;		On entry : 0/0
  1256 ;;		On exit  : 0/0
  1257 ;;		Unchanged: 0/0
  1258 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1259 ;;      Params:         0       0       0       0       0
  1260 ;;      Locals:         2       0       0       0       0
  1261 ;;      Temps:          2       0       0       0       0
  1262 ;;      Totals:         4       0       0       0       0
  1263 ;;Total ram usage:        4 bytes
  1264 ;; Hardware stack levels used:    1
  1265 ;; Hardware stack levels required when called:    1
  1266 ;; This function calls:
  1267 ;;		Nothing
  1268 ;; This function is called by:
  1269 ;;		_main
  1270 ;; This function uses a non-reentrant model
  1271 ;;
  1272                           
  1273                           
  1274                           ;psect for function _Rotation180
  1275  0100                     _Rotation180:	
  1276                           
  1277                           ;main.c: 47: unsigned int i;
  1278                           ;main.c: 48: for(i=0;i<50;i++)
  1279                           
  1280                           ;incstack = 0
  1281                           ; Regs used in _Rotation180: [wreg+status,2]
  1282  0100  01F6               	clrf	Rotation180@i
  1283  0101  01F7               	clrf	Rotation180@i+1
  1284  0102                     L1:	
  1285  0102  3000               	movlw	0
  1286  0103  0277               	subwf	Rotation180@i+1,w
  1287  0104  3032               	movlw	50
  1288  0105  1903               	skipnz
  1289  0106  0276               	subwf	Rotation180@i,w
  1290  0107  1803               	btfsc	3,0
  1291  0108  0008               	return
  1292                           
  1293                           ;main.c: 49: {
  1294                           ;main.c: 50: RC3 = 1;
  1295  0109  1283               	bcf	3,5	;RP0=0, select bank0
  1296  010A  1303               	bcf	3,6	;RP1=0, select bank0
  1297  010B  1587               	bsf	7,3	;volatile
  1298                           
  1299                           ;main.c: 52: _delay((unsigned long)((2350)*(20000000/4000000.0)));
  1300  010C  3010               	movlw	16
  1301  010D  00F5               	movwf	??_Rotation180+1
  1302  010E  3041               	movlw	65
  1303  010F  00F4               	movwf	??_Rotation180
  1304  0110                     u487:	
  1305  0110  0BF4               	decfsz	??_Rotation180,f
  1306  0111  2910               	goto	u487
  1307  0112  0BF5               	decfsz	??_Rotation180+1,f
  1308  0113  2910               	goto	u487
  1309                           
  1310                           ;main.c: 53: RC3 = 0;
  1311  0114  1283               	bcf	3,5	;RP0=0, select bank0
  1312  0115  1303               	bcf	3,6	;RP1=0, select bank0
  1313  0116  1187               	bcf	7,3	;volatile
  1314                           
  1315                           ;main.c: 54: _delay((unsigned long)((17800)*(20000000/4000000.0)));
  1316  0117  3074               	movlw	116
  1317  0118  00F5               	movwf	??_Rotation180+1
  1318  0119  3094               	movlw	148
  1319  011A  00F4               	movwf	??_Rotation180
  1320  011B                     u497:	
  1321  011B  0BF4               	decfsz	??_Rotation180,f
  1322  011C  291B               	goto	u497
  1323  011D  0BF5               	decfsz	??_Rotation180+1,f
  1324  011E  291B               	goto	u497
  1325  011F  0000               	nop
  1326  0120  3001               	movlw	1
  1327  0121  07F6               	addwf	Rotation180@i,f
  1328  0122  1803               	skipnc
  1329  0123  0AF7               	incf	Rotation180@i+1,f
  1330  0124  3000               	movlw	0
  1331  0125  07F7               	addwf	Rotation180@i+1,f
  1332  0126  2902               	goto	L1
  1333  0127                     __end_of_Rotation180:	
  1334                           
  1335                           	psect	text9
  1336  00D8                     __ptext9:	
  1337 ;; *************** function _Rotation0 *****************
  1338 ;; Defined at:
  1339 ;;		line 20 in file "main.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;		None
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  i               2    6[COMMON] unsigned int 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg, status,2
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         2       0       0       0       0
  1355 ;;      Temps:          2       0       0       0       0
  1356 ;;      Totals:         4       0       0       0       0
  1357 ;;Total ram usage:        4 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _Rotation0
  1369  00D8                     _Rotation0:	
  1370                           
  1371                           ;main.c: 22: unsigned int i;
  1372                           ;main.c: 23: for(i=0;i<50;i++)
  1373                           
  1374                           ;incstack = 0
  1375                           ; Regs used in _Rotation0: [wreg+status,2]
  1376  00D8  01F6               	clrf	Rotation0@i
  1377  00D9  01F7               	clrf	Rotation0@i+1
  1378  00DA                     L2:	
  1379  00DA  3000               	movlw	0
  1380  00DB  0277               	subwf	Rotation0@i+1,w
  1381  00DC  3032               	movlw	50
  1382  00DD  1903               	skipnz
  1383  00DE  0276               	subwf	Rotation0@i,w
  1384  00DF  1803               	btfsc	3,0
  1385  00E0  0008               	return
  1386                           
  1387                           ;main.c: 24: {
  1388                           ;main.c: 25: RC3 = 1;
  1389  00E1  1283               	bcf	3,5	;RP0=0, select bank0
  1390  00E2  1303               	bcf	3,6	;RP1=0, select bank0
  1391  00E3  1587               	bsf	7,3	;volatile
  1392                           
  1393                           ;main.c: 26: _delay((unsigned long)((800)*(20000000/4000000.0)));
  1394  00E4  3006               	movlw	6
  1395  00E5  00F5               	movwf	??_Rotation0+1
  1396  00E6  3030               	movlw	48
  1397  00E7  00F4               	movwf	??_Rotation0
  1398  00E8                     u507:	
  1399  00E8  0BF4               	decfsz	??_Rotation0,f
  1400  00E9  28E8               	goto	u507
  1401  00EA  0BF5               	decfsz	??_Rotation0+1,f
  1402  00EB  28E8               	goto	u507
  1403  00EC  0000               	nop
  1404                           
  1405                           ;main.c: 27: RC3 = 0;
  1406  00ED  1283               	bcf	3,5	;RP0=0, select bank0
  1407  00EE  1303               	bcf	3,6	;RP1=0, select bank0
  1408  00EF  1187               	bcf	7,3	;volatile
  1409                           
  1410                           ;main.c: 28: _delay((unsigned long)((19200)*(20000000/4000000.0)));
  1411  00F0  307D               	movlw	125
  1412  00F1  00F5               	movwf	??_Rotation0+1
  1413  00F2  30AB               	movlw	171
  1414  00F3  00F4               	movwf	??_Rotation0
  1415  00F4                     u517:	
  1416  00F4  0BF4               	decfsz	??_Rotation0,f
  1417  00F5  28F4               	goto	u517
  1418  00F6  0BF5               	decfsz	??_Rotation0+1,f
  1419  00F7  28F4               	goto	u517
  1420  00F8  28F9               	nop2
  1421  00F9  3001               	movlw	1
  1422  00FA  07F6               	addwf	Rotation0@i,f
  1423  00FB  1803               	skipnc
  1424  00FC  0AF7               	incf	Rotation0@i+1,f
  1425  00FD  3000               	movlw	0
  1426  00FE  07F7               	addwf	Rotation0@i+1,f
  1427  00FF  28DA               	goto	L2
  1428  0100                     __end_of_Rotation0:	
  1429                           
  1430                           	psect	text10
  1431  0164                     __ptext10:	
  1432 ;; *************** function _InitApp *****************
  1433 ;; Defined at:
  1434 ;;		line 22 in file "user.c"
  1435 ;; Parameters:    Size  Location     Type
  1436 ;;		None
  1437 ;; Auto vars:     Size  Location     Type
  1438 ;;		None
  1439 ;; Return value:  Size  Location     Type
  1440 ;;                  1    wreg      void 
  1441 ;; Registers used:
  1442 ;;		None
  1443 ;; Tracked objects:
  1444 ;;		On entry : 0/0
  1445 ;;		On exit  : 0/0
  1446 ;;		Unchanged: 0/0
  1447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1448 ;;      Params:         0       0       0       0       0
  1449 ;;      Locals:         0       0       0       0       0
  1450 ;;      Temps:          0       0       0       0       0
  1451 ;;      Totals:         0       0       0       0       0
  1452 ;;Total ram usage:        0 bytes
  1453 ;; Hardware stack levels used:    1
  1454 ;; Hardware stack levels required when called:    1
  1455 ;; This function calls:
  1456 ;;		Nothing
  1457 ;; This function is called by:
  1458 ;;		_main
  1459 ;; This function uses a non-reentrant model
  1460 ;;
  1461                           
  1462                           
  1463                           ;psect for function _InitApp
  1464  0164                     _InitApp:	
  1465                           
  1466                           ;incstack = 0
  1467                           ; Regs used in _InitApp: []
  1468  0164  0008               	return
  1469  0165                     __end_of_InitApp:	
  1470                           
  1471                           	psect	text11
  1472  014C                     __ptext11:	
  1473 ;; *************** function _isr *****************
  1474 ;; Defined at:
  1475 ;;		line 23 in file "interrupts.c"
  1476 ;; Parameters:    Size  Location     Type
  1477 ;;		None
  1478 ;; Auto vars:     Size  Location     Type
  1479 ;;		None
  1480 ;; Return value:  Size  Location     Type
  1481 ;;                  1    wreg      void 
  1482 ;; Registers used:
  1483 ;;		None
  1484 ;; Tracked objects:
  1485 ;;		On entry : 0/0
  1486 ;;		On exit  : 0/0
  1487 ;;		Unchanged: 0/0
  1488 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1489 ;;      Params:         0       0       0       0       0
  1490 ;;      Locals:         0       0       0       0       0
  1491 ;;      Temps:          4       0       0       0       0
  1492 ;;      Totals:         4       0       0       0       0
  1493 ;;Total ram usage:        4 bytes
  1494 ;; Hardware stack levels used:    1
  1495 ;; This function calls:
  1496 ;;		Nothing
  1497 ;; This function is called by:
  1498 ;;		Interrupt level 1
  1499 ;; This function uses a non-reentrant model
  1500 ;;
  1501                           
  1502                           
  1503                           ;psect for function _isr
  1504  014C                     _isr:	
  1505  014C  0873               	movf	??_isr+3,w
  1506  014D  00FF               	movwf	127
  1507  014E  0872               	movf	??_isr+2,w
  1508  014F  008A               	movwf	10
  1509  0150  0871               	movf	??_isr+1,w
  1510  0151  0084               	movwf	4
  1511  0152  0E70               	swapf	??_isr^(0+-128),w
  1512  0153  0083               	movwf	3
  1513  0154  0EFE               	swapf	126,f
  1514  0155  0E7E               	swapf	126,w
  1515  0156  0009               	retfie
  1516  0157                     __end_of_isr:	
  1517  007E                     btemp	set	126	;btemp
  1518  007E                     wtemp0	set	126
  1519                           
  1520                           	psect	intentry
  1521  0004                     __pintentry:	
  1522                           ;incstack = 0
  1523                           ; Regs used in _isr: []
  1524                           
  1525  0004                     interrupt_function:	
  1526  007E                     saved_w	set	btemp
  1527  0004  00FE               	movwf	btemp
  1528  0005  0E03               	swapf	3,w
  1529  0006  00F0               	movwf	??_isr
  1530  0007  0804               	movf	4,w
  1531  0008  00F1               	movwf	??_isr+1
  1532  0009  080A               	movf	10,w
  1533  000A  00F2               	movwf	??_isr+2
  1534  000B  1283               	bcf	3,5	;RP0=0, select bank0
  1535  000C  1303               	bcf	3,6	;RP1=0, select bank0
  1536  000D  087F               	movf	btemp+1,w
  1537  000E  00F3               	movwf	??_isr+3
  1538  000F  120A  118A  294C   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      5      15
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_initialize

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    1150
                                              2 BANK0      3     3      0
                            _InitApp
                          _Rotation0
                        _Rotation180
                     _adc_initialize
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Rotation180                                          4     4      0      30
                                              4 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _Rotation0                                            4     4      0      30
                                              4 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _Rotation0
   _Rotation180
   _adc_initialize
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      18       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       F       5       18.8%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      18      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Wed May 09 18:25:22 2018

            __CFG_CP$OFF 0000                       l51 0042             Rotation180@i 0076  
                    _RB4 0034                      _RC3 003B                      _RB5 0035  
                    u210 013D                      u190 0148             __CFG_CPD$OFF 0000  
                    u507 00E8                      u517 00F4                      u437 004F  
                    u447 0063                      u457 0077                      u467 00BA  
                    u477 00C8                      u487 0110                      u497 011B  
                    _isr 014C                      fsr0 0004             __CFG_FOSC$HS 0000  
      set_lcd_e@b_output 0074             __CFG_LVP$OFF 0000                     _ADFM 04FF  
                   ?_isr 0070                     _ADON 00F8                     _CHS0 00FB  
                   _CHS1 00FC                     _CHS2 00FD             __CFG_WRT$OFF 0000  
                   _main 0025                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0012          __end_of_InitApp 0165                    ??_isr 0070  
                  _ADCS0 00FE                    _ADCS1 00FF                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PCFG0 04F8                    _PCFG1 04F9  
                  _PCFG2 04FA                    _PCFG3 04FB                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _TRISA 0085                    _TRISB 0086                    _TRISC 0087  
                  _TRISD 0088     send_lcd_data@uc_data 0075            __CFG_PWRTE$ON 0000  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0015        send_lcd_data@b_rs 0078             __end_of_main 006B  
  __end_of_send_lcd_data 00D8                   ??_main 002C                   _ADRESH 001E  
                 _ADRESL 009E                ??_InitApp 0074  __size_of_adc_initialize 000F  
                 saved_w 007E       __size_of_Rotation0 0028         ??_lcd_initialize 002A  
__end_of__initialization 0021               Rotation0@i 0076            ??_Rotation180 0074  
         __pcstackCOMMON 0070       __size_of_lcd_clear 0007               __pbssBANK0 0020  
             __pmaintext 0025        __end_of_Rotation0 0100               __pintentry 0004  
     __size_of_set_lcd_e 000B      __end_of_Rotation180 0127            ?_set_lcd_data 0070  
                _InitApp 0164        __end_of_lcd_clear 015E           _adc_initialize 0127  
                __ptext1 006B                  __ptext2 0157                  __ptext3 00A3  
                __ptext4 0136                  __ptext5 0141                  __ptext6 015E  
                __ptext7 0127                  __ptext8 0100                  __ptext9 00D8  
           __size_of_isr 000B     end_of_initialization 0021           ??_set_lcd_data 0074  
      __end_of_set_lcd_e 014C   __end_of_adc_initialize 0136               _set_lcd_rs 0136  
            _Rotation180 0100   __size_of_send_lcd_data 0035          ?_adc_initialize 0070  
    start_initialization 0015       set_lcd_rs@b_output 0074              __end_of_isr 0157  
            ?_set_lcd_rs 0070                _Rotation0 00D8            _send_lcd_data 00A3  
   __end_of_set_lcd_data 0164                ___latbits 0002            __pcstackBANK0 002A  
               ?_InitApp 0070  __size_of_lcd_initialize 0038                _lcd_clear 0157  
         ?_send_lcd_data 0075               ?_Rotation0 0070      __size_of_set_lcd_rs 000B  
    set_lcd_data@uc_data 0074        interrupt_function 0004                _set_lcd_e 0141  
               _GO_nDONE 00FA             ?_Rotation180 0070               ?_lcd_clear 0070  
       ??_adc_initialize 0074         __size_of_InitApp 0001               ?_set_lcd_e 0070  
  __size_of_set_lcd_data 0006          ??_send_lcd_data 0076              ??_Rotation0 0074  
               __ptext10 0164                 __ptext11 014C            __size_of_main 0046  
           _set_lcd_data 015E           _lcd_initialize 006B             ??_set_lcd_rs 0074  
            ??_lcd_clear 0079       __end_of_set_lcd_rs 0141                 intlevel1 0000  
 __end_of_lcd_initialize 00A3              ??_set_lcd_e 0074     __size_of_Rotation180 0027  
           lcd_bcd@F1134 0020          ?_lcd_initialize 0070  
