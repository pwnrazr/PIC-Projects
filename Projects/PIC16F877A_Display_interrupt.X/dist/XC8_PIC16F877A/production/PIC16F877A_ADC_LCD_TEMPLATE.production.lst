

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Sun May 06 02:05:29 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	idataBANK0,global,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	maintext,global,class=CODE,split=1,delta=2
    12                           	psect	text1,local,class=CODE,merge=1,delta=2
    13                           	psect	text2,local,class=CODE,merge=1,delta=2
    14                           	psect	text3,local,class=CODE,merge=1,delta=2
    15                           	psect	text4,local,class=CODE,merge=1,delta=2
    16                           	psect	text5,local,class=CODE,merge=1,delta=2
    17                           	psect	text6,local,class=CODE,merge=1,delta=2
    18                           	psect	text7,local,class=CODE,merge=1,delta=2
    19                           	psect	text8,local,class=CODE,merge=1,delta=2
    20                           	psect	intentry,global,class=CODE,delta=2
    21                           	psect	text9,local,class=CODE,merge=1,delta=2
    22                           	psect	text10,local,class=CODE,merge=1,delta=2
    23                           	psect	text11,local,class=CODE,merge=1,delta=2
    24                           	psect	text12,local,class=CODE,merge=1,delta=2
    25                           	psect	text13,local,class=CODE,merge=1,delta=2
    26                           	psect	text14,local,class=CODE,merge=1,delta=2
    27                           	psect	text15,local,class=CODE,merge=1,delta=2
    28                           	psect	text16,local,class=CODE,merge=1,delta=2
    29                           	psect	text17,local,class=CODE,merge=1,delta=2
    30                           	psect	text18,local,class=CODE,merge=1,delta=2
    31                           	psect	text19,local,class=CODE,merge=1,delta=2,group=2
    32                           	psect	text20,local,class=CODE,merge=1,delta=2,group=2
    33                           	dabs	1,0x7E,2
    34  0000                     
    35                           ; Version 1.45
    36                           ; Generated 16/11/2017 GMT
    37                           ; 
    38                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    39                           ; All rights reserved.
    40                           ; 
    41                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    42                           ; 
    43                           ; Redistribution and use in source and binary forms, with or without modification, are
    44                           ; permitted provided that the following conditions are met:
    45                           ; 
    46                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    47                           ;        conditions and the following disclaimer.
    48                           ; 
    49                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    50                           ;        of conditions and the following disclaimer in the documentation and/or other
    51                           ;        materials provided with the distribution.
    52                           ; 
    53                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    54                           ;        software without specific prior written permission.
    55                           ; 
    56                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    57                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    58                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    59                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    60                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    61                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    62                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    63                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    64                           ; 
    65                           ; 
    66                           ; Code-generator required, PIC16F877A Definitions
    67                           ; 
    68                           ; SFR Addresses
    69  0000                     	;# 
    70  0001                     	;# 
    71  0002                     	;# 
    72  0003                     	;# 
    73  0004                     	;# 
    74  0005                     	;# 
    75  0006                     	;# 
    76  0007                     	;# 
    77  0008                     	;# 
    78  0009                     	;# 
    79  000A                     	;# 
    80  000B                     	;# 
    81  000C                     	;# 
    82  000D                     	;# 
    83  000E                     	;# 
    84  000E                     	;# 
    85  000F                     	;# 
    86  0010                     	;# 
    87  0011                     	;# 
    88  0012                     	;# 
    89  0013                     	;# 
    90  0014                     	;# 
    91  0015                     	;# 
    92  0015                     	;# 
    93  0016                     	;# 
    94  0017                     	;# 
    95  0018                     	;# 
    96  0019                     	;# 
    97  001A                     	;# 
    98  001B                     	;# 
    99  001B                     	;# 
   100  001C                     	;# 
   101  001D                     	;# 
   102  001E                     	;# 
   103  001F                     	;# 
   104  0081                     	;# 
   105  0085                     	;# 
   106  0086                     	;# 
   107  0087                     	;# 
   108  0088                     	;# 
   109  0089                     	;# 
   110  008C                     	;# 
   111  008D                     	;# 
   112  008E                     	;# 
   113  0091                     	;# 
   114  0092                     	;# 
   115  0093                     	;# 
   116  0094                     	;# 
   117  0098                     	;# 
   118  0099                     	;# 
   119  009C                     	;# 
   120  009D                     	;# 
   121  009E                     	;# 
   122  009F                     	;# 
   123  010C                     	;# 
   124  010D                     	;# 
   125  010E                     	;# 
   126  010F                     	;# 
   127  018C                     	;# 
   128  018D                     	;# 
   129  0000                     	;# 
   130  0001                     	;# 
   131  0002                     	;# 
   132  0003                     	;# 
   133  0004                     	;# 
   134  0005                     	;# 
   135  0006                     	;# 
   136  0007                     	;# 
   137  0008                     	;# 
   138  0009                     	;# 
   139  000A                     	;# 
   140  000B                     	;# 
   141  000C                     	;# 
   142  000D                     	;# 
   143  000E                     	;# 
   144  000E                     	;# 
   145  000F                     	;# 
   146  0010                     	;# 
   147  0011                     	;# 
   148  0012                     	;# 
   149  0013                     	;# 
   150  0014                     	;# 
   151  0015                     	;# 
   152  0015                     	;# 
   153  0016                     	;# 
   154  0017                     	;# 
   155  0018                     	;# 
   156  0019                     	;# 
   157  001A                     	;# 
   158  001B                     	;# 
   159  001B                     	;# 
   160  001C                     	;# 
   161  001D                     	;# 
   162  001E                     	;# 
   163  001F                     	;# 
   164  0081                     	;# 
   165  0085                     	;# 
   166  0086                     	;# 
   167  0087                     	;# 
   168  0088                     	;# 
   169  0089                     	;# 
   170  008C                     	;# 
   171  008D                     	;# 
   172  008E                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0098                     	;# 
   178  0099                     	;# 
   179  009C                     	;# 
   180  009D                     	;# 
   181  009E                     	;# 
   182  009F                     	;# 
   183  010C                     	;# 
   184  010D                     	;# 
   185  010E                     	;# 
   186  010F                     	;# 
   187  018C                     	;# 
   188  018D                     	;# 
   189  0000                     	;# 
   190  0001                     	;# 
   191  0002                     	;# 
   192  0003                     	;# 
   193  0004                     	;# 
   194  0005                     	;# 
   195  0006                     	;# 
   196  0007                     	;# 
   197  0008                     	;# 
   198  0009                     	;# 
   199  000A                     	;# 
   200  000B                     	;# 
   201  000C                     	;# 
   202  000D                     	;# 
   203  000E                     	;# 
   204  000E                     	;# 
   205  000F                     	;# 
   206  0010                     	;# 
   207  0011                     	;# 
   208  0012                     	;# 
   209  0013                     	;# 
   210  0014                     	;# 
   211  0015                     	;# 
   212  0015                     	;# 
   213  0016                     	;# 
   214  0017                     	;# 
   215  0018                     	;# 
   216  0019                     	;# 
   217  001A                     	;# 
   218  001B                     	;# 
   219  001B                     	;# 
   220  001C                     	;# 
   221  001D                     	;# 
   222  001E                     	;# 
   223  001F                     	;# 
   224  0081                     	;# 
   225  0085                     	;# 
   226  0086                     	;# 
   227  0087                     	;# 
   228  0088                     	;# 
   229  0089                     	;# 
   230  008C                     	;# 
   231  008D                     	;# 
   232  008E                     	;# 
   233  0091                     	;# 
   234  0092                     	;# 
   235  0093                     	;# 
   236  0094                     	;# 
   237  0098                     	;# 
   238  0099                     	;# 
   239  009C                     	;# 
   240  009D                     	;# 
   241  009E                     	;# 
   242  009F                     	;# 
   243  010C                     	;# 
   244  010D                     	;# 
   245  010E                     	;# 
   246  010F                     	;# 
   247  018C                     	;# 
   248  018D                     	;# 
   249  0000                     	;# 
   250  0001                     	;# 
   251  0002                     	;# 
   252  0003                     	;# 
   253  0004                     	;# 
   254  0005                     	;# 
   255  0006                     	;# 
   256  0007                     	;# 
   257  0008                     	;# 
   258  0009                     	;# 
   259  000A                     	;# 
   260  000B                     	;# 
   261  000C                     	;# 
   262  000D                     	;# 
   263  000E                     	;# 
   264  000E                     	;# 
   265  000F                     	;# 
   266  0010                     	;# 
   267  0011                     	;# 
   268  0012                     	;# 
   269  0013                     	;# 
   270  0014                     	;# 
   271  0015                     	;# 
   272  0015                     	;# 
   273  0016                     	;# 
   274  0017                     	;# 
   275  0018                     	;# 
   276  0019                     	;# 
   277  001A                     	;# 
   278  001B                     	;# 
   279  001B                     	;# 
   280  001C                     	;# 
   281  001D                     	;# 
   282  001E                     	;# 
   283  001F                     	;# 
   284  0081                     	;# 
   285  0085                     	;# 
   286  0086                     	;# 
   287  0087                     	;# 
   288  0088                     	;# 
   289  0089                     	;# 
   290  008C                     	;# 
   291  008D                     	;# 
   292  008E                     	;# 
   293  0091                     	;# 
   294  0092                     	;# 
   295  0093                     	;# 
   296  0094                     	;# 
   297  0098                     	;# 
   298  0099                     	;# 
   299  009C                     	;# 
   300  009D                     	;# 
   301  009E                     	;# 
   302  009F                     	;# 
   303  010C                     	;# 
   304  010D                     	;# 
   305  010E                     	;# 
   306  010F                     	;# 
   307  018C                     	;# 
   308  018D                     	;# 
   309  0000                     	;# 
   310  0001                     	;# 
   311  0002                     	;# 
   312  0003                     	;# 
   313  0004                     	;# 
   314  0005                     	;# 
   315  0006                     	;# 
   316  0007                     	;# 
   317  0008                     	;# 
   318  0009                     	;# 
   319  000A                     	;# 
   320  000B                     	;# 
   321  000C                     	;# 
   322  000D                     	;# 
   323  000E                     	;# 
   324  000E                     	;# 
   325  000F                     	;# 
   326  0010                     	;# 
   327  0011                     	;# 
   328  0012                     	;# 
   329  0013                     	;# 
   330  0014                     	;# 
   331  0015                     	;# 
   332  0015                     	;# 
   333  0016                     	;# 
   334  0017                     	;# 
   335  0018                     	;# 
   336  0019                     	;# 
   337  001A                     	;# 
   338  001B                     	;# 
   339  001B                     	;# 
   340  001C                     	;# 
   341  001D                     	;# 
   342  001E                     	;# 
   343  001F                     	;# 
   344  0081                     	;# 
   345  0085                     	;# 
   346  0086                     	;# 
   347  0087                     	;# 
   348  0088                     	;# 
   349  0089                     	;# 
   350  008C                     	;# 
   351  008D                     	;# 
   352  008E                     	;# 
   353  0091                     	;# 
   354  0092                     	;# 
   355  0093                     	;# 
   356  0094                     	;# 
   357  0098                     	;# 
   358  0099                     	;# 
   359  009C                     	;# 
   360  009D                     	;# 
   361  009E                     	;# 
   362  009F                     	;# 
   363  010C                     	;# 
   364  010D                     	;# 
   365  010E                     	;# 
   366  010F                     	;# 
   367  018C                     	;# 
   368  018D                     	;# 
   369  0000                     	;# 
   370  0001                     	;# 
   371  0002                     	;# 
   372  0003                     	;# 
   373  0004                     	;# 
   374  0005                     	;# 
   375  0006                     	;# 
   376  0007                     	;# 
   377  0008                     	;# 
   378  0009                     	;# 
   379  000A                     	;# 
   380  000B                     	;# 
   381  000C                     	;# 
   382  000D                     	;# 
   383  000E                     	;# 
   384  000E                     	;# 
   385  000F                     	;# 
   386  0010                     	;# 
   387  0011                     	;# 
   388  0012                     	;# 
   389  0013                     	;# 
   390  0014                     	;# 
   391  0015                     	;# 
   392  0015                     	;# 
   393  0016                     	;# 
   394  0017                     	;# 
   395  0018                     	;# 
   396  0019                     	;# 
   397  001A                     	;# 
   398  001B                     	;# 
   399  001B                     	;# 
   400  001C                     	;# 
   401  001D                     	;# 
   402  001E                     	;# 
   403  001F                     	;# 
   404  0081                     	;# 
   405  0085                     	;# 
   406  0086                     	;# 
   407  0087                     	;# 
   408  0088                     	;# 
   409  0089                     	;# 
   410  008C                     	;# 
   411  008D                     	;# 
   412  008E                     	;# 
   413  0091                     	;# 
   414  0092                     	;# 
   415  0093                     	;# 
   416  0094                     	;# 
   417  0098                     	;# 
   418  0099                     	;# 
   419  009C                     	;# 
   420  009D                     	;# 
   421  009E                     	;# 
   422  009F                     	;# 
   423  010C                     	;# 
   424  010D                     	;# 
   425  010E                     	;# 
   426  010F                     	;# 
   427  018C                     	;# 
   428  018D                     	;# 
   429  0000                     	;# 
   430  0001                     	;# 
   431  0002                     	;# 
   432  0003                     	;# 
   433  0004                     	;# 
   434  0005                     	;# 
   435  0006                     	;# 
   436  0007                     	;# 
   437  0008                     	;# 
   438  0009                     	;# 
   439  000A                     	;# 
   440  000B                     	;# 
   441  000C                     	;# 
   442  000D                     	;# 
   443  000E                     	;# 
   444  000E                     	;# 
   445  000F                     	;# 
   446  0010                     	;# 
   447  0011                     	;# 
   448  0012                     	;# 
   449  0013                     	;# 
   450  0014                     	;# 
   451  0015                     	;# 
   452  0015                     	;# 
   453  0016                     	;# 
   454  0017                     	;# 
   455  0018                     	;# 
   456  0019                     	;# 
   457  001A                     	;# 
   458  001B                     	;# 
   459  001B                     	;# 
   460  001C                     	;# 
   461  001D                     	;# 
   462  001E                     	;# 
   463  001F                     	;# 
   464  0081                     	;# 
   465  0085                     	;# 
   466  0086                     	;# 
   467  0087                     	;# 
   468  0088                     	;# 
   469  0089                     	;# 
   470  008C                     	;# 
   471  008D                     	;# 
   472  008E                     	;# 
   473  0091                     	;# 
   474  0092                     	;# 
   475  0093                     	;# 
   476  0094                     	;# 
   477  0098                     	;# 
   478  0099                     	;# 
   479  009C                     	;# 
   480  009D                     	;# 
   481  009E                     	;# 
   482  009F                     	;# 
   483  010C                     	;# 
   484  010D                     	;# 
   485  010E                     	;# 
   486  010F                     	;# 
   487  018C                     	;# 
   488  018D                     	;# 
   489                           
   490                           	psect	idataBANK0
   491  037F                     __pidataBANK0:	
   492                           
   493                           ;initializer for _time2
   494  037F  3401               	retlw	1
   495  0380  3400               	retlw	0
   496                           
   497                           ;initializer for _time
   498  0381  3401               	retlw	1
   499  0382  3400               	retlw	0
   500  001E                     _ADRESH	set	30
   501  0008                     _PORTD	set	8
   502  0007                     _PORTC	set	7
   503  0006                     _PORTB	set	6
   504  0005                     _PORTA	set	5
   505  0001                     _TMR0	set	1
   506  0034                     _RB4	set	52
   507  0035                     _RB5	set	53
   508  00FA                     _GO_nDONE	set	250
   509  00FB                     _CHS0	set	251
   510  00FC                     _CHS1	set	252
   511  00FD                     _CHS2	set	253
   512  00F8                     _ADON	set	248
   513  00FE                     _ADCS0	set	254
   514  00FF                     _ADCS1	set	255
   515  005E                     _PEIE	set	94
   516  005F                     _GIE	set	95
   517  005D                     _TMR0IE	set	93
   518  005C                     _INTE	set	92
   519  0059                     _INTF	set	89
   520  0037                     _RB7	set	55
   521  0036                     _RB6	set	54
   522  005A                     _TMR0IF	set	90
   523  009E                     _ADRESL	set	158
   524  0081                     _OPTION_REG	set	129
   525  0088                     _TRISD	set	136
   526  0087                     _TRISC	set	135
   527  0086                     _TRISB	set	134
   528  0085                     _TRISA	set	133
   529  04F8                     _PCFG0	set	1272
   530  04F9                     _PCFG1	set	1273
   531  04FA                     _PCFG2	set	1274
   532  04FB                     _PCFG3	set	1275
   533  04FF                     _ADFM	set	1279
   534                           
   535                           	psect	strings
   536  0300                     __pstrings:	
   537  0300                     stringtab:	
   538  0300                     __stringtab:	
   539  0300                     stringcode:	
   540                           ;	String table - string pointers are 1 byte each
   541                           
   542  0300                     stringdir:	
   543  0300  3003               	movlw	high stringdir
   544  0301  008A               	movwf	10
   545  0302  0804               	movf	4,w
   546  0303  0A84               	incf	4,f
   547  0304  0782               	addwf	2,f
   548  0305                     __stringbase:	
   549  0305  3400               	retlw	0
   550  0306                     __end_of__stringtab:	
   551  0306                     STR_1:	
   552  0306  3449               	retlw	73	;'I'
   553  0307  346E               	retlw	110	;'n'
   554  0308  3474               	retlw	116	;'t'
   555  0309  3465               	retlw	101	;'e'
   556  030A  3472               	retlw	114	;'r'
   557  030B  3472               	retlw	114	;'r'
   558  030C  3475               	retlw	117	;'u'
   559  030D  3470               	retlw	112	;'p'
   560  030E  3474               	retlw	116	;'t'
   561  030F  3420               	retlw	32	;' '
   562  0310  344D               	retlw	77	;'M'
   563  0311  346F               	retlw	111	;'o'
   564  0312  3464               	retlw	100	;'d'
   565  0313  3465               	retlw	101	;'e'
   566  0314  3400               	retlw	0
   567                           
   568                           ; #config settings
   569  0000                     
   570                           	psect	cinit
   571  0015                     start_initialization:	
   572  0015                     __initialization:	
   573                           
   574                           ; Initialize objects allocated to BANK0
   575  0015  120A  118A  237F  120A  118A  	fcall	__pidataBANK0	;fetch initializer
   576  001A  00C5               	movwf	__pdataBANK0& (0+127)
   577  001B  120A  118A  2380  120A  118A  	fcall	__pidataBANK0+1	;fetch initializer
   578  0020  00C6               	movwf	(__pdataBANK0+1)& (0+127)
   579  0021  120A  118A  2381  120A  118A  	fcall	__pidataBANK0+2	;fetch initializer
   580  0026  00C7               	movwf	(__pdataBANK0+2)& (0+127)
   581  0027  120A  118A  2382   	fcall	__pidataBANK0+3	;fetch initializer
   582  002A  00C8               	movwf	(__pdataBANK0+3)& (0+127)
   583                           
   584                           ; Clear objects allocated to BANK0
   585  002B  01B9               	clrf	__pbssBANK0& (0+127)
   586  002C  01BA               	clrf	(__pbssBANK0+1)& (0+127)
   587  002D  01BB               	clrf	(__pbssBANK0+2)& (0+127)
   588  002E  01BC               	clrf	(__pbssBANK0+3)& (0+127)
   589  002F  01BD               	clrf	(__pbssBANK0+4)& (0+127)
   590  0030  01BE               	clrf	(__pbssBANK0+5)& (0+127)
   591  0031  01BF               	clrf	(__pbssBANK0+6)& (0+127)
   592  0032  01C0               	clrf	(__pbssBANK0+7)& (0+127)
   593  0033  01C1               	clrf	(__pbssBANK0+8)& (0+127)
   594  0034  01C2               	clrf	(__pbssBANK0+9)& (0+127)
   595  0035  01C3               	clrf	(__pbssBANK0+10)& (0+127)
   596  0036  01C4               	clrf	(__pbssBANK0+11)& (0+127)
   597  0037                     end_of_initialization:	
   598                           ;End of C runtime variable initialization code
   599                           
   600  0037                     __end_of__initialization:	
   601  0037  0183               	clrf	3
   602  0038  120A  118A  29E1   	ljmp	_main	;jump to C main() function
   603                           
   604                           	psect	bssBANK0
   605  0039                     __pbssBANK0:	
   606  0039                     lcd_bcd@F1135:	
   607  0039                     	ds	10
   608  0043                     _add:	
   609  0043                     	ds	2
   610                           
   611                           	psect	dataBANK0
   612  0045                     __pdataBANK0:	
   613  0045                     _time2:	
   614  0045                     	ds	2
   615  0047                     _time:	
   616  0047                     	ds	2
   617                           
   618                           	psect	cstackCOMMON
   619  0070                     __pcstackCOMMON:	
   620  0070                     ?_lcd_goto:	
   621  0070                     ?_lcd_clear:	
   622                           ; 1 bytes @ 0x0
   623                           
   624  0070                     ?_lcd_putstr:	
   625                           ; 1 bytes @ 0x0
   626                           
   627  0070                     ?_InitApp:	
   628                           ; 1 bytes @ 0x0
   629                           
   630  0070                     ?_lcd_initialize:	
   631                           ; 1 bytes @ 0x0
   632                           
   633  0070                     ?_set_lcd_e:	
   634                           ; 1 bytes @ 0x0
   635                           
   636  0070                     ?_set_lcd_rs:	
   637                           ; 1 bytes @ 0x0
   638                           
   639  0070                     ?_set_lcd_data:	
   640                           ; 1 bytes @ 0x0
   641                           
   642  0070                     ?_isr:	
   643                           ; 1 bytes @ 0x0
   644                           
   645  0070                     ?_main:	
   646                           ; 1 bytes @ 0x0
   647                           
   648  0070                     ?_lcd_2ndline:	
   649                           ; 1 bytes @ 0x0
   650                           
   651  0070                     ?_lcd_putchar:	
   652                           ; 1 bytes @ 0x0
   653                           
   654  0070                     ?i1_lcd_clear:	
   655                           ; 1 bytes @ 0x0
   656                           
   657  0070                     ?i1_set_lcd_e:	
   658                           ; 1 bytes @ 0x0
   659                           
   660  0070                     ??i1_set_lcd_e:	
   661                           ; 1 bytes @ 0x0
   662                           
   663  0070                     ?i1_set_lcd_rs:	
   664                           ; 1 bytes @ 0x0
   665                           
   666  0070                     ??i1_set_lcd_rs:	
   667                           ; 1 bytes @ 0x0
   668                           
   669  0070                     ?i1_set_lcd_data:	
   670                           ; 1 bytes @ 0x0
   671                           
   672  0070                     ??i1_set_lcd_data:	
   673                           ; 1 bytes @ 0x0
   674                           
   675  0070                     ?___lwdiv:	
   676                           ; 1 bytes @ 0x0
   677                           
   678  0070                     ?___lwmod:	
   679                           ; 2 bytes @ 0x0
   680                           
   681  0070                     i1set_lcd_e@b_output:	
   682                           ; 2 bytes @ 0x0
   683                           
   684  0070                     i1set_lcd_rs@b_output:	
   685                           ; 1 bytes @ 0x0
   686                           
   687  0070                     i1set_lcd_data@uc_data:	
   688                           ; 1 bytes @ 0x0
   689                           
   690  0070                     ___lwdiv@divisor:	
   691                           ; 1 bytes @ 0x0
   692                           
   693  0070                     ___lwmod@divisor:	
   694                           ; 2 bytes @ 0x0
   695                           
   696                           
   697                           ; 2 bytes @ 0x0
   698  0070                     	ds	1
   699  0071                     ?i1_send_lcd_data:	
   700  0071                     i1send_lcd_data@uc_data:	
   701                           ; 1 bytes @ 0x1
   702                           
   703                           
   704                           ; 1 bytes @ 0x1
   705  0071                     	ds	1
   706  0072                     ??i1_send_lcd_data:	
   707  0072                     ___lwdiv@dividend:	
   708                           ; 1 bytes @ 0x2
   709                           
   710  0072                     ___lwmod@dividend:	
   711                           ; 2 bytes @ 0x2
   712                           
   713                           
   714                           ; 2 bytes @ 0x2
   715  0072                     	ds	2
   716  0074                     ??___lwdiv:	
   717  0074                     ??___lwmod:	
   718                           ; 1 bytes @ 0x4
   719                           
   720  0074                     i1send_lcd_data@b_rs:	
   721                           ; 1 bytes @ 0x4
   722                           
   723                           
   724                           ; 1 bytes @ 0x4
   725  0074                     	ds	1
   726  0075                     ??_lcd_goto:	
   727  0075                     ??_lcd_2ndline:	
   728                           ; 1 bytes @ 0x5
   729                           
   730  0075                     ??_lcd_putchar:	
   731                           ; 1 bytes @ 0x5
   732                           
   733  0075                     ??i1_lcd_clear:	
   734                           ; 1 bytes @ 0x5
   735                           
   736  0075                     ___lwmod@counter:	
   737                           ; 1 bytes @ 0x5
   738                           
   739  0075                     ___lwdiv@quotient:	
   740                           ; 1 bytes @ 0x5
   741                           
   742                           
   743                           ; 2 bytes @ 0x5
   744  0075                     	ds	1
   745  0076                     lcd_goto@uc_position:	
   746  0076                     lcd_putchar@c_data:	
   747                           ; 1 bytes @ 0x6
   748                           
   749                           
   750                           ; 1 bytes @ 0x6
   751  0076                     	ds	1
   752  0077                     ??_lcd_putstr:	
   753  0077                     ___lwdiv@counter:	
   754                           ; 1 bytes @ 0x7
   755                           
   756                           
   757                           ; 1 bytes @ 0x7
   758  0077                     	ds	1
   759  0078                     ?_lcd_bcd:	
   760  0078                     lcd_putstr@csz_string:	
   761                           ; 1 bytes @ 0x8
   762                           
   763  0078                     lcd_bcd@ui_number:	
   764                           ; 1 bytes @ 0x8
   765                           
   766                           
   767                           ; 2 bytes @ 0x8
   768  0078                     	ds	2
   769  007A                     ??_lcd_bcd:	
   770                           
   771                           ; 1 bytes @ 0xA
   772  007A                     	ds	4
   773                           
   774                           	psect	cstackBANK0
   775  0020                     __pcstackBANK0:	
   776  0020                     lcd_bcd@ui_decimal:	
   777                           
   778                           ; 10 bytes @ 0x0
   779  0020                     	ds	10
   780  002A                     lcd_bcd@uc_digit:	
   781                           
   782                           ; 1 bytes @ 0xA
   783  002A                     	ds	1
   784  002B                     ??_isr:	
   785                           
   786                           ; 1 bytes @ 0xB
   787  002B                     	ds	4
   788  002F                     ??_InitApp:	
   789  002F                     ??_set_lcd_e:	
   790                           ; 1 bytes @ 0xF
   791                           
   792  002F                     ??_set_lcd_rs:	
   793                           ; 1 bytes @ 0xF
   794                           
   795  002F                     ??_set_lcd_data:	
   796                           ; 1 bytes @ 0xF
   797                           
   798  002F                     set_lcd_e@b_output:	
   799                           ; 1 bytes @ 0xF
   800                           
   801  002F                     set_lcd_rs@b_output:	
   802                           ; 1 bytes @ 0xF
   803                           
   804  002F                     set_lcd_data@uc_data:	
   805                           ; 1 bytes @ 0xF
   806                           
   807                           
   808                           ; 1 bytes @ 0xF
   809  002F                     	ds	1
   810  0030                     ?_send_lcd_data:	
   811  0030                     send_lcd_data@uc_data:	
   812                           ; 1 bytes @ 0x10
   813                           
   814                           
   815                           ; 1 bytes @ 0x10
   816  0030                     	ds	1
   817  0031                     ??_send_lcd_data:	
   818                           
   819                           ; 1 bytes @ 0x11
   820  0031                     	ds	2
   821  0033                     send_lcd_data@b_rs:	
   822                           
   823                           ; 1 bytes @ 0x13
   824  0033                     	ds	1
   825  0034                     ??_lcd_clear:	
   826  0034                     ??_lcd_initialize:	
   827                           ; 1 bytes @ 0x14
   828                           
   829                           
   830                           ; 1 bytes @ 0x14
   831  0034                     	ds	2
   832  0036                     ??_main:	
   833                           
   834                           ; 1 bytes @ 0x16
   835  0036                     	ds	3
   836                           
   837                           	psect	maintext
   838  01E1                     __pmaintext:	
   839 ;;
   840 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   841 ;;
   842 ;; *************** function _main *****************
   843 ;; Defined at:
   844 ;;		line 21 in file "main.c"
   845 ;; Parameters:    Size  Location     Type
   846 ;;		None
   847 ;; Auto vars:     Size  Location     Type
   848 ;;		None
   849 ;; Return value:  Size  Location     Type
   850 ;;                  1    wreg      void 
   851 ;; Registers used:
   852 ;;		wreg, status,2, status,0, pclath, cstack
   853 ;; Tracked objects:
   854 ;;		On entry : B00/0
   855 ;;		On exit  : 0/0
   856 ;;		Unchanged: 0/0
   857 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   858 ;;      Params:         0       0       0       0       0
   859 ;;      Locals:         0       0       0       0       0
   860 ;;      Temps:          0       3       0       0       0
   861 ;;      Totals:         0       3       0       0       0
   862 ;;Total ram usage:        3 bytes
   863 ;; Hardware stack levels required when called:    9
   864 ;; This function calls:
   865 ;;		_InitApp
   866 ;;		_lcd_initialize
   867 ;; This function is called by:
   868 ;;		Startup code after reset
   869 ;; This function uses a non-reentrant model
   870 ;;
   871                           
   872                           
   873                           ;psect for function _main
   874  01E1                     _main:	
   875                           
   876                           ;main.c: 24: InitApp();
   877                           
   878                           ;incstack = 0
   879 ;; hardware stack exceeded
   880                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   881  01E1  120A  118A  2383  120A  118A  	fcall	_InitApp
   882                           
   883                           ;main.c: 26: PORTA = 0;
   884  01E6  1283               	bcf	3,5	;RP0=0, select bank0
   885  01E7  1303               	bcf	3,6	;RP1=0, select bank0
   886  01E8  0185               	clrf	5	;volatile
   887                           
   888                           ;main.c: 27: PORTB = 0;
   889  01E9  0186               	clrf	6	;volatile
   890                           
   891                           ;main.c: 28: PORTC = 0;
   892  01EA  0187               	clrf	7	;volatile
   893                           
   894                           ;main.c: 29: PORTD = 0;
   895  01EB  0188               	clrf	8	;volatile
   896                           
   897                           ;main.c: 31: TRISA = 0b11111111;
   898  01EC  30FF               	movlw	255
   899  01ED  1683               	bsf	3,5	;RP0=1, select bank1
   900  01EE  1303               	bcf	3,6	;RP1=0, select bank1
   901  01EF  0085               	movwf	5	;volatile
   902                           
   903                           ;main.c: 32: TRISB = 0b00000011;
   904  01F0  3003               	movlw	3
   905  01F1  0086               	movwf	6	;volatile
   906                           
   907                           ;main.c: 33: TRISC = 0b00000000;
   908  01F2  0187               	clrf	7	;volatile
   909                           
   910                           ;main.c: 34: TRISD = 0b00000000;
   911  01F3  0188               	clrf	8	;volatile
   912                           
   913                           ;main.c: 36: lcd_initialize();
   914  01F4  120A  118A  221C  120A  118A  	fcall	_lcd_initialize
   915                           
   916                           ;main.c: 39: OPTION_REG = (1<<2);
   917  01F9  3004               	movlw	4
   918  01FA  1683               	bsf	3,5	;RP0=1, select bank1
   919  01FB  1303               	bcf	3,6	;RP1=0, select bank1
   920  01FC  0081               	movwf	1	;volatile
   921                           
   922                           ;main.c: 40: TMR0=100;
   923  01FD  3064               	movlw	100
   924  01FE  1283               	bcf	3,5	;RP0=0, select bank0
   925  01FF  1303               	bcf	3,6	;RP1=0, select bank0
   926  0200  0081               	movwf	1	;volatile
   927                           
   928                           ;main.c: 42: INTE=1;
   929  0201  160B               	bsf	11,4	;volatile
   930                           
   931                           ;main.c: 43: TMR0IE=1;
   932  0202  168B               	bsf	11,5	;volatile
   933                           
   934                           ;main.c: 44: GIE=1;
   935  0203  178B               	bsf	11,7	;volatile
   936                           
   937                           ;main.c: 45: PEIE=1;
   938  0204  170B               	bsf	11,6	;volatile
   939  0205                     l74:	
   940                           ;main.c: 47: while(1)
   941                           
   942                           
   943                           ;main.c: 48: {
   944                           ;main.c: 49: add++;
   945  0205  3001               	movlw	1
   946  0206  1283               	bcf	3,5	;RP0=0, select bank0
   947  0207  1303               	bcf	3,6	;RP1=0, select bank0
   948  0208  07C3               	addwf	_add,f
   949  0209  1803               	skipnc
   950  020A  0AC4               	incf	_add+1,f
   951  020B  3000               	movlw	0
   952  020C  07C4               	addwf	_add+1,f
   953                           
   954                           ;main.c: 50: _delay((unsigned long)((10000)*(20000000/4000.0)));
   955  020D  30FE               	movlw	254
   956  020E  1283               	bcf	3,5	;RP0=0, select bank0
   957  020F  1303               	bcf	3,6	;RP1=0, select bank0
   958  0210  00B8               	movwf	??_main+2
   959  0211  30A7               	movlw	167
   960  0212  00B7               	movwf	??_main+1
   961  0213  3065               	movlw	101
   962  0214  00B6               	movwf	??_main
   963  0215                     u667:	
   964  0215  0BB6               	decfsz	??_main,f
   965  0216  2A15               	goto	u667
   966  0217  0BB7               	decfsz	??_main+1,f
   967  0218  2A15               	goto	u667
   968  0219  0BB8               	decfsz	??_main+2,f
   969  021A  2A15               	goto	u667
   970  021B  2A05               	goto	l74
   971  021C                     __end_of_main:	
   972                           
   973                           	psect	text1
   974  021C                     __ptext1:	
   975 ;; *************** function _lcd_initialize *****************
   976 ;; Defined at:
   977 ;;		line 100 in file "lcd.c"
   978 ;; Parameters:    Size  Location     Type
   979 ;;		None
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      void 
   984 ;; Registers used:
   985 ;;		wreg, status,2, status,0, pclath, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   991 ;;      Params:         0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0
   993 ;;      Temps:          0       2       0       0       0
   994 ;;      Totals:         0       2       0       0       0
   995 ;;Total ram usage:        2 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    8
   998 ;; This function calls:
   999 ;;		_lcd_clear
  1000 ;;		_send_lcd_data
  1001 ;;		_set_lcd_e
  1002 ;; This function is called by:
  1003 ;;		_main
  1004 ;; This function uses a non-reentrant model
  1005 ;;
  1006                           
  1007                           
  1008                           ;psect for function _lcd_initialize
  1009  021C                     _lcd_initialize:	
  1010                           
  1011                           ;lcd.c: 104: set_lcd_e(1);
  1012                           
  1013                           ;incstack = 0
  1014 ;; hardware stack exceeded
  1015                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1016  021C  3001               	movlw	1
  1017  021D  120A  118A  2322  120A  118A  	fcall	_set_lcd_e
  1018                           
  1019                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1020  0222  3062               	movlw	98
  1021  0223  1283               	bcf	3,5	;RP0=0, select bank0
  1022  0224  1303               	bcf	3,6	;RP1=0, select bank0
  1023  0225  00B5               	movwf	??_lcd_initialize+1
  1024  0226  3065               	movlw	101
  1025  0227  00B4               	movwf	??_lcd_initialize
  1026  0228                     u677:	
  1027  0228  0BB4               	decfsz	??_lcd_initialize,f
  1028  0229  2A28               	goto	u677
  1029  022A  0BB5               	decfsz	??_lcd_initialize+1,f
  1030  022B  2A28               	goto	u677
  1031                           
  1032                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1033  022C  3038               	movlw	56
  1034  022D  1283               	bcf	3,5	;RP0=0, select bank0
  1035  022E  1303               	bcf	3,6	;RP1=0, select bank0
  1036  022F  00B4               	movwf	??_lcd_initialize
  1037  0230  0834               	movf	??_lcd_initialize,w
  1038  0231  00B0               	movwf	send_lcd_data@uc_data
  1039  0232  3000               	movlw	0
  1040  0233  120A  118A  2168  120A  118A  	fcall	_send_lcd_data
  1041                           
  1042                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1043  0238  3006               	movlw	6
  1044  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1045  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1046  023B  00B4               	movwf	??_lcd_initialize
  1047  023C  0834               	movf	??_lcd_initialize,w
  1048  023D  00B0               	movwf	send_lcd_data@uc_data
  1049  023E  3000               	movlw	0
  1050  023F  120A  118A  2168  120A  118A  	fcall	_send_lcd_data
  1051                           
  1052                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1053  0244  300C               	movlw	12
  1054  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1055  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1056  0247  00B4               	movwf	??_lcd_initialize
  1057  0248  0834               	movf	??_lcd_initialize,w
  1058  0249  00B0               	movwf	send_lcd_data@uc_data
  1059  024A  3000               	movlw	0
  1060  024B  120A  118A  2168  120A  118A  	fcall	_send_lcd_data
  1061                           
  1062                           ;lcd.c: 118: lcd_clear();
  1063  0250  120A  118A  235A   	fcall	_lcd_clear
  1064  0253  0008               	return
  1065  0254                     __end_of_lcd_initialize:	
  1066                           
  1067                           	psect	text2
  1068  035A                     __ptext2:	
  1069 ;; *************** function _lcd_clear *****************
  1070 ;; Defined at:
  1071 ;;		line 136 in file "lcd.c"
  1072 ;; Parameters:    Size  Location     Type
  1073 ;;		None
  1074 ;; Auto vars:     Size  Location     Type
  1075 ;;		None
  1076 ;; Return value:  Size  Location     Type
  1077 ;;                  1    wreg      void 
  1078 ;; Registers used:
  1079 ;;		wreg, status,2, status,0, pclath, cstack
  1080 ;; Tracked objects:
  1081 ;;		On entry : 0/0
  1082 ;;		On exit  : 0/0
  1083 ;;		Unchanged: 0/0
  1084 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1085 ;;      Params:         0       0       0       0       0
  1086 ;;      Locals:         0       0       0       0       0
  1087 ;;      Temps:          0       0       0       0       0
  1088 ;;      Totals:         0       0       0       0       0
  1089 ;;Total ram usage:        0 bytes
  1090 ;; Hardware stack levels used:    1
  1091 ;; Hardware stack levels required when called:    7
  1092 ;; This function calls:
  1093 ;;		_send_lcd_data
  1094 ;; This function is called by:
  1095 ;;		_lcd_initialize
  1096 ;; This function uses a non-reentrant model
  1097 ;;
  1098                           
  1099                           
  1100                           ;psect for function _lcd_clear
  1101  035A                     _lcd_clear:	
  1102                           
  1103                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1104                           
  1105                           ;incstack = 0
  1106 ;; hardware stack exceeded
  1107                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1108  035A  1283               	bcf	3,5	;RP0=0, select bank0
  1109  035B  1303               	bcf	3,6	;RP1=0, select bank0
  1110  035C  01B0               	clrf	send_lcd_data@uc_data
  1111  035D  0AB0               	incf	send_lcd_data@uc_data,f
  1112  035E  3000               	movlw	0
  1113  035F  120A  118A  2168   	fcall	_send_lcd_data
  1114  0362  0008               	return
  1115  0363                     __end_of_lcd_clear:	
  1116                           
  1117                           	psect	text3
  1118  0168                     __ptext3:	
  1119 ;; *************** function _send_lcd_data *****************
  1120 ;; Defined at:
  1121 ;;		line 308 in file "lcd.c"
  1122 ;; Parameters:    Size  Location     Type
  1123 ;;  b_rs            1    wreg     unsigned char 
  1124 ;;  uc_data         1   16[BANK0 ] unsigned char 
  1125 ;; Auto vars:     Size  Location     Type
  1126 ;;  b_rs            1   19[BANK0 ] unsigned char 
  1127 ;; Return value:  Size  Location     Type
  1128 ;;                  1    wreg      void 
  1129 ;; Registers used:
  1130 ;;		wreg, status,2, status,0, pclath, cstack
  1131 ;; Tracked objects:
  1132 ;;		On entry : 0/0
  1133 ;;		On exit  : 0/0
  1134 ;;		Unchanged: 0/0
  1135 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1136 ;;      Params:         0       1       0       0       0
  1137 ;;      Locals:         0       1       0       0       0
  1138 ;;      Temps:          0       2       0       0       0
  1139 ;;      Totals:         0       4       0       0       0
  1140 ;;Total ram usage:        4 bytes
  1141 ;; Hardware stack levels used:    1
  1142 ;; Hardware stack levels required when called:    6
  1143 ;; This function calls:
  1144 ;;		_set_lcd_data
  1145 ;;		_set_lcd_e
  1146 ;;		_set_lcd_rs
  1147 ;; This function is called by:
  1148 ;;		_lcd_initialize
  1149 ;;		_lcd_clear
  1150 ;;		_lcd_home
  1151 ;; This function uses a non-reentrant model
  1152 ;;
  1153                           
  1154                           
  1155                           ;psect for function _send_lcd_data
  1156  0168                     _send_lcd_data:	
  1157                           
  1158                           ;incstack = 0
  1159                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1160                           ;send_lcd_data@b_rs stored from wreg
  1161  0168  1283               	bcf	3,5	;RP0=0, select bank0
  1162  0169  1303               	bcf	3,6	;RP1=0, select bank0
  1163  016A  00B3               	movwf	send_lcd_data@b_rs
  1164                           
  1165                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1166  016B  0833               	movf	send_lcd_data@b_rs,w
  1167  016C  120A  118A  2315  120A  118A  	fcall	_set_lcd_rs
  1168                           
  1169                           ;lcd.c: 312: set_lcd_data(uc_data);
  1170  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1171  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1172  0173  0830               	movf	send_lcd_data@uc_data,w
  1173  0174  120A  118A  2373  120A  118A  	fcall	_set_lcd_data
  1174                           
  1175                           ;lcd.c: 315: set_lcd_e(1);
  1176  0179  3001               	movlw	1
  1177  017A  120A  118A  2322  120A  118A  	fcall	_set_lcd_e
  1178                           
  1179                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1180  017F  3007               	movlw	7
  1181  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1182  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1183  0182  00B2               	movwf	??_send_lcd_data+1
  1184  0183  307C               	movlw	124
  1185  0184  00B1               	movwf	??_send_lcd_data
  1186  0185                     u687:	
  1187  0185  0BB1               	decfsz	??_send_lcd_data,f
  1188  0186  2985               	goto	u687
  1189  0187  0BB2               	decfsz	??_send_lcd_data+1,f
  1190  0188  2985               	goto	u687
  1191  0189  0000               	nop
  1192                           
  1193                           ;lcd.c: 317: set_lcd_e(0);
  1194  018A  3000               	movlw	0
  1195  018B  120A  118A  2322  120A  118A  	fcall	_set_lcd_e
  1196                           
  1197                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1198  0190  300D               	movlw	13
  1199  0191  1283               	bcf	3,5	;RP0=0, select bank0
  1200  0192  1303               	bcf	3,6	;RP1=0, select bank0
  1201  0193  00B2               	movwf	??_send_lcd_data+1
  1202  0194  30FB               	movlw	251
  1203  0195  00B1               	movwf	??_send_lcd_data
  1204  0196                     u697:	
  1205  0196  0BB1               	decfsz	??_send_lcd_data,f
  1206  0197  2996               	goto	u697
  1207  0198  0BB2               	decfsz	??_send_lcd_data+1,f
  1208  0199  2996               	goto	u697
  1209                           
  1210                           ;lcd.c: 321: set_lcd_rs(0);
  1211  019A  3000               	movlw	0
  1212  019B  120A  118A  2315  120A  118A  	fcall	_set_lcd_rs
  1213                           
  1214                           ;lcd.c: 322: set_lcd_data(0);
  1215  01A0  3000               	movlw	0
  1216  01A1  120A  118A  2373   	fcall	_set_lcd_data
  1217  01A4  0008               	return
  1218  01A5                     __end_of_send_lcd_data:	
  1219                           
  1220                           	psect	text4
  1221  0315                     __ptext4:	
  1222 ;; *************** function _set_lcd_rs *****************
  1223 ;; Defined at:
  1224 ;;		line 360 in file "lcd.c"
  1225 ;; Parameters:    Size  Location     Type
  1226 ;;  b_output        1    wreg     unsigned char 
  1227 ;; Auto vars:     Size  Location     Type
  1228 ;;  b_output        1   15[BANK0 ] unsigned char 
  1229 ;; Return value:  Size  Location     Type
  1230 ;;                  1    wreg      void 
  1231 ;; Registers used:
  1232 ;;		wreg
  1233 ;; Tracked objects:
  1234 ;;		On entry : 0/0
  1235 ;;		On exit  : 0/0
  1236 ;;		Unchanged: 0/0
  1237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1238 ;;      Params:         0       0       0       0       0
  1239 ;;      Locals:         0       1       0       0       0
  1240 ;;      Temps:          0       0       0       0       0
  1241 ;;      Totals:         0       1       0       0       0
  1242 ;;Total ram usage:        1 bytes
  1243 ;; Hardware stack levels used:    1
  1244 ;; Hardware stack levels required when called:    5
  1245 ;; This function calls:
  1246 ;;		Nothing
  1247 ;; This function is called by:
  1248 ;;		_send_lcd_data
  1249 ;; This function uses a non-reentrant model
  1250 ;;
  1251                           
  1252                           
  1253                           ;psect for function _set_lcd_rs
  1254  0315                     _set_lcd_rs:	
  1255                           
  1256                           ;incstack = 0
  1257                           ; Regs used in _set_lcd_rs: [wreg]
  1258                           ;set_lcd_rs@b_output stored from wreg
  1259  0315  1283               	bcf	3,5	;RP0=0, select bank0
  1260  0316  1303               	bcf	3,6	;RP1=0, select bank0
  1261  0317  00AF               	movwf	set_lcd_rs@b_output
  1262                           
  1263                           ;lcd.c: 362: RB4 = b_output;
  1264  0318  1C2F               	btfss	set_lcd_rs@b_output,0
  1265  0319  2B1E               	goto	u360
  1266  031A  1283               	bcf	3,5	;RP0=0, select bank0
  1267  031B  1303               	bcf	3,6	;RP1=0, select bank0
  1268  031C  1606               	bsf	6,4	;volatile
  1269  031D  0008               	return
  1270  031E                     u360:	
  1271  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1272  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1273  0320  1206               	bcf	6,4	;volatile
  1274  0321  0008               	return
  1275  0322                     __end_of_set_lcd_rs:	
  1276                           
  1277                           	psect	text5
  1278  0322                     __ptext5:	
  1279 ;; *************** function _set_lcd_e *****************
  1280 ;; Defined at:
  1281 ;;		line 340 in file "lcd.c"
  1282 ;; Parameters:    Size  Location     Type
  1283 ;;  b_output        1    wreg     unsigned char 
  1284 ;; Auto vars:     Size  Location     Type
  1285 ;;  b_output        1   15[BANK0 ] unsigned char 
  1286 ;; Return value:  Size  Location     Type
  1287 ;;                  1    wreg      void 
  1288 ;; Registers used:
  1289 ;;		wreg
  1290 ;; Tracked objects:
  1291 ;;		On entry : 0/0
  1292 ;;		On exit  : 0/0
  1293 ;;		Unchanged: 0/0
  1294 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1295 ;;      Params:         0       0       0       0       0
  1296 ;;      Locals:         0       1       0       0       0
  1297 ;;      Temps:          0       0       0       0       0
  1298 ;;      Totals:         0       1       0       0       0
  1299 ;;Total ram usage:        1 bytes
  1300 ;; Hardware stack levels used:    1
  1301 ;; Hardware stack levels required when called:    5
  1302 ;; This function calls:
  1303 ;;		Nothing
  1304 ;; This function is called by:
  1305 ;;		_lcd_initialize
  1306 ;;		_send_lcd_data
  1307 ;; This function uses a non-reentrant model
  1308 ;;
  1309                           
  1310                           
  1311                           ;psect for function _set_lcd_e
  1312  0322                     _set_lcd_e:	
  1313                           
  1314                           ;incstack = 0
  1315                           ; Regs used in _set_lcd_e: [wreg]
  1316                           ;set_lcd_e@b_output stored from wreg
  1317  0322  1283               	bcf	3,5	;RP0=0, select bank0
  1318  0323  1303               	bcf	3,6	;RP1=0, select bank0
  1319  0324  00AF               	movwf	set_lcd_e@b_output
  1320                           
  1321                           ;lcd.c: 342: RB5 = b_output;
  1322  0325  1C2F               	btfss	set_lcd_e@b_output,0
  1323  0326  2B2B               	goto	u340
  1324  0327  1283               	bcf	3,5	;RP0=0, select bank0
  1325  0328  1303               	bcf	3,6	;RP1=0, select bank0
  1326  0329  1686               	bsf	6,5	;volatile
  1327  032A  0008               	return
  1328  032B                     u340:	
  1329  032B  1283               	bcf	3,5	;RP0=0, select bank0
  1330  032C  1303               	bcf	3,6	;RP1=0, select bank0
  1331  032D  1286               	bcf	6,5	;volatile
  1332  032E  0008               	return
  1333  032F                     __end_of_set_lcd_e:	
  1334                           
  1335                           	psect	text6
  1336  0373                     __ptext6:	
  1337 ;; *************** function _set_lcd_data *****************
  1338 ;; Defined at:
  1339 ;;		line 380 in file "lcd.c"
  1340 ;; Parameters:    Size  Location     Type
  1341 ;;  uc_data         1    wreg     unsigned char 
  1342 ;; Auto vars:     Size  Location     Type
  1343 ;;  uc_data         1   15[BANK0 ] unsigned char 
  1344 ;; Return value:  Size  Location     Type
  1345 ;;                  1    wreg      void 
  1346 ;; Registers used:
  1347 ;;		wreg
  1348 ;; Tracked objects:
  1349 ;;		On entry : 0/0
  1350 ;;		On exit  : 0/0
  1351 ;;		Unchanged: 0/0
  1352 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1353 ;;      Params:         0       0       0       0       0
  1354 ;;      Locals:         0       1       0       0       0
  1355 ;;      Temps:          0       0       0       0       0
  1356 ;;      Totals:         0       1       0       0       0
  1357 ;;Total ram usage:        1 bytes
  1358 ;; Hardware stack levels used:    1
  1359 ;; Hardware stack levels required when called:    5
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_send_lcd_data
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367                           
  1368                           ;psect for function _set_lcd_data
  1369  0373                     _set_lcd_data:	
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _set_lcd_data: [wreg]
  1373                           ;set_lcd_data@uc_data stored from wreg
  1374  0373  1283               	bcf	3,5	;RP0=0, select bank0
  1375  0374  1303               	bcf	3,6	;RP1=0, select bank0
  1376  0375  00AF               	movwf	set_lcd_data@uc_data
  1377                           
  1378                           ;lcd.c: 382: PORTD = uc_data;
  1379  0376  082F               	movf	set_lcd_data@uc_data,w
  1380  0377  0088               	movwf	8	;volatile
  1381  0378  0008               	return
  1382  0379                     __end_of_set_lcd_data:	
  1383                           
  1384                           	psect	text7
  1385  0383                     __ptext7:	
  1386 ;; *************** function _InitApp *****************
  1387 ;; Defined at:
  1388 ;;		line 22 in file "user.c"
  1389 ;; Parameters:    Size  Location     Type
  1390 ;;		None
  1391 ;; Auto vars:     Size  Location     Type
  1392 ;;		None
  1393 ;; Return value:  Size  Location     Type
  1394 ;;                  1    wreg      void 
  1395 ;; Registers used:
  1396 ;;		None
  1397 ;; Tracked objects:
  1398 ;;		On entry : 0/0
  1399 ;;		On exit  : 0/0
  1400 ;;		Unchanged: 0/0
  1401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1402 ;;      Params:         0       0       0       0       0
  1403 ;;      Locals:         0       0       0       0       0
  1404 ;;      Temps:          0       0       0       0       0
  1405 ;;      Totals:         0       0       0       0       0
  1406 ;;Total ram usage:        0 bytes
  1407 ;; Hardware stack levels used:    1
  1408 ;; Hardware stack levels required when called:    5
  1409 ;; This function calls:
  1410 ;;		Nothing
  1411 ;; This function is called by:
  1412 ;;		_main
  1413 ;; This function uses a non-reentrant model
  1414 ;;
  1415                           
  1416                           
  1417                           ;psect for function _InitApp
  1418  0383                     _InitApp:	
  1419                           
  1420                           ;incstack = 0
  1421                           ; Regs used in _InitApp: []
  1422  0383  0008               	return
  1423  0384                     __end_of_InitApp:	
  1424                           
  1425                           	psect	text8
  1426  0109                     __ptext8:	
  1427 ;; *************** function _isr *****************
  1428 ;; Defined at:
  1429 ;;		line 13 in file "interrupts.c"
  1430 ;; Parameters:    Size  Location     Type
  1431 ;;		None
  1432 ;; Auto vars:     Size  Location     Type
  1433 ;;		None
  1434 ;; Return value:  Size  Location     Type
  1435 ;;                  1    wreg      void 
  1436 ;; Registers used:
  1437 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1438 ;; Tracked objects:
  1439 ;;		On entry : 0/0
  1440 ;;		On exit  : 0/0
  1441 ;;		Unchanged: 0/0
  1442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1443 ;;      Params:         0       0       0       0       0
  1444 ;;      Locals:         0       0       0       0       0
  1445 ;;      Temps:          0       4       0       0       0
  1446 ;;      Totals:         0       4       0       0       0
  1447 ;;Total ram usage:        4 bytes
  1448 ;; Hardware stack levels used:    1
  1449 ;; Hardware stack levels required when called:    4
  1450 ;; This function calls:
  1451 ;;		_lcd_bcd
  1452 ;;		_lcd_goto
  1453 ;;		_lcd_putstr
  1454 ;;		i1_lcd_clear
  1455 ;; This function is called by:
  1456 ;;		Interrupt level 1
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           
  1461                           ;psect for function _isr
  1462  0109                     _isr:	
  1463                           
  1464                           ;interrupts.c: 15: if(TMR0IF==1)
  1465  0109  1D0B               	btfss	11,2	;volatile
  1466  010A  2942               	goto	i1l1061
  1467                           
  1468                           ;interrupts.c: 16: {
  1469                           ;interrupts.c: 18: TMR0 = 101;
  1470  010B  3065               	movlw	101
  1471  010C  0081               	movwf	1	;volatile
  1472                           
  1473                           ;interrupts.c: 20: TMR0IF=0;
  1474  010D  110B               	bcf	11,2	;volatile
  1475                           
  1476                           ;interrupts.c: 21: time++;
  1477  010E  3001               	movlw	1
  1478  010F  07C7               	addwf	_time,f
  1479  0110  1803               	skipnc
  1480  0111  0AC8               	incf	_time+1,f
  1481  0112  3000               	movlw	0
  1482  0113  07C8               	addwf	_time+1,f
  1483                           
  1484                           ;interrupts.c: 22: time2++;
  1485  0114  3001               	movlw	1
  1486  0115  07C5               	addwf	_time2,f
  1487  0116  1803               	skipnc
  1488  0117  0AC6               	incf	_time2+1,f
  1489  0118  3000               	movlw	0
  1490  0119  07C6               	addwf	_time2+1,f
  1491                           
  1492                           ;interrupts.c: 24: if(time == 1000)
  1493  011A  30E8               	movlw	232
  1494  011B  0647               	xorwf	_time,w
  1495  011C  3003               	movlw	3
  1496  011D  1903               	skipnz
  1497  011E  0648               	xorwf	_time+1,w
  1498  011F  1D03               	btfss	3,2
  1499  0120  2939               	goto	i1l1055
  1500                           
  1501                           ;interrupts.c: 25: {
  1502                           ;interrupts.c: 26: lcd_goto(0x0);
  1503  0121  3000               	movlw	0
  1504  0122  120A  118A  232F  120A  118A  	fcall	_lcd_goto
  1505                           
  1506                           ;interrupts.c: 27: lcd_bcd(5, add);
  1507  0127  1283               	bcf	3,5	;RP0=0, select bank0
  1508  0128  1303               	bcf	3,6	;RP1=0, select bank0
  1509  0129  0844               	movf	_add+1,w
  1510  012A  00F9               	movwf	lcd_bcd@ui_number+1
  1511  012B  0843               	movf	_add,w
  1512  012C  00F8               	movwf	lcd_bcd@ui_number
  1513  012D  3005               	movlw	5
  1514  012E  120A  118A  203B  120A  118A  	fcall	_lcd_bcd
  1515                           
  1516                           ;interrupts.c: 28: RB6 = !RB6;
  1517  0133  3040               	movlw	64
  1518  0134  1283               	bcf	3,5	;RP0=0, select bank0
  1519  0135  1303               	bcf	3,6	;RP1=0, select bank0
  1520  0136  0686               	xorwf	6,f
  1521                           
  1522                           ;interrupts.c: 30: time = 0;
  1523  0137  01C7               	clrf	_time
  1524  0138  01C8               	clrf	_time+1
  1525  0139                     i1l1055:	
  1526                           
  1527                           ;interrupts.c: 31: }
  1528                           ;interrupts.c: 33: if(time2 == 100)
  1529  0139  3064               	movlw	100
  1530  013A  0645               	xorwf	_time2,w
  1531  013B  0446               	iorwf	_time2+1,w
  1532  013C  1D03               	btfss	3,2
  1533  013D  2942               	goto	i1l1061
  1534                           
  1535                           ;interrupts.c: 34: {
  1536                           ;interrupts.c: 35: RB7 = !RB7;
  1537  013E  3080               	movlw	128
  1538  013F  0686               	xorwf	6,f
  1539                           
  1540                           ;interrupts.c: 36: time2 = 0;
  1541  0140  01C5               	clrf	_time2
  1542  0141  01C6               	clrf	_time2+1
  1543  0142                     i1l1061:	
  1544                           
  1545                           ;interrupts.c: 37: }
  1546                           ;interrupts.c: 38: }
  1547                           ;interrupts.c: 40: if (INTF==1)
  1548  0142  1C8B               	btfss	11,1	;volatile
  1549  0143  295B               	goto	i1l33
  1550                           
  1551                           ;interrupts.c: 41: {
  1552                           ;interrupts.c: 43: lcd_clear();
  1553  0144  120A  118A  236C  120A  118A  	fcall	i1_lcd_clear
  1554                           
  1555                           ;interrupts.c: 44: lcd_goto(0x0);
  1556  0149  3000               	movlw	0
  1557  014A  120A  118A  232F  120A  118A  	fcall	_lcd_goto
  1558                           
  1559                           ;interrupts.c: 45: lcd_putstr("Interrupt Mode");
  1560  014F  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1561  0150  120A  118A  2254  120A  118A  	fcall	_lcd_putstr
  1562                           
  1563                           ;interrupts.c: 47: INTF = 0;
  1564  0155  108B               	bcf	11,1	;volatile
  1565                           
  1566                           ;interrupts.c: 49: lcd_clear();
  1567  0156  120A  118A  236C  120A  118A  	fcall	i1_lcd_clear
  1568  015B                     i1l33:	
  1569  015B  1283               	bcf	3,5	;RP0=0, select bank0
  1570  015C  1303               	bcf	3,6	;RP1=0, select bank0
  1571  015D  082E               	movf	??_isr+3,w
  1572  015E  00FF               	movwf	127
  1573  015F  082D               	movf	??_isr+2,w
  1574  0160  008A               	movwf	10
  1575  0161  082C               	movf	??_isr+1,w
  1576  0162  0084               	movwf	4
  1577  0163  0E2B               	swapf	??_isr^0,w
  1578  0164  0083               	movwf	3
  1579  0165  0EFE               	swapf	126,f
  1580  0166  0E7E               	swapf	126,w
  1581  0167  0009               	retfie
  1582  0168                     __end_of_isr:	
  1583                           
  1584                           	psect	intentry
  1585  0004                     __pintentry:	
  1586                           ;incstack = 0
  1587 ;; hardware stack exceeded
  1588                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1589                           
  1590  0004                     interrupt_function:	
  1591  007E                     saved_w	set	btemp
  1592  0004  00FE               	movwf	btemp
  1593  0005  0E03               	swapf	3,w
  1594  0006  1283               	bcf	3,5	;RP0=0, select bank0
  1595  0007  1303               	bcf	3,6	;RP1=0, select bank0
  1596  0008  00AB               	movwf	??_isr
  1597  0009  0804               	movf	4,w
  1598  000A  00AC               	movwf	??_isr+1
  1599  000B  080A               	movf	10,w
  1600  000C  00AD               	movwf	??_isr+2
  1601  000D  087F               	movf	btemp+1,w
  1602  000E  00AE               	movwf	??_isr+3
  1603  000F  120A  118A  2909   	ljmp	_isr
  1604                           
  1605                           	psect	text9
  1606  036C                     __ptext9:	
  1607 ;; *************** function i1_lcd_clear *****************
  1608 ;; Defined at:
  1609 ;;		line 136 in file "lcd.c"
  1610 ;; Parameters:    Size  Location     Type
  1611 ;;		None
  1612 ;; Auto vars:     Size  Location     Type
  1613 ;;		None
  1614 ;; Return value:  Size  Location     Type
  1615 ;;                  1    wreg      void 
  1616 ;; Registers used:
  1617 ;;		wreg, status,2, status,0, pclath, cstack
  1618 ;; Tracked objects:
  1619 ;;		On entry : 0/0
  1620 ;;		On exit  : 0/0
  1621 ;;		Unchanged: 0/0
  1622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1623 ;;      Params:         0       0       0       0       0
  1624 ;;      Locals:         0       0       0       0       0
  1625 ;;      Temps:          0       0       0       0       0
  1626 ;;      Totals:         0       0       0       0       0
  1627 ;;Total ram usage:        0 bytes
  1628 ;; Hardware stack levels used:    1
  1629 ;; Hardware stack levels required when called:    2
  1630 ;; This function calls:
  1631 ;;		i1_send_lcd_data
  1632 ;; This function is called by:
  1633 ;;		_isr
  1634 ;; This function uses a non-reentrant model
  1635 ;;
  1636                           
  1637                           
  1638                           ;psect for function i1_lcd_clear
  1639  036C                     i1_lcd_clear:	
  1640                           
  1641                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1642                           
  1643                           ;incstack = 0
  1644                           ; Regs used in i1_lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1645  036C  01F1               	clrf	i1send_lcd_data@uc_data
  1646  036D  0AF1               	incf	i1send_lcd_data@uc_data,f
  1647  036E  3000               	movlw	0
  1648  036F  120A  118A  228A   	fcall	i1_send_lcd_data
  1649  0372  0008               	return
  1650  0373                     __end_ofi1_lcd_clear:	
  1651                           
  1652                           	psect	text10
  1653  0254                     __ptext10:	
  1654 ;; *************** function _lcd_putstr *****************
  1655 ;; Defined at:
  1656 ;;		line 241 in file "lcd.c"
  1657 ;; Parameters:    Size  Location     Type
  1658 ;;  csz_string      1    wreg     PTR const unsigned char 
  1659 ;;		 -> STR_1(15), 
  1660 ;; Auto vars:     Size  Location     Type
  1661 ;;  csz_string      1    8[COMMON] PTR const unsigned char 
  1662 ;;		 -> STR_1(15), 
  1663 ;; Return value:  Size  Location     Type
  1664 ;;                  1    wreg      void 
  1665 ;; Registers used:
  1666 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1667 ;; Tracked objects:
  1668 ;;		On entry : 0/0
  1669 ;;		On exit  : 0/0
  1670 ;;		Unchanged: 0/0
  1671 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1672 ;;      Params:         0       0       0       0       0
  1673 ;;      Locals:         1       0       0       0       0
  1674 ;;      Temps:          1       0       0       0       0
  1675 ;;      Totals:         2       0       0       0       0
  1676 ;;Total ram usage:        2 bytes
  1677 ;; Hardware stack levels used:    1
  1678 ;; Hardware stack levels required when called:    3
  1679 ;; This function calls:
  1680 ;;		_lcd_2ndline
  1681 ;;		_lcd_putchar
  1682 ;; This function is called by:
  1683 ;;		_isr
  1684 ;; This function uses a non-reentrant model
  1685 ;;
  1686                           
  1687                           
  1688                           ;psect for function _lcd_putstr
  1689  0254                     _lcd_putstr:	
  1690                           
  1691                           ;incstack = 0
  1692 ;; hardware stack exceeded
  1693                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1694                           ;lcd_putstr@csz_string stored from wreg
  1695  0254  00F8               	movwf	lcd_putstr@csz_string
  1696  0255                     i1l1023:	
  1697                           ;lcd.c: 244: while (*csz_string != '\0') {
  1698                           
  1699  0255  0878               	movf	lcd_putstr@csz_string,w
  1700  0256  0084               	movwf	4
  1701  0257  120A  118A  2300  120A  118A  	fcall	stringdir
  1702  025C  3A00               	xorlw	0
  1703  025D  1903               	btfsc	3,2
  1704  025E  0008               	return
  1705                           
  1706                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1707  025F  0878               	movf	lcd_putstr@csz_string,w
  1708  0260  0084               	movwf	4
  1709  0261  120A  118A  2300  120A  118A  	fcall	stringdir
  1710  0266  3A0A               	xorlw	10
  1711  0267  1903               	skipnz
  1712  0268  2A73               	goto	i1l1017
  1713  0269  0878               	movf	lcd_putstr@csz_string,w
  1714  026A  0084               	movwf	4
  1715  026B  120A  118A  2300  120A  118A  	fcall	stringdir
  1716  0270  3A0D               	xorlw	13
  1717  0271  1D03               	skipz
  1718  0272  2A79               	goto	i1l1019
  1719  0273                     i1l1017:	
  1720                           
  1721                           ;lcd.c: 248: lcd_2ndline();
  1722  0273  120A  118A  2363  120A  118A  	fcall	_lcd_2ndline
  1723                           
  1724                           ;lcd.c: 249: }
  1725  0278  2A85               	goto	i1l1021
  1726  0279                     i1l1019:	
  1727                           
  1728                           ;lcd.c: 252: else {
  1729                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1730  0279  0878               	movf	lcd_putstr@csz_string,w
  1731  027A  0084               	movwf	4
  1732  027B  120A  118A  2300  120A  118A  	fcall	stringdir
  1733  0280  120A  118A  2350  120A  118A  	fcall	_lcd_putchar
  1734  0285                     i1l1021:	
  1735                           
  1736                           ;lcd.c: 254: }
  1737                           ;lcd.c: 257: csz_string++;
  1738  0285  3001               	movlw	1
  1739  0286  00F7               	movwf	??_lcd_putstr
  1740  0287  0877               	movf	??_lcd_putstr,w
  1741  0288  07F8               	addwf	lcd_putstr@csz_string,f
  1742  0289  2A55               	goto	i1l1023
  1743  028A                     __end_of_lcd_putstr:	
  1744                           
  1745                           	psect	text11
  1746  0363                     __ptext11:	
  1747 ;; *************** function _lcd_2ndline *****************
  1748 ;; Defined at:
  1749 ;;		line 178 in file "lcd.c"
  1750 ;; Parameters:    Size  Location     Type
  1751 ;;		None
  1752 ;; Auto vars:     Size  Location     Type
  1753 ;;		None
  1754 ;; Return value:  Size  Location     Type
  1755 ;;                  1    wreg      void 
  1756 ;; Registers used:
  1757 ;;		wreg, status,2, status,0, pclath, cstack
  1758 ;; Tracked objects:
  1759 ;;		On entry : 0/0
  1760 ;;		On exit  : 0/0
  1761 ;;		Unchanged: 0/0
  1762 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1763 ;;      Params:         0       0       0       0       0
  1764 ;;      Locals:         0       0       0       0       0
  1765 ;;      Temps:          1       0       0       0       0
  1766 ;;      Totals:         1       0       0       0       0
  1767 ;;Total ram usage:        1 bytes
  1768 ;; Hardware stack levels used:    1
  1769 ;; Hardware stack levels required when called:    2
  1770 ;; This function calls:
  1771 ;;		i1_send_lcd_data
  1772 ;; This function is called by:
  1773 ;;		_lcd_putstr
  1774 ;; This function uses a non-reentrant model
  1775 ;;
  1776                           
  1777                           
  1778                           ;psect for function _lcd_2ndline
  1779  0363                     _lcd_2ndline:	
  1780                           
  1781                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1782                           
  1783                           ;incstack = 0
  1784 ;; hardware stack exceeded
  1785                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1786  0363  30C0               	movlw	192
  1787  0364  00F5               	movwf	??_lcd_2ndline
  1788  0365  0875               	movf	??_lcd_2ndline,w
  1789  0366  00F1               	movwf	i1send_lcd_data@uc_data
  1790  0367  3000               	movlw	0
  1791  0368  120A  118A  228A   	fcall	i1_send_lcd_data
  1792  036B  0008               	return
  1793  036C                     __end_of_lcd_2ndline:	
  1794                           
  1795                           	psect	text12
  1796  032F                     __ptext12:	
  1797 ;; *************** function _lcd_goto *****************
  1798 ;; Defined at:
  1799 ;;		line 199 in file "lcd.c"
  1800 ;; Parameters:    Size  Location     Type
  1801 ;;  uc_position     1    wreg     unsigned char 
  1802 ;; Auto vars:     Size  Location     Type
  1803 ;;  uc_position     1    6[COMMON] unsigned char 
  1804 ;; Return value:  Size  Location     Type
  1805 ;;                  1    wreg      void 
  1806 ;; Registers used:
  1807 ;;		wreg, status,2, status,0, pclath, cstack
  1808 ;; Tracked objects:
  1809 ;;		On entry : 0/0
  1810 ;;		On exit  : 0/0
  1811 ;;		Unchanged: 0/0
  1812 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1813 ;;      Params:         0       0       0       0       0
  1814 ;;      Locals:         1       0       0       0       0
  1815 ;;      Temps:          1       0       0       0       0
  1816 ;;      Totals:         2       0       0       0       0
  1817 ;;Total ram usage:        2 bytes
  1818 ;; Hardware stack levels used:    1
  1819 ;; Hardware stack levels required when called:    2
  1820 ;; This function calls:
  1821 ;;		i1_send_lcd_data
  1822 ;; This function is called by:
  1823 ;;		_isr
  1824 ;; This function uses a non-reentrant model
  1825 ;;
  1826                           
  1827                           
  1828                           ;psect for function _lcd_goto
  1829  032F                     _lcd_goto:	
  1830                           
  1831                           ;incstack = 0
  1832                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1833                           ;lcd_goto@uc_position stored from wreg
  1834  032F  00F6               	movwf	lcd_goto@uc_position
  1835                           
  1836                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1837  0330  0876               	movf	lcd_goto@uc_position,w
  1838  0331  3880               	iorlw	128
  1839  0332  00F5               	movwf	??_lcd_goto
  1840  0333  0875               	movf	??_lcd_goto,w
  1841  0334  00F1               	movwf	i1send_lcd_data@uc_data
  1842  0335  3000               	movlw	0
  1843  0336  120A  118A  228A   	fcall	i1_send_lcd_data
  1844  0339  0008               	return
  1845  033A                     __end_of_lcd_goto:	
  1846                           
  1847                           	psect	text13
  1848  003B                     __ptext13:	
  1849 ;; *************** function _lcd_bcd *****************
  1850 ;; Defined at:
  1851 ;;		line 274 in file "lcd.c"
  1852 ;; Parameters:    Size  Location     Type
  1853 ;;  uc_digit        1    wreg     unsigned char 
  1854 ;;  ui_number       2    8[COMMON] unsigned int 
  1855 ;; Auto vars:     Size  Location     Type
  1856 ;;  uc_digit        1   10[BANK0 ] unsigned char 
  1857 ;;  ui_decimal     10    0[BANK0 ] unsigned int [5]
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1867 ;;      Params:         2       0       0       0       0
  1868 ;;      Locals:         0      11       0       0       0
  1869 ;;      Temps:          4       0       0       0       0
  1870 ;;      Totals:         6      11       0       0       0
  1871 ;;Total ram usage:       17 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:    3
  1874 ;; This function calls:
  1875 ;;		___lwdiv
  1876 ;;		___lwmod
  1877 ;;		_lcd_putchar
  1878 ;; This function is called by:
  1879 ;;		_isr
  1880 ;; This function uses a non-reentrant model
  1881 ;;
  1882                           
  1883                           
  1884                           ;psect for function _lcd_bcd
  1885  003B                     _lcd_bcd:	
  1886                           
  1887                           ;incstack = 0
  1888 ;; hardware stack exceeded
  1889                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1890                           ;lcd_bcd@uc_digit stored from wreg
  1891  003B  1283               	bcf	3,5	;RP0=0, select bank0
  1892  003C  1303               	bcf	3,6	;RP1=0, select bank0
  1893  003D  00AA               	movwf	lcd_bcd@uc_digit
  1894                           
  1895                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1896  003E  3020               	movlw	lcd_bcd@ui_decimal& (0+255)
  1897  003F  0084               	movwf	4
  1898  0040  3039               	movlw	low lcd_bcd@F1135
  1899  0041  00FA               	movwf	??_lcd_bcd
  1900  0042  0804               	movf	4,w
  1901  0043  00FB               	movwf	??_lcd_bcd+1
  1902  0044  300A               	movlw	10
  1903  0045  00FC               	movwf	??_lcd_bcd+2
  1904  0046                     u55_20:	
  1905  0046  087A               	movf	??_lcd_bcd,w
  1906  0047  0084               	movwf	4
  1907  0048  1383               	bcf	3,7	;select IRP bank0
  1908  0049  0800               	movf	0,w
  1909  004A  00FD               	movwf	??_lcd_bcd+3
  1910  004B  0AFA               	incf	??_lcd_bcd,f
  1911  004C  087B               	movf	??_lcd_bcd+1,w
  1912  004D  0084               	movwf	4
  1913  004E  087D               	movf	??_lcd_bcd+3,w
  1914  004F  0080               	movwf	0
  1915  0050  0AFB               	incf	??_lcd_bcd+1,f
  1916  0051  0BFC               	decfsz	??_lcd_bcd+2,f
  1917  0052  2846               	goto	u55_20
  1918                           
  1919                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1920  0053  3010               	movlw	16
  1921  0054  00F0               	movwf	___lwdiv@divisor
  1922  0055  3027               	movlw	39
  1923  0056  00F1               	movwf	___lwdiv@divisor+1
  1924  0057  0879               	movf	lcd_bcd@ui_number+1,w
  1925  0058  00F3               	movwf	___lwdiv@dividend+1
  1926  0059  0878               	movf	lcd_bcd@ui_number,w
  1927  005A  00F2               	movwf	___lwdiv@dividend
  1928  005B  120A  118A  21A5  120A  118A  	fcall	___lwdiv
  1929  0060  0871               	movf	?___lwdiv+1,w
  1930  0061  1283               	bcf	3,5	;RP0=0, select bank0
  1931  0062  1303               	bcf	3,6	;RP1=0, select bank0
  1932  0063  00A9               	movwf	lcd_bcd@ui_decimal+9
  1933  0064  0870               	movf	?___lwdiv,w
  1934  0065  00A8               	movwf	lcd_bcd@ui_decimal+8
  1935                           
  1936                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1937  0066  3010               	movlw	16
  1938  0067  00F0               	movwf	___lwmod@divisor
  1939  0068  3027               	movlw	39
  1940  0069  00F1               	movwf	___lwmod@divisor+1
  1941  006A  0879               	movf	lcd_bcd@ui_number+1,w
  1942  006B  00F3               	movwf	___lwmod@dividend+1
  1943  006C  0878               	movf	lcd_bcd@ui_number,w
  1944  006D  00F2               	movwf	___lwmod@dividend
  1945  006E  120A  118A  22BF  120A  118A  	fcall	___lwmod
  1946  0073  0871               	movf	?___lwmod+1,w
  1947  0074  1283               	bcf	3,5	;RP0=0, select bank0
  1948  0075  1303               	bcf	3,6	;RP1=0, select bank0
  1949  0076  00A7               	movwf	lcd_bcd@ui_decimal+7
  1950  0077  0870               	movf	?___lwmod,w
  1951  0078  00A6               	movwf	lcd_bcd@ui_decimal+6
  1952                           
  1953                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1954  0079  30E8               	movlw	232
  1955  007A  00F0               	movwf	___lwmod@divisor
  1956  007B  3003               	movlw	3
  1957  007C  00F1               	movwf	___lwmod@divisor+1
  1958  007D  0827               	movf	lcd_bcd@ui_decimal+7,w
  1959  007E  00F3               	movwf	___lwmod@dividend+1
  1960  007F  0826               	movf	lcd_bcd@ui_decimal+6,w
  1961  0080  00F2               	movwf	___lwmod@dividend
  1962  0081  120A  118A  22BF  120A  118A  	fcall	___lwmod
  1963  0086  0871               	movf	?___lwmod+1,w
  1964  0087  1283               	bcf	3,5	;RP0=0, select bank0
  1965  0088  1303               	bcf	3,6	;RP1=0, select bank0
  1966  0089  00A5               	movwf	lcd_bcd@ui_decimal+5
  1967  008A  0870               	movf	?___lwmod,w
  1968  008B  00A4               	movwf	lcd_bcd@ui_decimal+4
  1969                           
  1970                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1971  008C  30E8               	movlw	232
  1972  008D  00F0               	movwf	___lwdiv@divisor
  1973  008E  3003               	movlw	3
  1974  008F  00F1               	movwf	___lwdiv@divisor+1
  1975  0090  0827               	movf	lcd_bcd@ui_decimal+7,w
  1976  0091  00F3               	movwf	___lwdiv@dividend+1
  1977  0092  0826               	movf	lcd_bcd@ui_decimal+6,w
  1978  0093  00F2               	movwf	___lwdiv@dividend
  1979  0094  120A  118A  21A5  120A  118A  	fcall	___lwdiv
  1980  0099  0871               	movf	?___lwdiv+1,w
  1981  009A  1283               	bcf	3,5	;RP0=0, select bank0
  1982  009B  1303               	bcf	3,6	;RP1=0, select bank0
  1983  009C  00A7               	movwf	lcd_bcd@ui_decimal+7
  1984  009D  0870               	movf	?___lwdiv,w
  1985  009E  00A6               	movwf	lcd_bcd@ui_decimal+6
  1986                           
  1987                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1988  009F  3064               	movlw	100
  1989  00A0  00F0               	movwf	___lwmod@divisor
  1990  00A1  3000               	movlw	0
  1991  00A2  00F1               	movwf	___lwmod@divisor+1
  1992  00A3  0825               	movf	lcd_bcd@ui_decimal+5,w
  1993  00A4  00F3               	movwf	___lwmod@dividend+1
  1994  00A5  0824               	movf	lcd_bcd@ui_decimal+4,w
  1995  00A6  00F2               	movwf	___lwmod@dividend
  1996  00A7  120A  118A  22BF  120A  118A  	fcall	___lwmod
  1997  00AC  0871               	movf	?___lwmod+1,w
  1998  00AD  1283               	bcf	3,5	;RP0=0, select bank0
  1999  00AE  1303               	bcf	3,6	;RP1=0, select bank0
  2000  00AF  00A3               	movwf	lcd_bcd@ui_decimal+3
  2001  00B0  0870               	movf	?___lwmod,w
  2002  00B1  00A2               	movwf	lcd_bcd@ui_decimal+2
  2003                           
  2004                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  2005  00B2  3064               	movlw	100
  2006  00B3  00F0               	movwf	___lwdiv@divisor
  2007  00B4  3000               	movlw	0
  2008  00B5  00F1               	movwf	___lwdiv@divisor+1
  2009  00B6  0825               	movf	lcd_bcd@ui_decimal+5,w
  2010  00B7  00F3               	movwf	___lwdiv@dividend+1
  2011  00B8  0824               	movf	lcd_bcd@ui_decimal+4,w
  2012  00B9  00F2               	movwf	___lwdiv@dividend
  2013  00BA  120A  118A  21A5  120A  118A  	fcall	___lwdiv
  2014  00BF  0871               	movf	?___lwdiv+1,w
  2015  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  2016  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  2017  00C2  00A5               	movwf	lcd_bcd@ui_decimal+5
  2018  00C3  0870               	movf	?___lwdiv,w
  2019  00C4  00A4               	movwf	lcd_bcd@ui_decimal+4
  2020                           
  2021                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  2022  00C5  300A               	movlw	10
  2023  00C6  00F0               	movwf	___lwmod@divisor
  2024  00C7  3000               	movlw	0
  2025  00C8  00F1               	movwf	___lwmod@divisor+1
  2026  00C9  0823               	movf	lcd_bcd@ui_decimal+3,w
  2027  00CA  00F3               	movwf	___lwmod@dividend+1
  2028  00CB  0822               	movf	lcd_bcd@ui_decimal+2,w
  2029  00CC  00F2               	movwf	___lwmod@dividend
  2030  00CD  120A  118A  22BF  120A  118A  	fcall	___lwmod
  2031  00D2  0871               	movf	?___lwmod+1,w
  2032  00D3  1283               	bcf	3,5	;RP0=0, select bank0
  2033  00D4  1303               	bcf	3,6	;RP1=0, select bank0
  2034  00D5  00A1               	movwf	lcd_bcd@ui_decimal+1
  2035  00D6  0870               	movf	?___lwmod,w
  2036  00D7  00A0               	movwf	lcd_bcd@ui_decimal
  2037                           
  2038                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  2039  00D8  300A               	movlw	10
  2040  00D9  00F0               	movwf	___lwdiv@divisor
  2041  00DA  3000               	movlw	0
  2042  00DB  00F1               	movwf	___lwdiv@divisor+1
  2043  00DC  0823               	movf	lcd_bcd@ui_decimal+3,w
  2044  00DD  00F3               	movwf	___lwdiv@dividend+1
  2045  00DE  0822               	movf	lcd_bcd@ui_decimal+2,w
  2046  00DF  00F2               	movwf	___lwdiv@dividend
  2047  00E0  120A  118A  21A5  120A  118A  	fcall	___lwdiv
  2048  00E5  0871               	movf	?___lwdiv+1,w
  2049  00E6  1283               	bcf	3,5	;RP0=0, select bank0
  2050  00E7  1303               	bcf	3,6	;RP1=0, select bank0
  2051  00E8  00A3               	movwf	lcd_bcd@ui_decimal+3
  2052  00E9  0870               	movf	?___lwdiv,w
  2053  00EA  00A2               	movwf	lcd_bcd@ui_decimal+2
  2054                           
  2055                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  2056  00EB  3006               	movlw	6
  2057  00EC  022A               	subwf	lcd_bcd@uc_digit,w
  2058  00ED  1C03               	skipc
  2059  00EE  28F3               	goto	i1l1001
  2060  00EF  3005               	movlw	5
  2061  00F0  00FA               	movwf	??_lcd_bcd
  2062  00F1  087A               	movf	??_lcd_bcd,w
  2063  00F2  00AA               	movwf	lcd_bcd@uc_digit
  2064  00F3                     i1l1001:	
  2065                           
  2066                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  2067  00F3  082A               	movf	lcd_bcd@uc_digit,w
  2068  00F4  1903               	btfsc	3,2
  2069  00F5  0008               	return
  2070                           
  2071                           ;lcd.c: 289: {
  2072                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  2073  00F6  082A               	movf	lcd_bcd@uc_digit,w
  2074  00F7  00FA               	movwf	??_lcd_bcd
  2075  00F8  077A               	addwf	??_lcd_bcd,w
  2076  00F9  3EFE               	addlw	254
  2077  00FA  3E20               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  2078  00FB  0084               	movwf	4
  2079  00FC  1383               	bcf	3,7	;select IRP bank0
  2080  00FD  0800               	movf	0,w
  2081  00FE  3E30               	addlw	48
  2082  00FF  120A  118A  2350  120A  118A  	fcall	_lcd_putchar
  2083  0104  3001               	movlw	1
  2084  0105  1283               	bcf	3,5	;RP0=0, select bank0
  2085  0106  1303               	bcf	3,6	;RP1=0, select bank0
  2086  0107  02AA               	subwf	lcd_bcd@uc_digit,f
  2087  0108  28F3               	goto	i1l1001
  2088  0109                     __end_of_lcd_bcd:	
  2089                           
  2090                           	psect	text14
  2091  0350                     __ptext14:	
  2092 ;; *************** function _lcd_putchar *****************
  2093 ;; Defined at:
  2094 ;;		line 220 in file "lcd.c"
  2095 ;; Parameters:    Size  Location     Type
  2096 ;;  c_data          1    wreg     unsigned char 
  2097 ;; Auto vars:     Size  Location     Type
  2098 ;;  c_data          1    6[COMMON] unsigned char 
  2099 ;; Return value:  Size  Location     Type
  2100 ;;                  1    wreg      void 
  2101 ;; Registers used:
  2102 ;;		wreg, status,2, status,0, pclath, cstack
  2103 ;; Tracked objects:
  2104 ;;		On entry : 0/0
  2105 ;;		On exit  : 0/0
  2106 ;;		Unchanged: 0/0
  2107 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2108 ;;      Params:         0       0       0       0       0
  2109 ;;      Locals:         1       0       0       0       0
  2110 ;;      Temps:          1       0       0       0       0
  2111 ;;      Totals:         2       0       0       0       0
  2112 ;;Total ram usage:        2 bytes
  2113 ;; Hardware stack levels used:    1
  2114 ;; Hardware stack levels required when called:    2
  2115 ;; This function calls:
  2116 ;;		i1_send_lcd_data
  2117 ;; This function is called by:
  2118 ;;		_lcd_putstr
  2119 ;;		_lcd_bcd
  2120 ;; This function uses a non-reentrant model
  2121 ;;
  2122                           
  2123                           
  2124                           ;psect for function _lcd_putchar
  2125  0350                     _lcd_putchar:	
  2126                           
  2127                           ;incstack = 0
  2128 ;; hardware stack exceeded
  2129                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  2130                           ;lcd_putchar@c_data stored from wreg
  2131  0350  00F6               	movwf	lcd_putchar@c_data
  2132                           
  2133                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  2134  0351  0876               	movf	lcd_putchar@c_data,w
  2135  0352  00F5               	movwf	??_lcd_putchar
  2136  0353  0875               	movf	??_lcd_putchar,w
  2137  0354  00F1               	movwf	i1send_lcd_data@uc_data
  2138  0355  3001               	movlw	1
  2139  0356  120A  118A  228A   	fcall	i1_send_lcd_data
  2140  0359  0008               	return
  2141  035A                     __end_of_lcd_putchar:	
  2142                           
  2143                           	psect	text15
  2144  028A                     __ptext15:	
  2145 ;; *************** function i1_send_lcd_data *****************
  2146 ;; Defined at:
  2147 ;;		line 308 in file "lcd.c"
  2148 ;; Parameters:    Size  Location     Type
  2149 ;;  b_rs            1    wreg     unsigned char 
  2150 ;;  uc_data         1    1[COMMON] unsigned char 
  2151 ;; Auto vars:     Size  Location     Type
  2152 ;;  b_rs            1    4[COMMON] unsigned char 
  2153 ;; Return value:  Size  Location     Type
  2154 ;;                  1    wreg      void 
  2155 ;; Registers used:
  2156 ;;		wreg, status,2, status,0, pclath, cstack
  2157 ;; Tracked objects:
  2158 ;;		On entry : 0/0
  2159 ;;		On exit  : 0/0
  2160 ;;		Unchanged: 0/0
  2161 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2162 ;;      Params:         1       0       0       0       0
  2163 ;;      Locals:         1       0       0       0       0
  2164 ;;      Temps:          2       0       0       0       0
  2165 ;;      Totals:         4       0       0       0       0
  2166 ;;Total ram usage:        4 bytes
  2167 ;; Hardware stack levels used:    1
  2168 ;; Hardware stack levels required when called:    1
  2169 ;; This function calls:
  2170 ;;		i1_set_lcd_data
  2171 ;;		i1_set_lcd_e
  2172 ;;		i1_set_lcd_rs
  2173 ;; This function is called by:
  2174 ;;		_lcd_2ndline
  2175 ;;		_lcd_goto
  2176 ;;		_lcd_putchar
  2177 ;;		i1_lcd_clear
  2178 ;; This function uses a non-reentrant model
  2179 ;;
  2180                           
  2181                           
  2182                           ;psect for function i1_send_lcd_data
  2183  028A                     i1_send_lcd_data:	
  2184                           
  2185                           ;incstack = 0
  2186                           ; Regs used in i1_send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2187                           ;i1send_lcd_data@b_rs stored from wreg
  2188  028A  00F4               	movwf	i1send_lcd_data@b_rs
  2189                           
  2190                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2191  028B  0874               	movf	i1send_lcd_data@b_rs,w
  2192  028C  120A  118A  233A  120A  118A  	fcall	i1_set_lcd_rs
  2193                           
  2194                           ;lcd.c: 312: set_lcd_data(uc_data);
  2195  0291  0871               	movf	i1send_lcd_data@uc_data,w
  2196  0292  120A  118A  2379  120A  118A  	fcall	i1_set_lcd_data
  2197                           
  2198                           ;lcd.c: 315: set_lcd_e(1);
  2199  0297  3001               	movlw	1
  2200  0298  120A  118A  2345  120A  118A  	fcall	i1_set_lcd_e
  2201                           
  2202                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2203  029D  3007               	movlw	7
  2204  029E  00F3               	movwf	??i1_send_lcd_data+1
  2205  029F  307D               	movlw	125
  2206  02A0  00F2               	movwf	??i1_send_lcd_data
  2207  02A1                     u70_27:	
  2208  02A1  0BF2               	decfsz	??i1_send_lcd_data,f
  2209  02A2  2AA1               	goto	u70_27
  2210  02A3  0BF3               	decfsz	??i1_send_lcd_data+1,f
  2211  02A4  2AA1               	goto	u70_27
  2212                           
  2213                           ;lcd.c: 317: set_lcd_e(0);
  2214  02A5  3000               	movlw	0
  2215  02A6  120A  118A  2345  120A  118A  	fcall	i1_set_lcd_e
  2216                           
  2217                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2218  02AB  300D               	movlw	13
  2219  02AC  00F3               	movwf	??i1_send_lcd_data+1
  2220  02AD  30FB               	movlw	251
  2221  02AE  00F2               	movwf	??i1_send_lcd_data
  2222  02AF                     u71_27:	
  2223  02AF  0BF2               	decfsz	??i1_send_lcd_data,f
  2224  02B0  2AAF               	goto	u71_27
  2225  02B1  0BF3               	decfsz	??i1_send_lcd_data+1,f
  2226  02B2  2AAF               	goto	u71_27
  2227  02B3  2AB4               	nop2
  2228                           
  2229                           ;lcd.c: 321: set_lcd_rs(0);
  2230  02B4  3000               	movlw	0
  2231  02B5  120A  118A  233A  120A  118A  	fcall	i1_set_lcd_rs
  2232                           
  2233                           ;lcd.c: 322: set_lcd_data(0);
  2234  02BA  3000               	movlw	0
  2235  02BB  120A  118A  2379   	fcall	i1_set_lcd_data
  2236  02BE  0008               	return
  2237  02BF                     __end_ofi1_send_lcd_data:	
  2238                           
  2239                           	psect	text16
  2240  033A                     __ptext16:	
  2241 ;; *************** function i1_set_lcd_rs *****************
  2242 ;; Defined at:
  2243 ;;		line 360 in file "lcd.c"
  2244 ;; Parameters:    Size  Location     Type
  2245 ;;  b_output        1    wreg     unsigned char 
  2246 ;; Auto vars:     Size  Location     Type
  2247 ;;  b_output        1    0[COMMON] unsigned char 
  2248 ;; Return value:  Size  Location     Type
  2249 ;;                  1    wreg      void 
  2250 ;; Registers used:
  2251 ;;		wreg
  2252 ;; Tracked objects:
  2253 ;;		On entry : 0/0
  2254 ;;		On exit  : 0/0
  2255 ;;		Unchanged: 0/0
  2256 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2257 ;;      Params:         0       0       0       0       0
  2258 ;;      Locals:         1       0       0       0       0
  2259 ;;      Temps:          0       0       0       0       0
  2260 ;;      Totals:         1       0       0       0       0
  2261 ;;Total ram usage:        1 bytes
  2262 ;; Hardware stack levels used:    1
  2263 ;; This function calls:
  2264 ;;		Nothing
  2265 ;; This function is called by:
  2266 ;;		i1_send_lcd_data
  2267 ;; This function uses a non-reentrant model
  2268 ;;
  2269                           
  2270                           
  2271                           ;psect for function i1_set_lcd_rs
  2272  033A                     i1_set_lcd_rs:	
  2273                           
  2274                           ;incstack = 0
  2275                           ; Regs used in i1_set_lcd_rs: [wreg]
  2276                           ;i1set_lcd_rs@b_output stored from wreg
  2277  033A  00F0               	movwf	i1set_lcd_rs@b_output
  2278                           
  2279                           ;lcd.c: 362: RB4 = b_output;
  2280  033B  1C70               	btfss	i1set_lcd_rs@b_output,0
  2281  033C  2B41               	goto	u40_20
  2282  033D  1283               	bcf	3,5	;RP0=0, select bank0
  2283  033E  1303               	bcf	3,6	;RP1=0, select bank0
  2284  033F  1606               	bsf	6,4	;volatile
  2285  0340  0008               	return
  2286  0341                     u40_20:	
  2287  0341  1283               	bcf	3,5	;RP0=0, select bank0
  2288  0342  1303               	bcf	3,6	;RP1=0, select bank0
  2289  0343  1206               	bcf	6,4	;volatile
  2290  0344  0008               	return
  2291  0345                     __end_ofi1_set_lcd_rs:	
  2292                           
  2293                           	psect	text17
  2294  0345                     __ptext17:	
  2295 ;; *************** function i1_set_lcd_e *****************
  2296 ;; Defined at:
  2297 ;;		line 340 in file "lcd.c"
  2298 ;; Parameters:    Size  Location     Type
  2299 ;;  b_output        1    wreg     unsigned char 
  2300 ;; Auto vars:     Size  Location     Type
  2301 ;;  b_output        1    0[COMMON] unsigned char 
  2302 ;; Return value:  Size  Location     Type
  2303 ;;                  1    wreg      void 
  2304 ;; Registers used:
  2305 ;;		wreg
  2306 ;; Tracked objects:
  2307 ;;		On entry : 0/0
  2308 ;;		On exit  : 0/0
  2309 ;;		Unchanged: 0/0
  2310 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2311 ;;      Params:         0       0       0       0       0
  2312 ;;      Locals:         1       0       0       0       0
  2313 ;;      Temps:          0       0       0       0       0
  2314 ;;      Totals:         1       0       0       0       0
  2315 ;;Total ram usage:        1 bytes
  2316 ;; Hardware stack levels used:    1
  2317 ;; This function calls:
  2318 ;;		Nothing
  2319 ;; This function is called by:
  2320 ;;		i1_send_lcd_data
  2321 ;; This function uses a non-reentrant model
  2322 ;;
  2323                           
  2324                           
  2325                           ;psect for function i1_set_lcd_e
  2326  0345                     i1_set_lcd_e:	
  2327                           
  2328                           ;incstack = 0
  2329                           ; Regs used in i1_set_lcd_e: [wreg]
  2330                           ;i1set_lcd_e@b_output stored from wreg
  2331  0345  00F0               	movwf	i1set_lcd_e@b_output
  2332                           
  2333                           ;lcd.c: 342: RB5 = b_output;
  2334  0346  1C70               	btfss	i1set_lcd_e@b_output,0
  2335  0347  2B4C               	goto	u38_20
  2336  0348  1283               	bcf	3,5	;RP0=0, select bank0
  2337  0349  1303               	bcf	3,6	;RP1=0, select bank0
  2338  034A  1686               	bsf	6,5	;volatile
  2339  034B  0008               	return
  2340  034C                     u38_20:	
  2341  034C  1283               	bcf	3,5	;RP0=0, select bank0
  2342  034D  1303               	bcf	3,6	;RP1=0, select bank0
  2343  034E  1286               	bcf	6,5	;volatile
  2344  034F  0008               	return
  2345  0350                     __end_ofi1_set_lcd_e:	
  2346                           
  2347                           	psect	text18
  2348  0379                     __ptext18:	
  2349 ;; *************** function i1_set_lcd_data *****************
  2350 ;; Defined at:
  2351 ;;		line 380 in file "lcd.c"
  2352 ;; Parameters:    Size  Location     Type
  2353 ;;  uc_data         1    wreg     unsigned char 
  2354 ;; Auto vars:     Size  Location     Type
  2355 ;;  uc_data         1    0[COMMON] unsigned char 
  2356 ;; Return value:  Size  Location     Type
  2357 ;;                  1    wreg      void 
  2358 ;; Registers used:
  2359 ;;		wreg
  2360 ;; Tracked objects:
  2361 ;;		On entry : 0/0
  2362 ;;		On exit  : 0/0
  2363 ;;		Unchanged: 0/0
  2364 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2365 ;;      Params:         0       0       0       0       0
  2366 ;;      Locals:         1       0       0       0       0
  2367 ;;      Temps:          0       0       0       0       0
  2368 ;;      Totals:         1       0       0       0       0
  2369 ;;Total ram usage:        1 bytes
  2370 ;; Hardware stack levels used:    1
  2371 ;; This function calls:
  2372 ;;		Nothing
  2373 ;; This function is called by:
  2374 ;;		i1_send_lcd_data
  2375 ;; This function uses a non-reentrant model
  2376 ;;
  2377                           
  2378                           
  2379                           ;psect for function i1_set_lcd_data
  2380  0379                     i1_set_lcd_data:	
  2381                           
  2382                           ;incstack = 0
  2383                           ; Regs used in i1_set_lcd_data: [wreg]
  2384                           ;i1set_lcd_data@uc_data stored from wreg
  2385  0379  00F0               	movwf	i1set_lcd_data@uc_data
  2386                           
  2387                           ;lcd.c: 382: PORTD = uc_data;
  2388  037A  0870               	movf	i1set_lcd_data@uc_data,w
  2389  037B  1283               	bcf	3,5	;RP0=0, select bank0
  2390  037C  1303               	bcf	3,6	;RP1=0, select bank0
  2391  037D  0088               	movwf	8	;volatile
  2392  037E  0008               	return
  2393  037F                     __end_ofi1_set_lcd_data:	
  2394                           
  2395                           	psect	text19
  2396  02BF                     __ptext19:	
  2397 ;; *************** function ___lwmod *****************
  2398 ;; Defined at:
  2399 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2400 ;; Parameters:    Size  Location     Type
  2401 ;;  divisor         2    0[COMMON] unsigned int 
  2402 ;;  dividend        2    2[COMMON] unsigned int 
  2403 ;; Auto vars:     Size  Location     Type
  2404 ;;  counter         1    5[COMMON] unsigned char 
  2405 ;; Return value:  Size  Location     Type
  2406 ;;                  2    0[COMMON] unsigned int 
  2407 ;; Registers used:
  2408 ;;		wreg, status,2, status,0
  2409 ;; Tracked objects:
  2410 ;;		On entry : 0/0
  2411 ;;		On exit  : 0/0
  2412 ;;		Unchanged: 0/0
  2413 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2414 ;;      Params:         4       0       0       0       0
  2415 ;;      Locals:         1       0       0       0       0
  2416 ;;      Temps:          1       0       0       0       0
  2417 ;;      Totals:         6       0       0       0       0
  2418 ;;Total ram usage:        6 bytes
  2419 ;; Hardware stack levels used:    1
  2420 ;; This function calls:
  2421 ;;		Nothing
  2422 ;; This function is called by:
  2423 ;;		_lcd_bcd
  2424 ;; This function uses a non-reentrant model
  2425 ;;
  2426                           
  2427                           
  2428                           ;psect for function ___lwmod
  2429  02BF                     ___lwmod:	
  2430                           
  2431                           ;incstack = 0
  2432                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2433  02BF  0870               	movf	___lwmod@divisor,w
  2434  02C0  0471               	iorwf	___lwmod@divisor+1,w
  2435  02C1  1903               	btfsc	3,2
  2436  02C2  2AEC               	goto	i1l973
  2437  02C3  01F5               	clrf	___lwmod@counter
  2438  02C4  0AF5               	incf	___lwmod@counter,f
  2439  02C5                     i1l963:	
  2440  02C5  1BF1               	btfsc	___lwmod@divisor+1,7
  2441  02C6  2AD3               	goto	i1l965
  2442  02C7  3001               	movlw	1
  2443  02C8                     u50_25:	
  2444  02C8  1003               	clrc
  2445  02C9  0DF0               	rlf	___lwmod@divisor,f
  2446  02CA  0DF1               	rlf	___lwmod@divisor+1,f
  2447  02CB  3EFF               	addlw	-1
  2448  02CC  1D03               	skipz
  2449  02CD  2AC8               	goto	u50_25
  2450  02CE  3001               	movlw	1
  2451  02CF  00F4               	movwf	??___lwmod
  2452  02D0  0874               	movf	??___lwmod,w
  2453  02D1  07F5               	addwf	___lwmod@counter,f
  2454  02D2  2AC5               	goto	i1l963
  2455  02D3                     i1l965:	
  2456  02D3  0871               	movf	___lwmod@divisor+1,w
  2457  02D4  0273               	subwf	___lwmod@dividend+1,w
  2458  02D5  1D03               	skipz
  2459  02D6  2AD9               	goto	u52_25
  2460  02D7  0870               	movf	___lwmod@divisor,w
  2461  02D8  0272               	subwf	___lwmod@dividend,w
  2462  02D9                     u52_25:	
  2463  02D9  1C03               	skipc
  2464  02DA  2AE1               	goto	i1l969
  2465  02DB  0870               	movf	___lwmod@divisor,w
  2466  02DC  02F2               	subwf	___lwmod@dividend,f
  2467  02DD  0871               	movf	___lwmod@divisor+1,w
  2468  02DE  1C03               	skipc
  2469  02DF  03F3               	decf	___lwmod@dividend+1,f
  2470  02E0  02F3               	subwf	___lwmod@dividend+1,f
  2471  02E1                     i1l969:	
  2472  02E1  3001               	movlw	1
  2473  02E2                     u53_25:	
  2474  02E2  1003               	clrc
  2475  02E3  0CF1               	rrf	___lwmod@divisor+1,f
  2476  02E4  0CF0               	rrf	___lwmod@divisor,f
  2477  02E5  3EFF               	addlw	-1
  2478  02E6  1D03               	skipz
  2479  02E7  2AE2               	goto	u53_25
  2480  02E8  3001               	movlw	1
  2481  02E9  02F5               	subwf	___lwmod@counter,f
  2482  02EA  1D03               	btfss	3,2
  2483  02EB  2AD3               	goto	i1l965
  2484  02EC                     i1l973:	
  2485  02EC  0873               	movf	___lwmod@dividend+1,w
  2486  02ED  00F1               	movwf	?___lwmod+1
  2487  02EE  0872               	movf	___lwmod@dividend,w
  2488  02EF  00F0               	movwf	?___lwmod
  2489  02F0  0008               	return
  2490  02F1                     __end_of___lwmod:	
  2491                           
  2492                           	psect	text20
  2493  01A5                     __ptext20:	
  2494 ;; *************** function ___lwdiv *****************
  2495 ;; Defined at:
  2496 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2497 ;; Parameters:    Size  Location     Type
  2498 ;;  divisor         2    0[COMMON] unsigned int 
  2499 ;;  dividend        2    2[COMMON] unsigned int 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  quotient        2    5[COMMON] unsigned int 
  2502 ;;  counter         1    7[COMMON] unsigned char 
  2503 ;; Return value:  Size  Location     Type
  2504 ;;                  2    0[COMMON] unsigned int 
  2505 ;; Registers used:
  2506 ;;		wreg, status,2, status,0
  2507 ;; Tracked objects:
  2508 ;;		On entry : 0/0
  2509 ;;		On exit  : 0/0
  2510 ;;		Unchanged: 0/0
  2511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2512 ;;      Params:         4       0       0       0       0
  2513 ;;      Locals:         3       0       0       0       0
  2514 ;;      Temps:          1       0       0       0       0
  2515 ;;      Totals:         8       0       0       0       0
  2516 ;;Total ram usage:        8 bytes
  2517 ;; Hardware stack levels used:    1
  2518 ;; This function calls:
  2519 ;;		Nothing
  2520 ;; This function is called by:
  2521 ;;		_lcd_bcd
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function ___lwdiv
  2527  01A5                     ___lwdiv:	
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2531  01A5  01F5               	clrf	___lwdiv@quotient
  2532  01A6  01F6               	clrf	___lwdiv@quotient+1
  2533  01A7  0870               	movf	___lwdiv@divisor,w
  2534  01A8  0471               	iorwf	___lwdiv@divisor+1,w
  2535  01A9  1903               	btfsc	3,2
  2536  01AA  29DC               	goto	i1l951
  2537  01AB  01F7               	clrf	___lwdiv@counter
  2538  01AC  0AF7               	incf	___lwdiv@counter,f
  2539  01AD                     i1l939:	
  2540  01AD  1BF1               	btfsc	___lwdiv@divisor+1,7
  2541  01AE  29BB               	goto	i1l941
  2542  01AF  3001               	movlw	1
  2543  01B0                     u43_25:	
  2544  01B0  1003               	clrc
  2545  01B1  0DF0               	rlf	___lwdiv@divisor,f
  2546  01B2  0DF1               	rlf	___lwdiv@divisor+1,f
  2547  01B3  3EFF               	addlw	-1
  2548  01B4  1D03               	skipz
  2549  01B5  29B0               	goto	u43_25
  2550  01B6  3001               	movlw	1
  2551  01B7  00F4               	movwf	??___lwdiv
  2552  01B8  0874               	movf	??___lwdiv,w
  2553  01B9  07F7               	addwf	___lwdiv@counter,f
  2554  01BA  29AD               	goto	i1l939
  2555  01BB                     i1l941:	
  2556  01BB  3001               	movlw	1
  2557  01BC                     u45_25:	
  2558  01BC  1003               	clrc
  2559  01BD  0DF5               	rlf	___lwdiv@quotient,f
  2560  01BE  0DF6               	rlf	___lwdiv@quotient+1,f
  2561  01BF  3EFF               	addlw	-1
  2562  01C0  1D03               	skipz
  2563  01C1  29BC               	goto	u45_25
  2564  01C2  0871               	movf	___lwdiv@divisor+1,w
  2565  01C3  0273               	subwf	___lwdiv@dividend+1,w
  2566  01C4  1D03               	skipz
  2567  01C5  29C8               	goto	u46_25
  2568  01C6  0870               	movf	___lwdiv@divisor,w
  2569  01C7  0272               	subwf	___lwdiv@dividend,w
  2570  01C8                     u46_25:	
  2571  01C8  1C03               	skipc
  2572  01C9  29D1               	goto	i1l947
  2573  01CA  0870               	movf	___lwdiv@divisor,w
  2574  01CB  02F2               	subwf	___lwdiv@dividend,f
  2575  01CC  0871               	movf	___lwdiv@divisor+1,w
  2576  01CD  1C03               	skipc
  2577  01CE  03F3               	decf	___lwdiv@dividend+1,f
  2578  01CF  02F3               	subwf	___lwdiv@dividend+1,f
  2579  01D0  1475               	bsf	___lwdiv@quotient,0
  2580  01D1                     i1l947:	
  2581  01D1  3001               	movlw	1
  2582  01D2                     u47_25:	
  2583  01D2  1003               	clrc
  2584  01D3  0CF1               	rrf	___lwdiv@divisor+1,f
  2585  01D4  0CF0               	rrf	___lwdiv@divisor,f
  2586  01D5  3EFF               	addlw	-1
  2587  01D6  1D03               	skipz
  2588  01D7  29D2               	goto	u47_25
  2589  01D8  3001               	movlw	1
  2590  01D9  02F7               	subwf	___lwdiv@counter,f
  2591  01DA  1D03               	btfss	3,2
  2592  01DB  29BB               	goto	i1l941
  2593  01DC                     i1l951:	
  2594  01DC  0876               	movf	___lwdiv@quotient+1,w
  2595  01DD  00F1               	movwf	?___lwdiv+1
  2596  01DE  0875               	movf	___lwdiv@quotient,w
  2597  01DF  00F0               	movwf	?___lwdiv
  2598  01E0  0008               	return
  2599  01E1                     __end_of___lwdiv:	
  2600  007E                     btemp	set	126	;btemp
  2601  007E                     wtemp0	set	126


Data Sizes:
    Strings     15
    Constant    0
    Data        4
    BSS         12
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     14      14
    BANK0            80     25      41
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 15
		 -> STR_1(CODE[15]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->_lcd_bcd
    i1_lcd_clear->i1_send_lcd_data
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->i1_send_lcd_data
    _lcd_goto->i1_send_lcd_data
    _lcd_bcd->___lwdiv
    _lcd_putchar->i1_send_lcd_data
    i1_send_lcd_data->i1_set_lcd_data
    i1_send_lcd_data->i1_set_lcd_e
    i1_send_lcd_data->i1_set_lcd_rs

Critical Paths under _main in BANK0

    _main->_lcd_initialize
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in BANK0

    _isr->_lcd_bcd

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     934
                                             22 BANK0      3     3      0
                            _InitApp
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0     934
                                             20 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     456
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     456
                                             16 BANK0      4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                             15 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0    2939
                                             11 BANK0      4     4      0
                            _lcd_bcd
                           _lcd_goto
                         _lcd_putstr
                        i1_lcd_clear
 ---------------------------------------------------------------------------------
 (6) i1_lcd_clear                                          0     0      0     214
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (6) _lcd_putstr                                           2     2      0     566
                                              7 COMMON     2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (7) _lcd_2ndline                                          1     1      0     214
                                              5 COMMON     1     1      0
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (6) _lcd_goto                                             2     2      0     236
                                              5 COMMON     2     2      0
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (6) _lcd_bcd                                             17    15      2    1923
                                              8 COMMON     6     4      2
                                              0 BANK0     11    11      0
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (7) _lcd_putchar                                          2     2      0     236
                                              5 COMMON     2     2      0
                    i1_send_lcd_data
 ---------------------------------------------------------------------------------
 (7) i1_send_lcd_data                                      4     3      1     214
                                              1 COMMON     4     3      1
                     i1_set_lcd_data
                        i1_set_lcd_e
                       i1_set_lcd_rs
 ---------------------------------------------------------------------------------
 (8) i1_set_lcd_rs                                         1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_set_lcd_e                                          1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) i1_set_lcd_data                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (7) ___lwmod                                              6     2      4     583
                                              0 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___lwdiv                                              8     4      4     586
                                              0 COMMON     8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e

 _isr (ROOT)
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       i1_send_lcd_data
         i1_set_lcd_data
         i1_set_lcd_e
         i1_set_lcd_rs
   _lcd_goto
     i1_send_lcd_data
       i1_set_lcd_data
       i1_set_lcd_e
       i1_set_lcd_rs
   _lcd_putstr
     _lcd_2ndline
       i1_send_lcd_data
         i1_set_lcd_data
         i1_set_lcd_e
         i1_set_lcd_rs
     _lcd_putchar
       i1_send_lcd_data
         i1_set_lcd_data
         i1_set_lcd_e
         i1_set_lcd_rs
   i1_lcd_clear
     i1_send_lcd_data
       i1_set_lcd_data
       i1_set_lcd_e
       i1_set_lcd_rs

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     19      29       5       51.3%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      E       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      37      12        0.0%
ABS                  0      0      37       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Sun May 06 02:05:29 2018

                       pc 0002              ?_lcd_putchar 0070               __CFG_CP$OFF 0000  
                      l74 0205                        fsr 0004          ?i1_send_lcd_data 0071  
                     _GIE 005F                       _RB4 0034                       _RB5 0035  
                     _RB6 0036                       _RB7 0037                       u340 032B  
                     u360 031E              __CFG_CPD$OFF 0000                       u667 0215  
                     u677 0228                       u687 0185                       u697 0196  
                     _add 0043    i1send_lcd_data@uc_data 0071                       _isr 0109  
                     fsr0 0004                       indf 0000              __CFG_FOSC$HS 0000  
       set_lcd_e@b_output 002F              __CFG_LVP$OFF 0000                      _ADFM 04FF  
                    ?_isr 0070                      _ADON 00F8                      _CHS0 00FB  
                    _CHS1 00FC                      _CHS2 00FD                      STR_1 0306  
                    _PEIE 005E                      _INTE 005C                      _INTF 0059  
                    i1l33 015B                      _TMR0 0001              __CFG_WRT$OFF 0000  
                    _main 01E1                      _time 0047                      btemp 007E  
           __CFG_BOREN$ON 0000           ?i1_set_lcd_data 0070                      start 0012  
             i1_lcd_clear 036C           __end_of_InitApp 0384                     ??_isr 002B  
                   _ADCS0 00FE                     _ADCS1 00FF                     ?_main 0070  
           __CFG_WDTE$OFF 0000                     _PCFG0 04F8                     _PCFG1 04F9  
                   _PCFG2 04FA                     _PCFG3 04FB           __end_of___lwdiv 01E1  
         __end_of___lwmod 02F1                     i1l941 01BB                     i1l951 01DC  
                   i1l947 01D1                     i1l939 01AD                     i1l963 02C5  
                   i1l965 02D3                     i1l973 02EC                     i1l969 02E1  
                   u40_20 0341                     u50_25 02C8                     _PORTA 0005  
                   _PORTB 0006                     _PORTC 0007                     _PORTD 0008  
                   u43_25 01B0                     u52_25 02D9                     u45_25 01BC  
                   u53_25 02E2                     u38_20 034C                     u46_25 01C8  
                   u70_27 02A1                     u55_20 0046                     u47_25 01D2  
                   u71_27 02AF                     _TRISA 0085                     _TRISB 0086  
                   _TRISC 0087                     _TRISD 0088      send_lcd_data@uc_data 0030  
           __CFG_PWRTE$ON 0000           __end_of_lcd_bcd 0109                     _time2 0045  
                   pclath 000A               i1_set_lcd_e 0345                     status 0003  
                   wtemp0 007E           __initialization 0015         send_lcd_data@b_rs 0033  
            __end_of_main 021C      __size_of_lcd_2ndline 0009     __end_of_send_lcd_data 01A5  
                  ??_main 0036     i1set_lcd_data@uc_data 0070                    _ADRESH 001E  
                  _ADRESL 009E                    i1l1001 00F3                    i1l1021 0285  
                  i1l1023 0255                    i1l1017 0273                    i1l1019 0279  
                  i1l1061 0142                    i1l1055 0139     __size_ofi1_set_lcd_rs 000B  
                  _TMR0IE 005D                    _TMR0IF 005A                 ??_InitApp 002F  
        __end_of_lcd_goto 033A                 ??___lwdiv 0074                 ??___lwmod 0074  
               ??_lcd_bcd 007A      __size_of_lcd_putchar 000A                    saved_w 007E  
            i1_set_lcd_rs 033A          ??_lcd_initialize 0034   __end_of__initialization 0037  
          __pcstackCOMMON 0070              __pidataBANK0 037F      i1set_lcd_rs@b_output 0070  
      __size_of_lcd_clear 0009          ??i1_set_lcd_data 0070                __pbssBANK0 0039  
            ?i1_lcd_clear 0070                __pmaintext 01E1                __pintentry 0004  
      __size_of_set_lcd_e 000D  __size_ofi1_send_lcd_data 0035                _lcd_putstr 0254  
               ?_lcd_goto 0070                __stringtab 0300              ?i1_set_lcd_e 0070  
           ?_set_lcd_data 0070                   _InitApp 0383       i1set_lcd_e@b_output 0070  
       __end_of_lcd_clear 0363                   ___lwdiv 01A5                   ___lwmod 02BF  
                 __ptext1 021C                   __ptext2 035A                   __ptext3 0168  
                 __ptext4 0315                   __ptext5 0322                   __ptext6 0373  
                 __ptext7 0383                   __ptext8 0109                   __ptext9 036C  
                 _lcd_bcd 003B              __size_of_isr 005F                ??_lcd_goto 0075  
    end_of_initialization 0037         lcd_bcd@ui_decimal 0020            ??_set_lcd_data 002F  
       __end_of_set_lcd_e 032F                _set_lcd_rs 0315             ??_lcd_2ndline 0075  
     i1send_lcd_data@b_rs 0074               ?_lcd_putstr 0070    __size_of_send_lcd_data 003D  
       ??i1_send_lcd_data 0072      __size_ofi1_lcd_clear 0007             ??_lcd_putchar 0075  
       lcd_putchar@c_data 0076       __end_of_lcd_2ndline 036C       start_initialization 0015  
      set_lcd_rs@b_output 002F               __end_of_isr 0168      lcd_putstr@csz_string 0078  
     lcd_goto@uc_position 0076      __size_ofi1_set_lcd_e 000B               ?_set_lcd_rs 0070  
             __pdataBANK0 0045       __size_of_lcd_putstr 0036             _send_lcd_data 0168  
    __end_of_set_lcd_data 0379       __end_of_lcd_putchar 035A                 ___latbits 0002  
           __pcstackBANK0 0020         __size_of_lcd_goto 000B                  ?_InitApp 0070  
 __size_of_lcd_initialize 0038          ___lwdiv@dividend 0072               _lcd_2ndline 0363  
                ?___lwdiv 0070                  ?___lwmod 0070                 _lcd_clear 035A  
          ?_send_lcd_data 0030                 __pstrings 0300                  ?_lcd_bcd 0078  
     __size_of_set_lcd_rs 000D          ___lwdiv@quotient 0075       set_lcd_data@uc_data 002F  
       interrupt_function 0004                 _set_lcd_e 0322   __size_ofi1_set_lcd_data 0006  
                _GO_nDONE 00FA          lcd_bcd@ui_number 0078               _lcd_putchar 0350  
              ?_lcd_clear 0070               __stringbase 0305             ?i1_set_lcd_rs 0070  
         i1_send_lcd_data 028A              ??_lcd_putstr 0077          __size_of_InitApp 0001  
              ?_set_lcd_e 0070     __size_of_set_lcd_data 0006           ??_send_lcd_data 0031  
        __size_of___lwdiv 003C        __end_of_lcd_putstr 028A          __size_of___lwmod 0032  
      __end_of__stringtab 0306          __size_of_lcd_bcd 00CE            ??i1_set_lcd_rs 0070  
         ___lwdiv@divisor 0070           ___lwdiv@counter 0077                  __ptext10 0254  
                __ptext11 0363                  __ptext20 01A5                  __ptext12 032F  
                __ptext13 003B                  __ptext14 0350                  __ptext15 028A  
                __ptext16 033A                  __ptext17 0345                  __ptext18 0379  
                __ptext19 02BF                  _lcd_goto 032F             __size_of_main 003B  
         lcd_bcd@uc_digit 002A              _set_lcd_data 0373            _lcd_initialize 021C  
           ??i1_lcd_clear 0075              ??_set_lcd_rs 002F               ??_lcd_clear 0034  
 __end_ofi1_send_lcd_data 02BF        __end_of_set_lcd_rs 0322                  intlevel1 0000  
           ??i1_set_lcd_e 0070          ___lwmod@dividend 0072    __end_of_lcd_initialize 0254  
               stringcode 0300            i1_set_lcd_data 0379               ??_set_lcd_e 002F  
            ?_lcd_2ndline 0070       __end_ofi1_lcd_clear 0373                _OPTION_REG 0081  
            lcd_bcd@F1135 0039           ___lwmod@divisor 0070           ___lwmod@counter 0075  
                stringdir 0300                  stringtab 0300           ?_lcd_initialize 0070  
  __end_ofi1_set_lcd_data 037F      __end_ofi1_set_lcd_rs 0345       __end_ofi1_set_lcd_e 0350  
