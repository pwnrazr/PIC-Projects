

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Thu Dec 28 18:51:17 2017

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2,group=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2,group=2
    24                           	psect	text15,local,class=CODE,merge=1,delta=2
    25                           	psect	text16,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  000E                     	;# 
   379  000F                     	;# 
   380  0010                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001D                     	;# 
   396  001E                     	;# 
   397  001F                     	;# 
   398  0081                     	;# 
   399  0085                     	;# 
   400  0086                     	;# 
   401  0087                     	;# 
   402  0088                     	;# 
   403  0089                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  008E                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0094                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009C                     	;# 
   414  009D                     	;# 
   415  009E                     	;# 
   416  009F                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  010F                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  0008                     _PORTD	set	8
   424  0007                     _PORTC	set	7
   425  0006                     _PORTB	set	6
   426  0005                     _PORTA	set	5
   427  0034                     _RB4	set	52
   428  0035                     _RB5	set	53
   429  0037                     _RB7	set	55
   430  0036                     _RB6	set	54
   431  0031                     _RB1	set	49
   432  0030                     _RB0	set	48
   433  0088                     _TRISD	set	136
   434  0087                     _TRISC	set	135
   435  0086                     _TRISB	set	134
   436  0085                     _TRISA	set	133
   437                           
   438                           	psect	strings
   439  027E                     __pstrings:	
   440  027E                     stringtab:	
   441  027E                     __stringtab:	
   442  027E                     stringcode:	
   443                           ;	String table - string pointers are 1 byte each
   444                           
   445  027E                     stringdir:	
   446  027E  3002               	movlw	high stringdir
   447  027F  008A               	movwf	10
   448  0280  0804               	movf	4,w
   449  0281  0A84               	incf	4,f
   450  0282  0782               	addwf	2,f
   451  0283                     __stringbase:	
   452  0283  3400               	retlw	0
   453  0284                     __end_of__stringtab:	
   454  0284                     STR_1:	
   455  0284  3442               	retlw	66	;'B'
   456  0285  346F               	retlw	111	;'o'
   457  0286  346F               	retlw	111	;'o'
   458  0287  3474               	retlw	116	;'t'
   459  0288  3469               	retlw	105	;'i'
   460  0289  346E               	retlw	110	;'n'
   461  028A  3467               	retlw	103	;'g'
   462  028B  342E               	retlw	46	;'.'
   463  028C  342E               	retlw	46	;'.'
   464  028D  342E               	retlw	46	;'.'
   465  028E  3400               	retlw	0
   466  028F                     STR_5:	
   467  028F  344C               	retlw	76	;'L'
   468  0290  3445               	retlw	69	;'E'
   469  0291  3444               	retlw	68	;'D'
   470  0292  3431               	retlw	49	;'1'
   471  0293  343A               	retlw	58	;':'
   472  0294  344F               	retlw	79	;'O'
   473  0295  3446               	retlw	70	;'F'
   474  0296  3446               	retlw	70	;'F'
   475  0297  3400               	retlw	0
   476  0298                     STR_9:	
   477  0298  344C               	retlw	76	;'L'
   478  0299  3445               	retlw	69	;'E'
   479  029A  3444               	retlw	68	;'D'
   480  029B  3432               	retlw	50	;'2'
   481  029C  343A               	retlw	58	;':'
   482  029D  344F               	retlw	79	;'O'
   483  029E  3446               	retlw	70	;'F'
   484  029F  3446               	retlw	70	;'F'
   485  02A0  3400               	retlw	0
   486  02A1                     STR_4:	
   487  02A1  344C               	retlw	76	;'L'
   488  02A2  3445               	retlw	69	;'E'
   489  02A3  3444               	retlw	68	;'D'
   490  02A4  3431               	retlw	49	;'1'
   491  02A5  343A               	retlw	58	;':'
   492  02A6  344F               	retlw	79	;'O'
   493  02A7  344E               	retlw	78	;'N'
   494  02A8  3400               	retlw	0
   495  02A9                     STR_8:	
   496  02A9  344C               	retlw	76	;'L'
   497  02AA  3445               	retlw	69	;'E'
   498  02AB  3444               	retlw	68	;'D'
   499  02AC  3432               	retlw	50	;'2'
   500  02AD  343A               	retlw	58	;':'
   501  02AE  344F               	retlw	79	;'O'
   502  02AF  344E               	retlw	78	;'N'
   503  02B0  3400               	retlw	0
   504  02B1                     STR_2:	
   505  02B1  3443               	retlw	67	;'C'
   506  02B2  346F               	retlw	111	;'o'
   507  02B3  3475               	retlw	117	;'u'
   508  02B4  346E               	retlw	110	;'n'
   509  02B5  3474               	retlw	116	;'t'
   510  02B6  343A               	retlw	58	;':'
   511  02B7  3400               	retlw	0
   512  02B8                     STR_3:	
   513  02B8  3454               	retlw	84	;'T'
   514  02B9  3469               	retlw	105	;'i'
   515  02BA  346D               	retlw	109	;'m'
   516  02BB  3465               	retlw	101	;'e'
   517  02BC  343A               	retlw	58	;':'
   518  02BD  3400               	retlw	0
   519  028F                     
   520                           ; #config settings
   521  0000                     
   522                           	psect	cinit
   523  0015                     start_initialization:	
   524  0015                     __initialization:	
   525                           
   526                           ; Clear objects allocated to BANK0
   527  0015  1283               	bcf	3,5	;RP0=0, select bank0
   528  0016  1303               	bcf	3,6	;RP1=0, select bank0
   529  0017  01C4               	clrf	__pbssBANK0& (0+127)
   530  0018  01C5               	clrf	(__pbssBANK0+1)& (0+127)
   531  0019  01C6               	clrf	(__pbssBANK0+2)& (0+127)
   532  001A  01C7               	clrf	(__pbssBANK0+3)& (0+127)
   533  001B  01C8               	clrf	(__pbssBANK0+4)& (0+127)
   534  001C  01C9               	clrf	(__pbssBANK0+5)& (0+127)
   535  001D  01CA               	clrf	(__pbssBANK0+6)& (0+127)
   536  001E  01CB               	clrf	(__pbssBANK0+7)& (0+127)
   537  001F  01CC               	clrf	(__pbssBANK0+8)& (0+127)
   538  0020  01CD               	clrf	(__pbssBANK0+9)& (0+127)
   539  0021                     end_of_initialization:	
   540                           ;End of C runtime variable initialization code
   541                           
   542  0021                     __end_of__initialization:	
   543  0021  0183               	clrf	3
   544  0022  120A  118A  2825   	ljmp	_main	;jump to C main() function
   545                           
   546                           	psect	bssBANK0
   547  0044                     __pbssBANK0:	
   548  0044                     lcd_bcd@F1134:	
   549  0044                     	ds	10
   550                           
   551                           	psect	cstackCOMMON
   552  0070                     __pcstackCOMMON:	
   553  0070                     ?_InitApp:	
   554  0070                     ?_lcd_initialize:	
   555                           ; 1 bytes @ 0x0
   556                           
   557  0070                     ?_lcd_home:	
   558                           ; 1 bytes @ 0x0
   559                           
   560  0070                     ?_lcd_putstr:	
   561                           ; 1 bytes @ 0x0
   562                           
   563  0070                     ?_lcd_clear:	
   564                           ; 1 bytes @ 0x0
   565                           
   566  0070                     ?_lcd_goto:	
   567                           ; 1 bytes @ 0x0
   568                           
   569  0070                     ?_set_lcd_e:	
   570                           ; 1 bytes @ 0x0
   571                           
   572  0070                     ?_set_lcd_rs:	
   573                           ; 1 bytes @ 0x0
   574                           
   575  0070                     ?_set_lcd_data:	
   576                           ; 1 bytes @ 0x0
   577                           
   578  0070                     ?_isr:	
   579                           ; 1 bytes @ 0x0
   580                           
   581  0070                     ??_isr:	
   582                           ; 1 bytes @ 0x0
   583                           
   584  0070                     ?_main:	
   585                           ; 1 bytes @ 0x0
   586                           
   587  0070                     ?_lcd_2ndline:	
   588                           ; 1 bytes @ 0x0
   589                           
   590  0070                     ?_lcd_putchar:	
   591                           ; 1 bytes @ 0x0
   592                           
   593                           
   594                           ; 1 bytes @ 0x0
   595  0070                     	ds	4
   596  0074                     ??_InitApp:	
   597  0074                     ??_set_lcd_e:	
   598                           ; 1 bytes @ 0x4
   599                           
   600  0074                     ??_set_lcd_rs:	
   601                           ; 1 bytes @ 0x4
   602                           
   603  0074                     ??_set_lcd_data:	
   604                           ; 1 bytes @ 0x4
   605                           
   606  0074                     ?___lwdiv:	
   607                           ; 1 bytes @ 0x4
   608                           
   609  0074                     ?___lwmod:	
   610                           ; 2 bytes @ 0x4
   611                           
   612  0074                     set_lcd_e@b_output:	
   613                           ; 2 bytes @ 0x4
   614                           
   615  0074                     set_lcd_rs@b_output:	
   616                           ; 1 bytes @ 0x4
   617                           
   618  0074                     set_lcd_data@uc_data:	
   619                           ; 1 bytes @ 0x4
   620                           
   621  0074                     ___lwdiv@divisor:	
   622                           ; 1 bytes @ 0x4
   623                           
   624  0074                     ___lwmod@divisor:	
   625                           ; 2 bytes @ 0x4
   626                           
   627                           
   628                           ; 2 bytes @ 0x4
   629  0074                     	ds	1
   630  0075                     ?_send_lcd_data:	
   631  0075                     send_lcd_data@uc_data:	
   632                           ; 1 bytes @ 0x5
   633                           
   634                           
   635                           ; 1 bytes @ 0x5
   636  0075                     	ds	1
   637  0076                     ??_send_lcd_data:	
   638  0076                     ___lwdiv@dividend:	
   639                           ; 1 bytes @ 0x6
   640                           
   641  0076                     ___lwmod@dividend:	
   642                           ; 2 bytes @ 0x6
   643                           
   644                           
   645                           ; 2 bytes @ 0x6
   646  0076                     	ds	2
   647  0078                     ??___lwdiv:	
   648  0078                     ??___lwmod:	
   649                           ; 1 bytes @ 0x8
   650                           
   651  0078                     send_lcd_data@b_rs:	
   652                           ; 1 bytes @ 0x8
   653                           
   654                           
   655                           ; 1 bytes @ 0x8
   656  0078                     	ds	1
   657  0079                     ??_lcd_home:	
   658  0079                     ??_lcd_clear:	
   659                           ; 1 bytes @ 0x9
   660                           
   661  0079                     ??_lcd_goto:	
   662                           ; 1 bytes @ 0x9
   663                           
   664  0079                     ??_lcd_2ndline:	
   665                           ; 1 bytes @ 0x9
   666                           
   667  0079                     ??_lcd_putchar:	
   668                           ; 1 bytes @ 0x9
   669                           
   670  0079                     ___lwmod@counter:	
   671                           ; 1 bytes @ 0x9
   672                           
   673                           
   674                           ; 1 bytes @ 0x9
   675  0079                     	ds	1
   676                           
   677                           	psect	cstackBANK0
   678  0020                     __pcstackBANK0:	
   679  0020                     ??_lcd_initialize:	
   680  0020                     lcd_goto@uc_position:	
   681                           ; 1 bytes @ 0x0
   682                           
   683  0020                     lcd_putchar@c_data:	
   684                           ; 1 bytes @ 0x0
   685                           
   686  0020                     ___lwdiv@quotient:	
   687                           ; 1 bytes @ 0x0
   688                           
   689                           
   690                           ; 2 bytes @ 0x0
   691  0020                     	ds	1
   692  0021                     ??_lcd_putstr:	
   693                           
   694                           ; 1 bytes @ 0x1
   695  0021                     	ds	1
   696  0022                     lcd_putstr@csz_string:	
   697  0022                     ___lwdiv@counter:	
   698                           ; 1 bytes @ 0x2
   699                           
   700                           
   701                           ; 1 bytes @ 0x2
   702  0022                     	ds	1
   703  0023                     ?_lcd_bcd:	
   704  0023                     lcd_bcd@ui_number:	
   705                           ; 1 bytes @ 0x3
   706                           
   707                           
   708                           ; 2 bytes @ 0x3
   709  0023                     	ds	2
   710  0025                     ??_lcd_bcd:	
   711                           
   712                           ; 1 bytes @ 0x5
   713  0025                     	ds	4
   714  0029                     lcd_bcd@ui_decimal:	
   715                           
   716                           ; 10 bytes @ 0x9
   717  0029                     	ds	10
   718  0033                     lcd_bcd@uc_digit:	
   719                           
   720                           ; 1 bytes @ 0x13
   721  0033                     	ds	1
   722  0034                     ??_main:	
   723                           
   724                           ; 1 bytes @ 0x14
   725  0034                     	ds	2
   726  0036                     main@count:	
   727                           
   728                           ; 2 bytes @ 0x16
   729  0036                     	ds	2
   730  0038                     main@time:	
   731                           
   732                           ; 2 bytes @ 0x18
   733  0038                     	ds	2
   734  003A                     main@lastbutton1:	
   735                           
   736                           ; 2 bytes @ 0x1A
   737  003A                     	ds	2
   738  003C                     main@lastbutton2:	
   739                           
   740                           ; 2 bytes @ 0x1C
   741  003C                     	ds	2
   742  003E                     main@button1:	
   743                           
   744                           ; 2 bytes @ 0x1E
   745  003E                     	ds	2
   746  0040                     main@menu:	
   747                           
   748                           ; 2 bytes @ 0x20
   749  0040                     	ds	2
   750  0042                     main@button2:	
   751                           
   752                           ; 2 bytes @ 0x22
   753  0042                     	ds	2
   754                           
   755                           	psect	maintext
   756  0025                     __pmaintext:	
   757 ;;
   758 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   759 ;;
   760 ;; *************** function _main *****************
   761 ;; Defined at:
   762 ;;		line 28 in file "main.c"
   763 ;; Parameters:    Size  Location     Type
   764 ;;		None
   765 ;; Auto vars:     Size  Location     Type
   766 ;;  button2         2   34[BANK0 ] int 
   767 ;;  menu            2   32[BANK0 ] int 
   768 ;;  button1         2   30[BANK0 ] int 
   769 ;;  lastbutton2     2   28[BANK0 ] int 
   770 ;;  lastbutton1     2   26[BANK0 ] int 
   771 ;;  time            2   24[BANK0 ] unsigned int 
   772 ;;  count           2   22[BANK0 ] unsigned int 
   773 ;; Return value:  Size  Location     Type
   774 ;;                  1    wreg      void 
   775 ;; Registers used:
   776 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   777 ;; Tracked objects:
   778 ;;		On entry : B00/0
   779 ;;		On exit  : 0/0
   780 ;;		Unchanged: 0/0
   781 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   782 ;;      Params:         0       0       0       0       0
   783 ;;      Locals:         0      14       0       0       0
   784 ;;      Temps:          0       2       0       0       0
   785 ;;      Totals:         0      16       0       0       0
   786 ;;Total ram usage:       16 bytes
   787 ;; Hardware stack levels required when called:    5
   788 ;; This function calls:
   789 ;;		_InitApp
   790 ;;		_lcd_bcd
   791 ;;		_lcd_clear
   792 ;;		_lcd_goto
   793 ;;		_lcd_home
   794 ;;		_lcd_initialize
   795 ;;		_lcd_putstr
   796 ;; This function is called by:
   797 ;;		Startup code after reset
   798 ;; This function uses a non-reentrant model
   799 ;;
   800                           
   801                           
   802                           ;psect for function _main
   803  0025                     _main:	
   804                           
   805                           ;main.c: 31: PORTA = 0;
   806                           
   807                           ;incstack = 0
   808                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   809  0025  1283               	bcf	3,5	;RP0=0, select bank0
   810  0026  1303               	bcf	3,6	;RP1=0, select bank0
   811  0027  0185               	clrf	5	;volatile
   812                           
   813                           ;main.c: 32: PORTB = 0;
   814  0028  0186               	clrf	6	;volatile
   815                           
   816                           ;main.c: 33: PORTC = 0;
   817  0029  0187               	clrf	7	;volatile
   818                           
   819                           ;main.c: 34: PORTD = 0;
   820  002A  0188               	clrf	8	;volatile
   821                           
   822                           ;main.c: 36: TRISA = 0b00000000;
   823  002B  1683               	bsf	3,5	;RP0=1, select bank1
   824  002C  1303               	bcf	3,6	;RP1=0, select bank1
   825  002D  0185               	clrf	5	;volatile
   826                           
   827                           ;main.c: 37: TRISB = 0b00000011;
   828  002E  3003               	movlw	3
   829  002F  0086               	movwf	6	;volatile
   830                           
   831                           ;main.c: 38: TRISC = 0b00000000;
   832  0030  0187               	clrf	7	;volatile
   833                           
   834                           ;main.c: 39: TRISD = 0b00000000;
   835  0031  0188               	clrf	8	;volatile
   836                           
   837                           ;main.c: 42: InitApp();
   838  0032  120A  118A  2430  120A  118A  	fcall	_InitApp
   839                           
   840                           ;main.c: 44: unsigned int count = 0;
   841  0037  1283               	bcf	3,5	;RP0=0, select bank0
   842  0038  1303               	bcf	3,6	;RP1=0, select bank0
   843  0039  01B6               	clrf	main@count
   844  003A  01B7               	clrf	main@count+1
   845                           
   846                           ;main.c: 45: unsigned int time = 0;
   847  003B  01B8               	clrf	main@time
   848  003C  01B9               	clrf	main@time+1
   849                           
   850                           ;main.c: 46: int menu = 0;
   851  003D  01C0               	clrf	main@menu
   852  003E  01C1               	clrf	main@menu+1
   853                           
   854                           ;main.c: 47: int button1 = 0,lastbutton1 = 1;
   855  003F  01BE               	clrf	main@button1
   856  0040  01BF               	clrf	main@button1+1
   857  0041  3001               	movlw	1
   858  0042  00BA               	movwf	main@lastbutton1
   859  0043  3000               	movlw	0
   860  0044  00BB               	movwf	main@lastbutton1+1
   861                           
   862                           ;main.c: 48: int button2 = 0,lastbutton2 = 1;
   863  0045  01C2               	clrf	main@button2
   864  0046  01C3               	clrf	main@button2+1
   865  0047  3001               	movlw	1
   866  0048  00BC               	movwf	main@lastbutton2
   867  0049  3000               	movlw	0
   868  004A  00BD               	movwf	main@lastbutton2+1
   869                           
   870                           ;main.c: 50: lcd_initialize();
   871  004B  120A  118A  2338  120A  118A  	fcall	_lcd_initialize
   872                           
   873                           ;main.c: 51: lcd_home();
   874  0050  120A  118A  241A  120A  118A  	fcall	_lcd_home
   875                           
   876                           ;main.c: 52: lcd_putstr("Booting...");
   877  0055  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   878  0056  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
   879                           
   880                           ;main.c: 54: lcd_clear();
   881  005B  120A  118A  2423  120A  118A  	fcall	_lcd_clear
   882  0060                     l1056:	
   883                           ;main.c: 58: while(1)
   884                           
   885                           
   886                           ;main.c: 59: {
   887                           ;main.c: 62: count++;
   888  0060  3001               	movlw	1
   889  0061  1283               	bcf	3,5	;RP0=0, select bank0
   890  0062  1303               	bcf	3,6	;RP1=0, select bank0
   891  0063  07B6               	addwf	main@count,f
   892  0064  1803               	skipnc
   893  0065  0AB7               	incf	main@count+1,f
   894  0066  3000               	movlw	0
   895  0067  07B7               	addwf	main@count+1,f
   896                           
   897                           ;main.c: 63: button1 = RB0;
   898  0068  1003               	clrc
   899  0069  1806               	btfsc	6,0	;volatile
   900  006A  1403               	setc
   901  006B  3000               	movlw	0
   902  006C  1803               	skipnc
   903  006D  3001               	movlw	1
   904  006E  00B4               	movwf	??_main
   905  006F  01B5               	clrf	??_main+1
   906  0070  0834               	movf	??_main,w
   907  0071  00BE               	movwf	main@button1
   908  0072  0835               	movf	??_main+1,w
   909  0073  00BF               	movwf	main@button1+1
   910                           
   911                           ;main.c: 64: button2 = RB1;
   912  0074  1003               	clrc
   913  0075  1886               	btfsc	6,1	;volatile
   914  0076  1403               	setc
   915  0077  3000               	movlw	0
   916  0078  1803               	skipnc
   917  0079  3001               	movlw	1
   918  007A  00B4               	movwf	??_main
   919  007B  01B5               	clrf	??_main+1
   920  007C  0834               	movf	??_main,w
   921  007D  00C2               	movwf	main@button2
   922  007E  0835               	movf	??_main+1,w
   923  007F  00C3               	movwf	main@button2+1
   924                           
   925                           ;main.c: 65: if(menu==3)
   926  0080  3003               	movlw	3
   927  0081  0640               	xorwf	main@menu,w
   928  0082  0441               	iorwf	main@menu+1,w
   929  0083  1D03               	btfss	3,2
   930  0084  288E               	goto	l1068
   931                           
   932                           ;main.c: 66: {
   933                           ;main.c: 67: lcd_clear();
   934  0085  120A  118A  2423  120A  118A  	fcall	_lcd_clear
   935                           
   936                           ;main.c: 68: menu=0;
   937  008A  1283               	bcf	3,5	;RP0=0, select bank0
   938  008B  1303               	bcf	3,6	;RP1=0, select bank0
   939  008C  01C0               	clrf	main@menu
   940  008D  01C1               	clrf	main@menu+1
   941  008E                     l1068:	
   942                           
   943                           ;main.c: 69: }
   944                           ;main.c: 71: if(lastbutton1!=button1)
   945  008E  083F               	movf	main@button1+1,w
   946  008F  063B               	xorwf	main@lastbutton1+1,w
   947  0090  1D03               	skipz
   948  0091  2894               	goto	u655
   949  0092  083E               	movf	main@button1,w
   950  0093  063A               	xorwf	main@lastbutton1,w
   951  0094                     u655:	
   952  0094  1903               	skipnz
   953  0095  28A9               	goto	l1076
   954                           
   955                           ;main.c: 72: {
   956                           ;main.c: 73: if(button1==0)
   957  0096  083E               	movf	main@button1,w
   958  0097  043F               	iorwf	main@button1+1,w
   959  0098  1D03               	btfss	3,2
   960  0099  28A9               	goto	l1076
   961                           
   962                           ;main.c: 74: {
   963                           ;main.c: 75: lcd_clear();
   964  009A  120A  118A  2423  120A  118A  	fcall	_lcd_clear
   965                           
   966                           ;main.c: 76: menu = menu + 1;
   967  009F  1283               	bcf	3,5	;RP0=0, select bank0
   968  00A0  1303               	bcf	3,6	;RP1=0, select bank0
   969  00A1  0840               	movf	main@menu,w
   970  00A2  3E01               	addlw	1
   971  00A3  00C0               	movwf	main@menu
   972  00A4  0841               	movf	main@menu+1,w
   973  00A5  1803               	skipnc
   974  00A6  3E01               	addlw	1
   975  00A7  3E00               	addlw	0
   976  00A8  00C1               	movwf	main@menu+1
   977  00A9                     l1076:	
   978                           
   979                           ;main.c: 77: }
   980                           ;main.c: 78: }
   981                           ;main.c: 79: lastbutton1 = button1;
   982  00A9  083F               	movf	main@button1+1,w
   983  00AA  00BB               	movwf	main@lastbutton1+1
   984  00AB  083E               	movf	main@button1,w
   985  00AC  00BA               	movwf	main@lastbutton1
   986                           
   987                           ;main.c: 82: switch(menu)
   988  00AD  2997               	goto	l1148
   989  00AE                     l1078:	
   990                           ;main.c: 83: {
   991                           ;main.c: 84: case 0:
   992                           
   993                           
   994                           ;main.c: 85: lcd_goto(0x0);
   995  00AE  3000               	movlw	0
   996  00AF  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
   997                           
   998                           ;main.c: 86: lcd_putstr("Count:");
   999  00B4  302E               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1000  00B5  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1001                           
  1002                           ;main.c: 87: lcd_goto(0x6);
  1003  00BA  3006               	movlw	6
  1004  00BB  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1005                           
  1006                           ;main.c: 88: lcd_bcd(3,count);
  1007  00C0  1283               	bcf	3,5	;RP0=0, select bank0
  1008  00C1  1303               	bcf	3,6	;RP1=0, select bank0
  1009  00C2  0837               	movf	main@count+1,w
  1010  00C3  00A4               	movwf	lcd_bcd@ui_number+1
  1011  00C4  0836               	movf	main@count,w
  1012  00C5  00A3               	movwf	lcd_bcd@ui_number
  1013  00C6  3003               	movlw	3
  1014  00C7  120A  118A  21B0  120A  118A  	fcall	_lcd_bcd
  1015                           
  1016                           ;main.c: 89: lcd_goto(0x40);
  1017  00CC  3040               	movlw	64
  1018  00CD  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1019                           
  1020                           ;main.c: 90: lcd_putstr("Time:");
  1021  00D2  3035               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1022  00D3  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1023                           
  1024                           ;main.c: 91: lcd_goto(0x45);
  1025  00D8  3045               	movlw	69
  1026  00D9  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1027                           
  1028                           ;main.c: 92: lcd_bcd(5,time);
  1029  00DE  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00DF  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00E0  0839               	movf	main@time+1,w
  1032  00E1  00A4               	movwf	lcd_bcd@ui_number+1
  1033  00E2  0838               	movf	main@time,w
  1034  00E3  00A3               	movwf	lcd_bcd@ui_number
  1035  00E4  3005               	movlw	5
  1036  00E5  120A  118A  21B0  120A  118A  	fcall	_lcd_bcd
  1037                           
  1038                           ;main.c: 93: break;
  1039  00EA  29A7               	goto	l1150
  1040  00EB                     l55:	
  1041                           ;main.c: 94: case 1:
  1042                           
  1043                           
  1044                           ;main.c: 95: if(RB6==1)
  1045  00EB  1F06               	btfss	6,6	;volatile
  1046  00EC  28F5               	goto	l56
  1047                           
  1048                           ;main.c: 96: {
  1049                           ;main.c: 97: lcd_goto(0x0);
  1050  00ED  3000               	movlw	0
  1051  00EE  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1052                           
  1053                           ;main.c: 98: lcd_putstr("LED1:ON");
  1054  00F3  301E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1055  00F4  28FE               	goto	L1
  1056  00F5                     l56:	
  1057                           ;main.c: 99: }
  1058                           
  1059                           
  1060                           ;main.c: 100: else if(RB6==0)
  1061  00F5  1B06               	btfsc	6,6	;volatile
  1062  00F6  2903               	goto	l1098
  1063                           
  1064                           ;main.c: 101: {
  1065                           ;main.c: 102: lcd_goto(0x0);
  1066  00F7  3000               	movlw	0
  1067  00F8  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1068                           
  1069                           ;main.c: 103: lcd_putstr("LED1:OFF");
  1070  00FD  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1071  00FE                     L1:	
  1072  00FE  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1073  0103                     l1098:	
  1074                           
  1075                           ;main.c: 104: }
  1076                           ;main.c: 105: if(lastbutton2!=button2)
  1077  0103  1283               	bcf	3,5	;RP0=0, select bank0
  1078  0104  1303               	bcf	3,6	;RP1=0, select bank0
  1079  0105  0843               	movf	main@button2+1,w
  1080  0106  063D               	xorwf	main@lastbutton2+1,w
  1081  0107  1D03               	skipz
  1082  0108  290B               	goto	u695
  1083  0109  0842               	movf	main@button2,w
  1084  010A  063C               	xorwf	main@lastbutton2,w
  1085  010B                     u695:	
  1086  010B  1903               	skipnz
  1087  010C  2992               	goto	l1144
  1088                           
  1089                           ;main.c: 106: {
  1090                           ;main.c: 107: if(button2==0)
  1091  010D  0842               	movf	main@button2,w
  1092  010E  0443               	iorwf	main@button2+1,w
  1093  010F  1D03               	btfss	3,2
  1094  0110  2992               	goto	l1144
  1095                           
  1096                           ;main.c: 108: {
  1097                           ;main.c: 109: if(RB6==1)
  1098  0111  1F06               	btfss	6,6	;volatile
  1099  0112  2928               	goto	l61
  1100                           
  1101                           ;main.c: 110: {
  1102                           ;main.c: 111: lcd_clear();
  1103  0113  120A  118A  2423  120A  118A  	fcall	_lcd_clear
  1104                           
  1105                           ;main.c: 112: lcd_goto(0x0);
  1106  0118  3000               	movlw	0
  1107  0119  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1108                           
  1109                           ;main.c: 113: lcd_putstr("LED1:OFF");
  1110  011E  300C               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
  1111  011F  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1112                           
  1113                           ;main.c: 114: RB6=0;
  1114  0124  1283               	bcf	3,5	;RP0=0, select bank0
  1115  0125  1303               	bcf	3,6	;RP1=0, select bank0
  1116  0126  1306               	bcf	6,6	;volatile
  1117                           
  1118                           ;main.c: 115: }
  1119  0127  2992               	goto	l1144
  1120  0128                     l61:	
  1121                           
  1122                           ;main.c: 116: else if(RB6==0)
  1123  0128  1B06               	btfsc	6,6	;volatile
  1124  0129  2992               	goto	l1144
  1125                           
  1126                           ;main.c: 117: {
  1127                           ;main.c: 118: lcd_clear();
  1128  012A  120A  118A  2423  120A  118A  	fcall	_lcd_clear
  1129                           
  1130                           ;main.c: 119: lcd_goto(0x0);
  1131  012F  3000               	movlw	0
  1132  0130  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1133                           
  1134                           ;main.c: 120: lcd_putstr("LED1:ON");
  1135  0135  301E               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
  1136  0136  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1137                           
  1138                           ;main.c: 121: RB6=1;
  1139  013B  1283               	bcf	3,5	;RP0=0, select bank0
  1140  013C  1303               	bcf	3,6	;RP1=0, select bank0
  1141  013D  1706               	bsf	6,6	;volatile
  1142  013E  2992               	goto	l1144
  1143  013F                     l64:	
  1144                           ;main.c: 128: case 2:
  1145                           
  1146                           ;main.c: 126: break;
  1147                           
  1148                           ;main.c: 122: }
  1149                           ;main.c: 123: }
  1150                           ;main.c: 124: }
  1151                           ;main.c: 125: lastbutton2 = button2;
  1152                           
  1153                           
  1154                           ;main.c: 129: if(RB7==1)
  1155  013F  1F86               	btfss	6,7	;volatile
  1156  0140  2949               	goto	l65
  1157                           
  1158                           ;main.c: 130: {
  1159                           ;main.c: 131: lcd_goto(0x0);
  1160  0141  3000               	movlw	0
  1161  0142  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1162                           
  1163                           ;main.c: 132: lcd_putstr("LED2:ON");
  1164  0147  3026               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1165  0148  2952               	goto	L2
  1166  0149                     l65:	
  1167                           ;main.c: 133: }
  1168                           
  1169                           
  1170                           ;main.c: 134: else if(RB7==0)
  1171  0149  1B86               	btfsc	6,7	;volatile
  1172  014A  2957               	goto	l1126
  1173                           
  1174                           ;main.c: 135: {
  1175                           ;main.c: 136: lcd_goto(0x0);
  1176  014B  3000               	movlw	0
  1177  014C  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1178                           
  1179                           ;main.c: 137: lcd_putstr("LED2:OFF");
  1180  0151  3015               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1181  0152                     L2:	
  1182  0152  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1183  0157                     l1126:	
  1184                           
  1185                           ;main.c: 138: }
  1186                           ;main.c: 139: if(lastbutton2!=button2)
  1187  0157  1283               	bcf	3,5	;RP0=0, select bank0
  1188  0158  1303               	bcf	3,6	;RP1=0, select bank0
  1189  0159  0843               	movf	main@button2+1,w
  1190  015A  063D               	xorwf	main@lastbutton2+1,w
  1191  015B  1D03               	skipz
  1192  015C  295F               	goto	u755
  1193  015D  0842               	movf	main@button2,w
  1194  015E  063C               	xorwf	main@lastbutton2,w
  1195  015F                     u755:	
  1196  015F  1903               	skipnz
  1197  0160  2992               	goto	l1144
  1198                           
  1199                           ;main.c: 140: {
  1200                           ;main.c: 141: if(button2==0)
  1201  0161  0842               	movf	main@button2,w
  1202  0162  0443               	iorwf	main@button2+1,w
  1203  0163  1D03               	btfss	3,2
  1204  0164  2992               	goto	l1144
  1205                           
  1206                           ;main.c: 142: {
  1207                           ;main.c: 143: if(RB7==1)
  1208  0165  1F86               	btfss	6,7	;volatile
  1209  0166  297C               	goto	l70
  1210                           
  1211                           ;main.c: 144: {
  1212                           ;main.c: 145: lcd_clear();
  1213  0167  120A  118A  2423  120A  118A  	fcall	_lcd_clear
  1214                           
  1215                           ;main.c: 146: lcd_goto(0x0);
  1216  016C  3000               	movlw	0
  1217  016D  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1218                           
  1219                           ;main.c: 147: lcd_putstr("LED2:OFF");
  1220  0172  3015               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1221  0173  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1222                           
  1223                           ;main.c: 148: RB7=0;
  1224  0178  1283               	bcf	3,5	;RP0=0, select bank0
  1225  0179  1303               	bcf	3,6	;RP1=0, select bank0
  1226  017A  1386               	bcf	6,7	;volatile
  1227                           
  1228                           ;main.c: 149: }
  1229  017B  2992               	goto	l1144
  1230  017C                     l70:	
  1231                           
  1232                           ;main.c: 150: else if(RB7==0)
  1233  017C  1B86               	btfsc	6,7	;volatile
  1234  017D  2992               	goto	l1144
  1235                           
  1236                           ;main.c: 151: {
  1237                           ;main.c: 152: lcd_clear();
  1238  017E  120A  118A  2423  120A  118A  	fcall	_lcd_clear
  1239                           
  1240                           ;main.c: 153: lcd_goto(0x0);
  1241  0183  3000               	movlw	0
  1242  0184  120A  118A  23D7  120A  118A  	fcall	_lcd_goto
  1243                           
  1244                           ;main.c: 154: lcd_putstr("LED2:ON");
  1245  0189  3026               	movlw	(low ((STR_8-__stringbase)| (0+32768)))& (0+255)
  1246  018A  120A  118A  22FC  120A  118A  	fcall	_lcd_putstr
  1247                           
  1248                           ;main.c: 155: RB7=1;
  1249  018F  1283               	bcf	3,5	;RP0=0, select bank0
  1250  0190  1303               	bcf	3,6	;RP1=0, select bank0
  1251  0191  1786               	bsf	6,7	;volatile
  1252  0192                     l1144:	
  1253                           
  1254                           ;main.c: 156: }
  1255                           ;main.c: 157: }
  1256                           ;main.c: 158: }
  1257                           ;main.c: 159: lastbutton2 = button2;
  1258  0192  0843               	movf	main@button2+1,w
  1259  0193  00BD               	movwf	main@lastbutton2+1
  1260  0194  0842               	movf	main@button2,w
  1261  0195  00BC               	movwf	main@lastbutton2
  1262                           
  1263                           ;main.c: 161: }
  1264                           
  1265                           ;main.c: 160: break;
  1266  0196  29A7               	goto	l1150
  1267  0197                     l1148:	
  1268                           
  1269                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1270                           ; Switch size 1, requested type "space"
  1271                           ; Number of cases is 1, Range of values is 0 to 0
  1272                           ; switch strategies available:
  1273                           ; Name         Instructions Cycles
  1274                           ; simple_byte            4     3 (average)
  1275                           ; direct_byte           11     8 (fixed)
  1276                           ; jumptable            260     6 (fixed)
  1277                           ;	Chosen strategy is simple_byte
  1278  0197  0841               	movf	main@menu+1,w
  1279  0198  3A00               	xorlw	0	; case 0
  1280  0199  1903               	skipnz
  1281  019A  299C               	goto	l1188
  1282  019B  29A7               	goto	l1150
  1283  019C                     l1188:	
  1284                           
  1285                           ; Switch size 1, requested type "space"
  1286                           ; Number of cases is 3, Range of values is 0 to 2
  1287                           ; switch strategies available:
  1288                           ; Name         Instructions Cycles
  1289                           ; simple_byte           10     6 (average)
  1290                           ; direct_byte           17     8 (fixed)
  1291                           ; jumptable            260     6 (fixed)
  1292                           ;	Chosen strategy is simple_byte
  1293  019C  0840               	movf	main@menu,w
  1294  019D  3A00               	xorlw	0	; case 0
  1295  019E  1903               	skipnz
  1296  019F  28AE               	goto	l1078
  1297  01A0  3A01               	xorlw	1	; case 1
  1298  01A1  1903               	skipnz
  1299  01A2  28EB               	goto	l55
  1300  01A3  3A03               	xorlw	3	; case 2
  1301  01A4  1903               	skipnz
  1302  01A5  293F               	goto	l64
  1303  01A6  29A7               	goto	l1150
  1304  01A7                     l1150:	
  1305                           
  1306                           ;main.c: 163: time++;
  1307  01A7  3001               	movlw	1
  1308  01A8  1283               	bcf	3,5	;RP0=0, select bank0
  1309  01A9  1303               	bcf	3,6	;RP1=0, select bank0
  1310  01AA  07B8               	addwf	main@time,f
  1311  01AB  1803               	skipnc
  1312  01AC  0AB9               	incf	main@time+1,f
  1313  01AD  3000               	movlw	0
  1314  01AE  07B9               	addwf	main@time+1,f
  1315  01AF  2860               	goto	l1056
  1316  01B0                     __end_of_main:	
  1317                           
  1318                           	psect	text1
  1319  02FC                     __ptext1:	
  1320 ;; *************** function _lcd_putstr *****************
  1321 ;; Defined at:
  1322 ;;		line 241 in file "lcd.c"
  1323 ;; Parameters:    Size  Location     Type
  1324 ;;  csz_string      1    wreg     PTR const unsigned char 
  1325 ;;		 -> STR_11(8), STR_10(9), STR_9(9), STR_8(8), 
  1326 ;;		 -> STR_7(8), STR_6(9), STR_5(9), STR_4(8), 
  1327 ;;		 -> STR_3(6), STR_2(7), STR_1(11), 
  1328 ;; Auto vars:     Size  Location     Type
  1329 ;;  csz_string      1    2[BANK0 ] PTR const unsigned char 
  1330 ;;		 -> STR_11(8), STR_10(9), STR_9(9), STR_8(8), 
  1331 ;;		 -> STR_7(8), STR_6(9), STR_5(9), STR_4(8), 
  1332 ;;		 -> STR_3(6), STR_2(7), STR_1(11), 
  1333 ;; Return value:  Size  Location     Type
  1334 ;;                  1    wreg      void 
  1335 ;; Registers used:
  1336 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1337 ;; Tracked objects:
  1338 ;;		On entry : 0/0
  1339 ;;		On exit  : 0/0
  1340 ;;		Unchanged: 0/0
  1341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1342 ;;      Params:         0       0       0       0       0
  1343 ;;      Locals:         0       1       0       0       0
  1344 ;;      Temps:          0       1       0       0       0
  1345 ;;      Totals:         0       2       0       0       0
  1346 ;;Total ram usage:        2 bytes
  1347 ;; Hardware stack levels used:    1
  1348 ;; Hardware stack levels required when called:    4
  1349 ;; This function calls:
  1350 ;;		_lcd_2ndline
  1351 ;;		_lcd_putchar
  1352 ;; This function is called by:
  1353 ;;		_main
  1354 ;; This function uses a non-reentrant model
  1355 ;;
  1356                           
  1357                           
  1358                           ;psect for function _lcd_putstr
  1359  02FC                     _lcd_putstr:	
  1360                           
  1361                           ;incstack = 0
  1362                           ; Regs used in _lcd_putstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1363                           ;lcd_putstr@csz_string stored from wreg
  1364  02FC  1283               	bcf	3,5	;RP0=0, select bank0
  1365  02FD  1303               	bcf	3,6	;RP1=0, select bank0
  1366  02FE  00A2               	movwf	lcd_putstr@csz_string
  1367  02FF                     l992:	
  1368                           ;lcd.c: 244: while (*csz_string != '\0') {
  1369                           
  1370  02FF  0822               	movf	lcd_putstr@csz_string,w
  1371  0300  0084               	movwf	4
  1372  0301  120A  118A  227E  120A  118A  	fcall	stringdir
  1373  0306  3A00               	xorlw	0
  1374  0307  1903               	btfsc	3,2
  1375  0308  0008               	return
  1376                           
  1377                           ;lcd.c: 247: if (*csz_string == '\n' || *csz_string == '\r') {
  1378  0309  0822               	movf	lcd_putstr@csz_string,w
  1379  030A  0084               	movwf	4
  1380  030B  120A  118A  227E  120A  118A  	fcall	stringdir
  1381  0310  3A0A               	xorlw	10
  1382  0311  1903               	skipnz
  1383  0312  2B1D               	goto	l986
  1384  0313  0822               	movf	lcd_putstr@csz_string,w
  1385  0314  0084               	movwf	4
  1386  0315  120A  118A  227E  120A  118A  	fcall	stringdir
  1387  031A  3A0D               	xorlw	13
  1388  031B  1D03               	skipz
  1389  031C  2B23               	goto	l988
  1390  031D                     l986:	
  1391                           
  1392                           ;lcd.c: 248: lcd_2ndline();
  1393  031D  120A  118A  2411  120A  118A  	fcall	_lcd_2ndline
  1394                           
  1395                           ;lcd.c: 249: }
  1396  0322  2B31               	goto	l990
  1397  0323                     l988:	
  1398                           
  1399                           ;lcd.c: 252: else {
  1400                           ;lcd.c: 253: lcd_putchar(*csz_string);
  1401  0323  1283               	bcf	3,5	;RP0=0, select bank0
  1402  0324  1303               	bcf	3,6	;RP1=0, select bank0
  1403  0325  0822               	movf	lcd_putstr@csz_string,w
  1404  0326  0084               	movwf	4
  1405  0327  120A  118A  227E  120A  118A  	fcall	stringdir
  1406  032C  120A  118A  23E4  120A  118A  	fcall	_lcd_putchar
  1407  0331                     l990:	
  1408                           
  1409                           ;lcd.c: 254: }
  1410                           ;lcd.c: 257: csz_string++;
  1411  0331  3001               	movlw	1
  1412  0332  1283               	bcf	3,5	;RP0=0, select bank0
  1413  0333  1303               	bcf	3,6	;RP1=0, select bank0
  1414  0334  00A1               	movwf	??_lcd_putstr
  1415  0335  0821               	movf	??_lcd_putstr,w
  1416  0336  07A2               	addwf	lcd_putstr@csz_string,f
  1417  0337  2AFF               	goto	l992
  1418  0338                     __end_of_lcd_putstr:	
  1419                           
  1420                           	psect	text2
  1421  0411                     __ptext2:	
  1422 ;; *************** function _lcd_2ndline *****************
  1423 ;; Defined at:
  1424 ;;		line 178 in file "lcd.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;		None
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;		None
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg, status,2, status,0, pclath, cstack
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         0       0       0       0       0
  1440 ;;      Temps:          1       0       0       0       0
  1441 ;;      Totals:         1       0       0       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    3
  1445 ;; This function calls:
  1446 ;;		_send_lcd_data
  1447 ;; This function is called by:
  1448 ;;		_lcd_putstr
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _lcd_2ndline
  1454  0411                     _lcd_2ndline:	
  1455                           
  1456                           ;lcd.c: 181: send_lcd_data(0, 0b10000000 | 0x40);
  1457                           
  1458                           ;incstack = 0
  1459                           ; Regs used in _lcd_2ndline: [wreg+status,2+status,0+pclath+cstack]
  1460  0411  30C0               	movlw	192
  1461  0412  00F9               	movwf	??_lcd_2ndline
  1462  0413  0879               	movf	??_lcd_2ndline,w
  1463  0414  00F5               	movwf	send_lcd_data@uc_data
  1464  0415  3000               	movlw	0
  1465  0416  120A  118A  2370   	fcall	_send_lcd_data
  1466  0419  0008               	return
  1467  041A                     __end_of_lcd_2ndline:	
  1468                           
  1469                           	psect	text3
  1470  0338                     __ptext3:	
  1471 ;; *************** function _lcd_initialize *****************
  1472 ;; Defined at:
  1473 ;;		line 100 in file "lcd.c"
  1474 ;; Parameters:    Size  Location     Type
  1475 ;;		None
  1476 ;; Auto vars:     Size  Location     Type
  1477 ;;		None
  1478 ;; Return value:  Size  Location     Type
  1479 ;;                  1    wreg      void 
  1480 ;; Registers used:
  1481 ;;		wreg, status,2, status,0, pclath, cstack
  1482 ;; Tracked objects:
  1483 ;;		On entry : 0/0
  1484 ;;		On exit  : 0/0
  1485 ;;		Unchanged: 0/0
  1486 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1487 ;;      Params:         0       0       0       0       0
  1488 ;;      Locals:         0       0       0       0       0
  1489 ;;      Temps:          0       2       0       0       0
  1490 ;;      Totals:         0       2       0       0       0
  1491 ;;Total ram usage:        2 bytes
  1492 ;; Hardware stack levels used:    1
  1493 ;; Hardware stack levels required when called:    4
  1494 ;; This function calls:
  1495 ;;		_lcd_clear
  1496 ;;		_send_lcd_data
  1497 ;;		_set_lcd_e
  1498 ;; This function is called by:
  1499 ;;		_main
  1500 ;; This function uses a non-reentrant model
  1501 ;;
  1502                           
  1503                           
  1504                           ;psect for function _lcd_initialize
  1505  0338                     _lcd_initialize:	
  1506                           
  1507                           ;lcd.c: 104: set_lcd_e(1);
  1508                           
  1509                           ;incstack = 0
  1510                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
  1511  0338  3001               	movlw	1
  1512  0339  120A  118A  23FB  120A  118A  	fcall	_set_lcd_e
  1513                           
  1514                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
  1515  033E  3062               	movlw	98
  1516  033F  1283               	bcf	3,5	;RP0=0, select bank0
  1517  0340  1303               	bcf	3,6	;RP1=0, select bank0
  1518  0341  00A1               	movwf	??_lcd_initialize+1
  1519  0342  3065               	movlw	101
  1520  0343  00A0               	movwf	??_lcd_initialize
  1521  0344                     u797:	
  1522  0344  0BA0               	decfsz	??_lcd_initialize,f
  1523  0345  2B44               	goto	u797
  1524  0346  0BA1               	decfsz	??_lcd_initialize+1,f
  1525  0347  2B44               	goto	u797
  1526                           
  1527                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
  1528  0348  3038               	movlw	56
  1529  0349  1283               	bcf	3,5	;RP0=0, select bank0
  1530  034A  1303               	bcf	3,6	;RP1=0, select bank0
  1531  034B  00A0               	movwf	??_lcd_initialize
  1532  034C  0820               	movf	??_lcd_initialize,w
  1533  034D  00F5               	movwf	send_lcd_data@uc_data
  1534  034E  3000               	movlw	0
  1535  034F  120A  118A  2370  120A  118A  	fcall	_send_lcd_data
  1536                           
  1537                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
  1538  0354  3006               	movlw	6
  1539  0355  1283               	bcf	3,5	;RP0=0, select bank0
  1540  0356  1303               	bcf	3,6	;RP1=0, select bank0
  1541  0357  00A0               	movwf	??_lcd_initialize
  1542  0358  0820               	movf	??_lcd_initialize,w
  1543  0359  00F5               	movwf	send_lcd_data@uc_data
  1544  035A  3000               	movlw	0
  1545  035B  120A  118A  2370  120A  118A  	fcall	_send_lcd_data
  1546                           
  1547                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
  1548  0360  300C               	movlw	12
  1549  0361  1283               	bcf	3,5	;RP0=0, select bank0
  1550  0362  1303               	bcf	3,6	;RP1=0, select bank0
  1551  0363  00A0               	movwf	??_lcd_initialize
  1552  0364  0820               	movf	??_lcd_initialize,w
  1553  0365  00F5               	movwf	send_lcd_data@uc_data
  1554  0366  3000               	movlw	0
  1555  0367  120A  118A  2370  120A  118A  	fcall	_send_lcd_data
  1556                           
  1557                           ;lcd.c: 118: lcd_clear();
  1558  036C  120A  118A  2423   	fcall	_lcd_clear
  1559  036F  0008               	return
  1560  0370                     __end_of_lcd_initialize:	
  1561                           
  1562                           	psect	text4
  1563  0423                     __ptext4:	
  1564 ;; *************** function _lcd_clear *****************
  1565 ;; Defined at:
  1566 ;;		line 136 in file "lcd.c"
  1567 ;; Parameters:    Size  Location     Type
  1568 ;;		None
  1569 ;; Auto vars:     Size  Location     Type
  1570 ;;		None
  1571 ;; Return value:  Size  Location     Type
  1572 ;;                  1    wreg      void 
  1573 ;; Registers used:
  1574 ;;		wreg, status,2, status,0, pclath, cstack
  1575 ;; Tracked objects:
  1576 ;;		On entry : 0/0
  1577 ;;		On exit  : 0/0
  1578 ;;		Unchanged: 0/0
  1579 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1580 ;;      Params:         0       0       0       0       0
  1581 ;;      Locals:         0       0       0       0       0
  1582 ;;      Temps:          0       0       0       0       0
  1583 ;;      Totals:         0       0       0       0       0
  1584 ;;Total ram usage:        0 bytes
  1585 ;; Hardware stack levels used:    1
  1586 ;; Hardware stack levels required when called:    3
  1587 ;; This function calls:
  1588 ;;		_send_lcd_data
  1589 ;; This function is called by:
  1590 ;;		_main
  1591 ;;		_lcd_initialize
  1592 ;; This function uses a non-reentrant model
  1593 ;;
  1594                           
  1595                           
  1596                           ;psect for function _lcd_clear
  1597  0423                     _lcd_clear:	
  1598                           
  1599                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
  1600                           
  1601                           ;incstack = 0
  1602                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
  1603  0423  01F5               	clrf	send_lcd_data@uc_data
  1604  0424  0AF5               	incf	send_lcd_data@uc_data,f
  1605  0425  3000               	movlw	0
  1606  0426  120A  118A  2370   	fcall	_send_lcd_data
  1607  0429  0008               	return
  1608  042A                     __end_of_lcd_clear:	
  1609                           
  1610                           	psect	text5
  1611  041A                     __ptext5:	
  1612 ;; *************** function _lcd_home *****************
  1613 ;; Defined at:
  1614 ;;		line 157 in file "lcd.c"
  1615 ;; Parameters:    Size  Location     Type
  1616 ;;		None
  1617 ;; Auto vars:     Size  Location     Type
  1618 ;;		None
  1619 ;; Return value:  Size  Location     Type
  1620 ;;                  1    wreg      void 
  1621 ;; Registers used:
  1622 ;;		wreg, status,2, status,0, pclath, cstack
  1623 ;; Tracked objects:
  1624 ;;		On entry : 0/0
  1625 ;;		On exit  : 0/0
  1626 ;;		Unchanged: 0/0
  1627 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1628 ;;      Params:         0       0       0       0       0
  1629 ;;      Locals:         0       0       0       0       0
  1630 ;;      Temps:          1       0       0       0       0
  1631 ;;      Totals:         1       0       0       0       0
  1632 ;;Total ram usage:        1 bytes
  1633 ;; Hardware stack levels used:    1
  1634 ;; Hardware stack levels required when called:    3
  1635 ;; This function calls:
  1636 ;;		_send_lcd_data
  1637 ;; This function is called by:
  1638 ;;		_main
  1639 ;; This function uses a non-reentrant model
  1640 ;;
  1641                           
  1642                           
  1643                           ;psect for function _lcd_home
  1644  041A                     _lcd_home:	
  1645                           
  1646                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1647                           
  1648                           ;incstack = 0
  1649                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1650  041A  3002               	movlw	2
  1651  041B  00F9               	movwf	??_lcd_home
  1652  041C  0879               	movf	??_lcd_home,w
  1653  041D  00F5               	movwf	send_lcd_data@uc_data
  1654  041E  3000               	movlw	0
  1655  041F  120A  118A  2370   	fcall	_send_lcd_data
  1656  0422  0008               	return
  1657  0423                     __end_of_lcd_home:	
  1658                           
  1659                           	psect	text6
  1660  03D7                     __ptext6:	
  1661 ;; *************** function _lcd_goto *****************
  1662 ;; Defined at:
  1663 ;;		line 199 in file "lcd.c"
  1664 ;; Parameters:    Size  Location     Type
  1665 ;;  uc_position     1    wreg     unsigned char 
  1666 ;; Auto vars:     Size  Location     Type
  1667 ;;  uc_position     1    0[BANK0 ] unsigned char 
  1668 ;; Return value:  Size  Location     Type
  1669 ;;                  1    wreg      void 
  1670 ;; Registers used:
  1671 ;;		wreg, status,2, status,0, pclath, cstack
  1672 ;; Tracked objects:
  1673 ;;		On entry : 0/0
  1674 ;;		On exit  : 0/0
  1675 ;;		Unchanged: 0/0
  1676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1677 ;;      Params:         0       0       0       0       0
  1678 ;;      Locals:         0       1       0       0       0
  1679 ;;      Temps:          1       0       0       0       0
  1680 ;;      Totals:         1       1       0       0       0
  1681 ;;Total ram usage:        2 bytes
  1682 ;; Hardware stack levels used:    1
  1683 ;; Hardware stack levels required when called:    3
  1684 ;; This function calls:
  1685 ;;		_send_lcd_data
  1686 ;; This function is called by:
  1687 ;;		_main
  1688 ;; This function uses a non-reentrant model
  1689 ;;
  1690                           
  1691                           
  1692                           ;psect for function _lcd_goto
  1693  03D7                     _lcd_goto:	
  1694                           
  1695                           ;incstack = 0
  1696                           ; Regs used in _lcd_goto: [wreg+status,2+status,0+pclath+cstack]
  1697                           ;lcd_goto@uc_position stored from wreg
  1698  03D7  1283               	bcf	3,5	;RP0=0, select bank0
  1699  03D8  1303               	bcf	3,6	;RP1=0, select bank0
  1700  03D9  00A0               	movwf	lcd_goto@uc_position
  1701                           
  1702                           ;lcd.c: 202: send_lcd_data(0, 0b10000000 | uc_position);
  1703  03DA  0820               	movf	lcd_goto@uc_position,w
  1704  03DB  3880               	iorlw	128
  1705  03DC  00F9               	movwf	??_lcd_goto
  1706  03DD  0879               	movf	??_lcd_goto,w
  1707  03DE  00F5               	movwf	send_lcd_data@uc_data
  1708  03DF  3000               	movlw	0
  1709  03E0  120A  118A  2370   	fcall	_send_lcd_data
  1710  03E3  0008               	return
  1711  03E4                     __end_of_lcd_goto:	
  1712                           
  1713                           	psect	text7
  1714  01B0                     __ptext7:	
  1715 ;; *************** function _lcd_bcd *****************
  1716 ;; Defined at:
  1717 ;;		line 274 in file "lcd.c"
  1718 ;; Parameters:    Size  Location     Type
  1719 ;;  uc_digit        1    wreg     unsigned char 
  1720 ;;  ui_number       2    3[BANK0 ] unsigned int 
  1721 ;; Auto vars:     Size  Location     Type
  1722 ;;  uc_digit        1   19[BANK0 ] unsigned char 
  1723 ;;  ui_decimal     10    9[BANK0 ] unsigned int [5]
  1724 ;; Return value:  Size  Location     Type
  1725 ;;                  1    wreg      void 
  1726 ;; Registers used:
  1727 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1728 ;; Tracked objects:
  1729 ;;		On entry : 0/0
  1730 ;;		On exit  : 0/0
  1731 ;;		Unchanged: 0/0
  1732 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1733 ;;      Params:         0       2       0       0       0
  1734 ;;      Locals:         0      11       0       0       0
  1735 ;;      Temps:          0       4       0       0       0
  1736 ;;      Totals:         0      17       0       0       0
  1737 ;;Total ram usage:       17 bytes
  1738 ;; Hardware stack levels used:    1
  1739 ;; Hardware stack levels required when called:    4
  1740 ;; This function calls:
  1741 ;;		___lwdiv
  1742 ;;		___lwmod
  1743 ;;		_lcd_putchar
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           
  1750                           ;psect for function _lcd_bcd
  1751  01B0                     _lcd_bcd:	
  1752                           
  1753                           ;incstack = 0
  1754                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1755                           ;lcd_bcd@uc_digit stored from wreg
  1756  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1757  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1758  01B2  00B3               	movwf	lcd_bcd@uc_digit
  1759                           
  1760                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1761  01B3  3029               	movlw	lcd_bcd@ui_decimal& (0+255)
  1762  01B4  0084               	movwf	4
  1763  01B5  3044               	movlw	low lcd_bcd@F1134
  1764  01B6  00A5               	movwf	??_lcd_bcd
  1765  01B7  0804               	movf	4,w
  1766  01B8  00A6               	movwf	??_lcd_bcd+1
  1767  01B9  300A               	movlw	10
  1768  01BA  00A7               	movwf	??_lcd_bcd+2
  1769  01BB                     u600:	
  1770  01BB  0825               	movf	??_lcd_bcd,w
  1771  01BC  0084               	movwf	4
  1772  01BD  1383               	bcf	3,7	;select IRP bank0
  1773  01BE  0800               	movf	0,w
  1774  01BF  00A8               	movwf	??_lcd_bcd+3
  1775  01C0  0AA5               	incf	??_lcd_bcd,f
  1776  01C1  0826               	movf	??_lcd_bcd+1,w
  1777  01C2  0084               	movwf	4
  1778  01C3  0828               	movf	??_lcd_bcd+3,w
  1779  01C4  0080               	movwf	0
  1780  01C5  0AA6               	incf	??_lcd_bcd+1,f
  1781  01C6  0BA7               	decfsz	??_lcd_bcd+2,f
  1782  01C7  29BB               	goto	u600
  1783                           
  1784                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1785  01C8  3010               	movlw	16
  1786  01C9  00F4               	movwf	___lwdiv@divisor
  1787  01CA  3027               	movlw	39
  1788  01CB  00F5               	movwf	___lwdiv@divisor+1
  1789  01CC  0824               	movf	lcd_bcd@ui_number+1,w
  1790  01CD  00F7               	movwf	___lwdiv@dividend+1
  1791  01CE  0823               	movf	lcd_bcd@ui_number,w
  1792  01CF  00F6               	movwf	___lwdiv@dividend
  1793  01D0  120A  118A  22BE  120A  118A  	fcall	___lwdiv
  1794  01D5  0875               	movf	?___lwdiv+1,w
  1795  01D6  1283               	bcf	3,5	;RP0=0, select bank0
  1796  01D7  1303               	bcf	3,6	;RP1=0, select bank0
  1797  01D8  00B2               	movwf	lcd_bcd@ui_decimal+9
  1798  01D9  0874               	movf	?___lwdiv,w
  1799  01DA  00B1               	movwf	lcd_bcd@ui_decimal+8
  1800                           
  1801                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1802  01DB  3010               	movlw	16
  1803  01DC  00F4               	movwf	___lwmod@divisor
  1804  01DD  3027               	movlw	39
  1805  01DE  00F5               	movwf	___lwmod@divisor+1
  1806  01DF  0824               	movf	lcd_bcd@ui_number+1,w
  1807  01E0  00F7               	movwf	___lwmod@dividend+1
  1808  01E1  0823               	movf	lcd_bcd@ui_number,w
  1809  01E2  00F6               	movwf	___lwmod@dividend
  1810  01E3  120A  118A  23A5  120A  118A  	fcall	___lwmod
  1811  01E8  0875               	movf	?___lwmod+1,w
  1812  01E9  1283               	bcf	3,5	;RP0=0, select bank0
  1813  01EA  1303               	bcf	3,6	;RP1=0, select bank0
  1814  01EB  00B0               	movwf	lcd_bcd@ui_decimal+7
  1815  01EC  0874               	movf	?___lwmod,w
  1816  01ED  00AF               	movwf	lcd_bcd@ui_decimal+6
  1817                           
  1818                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1819  01EE  30E8               	movlw	232
  1820  01EF  00F4               	movwf	___lwmod@divisor
  1821  01F0  3003               	movlw	3
  1822  01F1  00F5               	movwf	___lwmod@divisor+1
  1823  01F2  0830               	movf	lcd_bcd@ui_decimal+7,w
  1824  01F3  00F7               	movwf	___lwmod@dividend+1
  1825  01F4  082F               	movf	lcd_bcd@ui_decimal+6,w
  1826  01F5  00F6               	movwf	___lwmod@dividend
  1827  01F6  120A  118A  23A5  120A  118A  	fcall	___lwmod
  1828  01FB  0875               	movf	?___lwmod+1,w
  1829  01FC  1283               	bcf	3,5	;RP0=0, select bank0
  1830  01FD  1303               	bcf	3,6	;RP1=0, select bank0
  1831  01FE  00AE               	movwf	lcd_bcd@ui_decimal+5
  1832  01FF  0874               	movf	?___lwmod,w
  1833  0200  00AD               	movwf	lcd_bcd@ui_decimal+4
  1834                           
  1835                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1836  0201  30E8               	movlw	232
  1837  0202  00F4               	movwf	___lwdiv@divisor
  1838  0203  3003               	movlw	3
  1839  0204  00F5               	movwf	___lwdiv@divisor+1
  1840  0205  0830               	movf	lcd_bcd@ui_decimal+7,w
  1841  0206  00F7               	movwf	___lwdiv@dividend+1
  1842  0207  082F               	movf	lcd_bcd@ui_decimal+6,w
  1843  0208  00F6               	movwf	___lwdiv@dividend
  1844  0209  120A  118A  22BE  120A  118A  	fcall	___lwdiv
  1845  020E  0875               	movf	?___lwdiv+1,w
  1846  020F  1283               	bcf	3,5	;RP0=0, select bank0
  1847  0210  1303               	bcf	3,6	;RP1=0, select bank0
  1848  0211  00B0               	movwf	lcd_bcd@ui_decimal+7
  1849  0212  0874               	movf	?___lwdiv,w
  1850  0213  00AF               	movwf	lcd_bcd@ui_decimal+6
  1851                           
  1852                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1853  0214  3064               	movlw	100
  1854  0215  00F4               	movwf	___lwmod@divisor
  1855  0216  3000               	movlw	0
  1856  0217  00F5               	movwf	___lwmod@divisor+1
  1857  0218  082E               	movf	lcd_bcd@ui_decimal+5,w
  1858  0219  00F7               	movwf	___lwmod@dividend+1
  1859  021A  082D               	movf	lcd_bcd@ui_decimal+4,w
  1860  021B  00F6               	movwf	___lwmod@dividend
  1861  021C  120A  118A  23A5  120A  118A  	fcall	___lwmod
  1862  0221  0875               	movf	?___lwmod+1,w
  1863  0222  1283               	bcf	3,5	;RP0=0, select bank0
  1864  0223  1303               	bcf	3,6	;RP1=0, select bank0
  1865  0224  00AC               	movwf	lcd_bcd@ui_decimal+3
  1866  0225  0874               	movf	?___lwmod,w
  1867  0226  00AB               	movwf	lcd_bcd@ui_decimal+2
  1868                           
  1869                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1870  0227  3064               	movlw	100
  1871  0228  00F4               	movwf	___lwdiv@divisor
  1872  0229  3000               	movlw	0
  1873  022A  00F5               	movwf	___lwdiv@divisor+1
  1874  022B  082E               	movf	lcd_bcd@ui_decimal+5,w
  1875  022C  00F7               	movwf	___lwdiv@dividend+1
  1876  022D  082D               	movf	lcd_bcd@ui_decimal+4,w
  1877  022E  00F6               	movwf	___lwdiv@dividend
  1878  022F  120A  118A  22BE  120A  118A  	fcall	___lwdiv
  1879  0234  0875               	movf	?___lwdiv+1,w
  1880  0235  1283               	bcf	3,5	;RP0=0, select bank0
  1881  0236  1303               	bcf	3,6	;RP1=0, select bank0
  1882  0237  00AE               	movwf	lcd_bcd@ui_decimal+5
  1883  0238  0874               	movf	?___lwdiv,w
  1884  0239  00AD               	movwf	lcd_bcd@ui_decimal+4
  1885                           
  1886                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1887  023A  300A               	movlw	10
  1888  023B  00F4               	movwf	___lwmod@divisor
  1889  023C  3000               	movlw	0
  1890  023D  00F5               	movwf	___lwmod@divisor+1
  1891  023E  082C               	movf	lcd_bcd@ui_decimal+3,w
  1892  023F  00F7               	movwf	___lwmod@dividend+1
  1893  0240  082B               	movf	lcd_bcd@ui_decimal+2,w
  1894  0241  00F6               	movwf	___lwmod@dividend
  1895  0242  120A  118A  23A5  120A  118A  	fcall	___lwmod
  1896  0247  0875               	movf	?___lwmod+1,w
  1897  0248  1283               	bcf	3,5	;RP0=0, select bank0
  1898  0249  1303               	bcf	3,6	;RP1=0, select bank0
  1899  024A  00AA               	movwf	lcd_bcd@ui_decimal+1
  1900  024B  0874               	movf	?___lwmod,w
  1901  024C  00A9               	movwf	lcd_bcd@ui_decimal
  1902                           
  1903                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1904  024D  300A               	movlw	10
  1905  024E  00F4               	movwf	___lwdiv@divisor
  1906  024F  3000               	movlw	0
  1907  0250  00F5               	movwf	___lwdiv@divisor+1
  1908  0251  082C               	movf	lcd_bcd@ui_decimal+3,w
  1909  0252  00F7               	movwf	___lwdiv@dividend+1
  1910  0253  082B               	movf	lcd_bcd@ui_decimal+2,w
  1911  0254  00F6               	movwf	___lwdiv@dividend
  1912  0255  120A  118A  22BE  120A  118A  	fcall	___lwdiv
  1913  025A  0875               	movf	?___lwdiv+1,w
  1914  025B  1283               	bcf	3,5	;RP0=0, select bank0
  1915  025C  1303               	bcf	3,6	;RP1=0, select bank0
  1916  025D  00AC               	movwf	lcd_bcd@ui_decimal+3
  1917  025E  0874               	movf	?___lwdiv,w
  1918  025F  00AB               	movwf	lcd_bcd@ui_decimal+2
  1919                           
  1920                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1921  0260  3006               	movlw	6
  1922  0261  0233               	subwf	lcd_bcd@uc_digit,w
  1923  0262  1C03               	skipc
  1924  0263  2A68               	goto	l1018
  1925  0264  3005               	movlw	5
  1926  0265  00A5               	movwf	??_lcd_bcd
  1927  0266  0825               	movf	??_lcd_bcd,w
  1928  0267  00B3               	movwf	lcd_bcd@uc_digit
  1929  0268                     l1018:	
  1930                           
  1931                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1932  0268  0833               	movf	lcd_bcd@uc_digit,w
  1933  0269  1903               	btfsc	3,2
  1934  026A  0008               	return
  1935                           
  1936                           ;lcd.c: 289: {
  1937                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1938  026B  0833               	movf	lcd_bcd@uc_digit,w
  1939  026C  00A5               	movwf	??_lcd_bcd
  1940  026D  0725               	addwf	??_lcd_bcd,w
  1941  026E  3EFE               	addlw	254
  1942  026F  3E29               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  1943  0270  0084               	movwf	4
  1944  0271  1383               	bcf	3,7	;select IRP bank0
  1945  0272  0800               	movf	0,w
  1946  0273  3E30               	addlw	48
  1947  0274  120A  118A  23E4  120A  118A  	fcall	_lcd_putchar
  1948  0279  3001               	movlw	1
  1949  027A  1283               	bcf	3,5	;RP0=0, select bank0
  1950  027B  1303               	bcf	3,6	;RP1=0, select bank0
  1951  027C  02B3               	subwf	lcd_bcd@uc_digit,f
  1952  027D  2A68               	goto	l1018
  1953  027E                     __end_of_lcd_bcd:	
  1954                           
  1955                           	psect	text8
  1956  03E4                     __ptext8:	
  1957 ;; *************** function _lcd_putchar *****************
  1958 ;; Defined at:
  1959 ;;		line 220 in file "lcd.c"
  1960 ;; Parameters:    Size  Location     Type
  1961 ;;  c_data          1    wreg     unsigned char 
  1962 ;; Auto vars:     Size  Location     Type
  1963 ;;  c_data          1    0[BANK0 ] unsigned char 
  1964 ;; Return value:  Size  Location     Type
  1965 ;;                  1    wreg      void 
  1966 ;; Registers used:
  1967 ;;		wreg, status,2, status,0, pclath, cstack
  1968 ;; Tracked objects:
  1969 ;;		On entry : 0/0
  1970 ;;		On exit  : 0/0
  1971 ;;		Unchanged: 0/0
  1972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1973 ;;      Params:         0       0       0       0       0
  1974 ;;      Locals:         0       1       0       0       0
  1975 ;;      Temps:          1       0       0       0       0
  1976 ;;      Totals:         1       1       0       0       0
  1977 ;;Total ram usage:        2 bytes
  1978 ;; Hardware stack levels used:    1
  1979 ;; Hardware stack levels required when called:    3
  1980 ;; This function calls:
  1981 ;;		_send_lcd_data
  1982 ;; This function is called by:
  1983 ;;		_lcd_putstr
  1984 ;;		_lcd_bcd
  1985 ;; This function uses a non-reentrant model
  1986 ;;
  1987                           
  1988                           
  1989                           ;psect for function _lcd_putchar
  1990  03E4                     _lcd_putchar:	
  1991                           
  1992                           ;incstack = 0
  1993                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  1994                           ;lcd_putchar@c_data stored from wreg
  1995  03E4  1283               	bcf	3,5	;RP0=0, select bank0
  1996  03E5  1303               	bcf	3,6	;RP1=0, select bank0
  1997  03E6  00A0               	movwf	lcd_putchar@c_data
  1998                           
  1999                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  2000  03E7  0820               	movf	lcd_putchar@c_data,w
  2001  03E8  00F9               	movwf	??_lcd_putchar
  2002  03E9  0879               	movf	??_lcd_putchar,w
  2003  03EA  00F5               	movwf	send_lcd_data@uc_data
  2004  03EB  3001               	movlw	1
  2005  03EC  120A  118A  2370   	fcall	_send_lcd_data
  2006  03EF  0008               	return
  2007  03F0                     __end_of_lcd_putchar:	
  2008                           
  2009                           	psect	text9
  2010  0370                     __ptext9:	
  2011 ;; *************** function _send_lcd_data *****************
  2012 ;; Defined at:
  2013 ;;		line 308 in file "lcd.c"
  2014 ;; Parameters:    Size  Location     Type
  2015 ;;  b_rs            1    wreg     unsigned char 
  2016 ;;  uc_data         1    5[COMMON] unsigned char 
  2017 ;; Auto vars:     Size  Location     Type
  2018 ;;  b_rs            1    8[COMMON] unsigned char 
  2019 ;; Return value:  Size  Location     Type
  2020 ;;                  1    wreg      void 
  2021 ;; Registers used:
  2022 ;;		wreg, status,2, status,0, pclath, cstack
  2023 ;; Tracked objects:
  2024 ;;		On entry : 0/0
  2025 ;;		On exit  : 0/0
  2026 ;;		Unchanged: 0/0
  2027 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2028 ;;      Params:         1       0       0       0       0
  2029 ;;      Locals:         1       0       0       0       0
  2030 ;;      Temps:          2       0       0       0       0
  2031 ;;      Totals:         4       0       0       0       0
  2032 ;;Total ram usage:        4 bytes
  2033 ;; Hardware stack levels used:    1
  2034 ;; Hardware stack levels required when called:    2
  2035 ;; This function calls:
  2036 ;;		_set_lcd_data
  2037 ;;		_set_lcd_e
  2038 ;;		_set_lcd_rs
  2039 ;; This function is called by:
  2040 ;;		_lcd_initialize
  2041 ;;		_lcd_clear
  2042 ;;		_lcd_home
  2043 ;;		_lcd_2ndline
  2044 ;;		_lcd_goto
  2045 ;;		_lcd_putchar
  2046 ;; This function uses a non-reentrant model
  2047 ;;
  2048                           
  2049                           
  2050                           ;psect for function _send_lcd_data
  2051  0370                     _send_lcd_data:	
  2052                           
  2053                           ;incstack = 0
  2054                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  2055                           ;send_lcd_data@b_rs stored from wreg
  2056  0370  00F8               	movwf	send_lcd_data@b_rs
  2057                           
  2058                           ;lcd.c: 311: set_lcd_rs(b_rs);
  2059  0371  0878               	movf	send_lcd_data@b_rs,w
  2060  0372  120A  118A  23F0  120A  118A  	fcall	_set_lcd_rs
  2061                           
  2062                           ;lcd.c: 312: set_lcd_data(uc_data);
  2063  0377  0875               	movf	send_lcd_data@uc_data,w
  2064  0378  120A  118A  242A  120A  118A  	fcall	_set_lcd_data
  2065                           
  2066                           ;lcd.c: 315: set_lcd_e(1);
  2067  037D  3001               	movlw	1
  2068  037E  120A  118A  23FB  120A  118A  	fcall	_set_lcd_e
  2069                           
  2070                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  2071  0383  3007               	movlw	7
  2072  0384  00F7               	movwf	??_send_lcd_data+1
  2073  0385  307D               	movlw	125
  2074  0386  00F6               	movwf	??_send_lcd_data
  2075  0387                     u807:	
  2076  0387  0BF6               	decfsz	??_send_lcd_data,f
  2077  0388  2B87               	goto	u807
  2078  0389  0BF7               	decfsz	??_send_lcd_data+1,f
  2079  038A  2B87               	goto	u807
  2080                           
  2081                           ;lcd.c: 317: set_lcd_e(0);
  2082  038B  3000               	movlw	0
  2083  038C  120A  118A  23FB  120A  118A  	fcall	_set_lcd_e
  2084                           
  2085                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  2086  0391  300D               	movlw	13
  2087  0392  00F7               	movwf	??_send_lcd_data+1
  2088  0393  30FB               	movlw	251
  2089  0394  00F6               	movwf	??_send_lcd_data
  2090  0395                     u817:	
  2091  0395  0BF6               	decfsz	??_send_lcd_data,f
  2092  0396  2B95               	goto	u817
  2093  0397  0BF7               	decfsz	??_send_lcd_data+1,f
  2094  0398  2B95               	goto	u817
  2095  0399  2B9A               	nop2
  2096                           
  2097                           ;lcd.c: 321: set_lcd_rs(0);
  2098  039A  3000               	movlw	0
  2099  039B  120A  118A  23F0  120A  118A  	fcall	_set_lcd_rs
  2100                           
  2101                           ;lcd.c: 322: set_lcd_data(0);
  2102  03A0  3000               	movlw	0
  2103  03A1  120A  118A  242A   	fcall	_set_lcd_data
  2104  03A4  0008               	return
  2105  03A5                     __end_of_send_lcd_data:	
  2106                           
  2107                           	psect	text10
  2108  03F0                     __ptext10:	
  2109 ;; *************** function _set_lcd_rs *****************
  2110 ;; Defined at:
  2111 ;;		line 360 in file "lcd.c"
  2112 ;; Parameters:    Size  Location     Type
  2113 ;;  b_output        1    wreg     unsigned char 
  2114 ;; Auto vars:     Size  Location     Type
  2115 ;;  b_output        1    4[COMMON] unsigned char 
  2116 ;; Return value:  Size  Location     Type
  2117 ;;                  1    wreg      void 
  2118 ;; Registers used:
  2119 ;;		wreg
  2120 ;; Tracked objects:
  2121 ;;		On entry : 0/0
  2122 ;;		On exit  : 0/0
  2123 ;;		Unchanged: 0/0
  2124 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2125 ;;      Params:         0       0       0       0       0
  2126 ;;      Locals:         1       0       0       0       0
  2127 ;;      Temps:          0       0       0       0       0
  2128 ;;      Totals:         1       0       0       0       0
  2129 ;;Total ram usage:        1 bytes
  2130 ;; Hardware stack levels used:    1
  2131 ;; Hardware stack levels required when called:    1
  2132 ;; This function calls:
  2133 ;;		Nothing
  2134 ;; This function is called by:
  2135 ;;		_send_lcd_data
  2136 ;; This function uses a non-reentrant model
  2137 ;;
  2138                           
  2139                           
  2140                           ;psect for function _set_lcd_rs
  2141  03F0                     _set_lcd_rs:	
  2142                           
  2143                           ;incstack = 0
  2144                           ; Regs used in _set_lcd_rs: [wreg]
  2145                           ;set_lcd_rs@b_output stored from wreg
  2146  03F0  00F4               	movwf	set_lcd_rs@b_output
  2147                           
  2148                           ;lcd.c: 362: RB4 = b_output;
  2149  03F1  1C74               	btfss	set_lcd_rs@b_output,0
  2150  03F2  2BF7               	goto	u420
  2151  03F3  1283               	bcf	3,5	;RP0=0, select bank0
  2152  03F4  1303               	bcf	3,6	;RP1=0, select bank0
  2153  03F5  1606               	bsf	6,4	;volatile
  2154  03F6  0008               	return
  2155  03F7                     u420:	
  2156  03F7  1283               	bcf	3,5	;RP0=0, select bank0
  2157  03F8  1303               	bcf	3,6	;RP1=0, select bank0
  2158  03F9  1206               	bcf	6,4	;volatile
  2159  03FA  0008               	return
  2160  03FB                     __end_of_set_lcd_rs:	
  2161                           
  2162                           	psect	text11
  2163  03FB                     __ptext11:	
  2164 ;; *************** function _set_lcd_e *****************
  2165 ;; Defined at:
  2166 ;;		line 340 in file "lcd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;  b_output        1    wreg     unsigned char 
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;  b_output        1    4[COMMON] unsigned char 
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2180 ;;      Params:         0       0       0       0       0
  2181 ;;      Locals:         1       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0
  2183 ;;      Totals:         1       0       0       0       0
  2184 ;;Total ram usage:        1 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    1
  2187 ;; This function calls:
  2188 ;;		Nothing
  2189 ;; This function is called by:
  2190 ;;		_lcd_initialize
  2191 ;;		_send_lcd_data
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           
  2196                           ;psect for function _set_lcd_e
  2197  03FB                     _set_lcd_e:	
  2198                           
  2199                           ;incstack = 0
  2200                           ; Regs used in _set_lcd_e: [wreg]
  2201                           ;set_lcd_e@b_output stored from wreg
  2202  03FB  00F4               	movwf	set_lcd_e@b_output
  2203                           
  2204                           ;lcd.c: 342: RB5 = b_output;
  2205  03FC  1C74               	btfss	set_lcd_e@b_output,0
  2206  03FD  2C02               	goto	u400
  2207  03FE  1283               	bcf	3,5	;RP0=0, select bank0
  2208  03FF  1303               	bcf	3,6	;RP1=0, select bank0
  2209  0400  1686               	bsf	6,5	;volatile
  2210  0401  0008               	return
  2211  0402                     u400:	
  2212  0402  1283               	bcf	3,5	;RP0=0, select bank0
  2213  0403  1303               	bcf	3,6	;RP1=0, select bank0
  2214  0404  1286               	bcf	6,5	;volatile
  2215  0405  0008               	return
  2216  0406                     __end_of_set_lcd_e:	
  2217                           
  2218                           	psect	text12
  2219  042A                     __ptext12:	
  2220 ;; *************** function _set_lcd_data *****************
  2221 ;; Defined at:
  2222 ;;		line 380 in file "lcd.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  uc_data         1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  uc_data         1    4[COMMON] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         1       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         1       0       0       0       0
  2240 ;;Total ram usage:        1 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_send_lcd_data
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _set_lcd_data
  2252  042A                     _set_lcd_data:	
  2253                           
  2254                           ;incstack = 0
  2255                           ; Regs used in _set_lcd_data: [wreg]
  2256                           ;set_lcd_data@uc_data stored from wreg
  2257  042A  00F4               	movwf	set_lcd_data@uc_data
  2258                           
  2259                           ;lcd.c: 382: PORTD = uc_data;
  2260  042B  0874               	movf	set_lcd_data@uc_data,w
  2261  042C  1283               	bcf	3,5	;RP0=0, select bank0
  2262  042D  1303               	bcf	3,6	;RP1=0, select bank0
  2263  042E  0088               	movwf	8	;volatile
  2264  042F  0008               	return
  2265  0430                     __end_of_set_lcd_data:	
  2266                           
  2267                           	psect	text13
  2268  03A5                     __ptext13:	
  2269 ;; *************** function ___lwmod *****************
  2270 ;; Defined at:
  2271 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  2272 ;; Parameters:    Size  Location     Type
  2273 ;;  divisor         2    4[COMMON] unsigned int 
  2274 ;;  dividend        2    6[COMMON] unsigned int 
  2275 ;; Auto vars:     Size  Location     Type
  2276 ;;  counter         1    9[COMMON] unsigned char 
  2277 ;; Return value:  Size  Location     Type
  2278 ;;                  2    4[COMMON] unsigned int 
  2279 ;; Registers used:
  2280 ;;		wreg, status,2, status,0
  2281 ;; Tracked objects:
  2282 ;;		On entry : 0/0
  2283 ;;		On exit  : 0/0
  2284 ;;		Unchanged: 0/0
  2285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2286 ;;      Params:         4       0       0       0       0
  2287 ;;      Locals:         1       0       0       0       0
  2288 ;;      Temps:          1       0       0       0       0
  2289 ;;      Totals:         6       0       0       0       0
  2290 ;;Total ram usage:        6 bytes
  2291 ;; Hardware stack levels used:    1
  2292 ;; Hardware stack levels required when called:    1
  2293 ;; This function calls:
  2294 ;;		Nothing
  2295 ;; This function is called by:
  2296 ;;		_lcd_bcd
  2297 ;; This function uses a non-reentrant model
  2298 ;;
  2299                           
  2300                           
  2301                           ;psect for function ___lwmod
  2302  03A5                     ___lwmod:	
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  2306  03A5  0874               	movf	___lwmod@divisor,w
  2307  03A6  0475               	iorwf	___lwmod@divisor+1,w
  2308  03A7  1903               	btfsc	3,2
  2309  03A8  2BD2               	goto	l962
  2310  03A9  01F9               	clrf	___lwmod@counter
  2311  03AA  0AF9               	incf	___lwmod@counter,f
  2312  03AB                     l952:	
  2313  03AB  1BF5               	btfsc	___lwmod@divisor+1,7
  2314  03AC  2BB9               	goto	l954
  2315  03AD  3001               	movlw	1
  2316  03AE                     u525:	
  2317  03AE  1003               	clrc
  2318  03AF  0DF4               	rlf	___lwmod@divisor,f
  2319  03B0  0DF5               	rlf	___lwmod@divisor+1,f
  2320  03B1  3EFF               	addlw	-1
  2321  03B2  1D03               	skipz
  2322  03B3  2BAE               	goto	u525
  2323  03B4  3001               	movlw	1
  2324  03B5  00F8               	movwf	??___lwmod
  2325  03B6  0878               	movf	??___lwmod,w
  2326  03B7  07F9               	addwf	___lwmod@counter,f
  2327  03B8  2BAB               	goto	l952
  2328  03B9                     l954:	
  2329  03B9  0875               	movf	___lwmod@divisor+1,w
  2330  03BA  0277               	subwf	___lwmod@dividend+1,w
  2331  03BB  1D03               	skipz
  2332  03BC  2BBF               	goto	u545
  2333  03BD  0874               	movf	___lwmod@divisor,w
  2334  03BE  0276               	subwf	___lwmod@dividend,w
  2335  03BF                     u545:	
  2336  03BF  1C03               	skipc
  2337  03C0  2BC7               	goto	l958
  2338  03C1  0874               	movf	___lwmod@divisor,w
  2339  03C2  02F6               	subwf	___lwmod@dividend,f
  2340  03C3  0875               	movf	___lwmod@divisor+1,w
  2341  03C4  1C03               	skipc
  2342  03C5  03F7               	decf	___lwmod@dividend+1,f
  2343  03C6  02F7               	subwf	___lwmod@dividend+1,f
  2344  03C7                     l958:	
  2345  03C7  3001               	movlw	1
  2346  03C8                     u555:	
  2347  03C8  1003               	clrc
  2348  03C9  0CF5               	rrf	___lwmod@divisor+1,f
  2349  03CA  0CF4               	rrf	___lwmod@divisor,f
  2350  03CB  3EFF               	addlw	-1
  2351  03CC  1D03               	skipz
  2352  03CD  2BC8               	goto	u555
  2353  03CE  3001               	movlw	1
  2354  03CF  02F9               	subwf	___lwmod@counter,f
  2355  03D0  1D03               	btfss	3,2
  2356  03D1  2BB9               	goto	l954
  2357  03D2                     l962:	
  2358  03D2  0877               	movf	___lwmod@dividend+1,w
  2359  03D3  00F5               	movwf	?___lwmod+1
  2360  03D4  0876               	movf	___lwmod@dividend,w
  2361  03D5  00F4               	movwf	?___lwmod
  2362  03D6  0008               	return
  2363  03D7                     __end_of___lwmod:	
  2364                           
  2365                           	psect	text14
  2366  02BE                     __ptext14:	
  2367 ;; *************** function ___lwdiv *****************
  2368 ;; Defined at:
  2369 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  2370 ;; Parameters:    Size  Location     Type
  2371 ;;  divisor         2    4[COMMON] unsigned int 
  2372 ;;  dividend        2    6[COMMON] unsigned int 
  2373 ;; Auto vars:     Size  Location     Type
  2374 ;;  quotient        2    0[BANK0 ] unsigned int 
  2375 ;;  counter         1    2[BANK0 ] unsigned char 
  2376 ;; Return value:  Size  Location     Type
  2377 ;;                  2    4[COMMON] unsigned int 
  2378 ;; Registers used:
  2379 ;;		wreg, status,2, status,0
  2380 ;; Tracked objects:
  2381 ;;		On entry : 0/0
  2382 ;;		On exit  : 0/0
  2383 ;;		Unchanged: 0/0
  2384 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2385 ;;      Params:         4       0       0       0       0
  2386 ;;      Locals:         0       3       0       0       0
  2387 ;;      Temps:          1       0       0       0       0
  2388 ;;      Totals:         5       3       0       0       0
  2389 ;;Total ram usage:        8 bytes
  2390 ;; Hardware stack levels used:    1
  2391 ;; Hardware stack levels required when called:    1
  2392 ;; This function calls:
  2393 ;;		Nothing
  2394 ;; This function is called by:
  2395 ;;		_lcd_bcd
  2396 ;; This function uses a non-reentrant model
  2397 ;;
  2398                           
  2399                           
  2400                           ;psect for function ___lwdiv
  2401  02BE                     ___lwdiv:	
  2402                           
  2403                           ;incstack = 0
  2404                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  2405  02BE  1283               	bcf	3,5	;RP0=0, select bank0
  2406  02BF  1303               	bcf	3,6	;RP1=0, select bank0
  2407  02C0  01A0               	clrf	___lwdiv@quotient
  2408  02C1  01A1               	clrf	___lwdiv@quotient+1
  2409  02C2  0874               	movf	___lwdiv@divisor,w
  2410  02C3  0475               	iorwf	___lwdiv@divisor+1,w
  2411  02C4  1903               	btfsc	3,2
  2412  02C5  2AF7               	goto	l940
  2413  02C6  01A2               	clrf	___lwdiv@counter
  2414  02C7  0AA2               	incf	___lwdiv@counter,f
  2415  02C8                     l928:	
  2416  02C8  1BF5               	btfsc	___lwdiv@divisor+1,7
  2417  02C9  2AD6               	goto	l930
  2418  02CA  3001               	movlw	1
  2419  02CB                     u455:	
  2420  02CB  1003               	clrc
  2421  02CC  0DF4               	rlf	___lwdiv@divisor,f
  2422  02CD  0DF5               	rlf	___lwdiv@divisor+1,f
  2423  02CE  3EFF               	addlw	-1
  2424  02CF  1D03               	skipz
  2425  02D0  2ACB               	goto	u455
  2426  02D1  3001               	movlw	1
  2427  02D2  00F8               	movwf	??___lwdiv
  2428  02D3  0878               	movf	??___lwdiv,w
  2429  02D4  07A2               	addwf	___lwdiv@counter,f
  2430  02D5  2AC8               	goto	l928
  2431  02D6                     l930:	
  2432  02D6  3001               	movlw	1
  2433  02D7                     u475:	
  2434  02D7  1003               	clrc
  2435  02D8  0DA0               	rlf	___lwdiv@quotient,f
  2436  02D9  0DA1               	rlf	___lwdiv@quotient+1,f
  2437  02DA  3EFF               	addlw	-1
  2438  02DB  1D03               	skipz
  2439  02DC  2AD7               	goto	u475
  2440  02DD  0875               	movf	___lwdiv@divisor+1,w
  2441  02DE  0277               	subwf	___lwdiv@dividend+1,w
  2442  02DF  1D03               	skipz
  2443  02E0  2AE3               	goto	u485
  2444  02E1  0874               	movf	___lwdiv@divisor,w
  2445  02E2  0276               	subwf	___lwdiv@dividend,w
  2446  02E3                     u485:	
  2447  02E3  1C03               	skipc
  2448  02E4  2AEC               	goto	l936
  2449  02E5  0874               	movf	___lwdiv@divisor,w
  2450  02E6  02F6               	subwf	___lwdiv@dividend,f
  2451  02E7  0875               	movf	___lwdiv@divisor+1,w
  2452  02E8  1C03               	skipc
  2453  02E9  03F7               	decf	___lwdiv@dividend+1,f
  2454  02EA  02F7               	subwf	___lwdiv@dividend+1,f
  2455  02EB  1420               	bsf	___lwdiv@quotient,0
  2456  02EC                     l936:	
  2457  02EC  3001               	movlw	1
  2458  02ED                     u495:	
  2459  02ED  1003               	clrc
  2460  02EE  0CF5               	rrf	___lwdiv@divisor+1,f
  2461  02EF  0CF4               	rrf	___lwdiv@divisor,f
  2462  02F0  3EFF               	addlw	-1
  2463  02F1  1D03               	skipz
  2464  02F2  2AED               	goto	u495
  2465  02F3  3001               	movlw	1
  2466  02F4  02A2               	subwf	___lwdiv@counter,f
  2467  02F5  1D03               	btfss	3,2
  2468  02F6  2AD6               	goto	l930
  2469  02F7                     l940:	
  2470  02F7  0821               	movf	___lwdiv@quotient+1,w
  2471  02F8  00F5               	movwf	?___lwdiv+1
  2472  02F9  0820               	movf	___lwdiv@quotient,w
  2473  02FA  00F4               	movwf	?___lwdiv
  2474  02FB  0008               	return
  2475  02FC                     __end_of___lwdiv:	
  2476                           
  2477                           	psect	text15
  2478  0430                     __ptext15:	
  2479 ;; *************** function _InitApp *****************
  2480 ;; Defined at:
  2481 ;;		line 22 in file "user.c"
  2482 ;; Parameters:    Size  Location     Type
  2483 ;;		None
  2484 ;; Auto vars:     Size  Location     Type
  2485 ;;		None
  2486 ;; Return value:  Size  Location     Type
  2487 ;;                  1    wreg      void 
  2488 ;; Registers used:
  2489 ;;		None
  2490 ;; Tracked objects:
  2491 ;;		On entry : 0/0
  2492 ;;		On exit  : 0/0
  2493 ;;		Unchanged: 0/0
  2494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2495 ;;      Params:         0       0       0       0       0
  2496 ;;      Locals:         0       0       0       0       0
  2497 ;;      Temps:          0       0       0       0       0
  2498 ;;      Totals:         0       0       0       0       0
  2499 ;;Total ram usage:        0 bytes
  2500 ;; Hardware stack levels used:    1
  2501 ;; Hardware stack levels required when called:    1
  2502 ;; This function calls:
  2503 ;;		Nothing
  2504 ;; This function is called by:
  2505 ;;		_main
  2506 ;; This function uses a non-reentrant model
  2507 ;;
  2508                           
  2509                           
  2510                           ;psect for function _InitApp
  2511  0430                     _InitApp:	
  2512                           
  2513                           ;incstack = 0
  2514                           ; Regs used in _InitApp: []
  2515  0430  0008               	return
  2516  0431                     __end_of_InitApp:	
  2517                           
  2518                           	psect	text16
  2519  0406                     __ptext16:	
  2520 ;; *************** function _isr *****************
  2521 ;; Defined at:
  2522 ;;		line 23 in file "interrupts.c"
  2523 ;; Parameters:    Size  Location     Type
  2524 ;;		None
  2525 ;; Auto vars:     Size  Location     Type
  2526 ;;		None
  2527 ;; Return value:  Size  Location     Type
  2528 ;;                  1    wreg      void 
  2529 ;; Registers used:
  2530 ;;		None
  2531 ;; Tracked objects:
  2532 ;;		On entry : 0/0
  2533 ;;		On exit  : 0/0
  2534 ;;		Unchanged: 0/0
  2535 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2536 ;;      Params:         0       0       0       0       0
  2537 ;;      Locals:         0       0       0       0       0
  2538 ;;      Temps:          4       0       0       0       0
  2539 ;;      Totals:         4       0       0       0       0
  2540 ;;Total ram usage:        4 bytes
  2541 ;; Hardware stack levels used:    1
  2542 ;; This function calls:
  2543 ;;		Nothing
  2544 ;; This function is called by:
  2545 ;;		Interrupt level 1
  2546 ;; This function uses a non-reentrant model
  2547 ;;
  2548                           
  2549                           
  2550                           ;psect for function _isr
  2551  0406                     _isr:	
  2552  0406  0873               	movf	??_isr+3,w
  2553  0407  00FF               	movwf	127
  2554  0408  0872               	movf	??_isr+2,w
  2555  0409  008A               	movwf	10
  2556  040A  0871               	movf	??_isr+1,w
  2557  040B  0084               	movwf	4
  2558  040C  0E70               	swapf	??_isr^(0+-128),w
  2559  040D  0083               	movwf	3
  2560  040E  0EFE               	swapf	126,f
  2561  040F  0E7E               	swapf	126,w
  2562  0410  0009               	retfie
  2563  0411                     __end_of_isr:	
  2564  007E                     btemp	set	126	;btemp
  2565  007E                     wtemp0	set	126
  2566                           
  2567                           	psect	intentry
  2568  0004                     __pintentry:	
  2569                           ;incstack = 0
  2570                           ; Regs used in _isr: []
  2571                           
  2572  0004                     interrupt_function:	
  2573  007E                     saved_w	set	btemp
  2574  0004  00FE               	movwf	btemp
  2575  0005  0E03               	swapf	3,w
  2576  0006  00F0               	movwf	??_isr
  2577  0007  0804               	movf	4,w
  2578  0008  00F1               	movwf	??_isr+1
  2579  0009  080A               	movf	10,w
  2580  000A  00F2               	movwf	??_isr+2
  2581  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2582  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2583  000D  087F               	movf	btemp+1,w
  2584  000E  00F3               	movwf	??_isr+3
  2585  000F  120A  118A  2C06   	ljmp	_isr


Data Sizes:
    Strings     58
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     36      46
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_putstr@csz_string	PTR const unsigned char  size(1) Largest target is 11
		 -> STR_11(CODE[8]), STR_10(CODE[9]), STR_9(CODE[9]), STR_8(CODE[8]), 
		 -> STR_7(CODE[8]), STR_6(CODE[9]), STR_5(CODE[9]), STR_4(CODE[8]), 
		 -> STR_3(CODE[6]), STR_2(CODE[7]), STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    _main->_lcd_goto
    _main->_lcd_home
    _lcd_putstr->_lcd_2ndline
    _lcd_putstr->_lcd_putchar
    _lcd_2ndline->_send_lcd_data
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_goto->_send_lcd_data
    _lcd_bcd->___lwmod
    _lcd_bcd->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_putstr->_lcd_putchar
    _lcd_bcd->___lwdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                16    16      0    6876
                                             20 BANK0     16    16      0
                            _InitApp
                            _lcd_bcd
                          _lcd_clear
                           _lcd_goto
                           _lcd_home
                     _lcd_initialize
                         _lcd_putstr
 ---------------------------------------------------------------------------------
 (1) _lcd_putstr                                           2     2      0    1476
                                              1 BANK0      2     2      0
                        _lcd_2ndline
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_2ndline                                          1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_goto                                             2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2296
                                              3 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (3) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (4) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     583
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_clear
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_goto
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e
   _lcd_putstr
     _lcd_2ndline
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      38       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     24      2E       5       57.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      38      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Thu Dec 28 18:51:17 2017

                      pc 0002             ?_lcd_putchar 0070              __CFG_CP$OFF 0000  
                     l61 0128                       l70 017C                       l55 00EB  
                     l64 013F                       l56 00F5                       l65 0149  
                     fsr 0004                      l930 02D6                      l940 02F7  
                    l936 02EC                      l928 02C8                      l952 03AB  
                    l954 03B9                      l962 03D2                      l958 03C7  
                    l990 0331                      l992 02FF                      l986 031D  
                    l988 0323                      _RB0 0030                      _RB1 0031  
                    _RB4 0034                      _RB5 0035                      _RB6 0036  
                    _RB7 0037                      u400 0402                      u420 03F7  
                    u600 01BB             __CFG_CPD$OFF 0000                      u525 03AE  
                    u455 02CB                      u545 03BF                      u475 02D7  
                    u555 03C8                      u485 02E3                      u495 02ED  
                    u807 0387                      u655 0094                      u817 0395  
                    u755 015F                      u695 010B                      u797 0344  
                    _isr 0406                      fsr0 0004                      indf 0000  
           __CFG_FOSC$HS 0000        set_lcd_e@b_output 0074             __CFG_LVP$OFF 0000  
                   l1018 0268                     l1126 0157                     l1150 01A7  
                   l1144 0192                     l1056 0060                     l1148 0197  
                   l1076 00A9                     l1068 008E                     l1078 00AE  
                   l1098 0103                     l1188 019C                     ?_isr 0070  
                   STR_1 0284                     STR_2 02B1                     STR_3 02B8  
                   STR_4 02A1                     STR_5 028F                     STR_6 028F  
                   STR_7 02A1                     STR_8 02A9                     STR_9 0298  
            main@button1 003E              main@button2 0042             __CFG_WRT$OFF 0000  
                   _main 0025                     btemp 007E            __CFG_BOREN$ON 0000  
                   start 0012          __end_of_InitApp 0431                    ??_isr 0070  
                  ?_main 0070                    STR_10 0298                    STR_11 02A9  
          __CFG_WDTE$OFF 0000          __end_of___lwdiv 02FC          __end_of___lwmod 03D7  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088     send_lcd_data@uc_data 0075  
          __CFG_PWRTE$ON 0000          __end_of_lcd_bcd 027E                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 0015  
      send_lcd_data@b_rs 0078             __end_of_main 01B0     __size_of_lcd_2ndline 0009  
  __end_of_send_lcd_data 03A5                   ??_main 0034                ??_InitApp 0074  
       __end_of_lcd_home 0423         __end_of_lcd_goto 03E4                ??___lwdiv 0078  
              ??___lwmod 0078                ??_lcd_bcd 0025     __size_of_lcd_putchar 000C  
                 saved_w 007E         ??_lcd_initialize 0020  __end_of__initialization 0021  
         __pcstackCOMMON 0070       __size_of_lcd_clear 0007               __pbssBANK0 0044  
             __pmaintext 0025               __pintentry 0004       __size_of_set_lcd_e 000B  
             _lcd_putstr 02FC                ?_lcd_home 0070                ?_lcd_goto 0070  
             __stringtab 027E            ?_set_lcd_data 0070                  _InitApp 0430  
      __end_of_lcd_clear 042A                  ___lwdiv 02BE                  ___lwmod 03A5  
                __ptext1 02FC                  __ptext2 0411                  __ptext3 0338  
                __ptext4 0423                  __ptext5 041A                  __ptext6 03D7  
                __ptext7 01B0                  __ptext8 03E4                  __ptext9 0370  
                _lcd_bcd 01B0             __size_of_isr 000B               ??_lcd_home 0079  
             ??_lcd_goto 0079     end_of_initialization 0021        lcd_bcd@ui_decimal 0029  
         ??_set_lcd_data 0074        __end_of_set_lcd_e 0406               _set_lcd_rs 03F0  
          ??_lcd_2ndline 0079              ?_lcd_putstr 0070   __size_of_send_lcd_data 0035  
          ??_lcd_putchar 0079        lcd_putchar@c_data 0020      __end_of_lcd_2ndline 041A  
    start_initialization 0015       set_lcd_rs@b_output 0074              __end_of_isr 0411  
   lcd_putstr@csz_string 0022      lcd_goto@uc_position 0020              ?_set_lcd_rs 0070  
    __size_of_lcd_putstr 003C            _send_lcd_data 0370     __end_of_set_lcd_data 0430  
    __end_of_lcd_putchar 03F0                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_lcd_home 0009        __size_of_lcd_goto 000D                 ?_InitApp 0070  
__size_of_lcd_initialize 0038         ___lwdiv@dividend 0076              _lcd_2ndline 0411  
               ?___lwdiv 0074                 ?___lwmod 0074                _lcd_clear 0423  
         ?_send_lcd_data 0075                __pstrings 027E                 ?_lcd_bcd 0023  
    __size_of_set_lcd_rs 000B         ___lwdiv@quotient 0020      set_lcd_data@uc_data 0074  
      interrupt_function 0004                _set_lcd_e 03FB         lcd_bcd@ui_number 0023  
            _lcd_putchar 03E4               ?_lcd_clear 0070              __stringbase 0283  
        main@lastbutton1 003A          main@lastbutton2 003C                main@count 0036  
           ??_lcd_putstr 0021         __size_of_InitApp 0001               ?_set_lcd_e 0070  
  __size_of_set_lcd_data 0006          ??_send_lcd_data 0076         __size_of___lwdiv 003E  
     __end_of_lcd_putstr 0338         __size_of___lwmod 0032       __end_of__stringtab 0284  
       __size_of_lcd_bcd 00CE          ___lwdiv@divisor 0074          ___lwdiv@counter 0022  
               __ptext10 03F0                 __ptext11 03FB                 __ptext12 042A  
               __ptext13 03A5                 __ptext14 02BE                 __ptext15 0430  
               __ptext16 0406                 _lcd_home 041A                 _lcd_goto 03D7  
          __size_of_main 018B          lcd_bcd@uc_digit 0033             _set_lcd_data 042A  
         _lcd_initialize 0338             ??_set_lcd_rs 0074              ??_lcd_clear 0079  
               main@menu 0040                 main@time 0038       __end_of_set_lcd_rs 03FB  
               intlevel1 0000         ___lwmod@dividend 0076   __end_of_lcd_initialize 0370  
              stringcode 027E              ??_set_lcd_e 0074             ?_lcd_2ndline 0070  
           lcd_bcd@F1134 0044          ___lwmod@divisor 0074          ___lwmod@counter 0079  
               stringdir 027E                 stringtab 027E          ?_lcd_initialize 0070  
