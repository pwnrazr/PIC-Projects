

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Fri Apr 27 20:05:29 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	text7,local,class=CODE,merge=1,delta=2
    16                           	psect	text8,local,class=CODE,merge=1,delta=2
    17                           	psect	text9,local,class=CODE,merge=1,delta=2
    18                           	psect	text10,local,class=CODE,merge=1,delta=2,group=2
    19                           	psect	text11,local,class=CODE,merge=1,delta=2,group=2
    20                           	psect	text12,local,class=CODE,merge=1,delta=2
    21                           	psect	text13,local,class=CODE,merge=1,delta=2
    22                           	psect	text14,local,class=CODE,merge=1,delta=2
    23                           	psect	text15,local,class=CODE,merge=1,delta=2
    24                           	psect	text16,local,class=CODE,merge=1,delta=2
    25                           	psect	text17,local,class=CODE,merge=1,delta=2
    26                           	psect	intentry,global,class=CODE,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 1.45
    30                           ; Generated 16/11/2017 GMT
    31                           ; 
    32                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0000                     	;# 
   184  0001                     	;# 
   185  0002                     	;# 
   186  0003                     	;# 
   187  0004                     	;# 
   188  0005                     	;# 
   189  0006                     	;# 
   190  0007                     	;# 
   191  0008                     	;# 
   192  0009                     	;# 
   193  000A                     	;# 
   194  000B                     	;# 
   195  000C                     	;# 
   196  000D                     	;# 
   197  000E                     	;# 
   198  000E                     	;# 
   199  000F                     	;# 
   200  0010                     	;# 
   201  0011                     	;# 
   202  0012                     	;# 
   203  0013                     	;# 
   204  0014                     	;# 
   205  0015                     	;# 
   206  0015                     	;# 
   207  0016                     	;# 
   208  0017                     	;# 
   209  0018                     	;# 
   210  0019                     	;# 
   211  001A                     	;# 
   212  001B                     	;# 
   213  001B                     	;# 
   214  001C                     	;# 
   215  001D                     	;# 
   216  001E                     	;# 
   217  001F                     	;# 
   218  0081                     	;# 
   219  0085                     	;# 
   220  0086                     	;# 
   221  0087                     	;# 
   222  0088                     	;# 
   223  0089                     	;# 
   224  008C                     	;# 
   225  008D                     	;# 
   226  008E                     	;# 
   227  0091                     	;# 
   228  0092                     	;# 
   229  0093                     	;# 
   230  0094                     	;# 
   231  0098                     	;# 
   232  0099                     	;# 
   233  009C                     	;# 
   234  009D                     	;# 
   235  009E                     	;# 
   236  009F                     	;# 
   237  010C                     	;# 
   238  010D                     	;# 
   239  010E                     	;# 
   240  010F                     	;# 
   241  018C                     	;# 
   242  018D                     	;# 
   243  0000                     	;# 
   244  0001                     	;# 
   245  0002                     	;# 
   246  0003                     	;# 
   247  0004                     	;# 
   248  0005                     	;# 
   249  0006                     	;# 
   250  0007                     	;# 
   251  0008                     	;# 
   252  0009                     	;# 
   253  000A                     	;# 
   254  000B                     	;# 
   255  000C                     	;# 
   256  000D                     	;# 
   257  000E                     	;# 
   258  000E                     	;# 
   259  000F                     	;# 
   260  0010                     	;# 
   261  0011                     	;# 
   262  0012                     	;# 
   263  0013                     	;# 
   264  0014                     	;# 
   265  0015                     	;# 
   266  0015                     	;# 
   267  0016                     	;# 
   268  0017                     	;# 
   269  0018                     	;# 
   270  0019                     	;# 
   271  001A                     	;# 
   272  001B                     	;# 
   273  001B                     	;# 
   274  001C                     	;# 
   275  001D                     	;# 
   276  001E                     	;# 
   277  001F                     	;# 
   278  0081                     	;# 
   279  0085                     	;# 
   280  0086                     	;# 
   281  0087                     	;# 
   282  0088                     	;# 
   283  0089                     	;# 
   284  008C                     	;# 
   285  008D                     	;# 
   286  008E                     	;# 
   287  0091                     	;# 
   288  0092                     	;# 
   289  0093                     	;# 
   290  0094                     	;# 
   291  0098                     	;# 
   292  0099                     	;# 
   293  009C                     	;# 
   294  009D                     	;# 
   295  009E                     	;# 
   296  009F                     	;# 
   297  010C                     	;# 
   298  010D                     	;# 
   299  010E                     	;# 
   300  010F                     	;# 
   301  018C                     	;# 
   302  018D                     	;# 
   303  0000                     	;# 
   304  0001                     	;# 
   305  0002                     	;# 
   306  0003                     	;# 
   307  0004                     	;# 
   308  0005                     	;# 
   309  0006                     	;# 
   310  0007                     	;# 
   311  0008                     	;# 
   312  0009                     	;# 
   313  000A                     	;# 
   314  000B                     	;# 
   315  000C                     	;# 
   316  000D                     	;# 
   317  000E                     	;# 
   318  000E                     	;# 
   319  000F                     	;# 
   320  0010                     	;# 
   321  0011                     	;# 
   322  0012                     	;# 
   323  0013                     	;# 
   324  0014                     	;# 
   325  0015                     	;# 
   326  0015                     	;# 
   327  0016                     	;# 
   328  0017                     	;# 
   329  0018                     	;# 
   330  0019                     	;# 
   331  001A                     	;# 
   332  001B                     	;# 
   333  001B                     	;# 
   334  001C                     	;# 
   335  001D                     	;# 
   336  001E                     	;# 
   337  001F                     	;# 
   338  0081                     	;# 
   339  0085                     	;# 
   340  0086                     	;# 
   341  0087                     	;# 
   342  0088                     	;# 
   343  0089                     	;# 
   344  008C                     	;# 
   345  008D                     	;# 
   346  008E                     	;# 
   347  0091                     	;# 
   348  0092                     	;# 
   349  0093                     	;# 
   350  0094                     	;# 
   351  0098                     	;# 
   352  0099                     	;# 
   353  009C                     	;# 
   354  009D                     	;# 
   355  009E                     	;# 
   356  009F                     	;# 
   357  010C                     	;# 
   358  010D                     	;# 
   359  010E                     	;# 
   360  010F                     	;# 
   361  018C                     	;# 
   362  018D                     	;# 
   363  0000                     	;# 
   364  0001                     	;# 
   365  0002                     	;# 
   366  0003                     	;# 
   367  0004                     	;# 
   368  0005                     	;# 
   369  0006                     	;# 
   370  0007                     	;# 
   371  0008                     	;# 
   372  0009                     	;# 
   373  000A                     	;# 
   374  000B                     	;# 
   375  000C                     	;# 
   376  000D                     	;# 
   377  000E                     	;# 
   378  000E                     	;# 
   379  000F                     	;# 
   380  0010                     	;# 
   381  0011                     	;# 
   382  0012                     	;# 
   383  0013                     	;# 
   384  0014                     	;# 
   385  0015                     	;# 
   386  0015                     	;# 
   387  0016                     	;# 
   388  0017                     	;# 
   389  0018                     	;# 
   390  0019                     	;# 
   391  001A                     	;# 
   392  001B                     	;# 
   393  001B                     	;# 
   394  001C                     	;# 
   395  001D                     	;# 
   396  001E                     	;# 
   397  001F                     	;# 
   398  0081                     	;# 
   399  0085                     	;# 
   400  0086                     	;# 
   401  0087                     	;# 
   402  0088                     	;# 
   403  0089                     	;# 
   404  008C                     	;# 
   405  008D                     	;# 
   406  008E                     	;# 
   407  0091                     	;# 
   408  0092                     	;# 
   409  0093                     	;# 
   410  0094                     	;# 
   411  0098                     	;# 
   412  0099                     	;# 
   413  009C                     	;# 
   414  009D                     	;# 
   415  009E                     	;# 
   416  009F                     	;# 
   417  010C                     	;# 
   418  010D                     	;# 
   419  010E                     	;# 
   420  010F                     	;# 
   421  018C                     	;# 
   422  018D                     	;# 
   423  0009                     _PORTE	set	9
   424  0008                     _PORTD	set	8
   425  0006                     _PORTB	set	6
   426  0005                     _PORTA	set	5
   427  0007                     _PORTC	set	7
   428  0034                     _RB4	set	52
   429  0035                     _RB5	set	53
   430  004A                     _RE2	set	74
   431  002B                     _RA3	set	43
   432  002A                     _RA2	set	42
   433  0029                     _RA1	set	41
   434  0049                     _RE1	set	73
   435  0028                     _RA0	set	40
   436  0089                     _TRISE	set	137
   437  0088                     _TRISD	set	136
   438  0086                     _TRISB	set	134
   439  0085                     _TRISA	set	133
   440  0087                     _TRISC	set	135
   441                           
   442                           ; #config settings
   443  0000                     
   444                           	psect	cinit
   445  0015                     start_initialization:	
   446  0015                     __initialization:	
   447                           
   448                           ; Clear objects allocated to BANK0
   449  0015  1283               	bcf	3,5	;RP0=0, select bank0
   450  0016  1303               	bcf	3,6	;RP1=0, select bank0
   451  0017  01B7               	clrf	__pbssBANK0& (0+127)
   452  0018  01B8               	clrf	(__pbssBANK0+1)& (0+127)
   453  0019  01B9               	clrf	(__pbssBANK0+2)& (0+127)
   454  001A  01BA               	clrf	(__pbssBANK0+3)& (0+127)
   455  001B  01BB               	clrf	(__pbssBANK0+4)& (0+127)
   456  001C  01BC               	clrf	(__pbssBANK0+5)& (0+127)
   457  001D  01BD               	clrf	(__pbssBANK0+6)& (0+127)
   458  001E  01BE               	clrf	(__pbssBANK0+7)& (0+127)
   459  001F  01BF               	clrf	(__pbssBANK0+8)& (0+127)
   460  0020  01C0               	clrf	(__pbssBANK0+9)& (0+127)
   461  0021                     end_of_initialization:	
   462                           ;End of C runtime variable initialization code
   463                           
   464  0021                     __end_of__initialization:	
   465  0021  0183               	clrf	3
   466  0022  120A  118A  28F3   	ljmp	_main	;jump to C main() function
   467                           
   468                           	psect	bssBANK0
   469  0037                     __pbssBANK0:	
   470  0037                     lcd_bcd@F1134:	
   471  0037                     	ds	10
   472                           
   473                           	psect	cstackCOMMON
   474  0070                     __pcstackCOMMON:	
   475  0070                     ?_InitApp:	
   476  0070                     ?_lcd_initialize:	
   477                           ; 1 bytes @ 0x0
   478                           
   479  0070                     ?_lcd_home:	
   480                           ; 1 bytes @ 0x0
   481                           
   482  0070                     ?_set_lcd_e:	
   483                           ; 1 bytes @ 0x0
   484                           
   485  0070                     ?_lcd_clear:	
   486                           ; 1 bytes @ 0x0
   487                           
   488  0070                     ?_set_lcd_rs:	
   489                           ; 1 bytes @ 0x0
   490                           
   491  0070                     ?_set_lcd_data:	
   492                           ; 1 bytes @ 0x0
   493                           
   494  0070                     ?_isr:	
   495                           ; 1 bytes @ 0x0
   496                           
   497  0070                     ??_isr:	
   498                           ; 1 bytes @ 0x0
   499                           
   500  0070                     ?_SRAMinit:	
   501                           ; 1 bytes @ 0x0
   502                           
   503  0070                     ?_main:	
   504                           ; 1 bytes @ 0x0
   505                           
   506  0070                     ?_lcd_putchar:	
   507                           ; 1 bytes @ 0x0
   508                           
   509                           
   510                           ; 1 bytes @ 0x0
   511  0070                     	ds	4
   512  0074                     ??_InitApp:	
   513  0074                     ??_set_lcd_e:	
   514                           ; 1 bytes @ 0x4
   515                           
   516  0074                     ??_set_lcd_rs:	
   517                           ; 1 bytes @ 0x4
   518                           
   519  0074                     ??_set_lcd_data:	
   520                           ; 1 bytes @ 0x4
   521                           
   522  0074                     ?_shiftOut:	
   523                           ; 1 bytes @ 0x4
   524                           
   525  0074                     ??_SRAMinit:	
   526                           ; 1 bytes @ 0x4
   527                           
   528  0074                     ?___lwdiv:	
   529                           ; 1 bytes @ 0x4
   530                           
   531  0074                     ?___lwmod:	
   532                           ; 2 bytes @ 0x4
   533                           
   534  0074                     set_lcd_e@b_output:	
   535                           ; 2 bytes @ 0x4
   536                           
   537  0074                     set_lcd_rs@b_output:	
   538                           ; 1 bytes @ 0x4
   539                           
   540  0074                     set_lcd_data@uc_data:	
   541                           ; 1 bytes @ 0x4
   542                           
   543  0074                     shiftOut@val:	
   544                           ; 1 bytes @ 0x4
   545                           
   546  0074                     ___lwdiv@divisor:	
   547                           ; 2 bytes @ 0x4
   548                           
   549  0074                     ___lwmod@divisor:	
   550                           ; 2 bytes @ 0x4
   551                           
   552                           
   553                           ; 2 bytes @ 0x4
   554  0074                     	ds	1
   555  0075                     ?_send_lcd_data:	
   556  0075                     send_lcd_data@uc_data:	
   557                           ; 1 bytes @ 0x5
   558                           
   559                           
   560                           ; 1 bytes @ 0x5
   561  0075                     	ds	1
   562  0076                     ??_send_lcd_data:	
   563  0076                     shiftOut@bitOrder:	
   564                           ; 1 bytes @ 0x6
   565                           
   566  0076                     ___lwdiv@dividend:	
   567                           ; 1 bytes @ 0x6
   568                           
   569  0076                     ___lwmod@dividend:	
   570                           ; 2 bytes @ 0x6
   571                           
   572                           
   573                           ; 2 bytes @ 0x6
   574  0076                     	ds	1
   575  0077                     shiftOut@i:	
   576                           
   577                           ; 2 bytes @ 0x7
   578  0077                     	ds	1
   579  0078                     ??___lwdiv:	
   580  0078                     ??___lwmod:	
   581                           ; 1 bytes @ 0x8
   582                           
   583  0078                     send_lcd_data@b_rs:	
   584                           ; 1 bytes @ 0x8
   585                           
   586                           
   587                           ; 1 bytes @ 0x8
   588  0078                     	ds	1
   589  0079                     ??_lcd_home:	
   590  0079                     ??_lcd_clear:	
   591                           ; 1 bytes @ 0x9
   592                           
   593  0079                     ??_SRAMread:	
   594                           ; 1 bytes @ 0x9
   595                           
   596  0079                     ??_SRAMwrite:	
   597                           ; 1 bytes @ 0x9
   598                           
   599  0079                     ??_lcd_putchar:	
   600                           ; 1 bytes @ 0x9
   601                           
   602  0079                     ___lwmod@counter:	
   603                           ; 1 bytes @ 0x9
   604                           
   605                           
   606                           ; 1 bytes @ 0x9
   607  0079                     	ds	1
   608                           
   609                           	psect	cstackBANK0
   610  0020                     __pcstackBANK0:	
   611  0020                     ??_lcd_initialize:	
   612  0020                     ??_shiftOut:	
   613                           ; 1 bytes @ 0x0
   614                           
   615  0020                     lcd_putchar@c_data:	
   616                           ; 1 bytes @ 0x0
   617                           
   618  0020                     ___lwdiv@quotient:	
   619                           ; 1 bytes @ 0x0
   620                           
   621                           
   622                           ; 2 bytes @ 0x0
   623  0020                     	ds	2
   624  0022                     ___lwdiv@counter:	
   625                           
   626                           ; 1 bytes @ 0x2
   627  0022                     	ds	1
   628  0023                     ?_lcd_bcd:	
   629  0023                     lcd_bcd@ui_number:	
   630                           ; 1 bytes @ 0x3
   631                           
   632                           
   633                           ; 2 bytes @ 0x3
   634  0023                     	ds	2
   635  0025                     ??_lcd_bcd:	
   636  0025                     ?_SRAMread:	
   637                           ; 1 bytes @ 0x5
   638                           
   639  0025                     ?_SRAMwrite:	
   640                           ; 1 bytes @ 0x5
   641                           
   642  0025                     SRAMread@address:	
   643                           ; 1 bytes @ 0x5
   644                           
   645  0025                     SRAMwrite@address:	
   646                           ; 2 bytes @ 0x5
   647                           
   648                           
   649                           ; 2 bytes @ 0x5
   650  0025                     	ds	2
   651  0027                     SRAMread@dataRecv:	
   652  0027                     SRAMwrite@dataSend:	
   653                           ; 1 bytes @ 0x7
   654                           
   655                           
   656                           ; 1 bytes @ 0x7
   657  0027                     	ds	2
   658  0029                     lcd_bcd@ui_decimal:	
   659                           
   660                           ; 10 bytes @ 0x9
   661  0029                     	ds	10
   662  0033                     lcd_bcd@uc_digit:	
   663                           
   664                           ; 1 bytes @ 0x13
   665  0033                     	ds	1
   666  0034                     ??_main:	
   667                           
   668                           ; 1 bytes @ 0x14
   669  0034                     	ds	2
   670  0036                     main@add:	
   671                           
   672                           ; 1 bytes @ 0x16
   673  0036                     	ds	1
   674                           
   675                           	psect	maintext
   676  00F3                     __pmaintext:	
   677 ;;
   678 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   679 ;;
   680 ;; *************** function _main *****************
   681 ;; Defined at:
   682 ;;		line 91 in file "main.c"
   683 ;; Parameters:    Size  Location     Type
   684 ;;		None
   685 ;; Auto vars:     Size  Location     Type
   686 ;;  j               2    0        unsigned int 
   687 ;;  add             1   22[BANK0 ] unsigned char 
   688 ;; Return value:  Size  Location     Type
   689 ;;                  1    wreg      void 
   690 ;; Registers used:
   691 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
   692 ;; Tracked objects:
   693 ;;		On entry : B00/0
   694 ;;		On exit  : 0/0
   695 ;;		Unchanged: 0/0
   696 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   697 ;;      Params:         0       0       0       0       0
   698 ;;      Locals:         0       1       0       0       0
   699 ;;      Temps:          0       2       0       0       0
   700 ;;      Totals:         0       3       0       0       0
   701 ;;Total ram usage:        3 bytes
   702 ;; Hardware stack levels required when called:    5
   703 ;; This function calls:
   704 ;;		_InitApp
   705 ;;		_SRAMinit
   706 ;;		_SRAMread
   707 ;;		_SRAMwrite
   708 ;;		_lcd_bcd
   709 ;;		_lcd_home
   710 ;;		_lcd_initialize
   711 ;; This function is called by:
   712 ;;		Startup code after reset
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _main
   718  00F3                     _main:	
   719                           
   720                           ;main.c: 94: InitApp();
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
   724  00F3  120A  118A  234C  120A  118A  	fcall	_InitApp
   725                           
   726                           ;main.c: 96: PORTA = 0;
   727  00F8  1283               	bcf	3,5	;RP0=0, select bank0
   728  00F9  1303               	bcf	3,6	;RP1=0, select bank0
   729  00FA  0185               	clrf	5	;volatile
   730                           
   731                           ;main.c: 97: PORTB = 0;
   732  00FB  0186               	clrf	6	;volatile
   733                           
   734                           ;main.c: 98: PORTC = 0;
   735  00FC  0187               	clrf	7	;volatile
   736                           
   737                           ;main.c: 99: PORTD = 0;
   738  00FD  0188               	clrf	8	;volatile
   739                           
   740                           ;main.c: 100: PORTE = 0;
   741  00FE  0189               	clrf	9	;volatile
   742                           
   743                           ;main.c: 102: TRISA = 0b00000000;
   744  00FF  1683               	bsf	3,5	;RP0=1, select bank1
   745  0100  1303               	bcf	3,6	;RP1=0, select bank1
   746  0101  0185               	clrf	5	;volatile
   747                           
   748                           ;main.c: 103: TRISB = 0b00000011;
   749  0102  3003               	movlw	3
   750  0103  0086               	movwf	6	;volatile
   751                           
   752                           ;main.c: 104: TRISC = 0b11111111;
   753  0104  30FF               	movlw	255
   754  0105  0087               	movwf	7	;volatile
   755                           
   756                           ;main.c: 105: TRISD = 0b00000000;
   757  0106  0188               	clrf	8	;volatile
   758                           
   759                           ;main.c: 106: TRISE = 0b0000;
   760  0107  0189               	clrf	9	;volatile
   761                           
   762                           ;main.c: 108: lcd_initialize();
   763  0108  120A  118A  2264  120A  118A  	fcall	_lcd_initialize
   764                           
   765                           ;main.c: 147: unsigned int j;
   766                           ;main.c: 148: uint8_t add = 69;
   767  010D  3045               	movlw	69
   768  010E  1283               	bcf	3,5	;RP0=0, select bank0
   769  010F  1303               	bcf	3,6	;RP1=0, select bank0
   770  0110  00B4               	movwf	??_main
   771  0111  0834               	movf	??_main,w
   772  0112  00B6               	movwf	main@add
   773                           
   774                           ;main.c: 149: SRAMinit();
   775  0113  120A  118A  2346  120A  118A  	fcall	_SRAMinit
   776  0118                     l1076:	
   777                           ;main.c: 153: while(1)
   778                           
   779                           
   780                           ;main.c: 154: {
   781                           ;main.c: 155: add = SRAMread(50);
   782  0118  3032               	movlw	50
   783  0119  1283               	bcf	3,5	;RP0=0, select bank0
   784  011A  1303               	bcf	3,6	;RP1=0, select bank0
   785  011B  00A5               	movwf	SRAMread@address
   786  011C  3000               	movlw	0
   787  011D  00A6               	movwf	SRAMread@address+1
   788  011E  120A  118A  222B  120A  118A  	fcall	_SRAMread
   789  0123  1283               	bcf	3,5	;RP0=0, select bank0
   790  0124  1303               	bcf	3,6	;RP1=0, select bank0
   791  0125  00B4               	movwf	??_main
   792  0126  0834               	movf	??_main,w
   793  0127  00B6               	movwf	main@add
   794                           
   795                           ;main.c: 156: lcd_home();
   796  0128  120A  118A  2330  120A  118A  	fcall	_lcd_home
   797                           
   798                           ;main.c: 157: lcd_bcd(5,PORTC);
   799  012D  1283               	bcf	3,5	;RP0=0, select bank0
   800  012E  1303               	bcf	3,6	;RP1=0, select bank0
   801  012F  0807               	movf	7,w	;volatile
   802  0130  00B4               	movwf	??_main
   803  0131  01B5               	clrf	??_main+1
   804  0132  0834               	movf	??_main,w
   805  0133  00A3               	movwf	lcd_bcd@ui_number
   806  0134  0835               	movf	??_main+1,w
   807  0135  00A4               	movwf	lcd_bcd@ui_number+1
   808  0136  3005               	movlw	5
   809  0137  120A  118A  2025  120A  118A  	fcall	_lcd_bcd
   810                           
   811                           ;main.c: 158: add++;
   812  013C  3001               	movlw	1
   813  013D  1283               	bcf	3,5	;RP0=0, select bank0
   814  013E  1303               	bcf	3,6	;RP1=0, select bank0
   815  013F  00B4               	movwf	??_main
   816  0140  0834               	movf	??_main,w
   817  0141  07B6               	addwf	main@add,f
   818                           
   819                           ;main.c: 159: SRAMwrite(8, add);
   820  0142  3008               	movlw	8
   821  0143  00A5               	movwf	SRAMwrite@address
   822  0144  3000               	movlw	0
   823  0145  00A6               	movwf	SRAMwrite@address+1
   824  0146  0836               	movf	main@add,w
   825  0147  00B4               	movwf	??_main
   826  0148  0834               	movf	??_main,w
   827  0149  00A7               	movwf	SRAMwrite@dataSend
   828  014A  120A  118A  21EE  120A  118A  	fcall	_SRAMwrite
   829                           
   830                           ;main.c: 160: PORTC = 0;
   831  014F  1283               	bcf	3,5	;RP0=0, select bank0
   832  0150  1303               	bcf	3,6	;RP1=0, select bank0
   833  0151  0187               	clrf	7	;volatile
   834  0152  2918               	goto	l1076
   835  0153                     __end_of_main:	
   836                           
   837                           	psect	text1
   838  0264                     __ptext1:	
   839 ;; *************** function _lcd_initialize *****************
   840 ;; Defined at:
   841 ;;		line 100 in file "lcd.c"
   842 ;; Parameters:    Size  Location     Type
   843 ;;		None
   844 ;; Auto vars:     Size  Location     Type
   845 ;;		None
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0, pclath, cstack
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         0       0       0       0       0
   856 ;;      Locals:         0       0       0       0       0
   857 ;;      Temps:          0       2       0       0       0
   858 ;;      Totals:         0       2       0       0       0
   859 ;;Total ram usage:        2 bytes
   860 ;; Hardware stack levels used:    1
   861 ;; Hardware stack levels required when called:    4
   862 ;; This function calls:
   863 ;;		_lcd_clear
   864 ;;		_send_lcd_data
   865 ;;		_set_lcd_e
   866 ;; This function is called by:
   867 ;;		_main
   868 ;; This function uses a non-reentrant model
   869 ;;
   870                           
   871                           
   872                           ;psect for function _lcd_initialize
   873  0264                     _lcd_initialize:	
   874                           
   875                           ;lcd.c: 104: set_lcd_e(1);
   876                           
   877                           ;incstack = 0
   878                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   879  0264  3001               	movlw	1
   880  0265  120A  118A  231A  120A  118A  	fcall	_set_lcd_e
   881                           
   882                           ;lcd.c: 105: _delay((unsigned long)((15)*(20000000/4000.0)));
   883  026A  3062               	movlw	98
   884  026B  1283               	bcf	3,5	;RP0=0, select bank0
   885  026C  1303               	bcf	3,6	;RP1=0, select bank0
   886  026D  00A1               	movwf	??_lcd_initialize+1
   887  026E  3065               	movlw	101
   888  026F  00A0               	movwf	??_lcd_initialize
   889  0270                     u677:	
   890  0270  0BA0               	decfsz	??_lcd_initialize,f
   891  0271  2A70               	goto	u677
   892  0272  0BA1               	decfsz	??_lcd_initialize+1,f
   893  0273  2A70               	goto	u677
   894                           
   895                           ;lcd.c: 108: send_lcd_data(0, 0b00100000 | 0b00010000 | 0b00001000 | 0b00000000);
   896  0274  3038               	movlw	56
   897  0275  1283               	bcf	3,5	;RP0=0, select bank0
   898  0276  1303               	bcf	3,6	;RP1=0, select bank0
   899  0277  00A0               	movwf	??_lcd_initialize
   900  0278  0820               	movf	??_lcd_initialize,w
   901  0279  00F5               	movwf	send_lcd_data@uc_data
   902  027A  3000               	movlw	0
   903  027B  120A  118A  229C  120A  118A  	fcall	_send_lcd_data
   904                           
   905                           ;lcd.c: 112: send_lcd_data(0, 0b00000100 | 0b00000010 | 0b00000000);
   906  0280  3006               	movlw	6
   907  0281  1283               	bcf	3,5	;RP0=0, select bank0
   908  0282  1303               	bcf	3,6	;RP1=0, select bank0
   909  0283  00A0               	movwf	??_lcd_initialize
   910  0284  0820               	movf	??_lcd_initialize,w
   911  0285  00F5               	movwf	send_lcd_data@uc_data
   912  0286  3000               	movlw	0
   913  0287  120A  118A  229C  120A  118A  	fcall	_send_lcd_data
   914                           
   915                           ;lcd.c: 115: send_lcd_data(0, 0b00001000 | 0b00000100 | 0b00000000 | 0b00000000);
   916  028C  300C               	movlw	12
   917  028D  1283               	bcf	3,5	;RP0=0, select bank0
   918  028E  1303               	bcf	3,6	;RP1=0, select bank0
   919  028F  00A0               	movwf	??_lcd_initialize
   920  0290  0820               	movf	??_lcd_initialize,w
   921  0291  00F5               	movwf	send_lcd_data@uc_data
   922  0292  3000               	movlw	0
   923  0293  120A  118A  229C  120A  118A  	fcall	_send_lcd_data
   924                           
   925                           ;lcd.c: 118: lcd_clear();
   926  0298  120A  118A  2339   	fcall	_lcd_clear
   927  029B  0008               	return
   928  029C                     __end_of_lcd_initialize:	
   929                           
   930                           	psect	text2
   931  0339                     __ptext2:	
   932 ;; *************** function _lcd_clear *****************
   933 ;; Defined at:
   934 ;;		line 136 in file "lcd.c"
   935 ;; Parameters:    Size  Location     Type
   936 ;;		None
   937 ;; Auto vars:     Size  Location     Type
   938 ;;		None
   939 ;; Return value:  Size  Location     Type
   940 ;;                  1    wreg      void 
   941 ;; Registers used:
   942 ;;		wreg, status,2, status,0, pclath, cstack
   943 ;; Tracked objects:
   944 ;;		On entry : 0/0
   945 ;;		On exit  : 0/0
   946 ;;		Unchanged: 0/0
   947 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   948 ;;      Params:         0       0       0       0       0
   949 ;;      Locals:         0       0       0       0       0
   950 ;;      Temps:          0       0       0       0       0
   951 ;;      Totals:         0       0       0       0       0
   952 ;;Total ram usage:        0 bytes
   953 ;; Hardware stack levels used:    1
   954 ;; Hardware stack levels required when called:    3
   955 ;; This function calls:
   956 ;;		_send_lcd_data
   957 ;; This function is called by:
   958 ;;		_lcd_initialize
   959 ;; This function uses a non-reentrant model
   960 ;;
   961                           
   962                           
   963                           ;psect for function _lcd_clear
   964  0339                     _lcd_clear:	
   965                           
   966                           ;lcd.c: 139: send_lcd_data(0, 0b00000001);
   967                           
   968                           ;incstack = 0
   969                           ; Regs used in _lcd_clear: [wreg+status,2+status,0+pclath+cstack]
   970  0339  01F5               	clrf	send_lcd_data@uc_data
   971  033A  0AF5               	incf	send_lcd_data@uc_data,f
   972  033B  3000               	movlw	0
   973  033C  120A  118A  229C   	fcall	_send_lcd_data
   974  033F  0008               	return
   975  0340                     __end_of_lcd_clear:	
   976                           
   977                           	psect	text3
   978  0330                     __ptext3:	
   979 ;; *************** function _lcd_home *****************
   980 ;; Defined at:
   981 ;;		line 157 in file "lcd.c"
   982 ;; Parameters:    Size  Location     Type
   983 ;;		None
   984 ;; Auto vars:     Size  Location     Type
   985 ;;		None
   986 ;; Return value:  Size  Location     Type
   987 ;;                  1    wreg      void 
   988 ;; Registers used:
   989 ;;		wreg, status,2, status,0, pclath, cstack
   990 ;; Tracked objects:
   991 ;;		On entry : 0/0
   992 ;;		On exit  : 0/0
   993 ;;		Unchanged: 0/0
   994 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   995 ;;      Params:         0       0       0       0       0
   996 ;;      Locals:         0       0       0       0       0
   997 ;;      Temps:          1       0       0       0       0
   998 ;;      Totals:         1       0       0       0       0
   999 ;;Total ram usage:        1 bytes
  1000 ;; Hardware stack levels used:    1
  1001 ;; Hardware stack levels required when called:    3
  1002 ;; This function calls:
  1003 ;;		_send_lcd_data
  1004 ;; This function is called by:
  1005 ;;		_main
  1006 ;; This function uses a non-reentrant model
  1007 ;;
  1008                           
  1009                           
  1010                           ;psect for function _lcd_home
  1011  0330                     _lcd_home:	
  1012                           
  1013                           ;lcd.c: 160: send_lcd_data(0, 0b00000010);
  1014                           
  1015                           ;incstack = 0
  1016                           ; Regs used in _lcd_home: [wreg+status,2+status,0+pclath+cstack]
  1017  0330  3002               	movlw	2
  1018  0331  00F9               	movwf	??_lcd_home
  1019  0332  0879               	movf	??_lcd_home,w
  1020  0333  00F5               	movwf	send_lcd_data@uc_data
  1021  0334  3000               	movlw	0
  1022  0335  120A  118A  229C   	fcall	_send_lcd_data
  1023  0338  0008               	return
  1024  0339                     __end_of_lcd_home:	
  1025                           
  1026                           	psect	text4
  1027  0025                     __ptext4:	
  1028 ;; *************** function _lcd_bcd *****************
  1029 ;; Defined at:
  1030 ;;		line 274 in file "lcd.c"
  1031 ;; Parameters:    Size  Location     Type
  1032 ;;  uc_digit        1    wreg     unsigned char 
  1033 ;;  ui_number       2    3[BANK0 ] unsigned int 
  1034 ;; Auto vars:     Size  Location     Type
  1035 ;;  uc_digit        1   19[BANK0 ] unsigned char 
  1036 ;;  ui_decimal     10    9[BANK0 ] unsigned int [5]
  1037 ;; Return value:  Size  Location     Type
  1038 ;;                  1    wreg      void 
  1039 ;; Registers used:
  1040 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1041 ;; Tracked objects:
  1042 ;;		On entry : 0/0
  1043 ;;		On exit  : 0/0
  1044 ;;		Unchanged: 0/0
  1045 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1046 ;;      Params:         0       2       0       0       0
  1047 ;;      Locals:         0      11       0       0       0
  1048 ;;      Temps:          0       4       0       0       0
  1049 ;;      Totals:         0      17       0       0       0
  1050 ;;Total ram usage:       17 bytes
  1051 ;; Hardware stack levels used:    1
  1052 ;; Hardware stack levels required when called:    4
  1053 ;; This function calls:
  1054 ;;		___lwdiv
  1055 ;;		___lwmod
  1056 ;;		_lcd_putchar
  1057 ;; This function is called by:
  1058 ;;		_main
  1059 ;; This function uses a non-reentrant model
  1060 ;;
  1061                           
  1062                           
  1063                           ;psect for function _lcd_bcd
  1064  0025                     _lcd_bcd:	
  1065                           
  1066                           ;incstack = 0
  1067                           ; Regs used in _lcd_bcd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1068                           ;lcd_bcd@uc_digit stored from wreg
  1069  0025  1283               	bcf	3,5	;RP0=0, select bank0
  1070  0026  1303               	bcf	3,6	;RP1=0, select bank0
  1071  0027  00B3               	movwf	lcd_bcd@uc_digit
  1072                           
  1073                           ;lcd.c: 276: unsigned int ui_decimal[5] ={ 0 };
  1074  0028  3029               	movlw	lcd_bcd@ui_decimal& (0+255)
  1075  0029  0084               	movwf	4
  1076  002A  3037               	movlw	low lcd_bcd@F1134
  1077  002B  00A5               	movwf	??_lcd_bcd
  1078  002C  0804               	movf	4,w
  1079  002D  00A6               	movwf	??_lcd_bcd+1
  1080  002E  300A               	movlw	10
  1081  002F  00A7               	movwf	??_lcd_bcd+2
  1082  0030                     u600:	
  1083  0030  0825               	movf	??_lcd_bcd,w
  1084  0031  0084               	movwf	4
  1085  0032  1383               	bcf	3,7	;select IRP bank0
  1086  0033  0800               	movf	0,w
  1087  0034  00A8               	movwf	??_lcd_bcd+3
  1088  0035  0AA5               	incf	??_lcd_bcd,f
  1089  0036  0826               	movf	??_lcd_bcd+1,w
  1090  0037  0084               	movwf	4
  1091  0038  0828               	movf	??_lcd_bcd+3,w
  1092  0039  0080               	movwf	0
  1093  003A  0AA6               	incf	??_lcd_bcd+1,f
  1094  003B  0BA7               	decfsz	??_lcd_bcd+2,f
  1095  003C  2830               	goto	u600
  1096                           
  1097                           ;lcd.c: 278: ui_decimal[4] = ui_number/10000;
  1098  003D  3010               	movlw	16
  1099  003E  00F4               	movwf	___lwdiv@divisor
  1100  003F  3027               	movlw	39
  1101  0040  00F5               	movwf	___lwdiv@divisor+1
  1102  0041  0824               	movf	lcd_bcd@ui_number+1,w
  1103  0042  00F7               	movwf	___lwdiv@dividend+1
  1104  0043  0823               	movf	lcd_bcd@ui_number,w
  1105  0044  00F6               	movwf	___lwdiv@dividend
  1106  0045  120A  118A  21B0  120A  118A  	fcall	___lwdiv
  1107  004A  0875               	movf	?___lwdiv+1,w
  1108  004B  1283               	bcf	3,5	;RP0=0, select bank0
  1109  004C  1303               	bcf	3,6	;RP1=0, select bank0
  1110  004D  00B2               	movwf	lcd_bcd@ui_decimal+9
  1111  004E  0874               	movf	?___lwdiv,w
  1112  004F  00B1               	movwf	lcd_bcd@ui_decimal+8
  1113                           
  1114                           ;lcd.c: 279: ui_decimal[3] = ui_number%10000;
  1115  0050  3010               	movlw	16
  1116  0051  00F4               	movwf	___lwmod@divisor
  1117  0052  3027               	movlw	39
  1118  0053  00F5               	movwf	___lwmod@divisor+1
  1119  0054  0824               	movf	lcd_bcd@ui_number+1,w
  1120  0055  00F7               	movwf	___lwmod@dividend+1
  1121  0056  0823               	movf	lcd_bcd@ui_number,w
  1122  0057  00F6               	movwf	___lwmod@dividend
  1123  0058  120A  118A  22D1  120A  118A  	fcall	___lwmod
  1124  005D  0875               	movf	?___lwmod+1,w
  1125  005E  1283               	bcf	3,5	;RP0=0, select bank0
  1126  005F  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0060  00B0               	movwf	lcd_bcd@ui_decimal+7
  1128  0061  0874               	movf	?___lwmod,w
  1129  0062  00AF               	movwf	lcd_bcd@ui_decimal+6
  1130                           
  1131                           ;lcd.c: 280: ui_decimal[2] = ui_decimal[3]%1000;
  1132  0063  30E8               	movlw	232
  1133  0064  00F4               	movwf	___lwmod@divisor
  1134  0065  3003               	movlw	3
  1135  0066  00F5               	movwf	___lwmod@divisor+1
  1136  0067  0830               	movf	lcd_bcd@ui_decimal+7,w
  1137  0068  00F7               	movwf	___lwmod@dividend+1
  1138  0069  082F               	movf	lcd_bcd@ui_decimal+6,w
  1139  006A  00F6               	movwf	___lwmod@dividend
  1140  006B  120A  118A  22D1  120A  118A  	fcall	___lwmod
  1141  0070  0875               	movf	?___lwmod+1,w
  1142  0071  1283               	bcf	3,5	;RP0=0, select bank0
  1143  0072  1303               	bcf	3,6	;RP1=0, select bank0
  1144  0073  00AE               	movwf	lcd_bcd@ui_decimal+5
  1145  0074  0874               	movf	?___lwmod,w
  1146  0075  00AD               	movwf	lcd_bcd@ui_decimal+4
  1147                           
  1148                           ;lcd.c: 281: ui_decimal[3] = ui_decimal[3]/1000;
  1149  0076  30E8               	movlw	232
  1150  0077  00F4               	movwf	___lwdiv@divisor
  1151  0078  3003               	movlw	3
  1152  0079  00F5               	movwf	___lwdiv@divisor+1
  1153  007A  0830               	movf	lcd_bcd@ui_decimal+7,w
  1154  007B  00F7               	movwf	___lwdiv@dividend+1
  1155  007C  082F               	movf	lcd_bcd@ui_decimal+6,w
  1156  007D  00F6               	movwf	___lwdiv@dividend
  1157  007E  120A  118A  21B0  120A  118A  	fcall	___lwdiv
  1158  0083  0875               	movf	?___lwdiv+1,w
  1159  0084  1283               	bcf	3,5	;RP0=0, select bank0
  1160  0085  1303               	bcf	3,6	;RP1=0, select bank0
  1161  0086  00B0               	movwf	lcd_bcd@ui_decimal+7
  1162  0087  0874               	movf	?___lwdiv,w
  1163  0088  00AF               	movwf	lcd_bcd@ui_decimal+6
  1164                           
  1165                           ;lcd.c: 282: ui_decimal[1] = ui_decimal[2]%100;
  1166  0089  3064               	movlw	100
  1167  008A  00F4               	movwf	___lwmod@divisor
  1168  008B  3000               	movlw	0
  1169  008C  00F5               	movwf	___lwmod@divisor+1
  1170  008D  082E               	movf	lcd_bcd@ui_decimal+5,w
  1171  008E  00F7               	movwf	___lwmod@dividend+1
  1172  008F  082D               	movf	lcd_bcd@ui_decimal+4,w
  1173  0090  00F6               	movwf	___lwmod@dividend
  1174  0091  120A  118A  22D1  120A  118A  	fcall	___lwmod
  1175  0096  0875               	movf	?___lwmod+1,w
  1176  0097  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0098  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0099  00AC               	movwf	lcd_bcd@ui_decimal+3
  1179  009A  0874               	movf	?___lwmod,w
  1180  009B  00AB               	movwf	lcd_bcd@ui_decimal+2
  1181                           
  1182                           ;lcd.c: 283: ui_decimal[2] = ui_decimal[2]/100;
  1183  009C  3064               	movlw	100
  1184  009D  00F4               	movwf	___lwdiv@divisor
  1185  009E  3000               	movlw	0
  1186  009F  00F5               	movwf	___lwdiv@divisor+1
  1187  00A0  082E               	movf	lcd_bcd@ui_decimal+5,w
  1188  00A1  00F7               	movwf	___lwdiv@dividend+1
  1189  00A2  082D               	movf	lcd_bcd@ui_decimal+4,w
  1190  00A3  00F6               	movwf	___lwdiv@dividend
  1191  00A4  120A  118A  21B0  120A  118A  	fcall	___lwdiv
  1192  00A9  0875               	movf	?___lwdiv+1,w
  1193  00AA  1283               	bcf	3,5	;RP0=0, select bank0
  1194  00AB  1303               	bcf	3,6	;RP1=0, select bank0
  1195  00AC  00AE               	movwf	lcd_bcd@ui_decimal+5
  1196  00AD  0874               	movf	?___lwdiv,w
  1197  00AE  00AD               	movwf	lcd_bcd@ui_decimal+4
  1198                           
  1199                           ;lcd.c: 284: ui_decimal[0] = ui_decimal[1]%10;
  1200  00AF  300A               	movlw	10
  1201  00B0  00F4               	movwf	___lwmod@divisor
  1202  00B1  3000               	movlw	0
  1203  00B2  00F5               	movwf	___lwmod@divisor+1
  1204  00B3  082C               	movf	lcd_bcd@ui_decimal+3,w
  1205  00B4  00F7               	movwf	___lwmod@dividend+1
  1206  00B5  082B               	movf	lcd_bcd@ui_decimal+2,w
  1207  00B6  00F6               	movwf	___lwmod@dividend
  1208  00B7  120A  118A  22D1  120A  118A  	fcall	___lwmod
  1209  00BC  0875               	movf	?___lwmod+1,w
  1210  00BD  1283               	bcf	3,5	;RP0=0, select bank0
  1211  00BE  1303               	bcf	3,6	;RP1=0, select bank0
  1212  00BF  00AA               	movwf	lcd_bcd@ui_decimal+1
  1213  00C0  0874               	movf	?___lwmod,w
  1214  00C1  00A9               	movwf	lcd_bcd@ui_decimal
  1215                           
  1216                           ;lcd.c: 285: ui_decimal[1] = ui_decimal[1]/10;
  1217  00C2  300A               	movlw	10
  1218  00C3  00F4               	movwf	___lwdiv@divisor
  1219  00C4  3000               	movlw	0
  1220  00C5  00F5               	movwf	___lwdiv@divisor+1
  1221  00C6  082C               	movf	lcd_bcd@ui_decimal+3,w
  1222  00C7  00F7               	movwf	___lwdiv@dividend+1
  1223  00C8  082B               	movf	lcd_bcd@ui_decimal+2,w
  1224  00C9  00F6               	movwf	___lwdiv@dividend
  1225  00CA  120A  118A  21B0  120A  118A  	fcall	___lwdiv
  1226  00CF  0875               	movf	?___lwdiv+1,w
  1227  00D0  1283               	bcf	3,5	;RP0=0, select bank0
  1228  00D1  1303               	bcf	3,6	;RP1=0, select bank0
  1229  00D2  00AC               	movwf	lcd_bcd@ui_decimal+3
  1230  00D3  0874               	movf	?___lwdiv,w
  1231  00D4  00AB               	movwf	lcd_bcd@ui_decimal+2
  1232                           
  1233                           ;lcd.c: 287: if (uc_digit > 5) uc_digit = 5;
  1234  00D5  3006               	movlw	6
  1235  00D6  0233               	subwf	lcd_bcd@uc_digit,w
  1236  00D7  1C03               	skipc
  1237  00D8  28DD               	goto	l1038
  1238  00D9  3005               	movlw	5
  1239  00DA  00A5               	movwf	??_lcd_bcd
  1240  00DB  0825               	movf	??_lcd_bcd,w
  1241  00DC  00B3               	movwf	lcd_bcd@uc_digit
  1242  00DD                     l1038:	
  1243                           
  1244                           ;lcd.c: 288: for( ; uc_digit > 0; uc_digit--)
  1245  00DD  0833               	movf	lcd_bcd@uc_digit,w
  1246  00DE  1903               	btfsc	3,2
  1247  00DF  0008               	return
  1248                           
  1249                           ;lcd.c: 289: {
  1250                           ;lcd.c: 290: lcd_putchar(ui_decimal[uc_digit - 1] + 0x30);
  1251  00E0  0833               	movf	lcd_bcd@uc_digit,w
  1252  00E1  00A5               	movwf	??_lcd_bcd
  1253  00E2  0725               	addwf	??_lcd_bcd,w
  1254  00E3  3EFE               	addlw	254
  1255  00E4  3E29               	addlw	(low (lcd_bcd@ui_decimal| 0))& (0+255)
  1256  00E5  0084               	movwf	4
  1257  00E6  1383               	bcf	3,7	;select IRP bank0
  1258  00E7  0800               	movf	0,w
  1259  00E8  3E30               	addlw	48
  1260  00E9  120A  118A  2303  120A  118A  	fcall	_lcd_putchar
  1261  00EE  3001               	movlw	1
  1262  00EF  1283               	bcf	3,5	;RP0=0, select bank0
  1263  00F0  1303               	bcf	3,6	;RP1=0, select bank0
  1264  00F1  02B3               	subwf	lcd_bcd@uc_digit,f
  1265  00F2  28DD               	goto	l1038
  1266  00F3                     __end_of_lcd_bcd:	
  1267                           
  1268                           	psect	text5
  1269  0303                     __ptext5:	
  1270 ;; *************** function _lcd_putchar *****************
  1271 ;; Defined at:
  1272 ;;		line 220 in file "lcd.c"
  1273 ;; Parameters:    Size  Location     Type
  1274 ;;  c_data          1    wreg     unsigned char 
  1275 ;; Auto vars:     Size  Location     Type
  1276 ;;  c_data          1    0[BANK0 ] unsigned char 
  1277 ;; Return value:  Size  Location     Type
  1278 ;;                  1    wreg      void 
  1279 ;; Registers used:
  1280 ;;		wreg, status,2, status,0, pclath, cstack
  1281 ;; Tracked objects:
  1282 ;;		On entry : 0/0
  1283 ;;		On exit  : 0/0
  1284 ;;		Unchanged: 0/0
  1285 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1286 ;;      Params:         0       0       0       0       0
  1287 ;;      Locals:         0       1       0       0       0
  1288 ;;      Temps:          1       0       0       0       0
  1289 ;;      Totals:         1       1       0       0       0
  1290 ;;Total ram usage:        2 bytes
  1291 ;; Hardware stack levels used:    1
  1292 ;; Hardware stack levels required when called:    3
  1293 ;; This function calls:
  1294 ;;		_send_lcd_data
  1295 ;; This function is called by:
  1296 ;;		_lcd_bcd
  1297 ;;		_lcd_putstr
  1298 ;; This function uses a non-reentrant model
  1299 ;;
  1300                           
  1301                           
  1302                           ;psect for function _lcd_putchar
  1303  0303                     _lcd_putchar:	
  1304                           
  1305                           ;incstack = 0
  1306                           ; Regs used in _lcd_putchar: [wreg+status,2+status,0+pclath+cstack]
  1307                           ;lcd_putchar@c_data stored from wreg
  1308  0303  1283               	bcf	3,5	;RP0=0, select bank0
  1309  0304  1303               	bcf	3,6	;RP1=0, select bank0
  1310  0305  00A0               	movwf	lcd_putchar@c_data
  1311                           
  1312                           ;lcd.c: 223: send_lcd_data(1, (unsigned char)c_data);
  1313  0306  0820               	movf	lcd_putchar@c_data,w
  1314  0307  00F9               	movwf	??_lcd_putchar
  1315  0308  0879               	movf	??_lcd_putchar,w
  1316  0309  00F5               	movwf	send_lcd_data@uc_data
  1317  030A  3001               	movlw	1
  1318  030B  120A  118A  229C   	fcall	_send_lcd_data
  1319  030E  0008               	return
  1320  030F                     __end_of_lcd_putchar:	
  1321                           
  1322                           	psect	text6
  1323  029C                     __ptext6:	
  1324 ;; *************** function _send_lcd_data *****************
  1325 ;; Defined at:
  1326 ;;		line 308 in file "lcd.c"
  1327 ;; Parameters:    Size  Location     Type
  1328 ;;  b_rs            1    wreg     unsigned char 
  1329 ;;  uc_data         1    5[COMMON] unsigned char 
  1330 ;; Auto vars:     Size  Location     Type
  1331 ;;  b_rs            1    8[COMMON] unsigned char 
  1332 ;; Return value:  Size  Location     Type
  1333 ;;                  1    wreg      void 
  1334 ;; Registers used:
  1335 ;;		wreg, status,2, status,0, pclath, cstack
  1336 ;; Tracked objects:
  1337 ;;		On entry : 0/0
  1338 ;;		On exit  : 0/0
  1339 ;;		Unchanged: 0/0
  1340 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1341 ;;      Params:         1       0       0       0       0
  1342 ;;      Locals:         1       0       0       0       0
  1343 ;;      Temps:          2       0       0       0       0
  1344 ;;      Totals:         4       0       0       0       0
  1345 ;;Total ram usage:        4 bytes
  1346 ;; Hardware stack levels used:    1
  1347 ;; Hardware stack levels required when called:    2
  1348 ;; This function calls:
  1349 ;;		_set_lcd_data
  1350 ;;		_set_lcd_e
  1351 ;;		_set_lcd_rs
  1352 ;; This function is called by:
  1353 ;;		_lcd_initialize
  1354 ;;		_lcd_clear
  1355 ;;		_lcd_home
  1356 ;;		_lcd_putchar
  1357 ;;		_lcd_2ndline
  1358 ;;		_lcd_goto
  1359 ;; This function uses a non-reentrant model
  1360 ;;
  1361                           
  1362                           
  1363                           ;psect for function _send_lcd_data
  1364  029C                     _send_lcd_data:	
  1365                           
  1366                           ;incstack = 0
  1367                           ; Regs used in _send_lcd_data: [wreg+status,2+status,0+pclath+cstack]
  1368                           ;send_lcd_data@b_rs stored from wreg
  1369  029C  00F8               	movwf	send_lcd_data@b_rs
  1370                           
  1371                           ;lcd.c: 311: set_lcd_rs(b_rs);
  1372  029D  0878               	movf	send_lcd_data@b_rs,w
  1373  029E  120A  118A  230F  120A  118A  	fcall	_set_lcd_rs
  1374                           
  1375                           ;lcd.c: 312: set_lcd_data(uc_data);
  1376  02A3  0875               	movf	send_lcd_data@uc_data,w
  1377  02A4  120A  118A  2340  120A  118A  	fcall	_set_lcd_data
  1378                           
  1379                           ;lcd.c: 315: set_lcd_e(1);
  1380  02A9  3001               	movlw	1
  1381  02AA  120A  118A  231A  120A  118A  	fcall	_set_lcd_e
  1382                           
  1383                           ;lcd.c: 316: _delay((unsigned long)((1)*(20000000/4000.0)));
  1384  02AF  3007               	movlw	7
  1385  02B0  00F7               	movwf	??_send_lcd_data+1
  1386  02B1  307D               	movlw	125
  1387  02B2  00F6               	movwf	??_send_lcd_data
  1388  02B3                     u687:	
  1389  02B3  0BF6               	decfsz	??_send_lcd_data,f
  1390  02B4  2AB3               	goto	u687
  1391  02B5  0BF7               	decfsz	??_send_lcd_data+1,f
  1392  02B6  2AB3               	goto	u687
  1393                           
  1394                           ;lcd.c: 317: set_lcd_e(0);
  1395  02B7  3000               	movlw	0
  1396  02B8  120A  118A  231A  120A  118A  	fcall	_set_lcd_e
  1397                           
  1398                           ;lcd.c: 318: _delay((unsigned long)((2)*(20000000/4000.0)));
  1399  02BD  300D               	movlw	13
  1400  02BE  00F7               	movwf	??_send_lcd_data+1
  1401  02BF  30FB               	movlw	251
  1402  02C0  00F6               	movwf	??_send_lcd_data
  1403  02C1                     u697:	
  1404  02C1  0BF6               	decfsz	??_send_lcd_data,f
  1405  02C2  2AC1               	goto	u697
  1406  02C3  0BF7               	decfsz	??_send_lcd_data+1,f
  1407  02C4  2AC1               	goto	u697
  1408  02C5  2AC6               	nop2
  1409                           
  1410                           ;lcd.c: 321: set_lcd_rs(0);
  1411  02C6  3000               	movlw	0
  1412  02C7  120A  118A  230F  120A  118A  	fcall	_set_lcd_rs
  1413                           
  1414                           ;lcd.c: 322: set_lcd_data(0);
  1415  02CC  3000               	movlw	0
  1416  02CD  120A  118A  2340   	fcall	_set_lcd_data
  1417  02D0  0008               	return
  1418  02D1                     __end_of_send_lcd_data:	
  1419                           
  1420                           	psect	text7
  1421  030F                     __ptext7:	
  1422 ;; *************** function _set_lcd_rs *****************
  1423 ;; Defined at:
  1424 ;;		line 360 in file "lcd.c"
  1425 ;; Parameters:    Size  Location     Type
  1426 ;;  b_output        1    wreg     unsigned char 
  1427 ;; Auto vars:     Size  Location     Type
  1428 ;;  b_output        1    4[COMMON] unsigned char 
  1429 ;; Return value:  Size  Location     Type
  1430 ;;                  1    wreg      void 
  1431 ;; Registers used:
  1432 ;;		wreg
  1433 ;; Tracked objects:
  1434 ;;		On entry : 0/0
  1435 ;;		On exit  : 0/0
  1436 ;;		Unchanged: 0/0
  1437 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1438 ;;      Params:         0       0       0       0       0
  1439 ;;      Locals:         1       0       0       0       0
  1440 ;;      Temps:          0       0       0       0       0
  1441 ;;      Totals:         1       0       0       0       0
  1442 ;;Total ram usage:        1 bytes
  1443 ;; Hardware stack levels used:    1
  1444 ;; Hardware stack levels required when called:    1
  1445 ;; This function calls:
  1446 ;;		Nothing
  1447 ;; This function is called by:
  1448 ;;		_send_lcd_data
  1449 ;; This function uses a non-reentrant model
  1450 ;;
  1451                           
  1452                           
  1453                           ;psect for function _set_lcd_rs
  1454  030F                     _set_lcd_rs:	
  1455                           
  1456                           ;incstack = 0
  1457                           ; Regs used in _set_lcd_rs: [wreg]
  1458                           ;set_lcd_rs@b_output stored from wreg
  1459  030F  00F4               	movwf	set_lcd_rs@b_output
  1460                           
  1461                           ;lcd.c: 362: RB4 = b_output;
  1462  0310  1C74               	btfss	set_lcd_rs@b_output,0
  1463  0311  2B16               	goto	u360
  1464  0312  1283               	bcf	3,5	;RP0=0, select bank0
  1465  0313  1303               	bcf	3,6	;RP1=0, select bank0
  1466  0314  1606               	bsf	6,4	;volatile
  1467  0315  0008               	return
  1468  0316                     u360:	
  1469  0316  1283               	bcf	3,5	;RP0=0, select bank0
  1470  0317  1303               	bcf	3,6	;RP1=0, select bank0
  1471  0318  1206               	bcf	6,4	;volatile
  1472  0319  0008               	return
  1473  031A                     __end_of_set_lcd_rs:	
  1474                           
  1475                           	psect	text8
  1476  031A                     __ptext8:	
  1477 ;; *************** function _set_lcd_e *****************
  1478 ;; Defined at:
  1479 ;;		line 340 in file "lcd.c"
  1480 ;; Parameters:    Size  Location     Type
  1481 ;;  b_output        1    wreg     unsigned char 
  1482 ;; Auto vars:     Size  Location     Type
  1483 ;;  b_output        1    4[COMMON] unsigned char 
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  1    wreg      void 
  1486 ;; Registers used:
  1487 ;;		wreg
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1493 ;;      Params:         0       0       0       0       0
  1494 ;;      Locals:         1       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0
  1496 ;;      Totals:         1       0       0       0       0
  1497 ;;Total ram usage:        1 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    1
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_lcd_initialize
  1504 ;;		_send_lcd_data
  1505 ;; This function uses a non-reentrant model
  1506 ;;
  1507                           
  1508                           
  1509                           ;psect for function _set_lcd_e
  1510  031A                     _set_lcd_e:	
  1511                           
  1512                           ;incstack = 0
  1513                           ; Regs used in _set_lcd_e: [wreg]
  1514                           ;set_lcd_e@b_output stored from wreg
  1515  031A  00F4               	movwf	set_lcd_e@b_output
  1516                           
  1517                           ;lcd.c: 342: RB5 = b_output;
  1518  031B  1C74               	btfss	set_lcd_e@b_output,0
  1519  031C  2B21               	goto	u340
  1520  031D  1283               	bcf	3,5	;RP0=0, select bank0
  1521  031E  1303               	bcf	3,6	;RP1=0, select bank0
  1522  031F  1686               	bsf	6,5	;volatile
  1523  0320  0008               	return
  1524  0321                     u340:	
  1525  0321  1283               	bcf	3,5	;RP0=0, select bank0
  1526  0322  1303               	bcf	3,6	;RP1=0, select bank0
  1527  0323  1286               	bcf	6,5	;volatile
  1528  0324  0008               	return
  1529  0325                     __end_of_set_lcd_e:	
  1530                           
  1531                           	psect	text9
  1532  0340                     __ptext9:	
  1533 ;; *************** function _set_lcd_data *****************
  1534 ;; Defined at:
  1535 ;;		line 380 in file "lcd.c"
  1536 ;; Parameters:    Size  Location     Type
  1537 ;;  uc_data         1    wreg     unsigned char 
  1538 ;; Auto vars:     Size  Location     Type
  1539 ;;  uc_data         1    4[COMMON] unsigned char 
  1540 ;; Return value:  Size  Location     Type
  1541 ;;                  1    wreg      void 
  1542 ;; Registers used:
  1543 ;;		wreg
  1544 ;; Tracked objects:
  1545 ;;		On entry : 0/0
  1546 ;;		On exit  : 0/0
  1547 ;;		Unchanged: 0/0
  1548 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1549 ;;      Params:         0       0       0       0       0
  1550 ;;      Locals:         1       0       0       0       0
  1551 ;;      Temps:          0       0       0       0       0
  1552 ;;      Totals:         1       0       0       0       0
  1553 ;;Total ram usage:        1 bytes
  1554 ;; Hardware stack levels used:    1
  1555 ;; Hardware stack levels required when called:    1
  1556 ;; This function calls:
  1557 ;;		Nothing
  1558 ;; This function is called by:
  1559 ;;		_send_lcd_data
  1560 ;; This function uses a non-reentrant model
  1561 ;;
  1562                           
  1563                           
  1564                           ;psect for function _set_lcd_data
  1565  0340                     _set_lcd_data:	
  1566                           
  1567                           ;incstack = 0
  1568                           ; Regs used in _set_lcd_data: [wreg]
  1569                           ;set_lcd_data@uc_data stored from wreg
  1570  0340  00F4               	movwf	set_lcd_data@uc_data
  1571                           
  1572                           ;lcd.c: 382: PORTD = uc_data;
  1573  0341  0874               	movf	set_lcd_data@uc_data,w
  1574  0342  1283               	bcf	3,5	;RP0=0, select bank0
  1575  0343  1303               	bcf	3,6	;RP1=0, select bank0
  1576  0344  0088               	movwf	8	;volatile
  1577  0345  0008               	return
  1578  0346                     __end_of_set_lcd_data:	
  1579                           
  1580                           	psect	text10
  1581  02D1                     __ptext10:	
  1582 ;; *************** function ___lwmod *****************
  1583 ;; Defined at:
  1584 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwmod.c"
  1585 ;; Parameters:    Size  Location     Type
  1586 ;;  divisor         2    4[COMMON] unsigned int 
  1587 ;;  dividend        2    6[COMMON] unsigned int 
  1588 ;; Auto vars:     Size  Location     Type
  1589 ;;  counter         1    9[COMMON] unsigned char 
  1590 ;; Return value:  Size  Location     Type
  1591 ;;                  2    4[COMMON] unsigned int 
  1592 ;; Registers used:
  1593 ;;		wreg, status,2, status,0
  1594 ;; Tracked objects:
  1595 ;;		On entry : 0/0
  1596 ;;		On exit  : 0/0
  1597 ;;		Unchanged: 0/0
  1598 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1599 ;;      Params:         4       0       0       0       0
  1600 ;;      Locals:         1       0       0       0       0
  1601 ;;      Temps:          1       0       0       0       0
  1602 ;;      Totals:         6       0       0       0       0
  1603 ;;Total ram usage:        6 bytes
  1604 ;; Hardware stack levels used:    1
  1605 ;; Hardware stack levels required when called:    1
  1606 ;; This function calls:
  1607 ;;		Nothing
  1608 ;; This function is called by:
  1609 ;;		_lcd_bcd
  1610 ;; This function uses a non-reentrant model
  1611 ;;
  1612                           
  1613                           
  1614                           ;psect for function ___lwmod
  1615  02D1                     ___lwmod:	
  1616                           
  1617                           ;incstack = 0
  1618                           ; Regs used in ___lwmod: [wreg+status,2+status,0]
  1619  02D1  0874               	movf	___lwmod@divisor,w
  1620  02D2  0475               	iorwf	___lwmod@divisor+1,w
  1621  02D3  1903               	btfsc	3,2
  1622  02D4  2AFE               	goto	l940
  1623  02D5  01F9               	clrf	___lwmod@counter
  1624  02D6  0AF9               	incf	___lwmod@counter,f
  1625  02D7                     l930:	
  1626  02D7  1BF5               	btfsc	___lwmod@divisor+1,7
  1627  02D8  2AE5               	goto	l932
  1628  02D9  3001               	movlw	1
  1629  02DA                     u555:	
  1630  02DA  1003               	clrc
  1631  02DB  0DF4               	rlf	___lwmod@divisor,f
  1632  02DC  0DF5               	rlf	___lwmod@divisor+1,f
  1633  02DD  3EFF               	addlw	-1
  1634  02DE  1D03               	skipz
  1635  02DF  2ADA               	goto	u555
  1636  02E0  3001               	movlw	1
  1637  02E1  00F8               	movwf	??___lwmod
  1638  02E2  0878               	movf	??___lwmod,w
  1639  02E3  07F9               	addwf	___lwmod@counter,f
  1640  02E4  2AD7               	goto	l930
  1641  02E5                     l932:	
  1642  02E5  0875               	movf	___lwmod@divisor+1,w
  1643  02E6  0277               	subwf	___lwmod@dividend+1,w
  1644  02E7  1D03               	skipz
  1645  02E8  2AEB               	goto	u575
  1646  02E9  0874               	movf	___lwmod@divisor,w
  1647  02EA  0276               	subwf	___lwmod@dividend,w
  1648  02EB                     u575:	
  1649  02EB  1C03               	skipc
  1650  02EC  2AF3               	goto	l936
  1651  02ED  0874               	movf	___lwmod@divisor,w
  1652  02EE  02F6               	subwf	___lwmod@dividend,f
  1653  02EF  0875               	movf	___lwmod@divisor+1,w
  1654  02F0  1C03               	skipc
  1655  02F1  03F7               	decf	___lwmod@dividend+1,f
  1656  02F2  02F7               	subwf	___lwmod@dividend+1,f
  1657  02F3                     l936:	
  1658  02F3  3001               	movlw	1
  1659  02F4                     u585:	
  1660  02F4  1003               	clrc
  1661  02F5  0CF5               	rrf	___lwmod@divisor+1,f
  1662  02F6  0CF4               	rrf	___lwmod@divisor,f
  1663  02F7  3EFF               	addlw	-1
  1664  02F8  1D03               	skipz
  1665  02F9  2AF4               	goto	u585
  1666  02FA  3001               	movlw	1
  1667  02FB  02F9               	subwf	___lwmod@counter,f
  1668  02FC  1D03               	btfss	3,2
  1669  02FD  2AE5               	goto	l932
  1670  02FE                     l940:	
  1671  02FE  0877               	movf	___lwmod@dividend+1,w
  1672  02FF  00F5               	movwf	?___lwmod+1
  1673  0300  0876               	movf	___lwmod@dividend,w
  1674  0301  00F4               	movwf	?___lwmod
  1675  0302  0008               	return
  1676  0303                     __end_of___lwmod:	
  1677                           
  1678                           	psect	text11
  1679  01B0                     __ptext11:	
  1680 ;; *************** function ___lwdiv *****************
  1681 ;; Defined at:
  1682 ;;		line 6 in file "C:\Program Files (x86)\Microchip\xc8\v1.45\sources\common\lwdiv.c"
  1683 ;; Parameters:    Size  Location     Type
  1684 ;;  divisor         2    4[COMMON] unsigned int 
  1685 ;;  dividend        2    6[COMMON] unsigned int 
  1686 ;; Auto vars:     Size  Location     Type
  1687 ;;  quotient        2    0[BANK0 ] unsigned int 
  1688 ;;  counter         1    2[BANK0 ] unsigned char 
  1689 ;; Return value:  Size  Location     Type
  1690 ;;                  2    4[COMMON] unsigned int 
  1691 ;; Registers used:
  1692 ;;		wreg, status,2, status,0
  1693 ;; Tracked objects:
  1694 ;;		On entry : 0/0
  1695 ;;		On exit  : 0/0
  1696 ;;		Unchanged: 0/0
  1697 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1698 ;;      Params:         4       0       0       0       0
  1699 ;;      Locals:         0       3       0       0       0
  1700 ;;      Temps:          1       0       0       0       0
  1701 ;;      Totals:         5       3       0       0       0
  1702 ;;Total ram usage:        8 bytes
  1703 ;; Hardware stack levels used:    1
  1704 ;; Hardware stack levels required when called:    1
  1705 ;; This function calls:
  1706 ;;		Nothing
  1707 ;; This function is called by:
  1708 ;;		_lcd_bcd
  1709 ;; This function uses a non-reentrant model
  1710 ;;
  1711                           
  1712                           
  1713                           ;psect for function ___lwdiv
  1714  01B0                     ___lwdiv:	
  1715                           
  1716                           ;incstack = 0
  1717                           ; Regs used in ___lwdiv: [wreg+status,2+status,0]
  1718  01B0  1283               	bcf	3,5	;RP0=0, select bank0
  1719  01B1  1303               	bcf	3,6	;RP1=0, select bank0
  1720  01B2  01A0               	clrf	___lwdiv@quotient
  1721  01B3  01A1               	clrf	___lwdiv@quotient+1
  1722  01B4  0874               	movf	___lwdiv@divisor,w
  1723  01B5  0475               	iorwf	___lwdiv@divisor+1,w
  1724  01B6  1903               	btfsc	3,2
  1725  01B7  29E9               	goto	l918
  1726  01B8  01A2               	clrf	___lwdiv@counter
  1727  01B9  0AA2               	incf	___lwdiv@counter,f
  1728  01BA                     l906:	
  1729  01BA  1BF5               	btfsc	___lwdiv@divisor+1,7
  1730  01BB  29C8               	goto	l908
  1731  01BC  3001               	movlw	1
  1732  01BD                     u485:	
  1733  01BD  1003               	clrc
  1734  01BE  0DF4               	rlf	___lwdiv@divisor,f
  1735  01BF  0DF5               	rlf	___lwdiv@divisor+1,f
  1736  01C0  3EFF               	addlw	-1
  1737  01C1  1D03               	skipz
  1738  01C2  29BD               	goto	u485
  1739  01C3  3001               	movlw	1
  1740  01C4  00F8               	movwf	??___lwdiv
  1741  01C5  0878               	movf	??___lwdiv,w
  1742  01C6  07A2               	addwf	___lwdiv@counter,f
  1743  01C7  29BA               	goto	l906
  1744  01C8                     l908:	
  1745  01C8  3001               	movlw	1
  1746  01C9                     u505:	
  1747  01C9  1003               	clrc
  1748  01CA  0DA0               	rlf	___lwdiv@quotient,f
  1749  01CB  0DA1               	rlf	___lwdiv@quotient+1,f
  1750  01CC  3EFF               	addlw	-1
  1751  01CD  1D03               	skipz
  1752  01CE  29C9               	goto	u505
  1753  01CF  0875               	movf	___lwdiv@divisor+1,w
  1754  01D0  0277               	subwf	___lwdiv@dividend+1,w
  1755  01D1  1D03               	skipz
  1756  01D2  29D5               	goto	u515
  1757  01D3  0874               	movf	___lwdiv@divisor,w
  1758  01D4  0276               	subwf	___lwdiv@dividend,w
  1759  01D5                     u515:	
  1760  01D5  1C03               	skipc
  1761  01D6  29DE               	goto	l914
  1762  01D7  0874               	movf	___lwdiv@divisor,w
  1763  01D8  02F6               	subwf	___lwdiv@dividend,f
  1764  01D9  0875               	movf	___lwdiv@divisor+1,w
  1765  01DA  1C03               	skipc
  1766  01DB  03F7               	decf	___lwdiv@dividend+1,f
  1767  01DC  02F7               	subwf	___lwdiv@dividend+1,f
  1768  01DD  1420               	bsf	___lwdiv@quotient,0
  1769  01DE                     l914:	
  1770  01DE  3001               	movlw	1
  1771  01DF                     u525:	
  1772  01DF  1003               	clrc
  1773  01E0  0CF5               	rrf	___lwdiv@divisor+1,f
  1774  01E1  0CF4               	rrf	___lwdiv@divisor,f
  1775  01E2  3EFF               	addlw	-1
  1776  01E3  1D03               	skipz
  1777  01E4  29DF               	goto	u525
  1778  01E5  3001               	movlw	1
  1779  01E6  02A2               	subwf	___lwdiv@counter,f
  1780  01E7  1D03               	btfss	3,2
  1781  01E8  29C8               	goto	l908
  1782  01E9                     l918:	
  1783  01E9  0821               	movf	___lwdiv@quotient+1,w
  1784  01EA  00F5               	movwf	?___lwdiv+1
  1785  01EB  0820               	movf	___lwdiv@quotient,w
  1786  01EC  00F4               	movwf	?___lwdiv
  1787  01ED  0008               	return
  1788  01EE                     __end_of___lwdiv:	
  1789                           
  1790                           	psect	text12
  1791  01EE                     __ptext12:	
  1792 ;; *************** function _SRAMwrite *****************
  1793 ;; Defined at:
  1794 ;;		line 69 in file "main.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;  address         2    5[BANK0 ] unsigned int 
  1797 ;;  dataSend        1    7[BANK0 ] unsigned char 
  1798 ;; Auto vars:     Size  Location     Type
  1799 ;;		None
  1800 ;; Return value:  Size  Location     Type
  1801 ;;                  1    wreg      void 
  1802 ;; Registers used:
  1803 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1804 ;; Tracked objects:
  1805 ;;		On entry : 0/0
  1806 ;;		On exit  : 0/0
  1807 ;;		Unchanged: 0/0
  1808 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1809 ;;      Params:         0       3       0       0       0
  1810 ;;      Locals:         0       0       0       0       0
  1811 ;;      Temps:          1       0       0       0       0
  1812 ;;      Totals:         1       3       0       0       0
  1813 ;;Total ram usage:        4 bytes
  1814 ;; Hardware stack levels used:    1
  1815 ;; Hardware stack levels required when called:    2
  1816 ;; This function calls:
  1817 ;;		_shiftOut
  1818 ;; This function is called by:
  1819 ;;		_main
  1820 ;; This function uses a non-reentrant model
  1821 ;;
  1822                           
  1823                           
  1824                           ;psect for function _SRAMwrite
  1825  01EE                     _SRAMwrite:	
  1826                           
  1827                           ;main.c: 71: TRISC = 0b00000000;
  1828                           
  1829                           ;incstack = 0
  1830                           ; Regs used in _SRAMwrite: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1831  01EE  1683               	bsf	3,5	;RP0=1, select bank1
  1832  01EF  1303               	bcf	3,6	;RP1=0, select bank1
  1833  01F0  0187               	clrf	7	;volatile
  1834                           
  1835                           ;main.c: 72: PORTC = 0;
  1836  01F1  1283               	bcf	3,5	;RP0=0, select bank0
  1837  01F2  1303               	bcf	3,6	;RP1=0, select bank0
  1838  01F3  0187               	clrf	7	;volatile
  1839                           
  1840                           ;main.c: 73: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1841  01F4  30C7               	movlw	199
  1842  01F5  00F9               	movwf	??_SRAMwrite
  1843  01F6                     u707:	
  1844  01F6  29F7               	nop2
  1845  01F7  0BF9               	decfsz	??_SRAMwrite,f
  1846  01F8  29F6               	goto	u707
  1847  01F9  29FA               	nop2
  1848  01FA  29FB               	nop2
  1849                           
  1850                           ;main.c: 74: RE2 = 0;
  1851  01FB  1283               	bcf	3,5	;RP0=0, select bank0
  1852  01FC  1303               	bcf	3,6	;RP1=0, select bank0
  1853  01FD  1109               	bcf	9,2	;volatile
  1854                           
  1855                           ;main.c: 75: shiftOut(1, address);
  1856  01FE  0826               	movf	SRAMwrite@address+1,w
  1857  01FF  00F5               	movwf	shiftOut@val+1
  1858  0200  0825               	movf	SRAMwrite@address,w
  1859  0201  00F4               	movwf	shiftOut@val
  1860  0202  3001               	movlw	1
  1861  0203  120A  118A  2153  120A  118A  	fcall	_shiftOut
  1862                           
  1863                           ;main.c: 76: RE2 = 1;
  1864  0208  1283               	bcf	3,5	;RP0=0, select bank0
  1865  0209  1303               	bcf	3,6	;RP1=0, select bank0
  1866  020A  1509               	bsf	9,2	;volatile
  1867                           
  1868                           ;main.c: 77: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1869  020B  30C7               	movlw	199
  1870  020C  00F9               	movwf	??_SRAMwrite
  1871  020D                     u717:	
  1872  020D  2A0E               	nop2
  1873  020E  0BF9               	decfsz	??_SRAMwrite,f
  1874  020F  2A0D               	goto	u717
  1875  0210  2A11               	nop2
  1876  0211  2A12               	nop2
  1877                           
  1878                           ;main.c: 80: PORTC = dataSend;
  1879  0212  1283               	bcf	3,5	;RP0=0, select bank0
  1880  0213  1303               	bcf	3,6	;RP1=0, select bank0
  1881  0214  0827               	movf	SRAMwrite@dataSend,w
  1882  0215  0087               	movwf	7	;volatile
  1883                           
  1884                           ;main.c: 81: RA1 = 0;
  1885  0216  1085               	bcf	5,1	;volatile
  1886                           
  1887                           ;main.c: 83: RA3 = 0;
  1888  0217  1185               	bcf	5,3	;volatile
  1889                           
  1890                           ;main.c: 84: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1891  0218  30C7               	movlw	199
  1892  0219  00F9               	movwf	??_SRAMwrite
  1893  021A                     u727:	
  1894  021A  2A1B               	nop2
  1895  021B  0BF9               	decfsz	??_SRAMwrite,f
  1896  021C  2A1A               	goto	u727
  1897  021D  2A1E               	nop2
  1898  021E  2A1F               	nop2
  1899                           
  1900                           ;main.c: 85: RA1 = 1;
  1901  021F  1283               	bcf	3,5	;RP0=0, select bank0
  1902  0220  1303               	bcf	3,6	;RP1=0, select bank0
  1903  0221  1485               	bsf	5,1	;volatile
  1904                           
  1905                           ;main.c: 87: RA3 = 1;
  1906  0222  1585               	bsf	5,3	;volatile
  1907                           
  1908                           ;main.c: 88: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1909  0223  30C7               	movlw	199
  1910  0224  00F9               	movwf	??_SRAMwrite
  1911  0225                     u737:	
  1912  0225  2A26               	nop2
  1913  0226  0BF9               	decfsz	??_SRAMwrite,f
  1914  0227  2A25               	goto	u737
  1915  0228  2A29               	nop2
  1916  0229  2A2A               	nop2
  1917  022A  0008               	return
  1918  022B                     __end_of_SRAMwrite:	
  1919                           
  1920                           	psect	text13
  1921  022B                     __ptext13:	
  1922 ;; *************** function _SRAMread *****************
  1923 ;; Defined at:
  1924 ;;		line 48 in file "main.c"
  1925 ;; Parameters:    Size  Location     Type
  1926 ;;  address         2    5[BANK0 ] unsigned int 
  1927 ;; Auto vars:     Size  Location     Type
  1928 ;;  dataRecv        1    7[BANK0 ] unsigned char 
  1929 ;; Return value:  Size  Location     Type
  1930 ;;                  1    wreg      unsigned char 
  1931 ;; Registers used:
  1932 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
  1933 ;; Tracked objects:
  1934 ;;		On entry : 0/0
  1935 ;;		On exit  : 0/0
  1936 ;;		Unchanged: 0/0
  1937 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1938 ;;      Params:         0       2       0       0       0
  1939 ;;      Locals:         0       1       0       0       0
  1940 ;;      Temps:          1       0       0       0       0
  1941 ;;      Totals:         1       3       0       0       0
  1942 ;;Total ram usage:        4 bytes
  1943 ;; Hardware stack levels used:    1
  1944 ;; Hardware stack levels required when called:    2
  1945 ;; This function calls:
  1946 ;;		_shiftOut
  1947 ;; This function is called by:
  1948 ;;		_main
  1949 ;; This function uses a non-reentrant model
  1950 ;;
  1951                           
  1952                           
  1953                           ;psect for function _SRAMread
  1954  022B                     _SRAMread:	
  1955                           
  1956                           ;main.c: 50: uint8_t dataRecv;
  1957                           ;main.c: 52: TRISC = 0b11111111;
  1958                           
  1959                           ;incstack = 0
  1960                           ; Regs used in _SRAMread: [wreg+status,2+status,0+btemp+1+pclath+cstack]
  1961  022B  30FF               	movlw	255
  1962  022C  1683               	bsf	3,5	;RP0=1, select bank1
  1963  022D  1303               	bcf	3,6	;RP1=0, select bank1
  1964  022E  0087               	movwf	7	;volatile
  1965                           
  1966                           ;main.c: 53: PORTC = 0;
  1967  022F  1283               	bcf	3,5	;RP0=0, select bank0
  1968  0230  1303               	bcf	3,6	;RP1=0, select bank0
  1969  0231  0187               	clrf	7	;volatile
  1970                           
  1971                           ;main.c: 54: _delay((unsigned long)((200)*(20000000/4000000.0)));
  1972  0232  30C7               	movlw	199
  1973  0233  00F9               	movwf	??_SRAMread
  1974  0234                     u747:	
  1975  0234  2A35               	nop2
  1976  0235  0BF9               	decfsz	??_SRAMread,f
  1977  0236  2A34               	goto	u747
  1978  0237  2A38               	nop2
  1979  0238  2A39               	nop2
  1980                           
  1981                           ;main.c: 55: RE2 = 0;
  1982  0239  1283               	bcf	3,5	;RP0=0, select bank0
  1983  023A  1303               	bcf	3,6	;RP1=0, select bank0
  1984  023B  1109               	bcf	9,2	;volatile
  1985                           
  1986                           ;main.c: 56: shiftOut(1, address);
  1987  023C  0826               	movf	SRAMread@address+1,w
  1988  023D  00F5               	movwf	shiftOut@val+1
  1989  023E  0825               	movf	SRAMread@address,w
  1990  023F  00F4               	movwf	shiftOut@val
  1991  0240  3001               	movlw	1
  1992  0241  120A  118A  2153  120A  118A  	fcall	_shiftOut
  1993                           
  1994                           ;main.c: 57: RE2 = 1;
  1995  0246  1283               	bcf	3,5	;RP0=0, select bank0
  1996  0247  1303               	bcf	3,6	;RP1=0, select bank0
  1997  0248  1509               	bsf	9,2	;volatile
  1998                           
  1999                           ;main.c: 58: _delay((unsigned long)((200)*(20000000/4000000.0)));
  2000  0249  30C7               	movlw	199
  2001  024A  00F9               	movwf	??_SRAMread
  2002  024B                     u757:	
  2003  024B  2A4C               	nop2
  2004  024C  0BF9               	decfsz	??_SRAMread,f
  2005  024D  2A4B               	goto	u757
  2006  024E  2A4F               	nop2
  2007  024F  2A50               	nop2
  2008                           
  2009                           ;main.c: 59: RA1 = 1;
  2010  0250  1283               	bcf	3,5	;RP0=0, select bank0
  2011  0251  1303               	bcf	3,6	;RP1=0, select bank0
  2012  0252  1485               	bsf	5,1	;volatile
  2013                           
  2014                           ;main.c: 60: RA2 = 0;
  2015  0253  1105               	bcf	5,2	;volatile
  2016                           
  2017                           ;main.c: 61: RA3 = 0;
  2018  0254  1185               	bcf	5,3	;volatile
  2019                           
  2020                           ;main.c: 62: _delay((unsigned long)((200)*(20000000/4000000.0)));
  2021  0255  30C7               	movlw	199
  2022  0256  00F9               	movwf	??_SRAMread
  2023  0257                     u767:	
  2024  0257  2A58               	nop2
  2025  0258  0BF9               	decfsz	??_SRAMread,f
  2026  0259  2A57               	goto	u767
  2027  025A  2A5B               	nop2
  2028  025B  2A5C               	nop2
  2029                           
  2030                           ;main.c: 64: dataRecv = PORTC;
  2031  025C  1283               	bcf	3,5	;RP0=0, select bank0
  2032  025D  1303               	bcf	3,6	;RP1=0, select bank0
  2033  025E  0807               	movf	7,w	;volatile
  2034  025F  00F9               	movwf	??_SRAMread
  2035  0260  0879               	movf	??_SRAMread,w
  2036  0261  00A7               	movwf	SRAMread@dataRecv
  2037                           
  2038                           ;main.c: 65: return dataRecv;
  2039  0262  0827               	movf	SRAMread@dataRecv,w
  2040  0263  0008               	return
  2041  0264                     __end_of_SRAMread:	
  2042                           ;main.c: 66: PORTC = 0;
  2043                           
  2044                           
  2045                           	psect	text14
  2046  0153                     __ptext14:	
  2047 ;; *************** function _shiftOut *****************
  2048 ;; Defined at:
  2049 ;;		line 19 in file "main.c"
  2050 ;; Parameters:    Size  Location     Type
  2051 ;;  bitOrder        1    wreg     unsigned char 
  2052 ;;  val             2    4[COMMON] unsigned int 
  2053 ;; Auto vars:     Size  Location     Type
  2054 ;;  bitOrder        1    6[COMMON] unsigned char 
  2055 ;;  i               2    7[COMMON] int 
  2056 ;; Return value:  Size  Location     Type
  2057 ;;                  1    wreg      void 
  2058 ;; Registers used:
  2059 ;;		wreg, status,2, status,0, btemp+1
  2060 ;; Tracked objects:
  2061 ;;		On entry : 0/0
  2062 ;;		On exit  : 0/0
  2063 ;;		Unchanged: 0/0
  2064 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2065 ;;      Params:         2       0       0       0       0
  2066 ;;      Locals:         3       0       0       0       0
  2067 ;;      Temps:          0       5       0       0       0
  2068 ;;      Totals:         5       5       0       0       0
  2069 ;;Total ram usage:       10 bytes
  2070 ;; Hardware stack levels used:    1
  2071 ;; Hardware stack levels required when called:    1
  2072 ;; This function calls:
  2073 ;;		Nothing
  2074 ;; This function is called by:
  2075 ;;		_SRAMread
  2076 ;;		_SRAMwrite
  2077 ;; This function uses a non-reentrant model
  2078 ;;
  2079                           
  2080                           
  2081                           ;psect for function _shiftOut
  2082  0153                     _shiftOut:	
  2083                           
  2084                           ;incstack = 0
  2085                           ; Regs used in _shiftOut: [wreg+status,2+status,0+btemp+1]
  2086                           ;shiftOut@bitOrder stored from wreg
  2087  0153  00F6               	movwf	shiftOut@bitOrder
  2088                           
  2089                           ;main.c: 21: int i;
  2090                           ;main.c: 22: for(i = 0; i < 16; i++)
  2091  0154  01F7               	clrf	shiftOut@i
  2092  0155  01F8               	clrf	shiftOut@i+1
  2093  0156                     L2:	
  2094  0156  0878               	movf	shiftOut@i+1,w
  2095  0157  3A80               	xorlw	128
  2096  0158  00FF               	movwf	127
  2097  0159  3080               	movlw	128
  2098  015A  027F               	subwf	127,w
  2099  015B  1D03               	skipz
  2100  015C  295F               	goto	u385
  2101  015D  3010               	movlw	16
  2102  015E  0277               	subwf	shiftOut@i,w
  2103  015F                     u385:	
  2104  015F  1803               	btfsc	3,0
  2105  0160  0008               	return
  2106                           
  2107                           ;main.c: 23: {
  2108                           ;main.c: 26: if (bitOrder == 0)
  2109  0161  0876               	movf	shiftOut@bitOrder,w
  2110  0162  1D03               	btfss	3,2
  2111  0163  2973               	goto	l878
  2112                           
  2113                           ;main.c: 27: {
  2114                           ;main.c: 28: RA0 = !!(val & (1 << i));
  2115  0164  0A77               	incf	shiftOut@i,w
  2116  0165  1283               	bcf	3,5	;RP0=0, select bank0
  2117  0166  1303               	bcf	3,6	;RP1=0, select bank0
  2118  0167  00A0               	movwf	??_shiftOut
  2119  0168  3001               	movlw	1
  2120  0169  00A1               	movwf	??_shiftOut+1
  2121  016A  3000               	movlw	0
  2122  016B  00A2               	movwf	??_shiftOut+2
  2123  016C  2970               	goto	u404
  2124  016D                     u405:	
  2125  016D  1003               	clrc
  2126  016E  0DA1               	rlf	??_shiftOut+1,f
  2127  016F  0DA2               	rlf	??_shiftOut+2,f
  2128  0170                     u404:	
  2129  0170  0BA0               	decfsz	??_shiftOut,f
  2130  0171  296D               	goto	u405
  2131  0172  2984               	goto	L4
  2132  0173                     l878:	
  2133                           ;main.c: 29: }
  2134                           
  2135                           
  2136                           ;main.c: 30: else
  2137                           ;main.c: 31: {
  2138                           ;main.c: 32: RA0 = !!(val & (1 << (15 - i)));
  2139  0173  0377               	decf	shiftOut@i,w
  2140  0174  3AFF               	xorlw	255
  2141  0175  3E0F               	addlw	15
  2142  0176  1283               	bcf	3,5	;RP0=0, select bank0
  2143  0177  1303               	bcf	3,6	;RP1=0, select bank0
  2144  0178  00A0               	movwf	??_shiftOut
  2145  0179  0AA0               	incf	??_shiftOut,f
  2146  017A  3001               	movlw	1
  2147  017B  00A1               	movwf	??_shiftOut+1
  2148  017C  3000               	movlw	0
  2149  017D  00A2               	movwf	??_shiftOut+2
  2150  017E  2982               	goto	u434
  2151  017F                     u435:	
  2152  017F  1003               	clrc
  2153  0180  0DA1               	rlf	??_shiftOut+1,f
  2154  0181  0DA2               	rlf	??_shiftOut+2,f
  2155  0182                     u434:	
  2156  0182  0BA0               	decfsz	??_shiftOut,f
  2157  0183  297F               	goto	u435
  2158  0184                     L4:	
  2159  0184  0874               	movf	shiftOut@val,w
  2160  0185  0521               	andwf	??_shiftOut+1,w
  2161  0186  00A3               	movwf	??_shiftOut+3
  2162  0187  0875               	movf	shiftOut@val+1,w
  2163  0188  0522               	andwf	??_shiftOut+2,w
  2164  0189  00A4               	movwf	??_shiftOut+4
  2165  018A  0823               	movf	??_shiftOut+3,w
  2166  018B  0424               	iorwf	??_shiftOut+4,w
  2167  018C  1903               	btfsc	3,2
  2168  018D  2992               	goto	u440
  2169  018E  1283               	bcf	3,5	;RP0=0, select bank0
  2170  018F  1303               	bcf	3,6	;RP1=0, select bank0
  2171  0190  1405               	bsf	5,0	;volatile
  2172  0191  2995               	goto	l880
  2173  0192                     u440:	
  2174  0192  1283               	bcf	3,5	;RP0=0, select bank0
  2175  0193  1303               	bcf	3,6	;RP1=0, select bank0
  2176  0194  1005               	bcf	5,0	;volatile
  2177  0195                     l880:	
  2178                           
  2179                           ;main.c: 33: }
  2180                           ;main.c: 35: RE1 = 1;
  2181  0195  1489               	bsf	9,1	;volatile
  2182                           
  2183                           ;main.c: 36: _delay((unsigned long)((200)*(20000000/4000000.0)));
  2184  0196  30C7               	movlw	199
  2185  0197  1283               	bcf	3,5	;RP0=0, select bank0
  2186  0198  1303               	bcf	3,6	;RP1=0, select bank0
  2187  0199  00A0               	movwf	??_shiftOut
  2188  019A                     u777:	
  2189  019A  299B               	nop2
  2190  019B  0BA0               	decfsz	??_shiftOut,f
  2191  019C  299A               	goto	u777
  2192  019D  299E               	nop2
  2193                           
  2194                           ;main.c: 37: RE1 = 0;
  2195  019E  1283               	bcf	3,5	;RP0=0, select bank0
  2196  019F  1303               	bcf	3,6	;RP1=0, select bank0
  2197  01A0  1089               	bcf	9,1	;volatile
  2198                           
  2199                           ;main.c: 38: _delay((unsigned long)((200)*(20000000/4000000.0)));
  2200  01A1  30C7               	movlw	199
  2201  01A2  1283               	bcf	3,5	;RP0=0, select bank0
  2202  01A3  1303               	bcf	3,6	;RP1=0, select bank0
  2203  01A4  00A0               	movwf	??_shiftOut
  2204  01A5                     u787:	
  2205  01A5  29A6               	nop2
  2206  01A6  0BA0               	decfsz	??_shiftOut,f
  2207  01A7  29A5               	goto	u787
  2208  01A8  29A9               	nop2
  2209  01A9  3001               	movlw	1
  2210  01AA  07F7               	addwf	shiftOut@i,f
  2211  01AB  1803               	skipnc
  2212  01AC  0AF8               	incf	shiftOut@i+1,f
  2213  01AD  3000               	movlw	0
  2214  01AE  07F8               	addwf	shiftOut@i+1,f
  2215  01AF  2956               	goto	L2
  2216  01B0                     __end_of_shiftOut:	
  2217                           
  2218                           	psect	text15
  2219  0346                     __ptext15:	
  2220 ;; *************** function _SRAMinit *****************
  2221 ;; Defined at:
  2222 ;;		line 42 in file "main.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;		None
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;		None
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		None
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2236 ;;      Params:         0       0       0       0       0
  2237 ;;      Locals:         0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0
  2239 ;;      Totals:         0       0       0       0       0
  2240 ;;Total ram usage:        0 bytes
  2241 ;; Hardware stack levels used:    1
  2242 ;; Hardware stack levels required when called:    1
  2243 ;; This function calls:
  2244 ;;		Nothing
  2245 ;; This function is called by:
  2246 ;;		_main
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           
  2251                           ;psect for function _SRAMinit
  2252  0346                     _SRAMinit:	
  2253                           
  2254                           ;main.c: 44: RA1 = 0;
  2255                           
  2256                           ;incstack = 0
  2257                           ; Regs used in _SRAMinit: []
  2258  0346  1283               	bcf	3,5	;RP0=0, select bank0
  2259  0347  1303               	bcf	3,6	;RP1=0, select bank0
  2260  0348  1085               	bcf	5,1	;volatile
  2261                           
  2262                           ;main.c: 45: RA2 = 0;
  2263  0349  1105               	bcf	5,2	;volatile
  2264                           
  2265                           ;main.c: 46: RA3 = 1;
  2266  034A  1585               	bsf	5,3	;volatile
  2267  034B  0008               	return
  2268  034C                     __end_of_SRAMinit:	
  2269                           
  2270                           	psect	text16
  2271  034C                     __ptext16:	
  2272 ;; *************** function _InitApp *****************
  2273 ;; Defined at:
  2274 ;;		line 22 in file "user.c"
  2275 ;; Parameters:    Size  Location     Type
  2276 ;;		None
  2277 ;; Auto vars:     Size  Location     Type
  2278 ;;		None
  2279 ;; Return value:  Size  Location     Type
  2280 ;;                  1    wreg      void 
  2281 ;; Registers used:
  2282 ;;		None
  2283 ;; Tracked objects:
  2284 ;;		On entry : 0/0
  2285 ;;		On exit  : 0/0
  2286 ;;		Unchanged: 0/0
  2287 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2288 ;;      Params:         0       0       0       0       0
  2289 ;;      Locals:         0       0       0       0       0
  2290 ;;      Temps:          0       0       0       0       0
  2291 ;;      Totals:         0       0       0       0       0
  2292 ;;Total ram usage:        0 bytes
  2293 ;; Hardware stack levels used:    1
  2294 ;; Hardware stack levels required when called:    1
  2295 ;; This function calls:
  2296 ;;		Nothing
  2297 ;; This function is called by:
  2298 ;;		_main
  2299 ;; This function uses a non-reentrant model
  2300 ;;
  2301                           
  2302                           
  2303                           ;psect for function _InitApp
  2304  034C                     _InitApp:	
  2305                           
  2306                           ;incstack = 0
  2307                           ; Regs used in _InitApp: []
  2308  034C  0008               	return
  2309  034D                     __end_of_InitApp:	
  2310                           
  2311                           	psect	text17
  2312  0325                     __ptext17:	
  2313 ;; *************** function _isr *****************
  2314 ;; Defined at:
  2315 ;;		line 23 in file "interrupts.c"
  2316 ;; Parameters:    Size  Location     Type
  2317 ;;		None
  2318 ;; Auto vars:     Size  Location     Type
  2319 ;;		None
  2320 ;; Return value:  Size  Location     Type
  2321 ;;                  1    wreg      void 
  2322 ;; Registers used:
  2323 ;;		None
  2324 ;; Tracked objects:
  2325 ;;		On entry : 0/0
  2326 ;;		On exit  : 0/0
  2327 ;;		Unchanged: 0/0
  2328 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2329 ;;      Params:         0       0       0       0       0
  2330 ;;      Locals:         0       0       0       0       0
  2331 ;;      Temps:          4       0       0       0       0
  2332 ;;      Totals:         4       0       0       0       0
  2333 ;;Total ram usage:        4 bytes
  2334 ;; Hardware stack levels used:    1
  2335 ;; This function calls:
  2336 ;;		Nothing
  2337 ;; This function is called by:
  2338 ;;		Interrupt level 1
  2339 ;; This function uses a non-reentrant model
  2340 ;;
  2341                           
  2342                           
  2343                           ;psect for function _isr
  2344  0325                     _isr:	
  2345  0325  0873               	movf	??_isr+3,w
  2346  0326  00FF               	movwf	127
  2347  0327  0872               	movf	??_isr+2,w
  2348  0328  008A               	movwf	10
  2349  0329  0871               	movf	??_isr+1,w
  2350  032A  0084               	movwf	4
  2351  032B  0E70               	swapf	??_isr^(0+-128),w
  2352  032C  0083               	movwf	3
  2353  032D  0EFE               	swapf	126,f
  2354  032E  0E7E               	swapf	126,w
  2355  032F  0009               	retfie
  2356  0330                     __end_of_isr:	
  2357  007E                     btemp	set	126	;btemp
  2358  007E                     wtemp0	set	126
  2359                           
  2360                           	psect	intentry
  2361  0004                     __pintentry:	
  2362                           ;incstack = 0
  2363                           ; Regs used in _isr: []
  2364                           
  2365  0004                     interrupt_function:	
  2366  007E                     saved_w	set	btemp
  2367  0004  00FE               	movwf	btemp
  2368  0005  0E03               	swapf	3,w
  2369  0006  00F0               	movwf	??_isr
  2370  0007  0804               	movf	4,w
  2371  0008  00F1               	movwf	??_isr+1
  2372  0009  080A               	movf	10,w
  2373  000A  00F2               	movwf	??_isr+2
  2374  000B  1283               	bcf	3,5	;RP0=0, select bank0
  2375  000C  1303               	bcf	3,6	;RP1=0, select bank0
  2376  000D  087F               	movf	btemp+1,w
  2377  000E  00F3               	movwf	??_isr+3
  2378  000F  120A  118A  2B25   	ljmp	_isr


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         10
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      10
    BANK0            80     23      33
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SRAMread
    _main->_SRAMwrite
    _main->_lcd_home
    _lcd_initialize->_send_lcd_data
    _lcd_clear->_send_lcd_data
    _lcd_home->_send_lcd_data
    _lcd_bcd->___lwmod
    _lcd_bcd->_lcd_putchar
    _lcd_putchar->_send_lcd_data
    _send_lcd_data->_set_lcd_data
    _send_lcd_data->_set_lcd_e
    _send_lcd_data->_set_lcd_rs
    _SRAMwrite->_shiftOut
    _SRAMread->_shiftOut

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_lcd_bcd
    _lcd_bcd->___lwdiv
    _SRAMwrite->_shiftOut
    _SRAMread->_shiftOut

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0    4664
                                             20 BANK0      3     3      0
                            _InitApp
                           _SRAMinit
                           _SRAMread
                          _SRAMwrite
                            _lcd_bcd
                           _lcd_home
                     _lcd_initialize
 ---------------------------------------------------------------------------------
 (1) _lcd_initialize                                       2     2      0    1090
                                              0 BANK0      2     2      0
                          _lcd_clear
                      _send_lcd_data
                          _set_lcd_e
 ---------------------------------------------------------------------------------
 (2) _lcd_clear                                            0     0      0     534
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_home                                             1     1      0     534
                                              9 COMMON     1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (1) _lcd_bcd                                             17    15      2    2243
                                              3 BANK0     17    15      2
                            ___lwdiv
                            ___lwmod
                        _lcd_putchar
 ---------------------------------------------------------------------------------
 (2) _lcd_putchar                                          2     2      0     556
                                              9 COMMON     1     1      0
                                              0 BANK0      1     1      0
                      _send_lcd_data
 ---------------------------------------------------------------------------------
 (2) _send_lcd_data                                        4     3      1     534
                                              5 COMMON     4     3      1
                       _set_lcd_data
                          _set_lcd_e
                         _set_lcd_rs
 ---------------------------------------------------------------------------------
 (3) _set_lcd_rs                                           1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) _set_lcd_e                                            1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (3) _set_lcd_data                                         1     1      0      22
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lwmod                                              6     2      4     583
                                              4 COMMON     6     2      4
 ---------------------------------------------------------------------------------
 (2) ___lwdiv                                              8     4      4     586
                                              4 COMMON     5     1      4
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (1) _SRAMwrite                                            4     1      3     412
                                              9 COMMON     1     1      0
                                              5 BANK0      3     0      3
                           _shiftOut
 ---------------------------------------------------------------------------------
 (1) _SRAMread                                             4     2      2     360
                                              9 COMMON     1     1      0
                                              5 BANK0      3     1      2
                           _shiftOut
 ---------------------------------------------------------------------------------
 (2) _shiftOut                                            10     8      2     262
                                              4 COMMON     5     3      2
                                              0 BANK0      5     5      0
 ---------------------------------------------------------------------------------
 (1) _SRAMinit                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _InitApp                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _InitApp
   _SRAMinit
   _SRAMread
     _shiftOut
   _SRAMwrite
     _shiftOut
   _lcd_bcd
     ___lwdiv
     ___lwmod
     _lcd_putchar
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
   _lcd_home
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
   _lcd_initialize
     _lcd_clear
       _send_lcd_data
         _set_lcd_data
         _set_lcd_e
         _set_lcd_rs
     _send_lcd_data
       _set_lcd_data
       _set_lcd_e
       _set_lcd_rs
     _set_lcd_e

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      A       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      2B       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     17      21       5       41.3%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      2B      12        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Fri Apr 27 20:05:29 2018

           ?_lcd_putchar 0070              __CFG_CP$OFF 0000                      l914 01DE  
                    l906 01BA                      l930 02D7                      l908 01C8  
                    l932 02E5                      l940 02FE                      l918 01E9  
                    l880 0195                      l936 02F3                      l878 0173  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RA3 002B                      _RB4 0034                      _RB5 0035  
                    _RE1 0049                      _RE2 004A                      u404 0170  
                    u340 0321                      u405 016D                      u440 0192  
                    u360 0316                      u600 0030                      u505 01C9  
                    u434 0182             __CFG_CPD$OFF 0000                      u435 017F  
                    u515 01D5                      u525 01DF                      u385 015F  
                    u707 01F6                      u555 02DA                      u717 020D  
                    u485 01BD                      u727 021A                      u575 02EB  
                    u737 0225                      u585 02F4                      u747 0234  
                    u757 024B                      u677 0270                      u767 0257  
                    u687 02B3                      u777 019A                      u697 02C1  
                    u787 01A5                      _isr 0325                      fsr0 0004  
                    indf 0000             __CFG_FOSC$HS 0000        set_lcd_e@b_output 0074  
           __CFG_LVP$OFF 0000                     l1038 00DD                     l1076 0118  
                   ?_isr 0070             __CFG_WRT$OFF 0000                     _main 00F3  
                   btemp 007E            __CFG_BOREN$ON 0000                     start 0012  
        __end_of_InitApp 034D                    ??_isr 0070                    ?_main 0070  
          __CFG_WDTE$OFF 0000          __end_of___lwdiv 01EE          __end_of___lwmod 0303  
                  _PORTA 0005                    _PORTB 0006                    _PORTC 0007  
                  _PORTD 0008                    _PORTE 0009                    _TRISA 0085  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TRISE 0089     send_lcd_data@uc_data 0075            __CFG_PWRTE$ON 0000  
        __end_of_lcd_bcd 00F3         __end_of_SRAMinit 034C         __end_of_SRAMread 0264  
                  pclath 000A       __size_of_SRAMwrite 003D                    status 0003  
                  wtemp0 007E          __initialization 0015        send_lcd_data@b_rs 0078  
           __end_of_main 0153    __end_of_send_lcd_data 02D1                   ??_main 0034  
              ??_InitApp 0074         __end_of_lcd_home 0339                ??___lwdiv 0078  
              ??___lwmod 0078        __end_of_SRAMwrite 022B                ??_lcd_bcd 0025  
   __size_of_lcd_putchar 000C         __end_of_shiftOut 01B0                   saved_w 007E  
       ??_lcd_initialize 0020  __end_of__initialization 0021           __pcstackCOMMON 0070  
              ?_SRAMinit 0070                ?_SRAMread 0025       __size_of_lcd_clear 0007  
             __pbssBANK0 0037               __pmaintext 00F3               __pintentry 0004  
        SRAMread@address 0025               ??_SRAMinit 0074               ??_SRAMread 0079  
     __size_of_set_lcd_e 000B         shiftOut@bitOrder 0076                ?_lcd_home 0070  
          ?_set_lcd_data 0070                  _InitApp 034C                ?_shiftOut 0074  
      __end_of_lcd_clear 0340                  ___lwdiv 01B0                  ___lwmod 02D1  
            shiftOut@val 0074                  __ptext1 0264                  __ptext2 0339  
                __ptext3 0330                  __ptext4 0025                  __ptext5 0303  
                __ptext6 029C                  __ptext7 030F                  __ptext8 031A  
                __ptext9 0340                  _lcd_bcd 0025             __size_of_isr 000B  
                main@add 0036               ??_lcd_home 0079     end_of_initialization 0021  
      lcd_bcd@ui_decimal 0029           ??_set_lcd_data 0074        __end_of_set_lcd_e 0325  
             _set_lcd_rs 030F               ??_shiftOut 0020                _SRAMwrite 01EE  
 __size_of_send_lcd_data 0035            ??_lcd_putchar 0079        lcd_putchar@c_data 0020  
      __size_of_SRAMinit 0006        __size_of_SRAMread 0039      start_initialization 0015  
     set_lcd_rs@b_output 0074               ?_SRAMwrite 0025              __end_of_isr 0330  
            ?_set_lcd_rs 0070            _send_lcd_data 029C     __end_of_set_lcd_data 0346  
    __end_of_lcd_putchar 030F                ___latbits 0002            __pcstackBANK0 0020  
      SRAMwrite@dataSend 0027        __size_of_lcd_home 0009                 ?_InitApp 0070  
__size_of_lcd_initialize 0038         ___lwdiv@dividend 0076        __size_of_shiftOut 005D  
               ?___lwdiv 0074                 ?___lwmod 0074                _lcd_clear 0339  
         ?_send_lcd_data 0075                 ?_lcd_bcd 0023         SRAMread@dataRecv 0027  
            ??_SRAMwrite 0079      __size_of_set_lcd_rs 000B         ___lwdiv@quotient 0020  
    set_lcd_data@uc_data 0074        interrupt_function 0004                _set_lcd_e 031A  
       lcd_bcd@ui_number 0023              _lcd_putchar 0303               ?_lcd_clear 0070  
               _SRAMinit 0346                 _SRAMread 022B         __size_of_InitApp 0001  
             ?_set_lcd_e 0070    __size_of_set_lcd_data 0006          ??_send_lcd_data 0076  
       __size_of___lwdiv 003E         __size_of___lwmod 0032         SRAMwrite@address 0025  
       __size_of_lcd_bcd 00CE          ___lwdiv@divisor 0074          ___lwdiv@counter 0022  
               __ptext10 02D1                 __ptext11 01B0                 __ptext12 01EE  
               __ptext13 022B                 __ptext14 0153                 __ptext15 0346  
               __ptext16 034C                 __ptext17 0325                 _lcd_home 0330  
          __size_of_main 0060                shiftOut@i 0077          lcd_bcd@uc_digit 0033  
           _set_lcd_data 0340           _lcd_initialize 0264             ??_set_lcd_rs 0074  
               _shiftOut 0153              ??_lcd_clear 0079       __end_of_set_lcd_rs 031A  
               intlevel1 0000         ___lwmod@dividend 0076   __end_of_lcd_initialize 029C  
            ??_set_lcd_e 0074             lcd_bcd@F1134 0037          ___lwmod@divisor 0074  
        ___lwmod@counter 0079          ?_lcd_initialize 0070  
